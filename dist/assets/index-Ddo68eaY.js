var Is=Object.defineProperty;var Cs=(he,fe,le)=>fe in he?Is(he,fe,{enumerable:!0,configurable:!0,writable:!0,value:le}):he[fe]=le;var je=(he,fe,le)=>Cs(he,typeof fe!="symbol"?fe+"":fe,le);import{g as global,p as process$1,B as Buffer$4,r as requireCryptoBrowserify,a as getDefaultExportFromCjs,b as BigNumber$1,s as streamBrowserify,c as require$$0,i as inherits_browserExports,d as requireMinimalisticAssert,e as commonjsGlobal,f as BN$2,h as requireHash,j as safeBufferExports,k as requireElliptic,l as readableBrowserExports,m as Buffer$1$1,n as eventsExports,o as commonjsRequire$1,q as lib$9,t as bs58$2,u as serialize_1,C as Connection,P as PublicKey$2,T as Transaction$2,S as SystemProgram,v as ComputeBudgetProgram,w as bytesToHex$3,x as hexToBytes$3,y as sha3_256,z as hmac$2,A as sha512$2,D as ed25519,E as secp256k1$2,F as randomBytes$2}from"./index-CprlNFDz.js";function _mergeNamespaces(he,fe){for(var le=0;le<fe.length;le++){const pe=fe[le];if(typeof pe!="string"&&!Array.isArray(pe)){for(const ge in pe)if(ge!=="default"&&!(ge in he)){const ye=Object.getOwnPropertyDescriptor(pe,ge);ye&&Object.defineProperty(he,ge,ye.get?ye:{enumerable:!0,get:()=>pe[ge]})}}}return Object.freeze(Object.defineProperty(he,Symbol.toStringTag,{value:"Module"}))}const hack=()=>{throw new Error("Unimplemented")};globalThis.crypto??(globalThis.crypto={});var hi;(hi=globalThis.crypto).subtle??(hi.subtle={});var pi;(pi=globalThis.crypto.subtle).generateKey??(pi.generateKey=hack);var gi;(gi=globalThis.crypto.subtle).importKey??(gi.importKey=hack);var yi;(yi=globalThis.crypto.subtle).exportKey??(yi.exportKey=hack);var xi;(xi=globalThis.crypto.subtle).digest??(xi.digest=hack);var mi;(mi=globalThis.crypto.subtle).sign??(mi.sign=hack);function bind$1(he,fe){return function(){return he.apply(fe,arguments)}}const{toString:toString$1}=Object.prototype,{getPrototypeOf:getPrototypeOf$1}=Object,kindOf$1=(he=>fe=>{const le=toString$1.call(fe);return he[le]||(he[le]=le.slice(8,-1).toLowerCase())})(Object.create(null)),kindOfTest$1=he=>(he=he.toLowerCase(),fe=>kindOf$1(fe)===he),typeOfTest$1=he=>fe=>typeof fe===he,{isArray:isArray$1}=Array,isUndefined$1=typeOfTest$1("undefined");function isBuffer$1(he){return he!==null&&!isUndefined$1(he)&&he.constructor!==null&&!isUndefined$1(he.constructor)&&isFunction$1(he.constructor.isBuffer)&&he.constructor.isBuffer(he)}const isArrayBuffer$1=kindOfTest$1("ArrayBuffer");function isArrayBufferView$1(he){let fe;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?fe=ArrayBuffer.isView(he):fe=he&&he.buffer&&isArrayBuffer$1(he.buffer),fe}const isString$1=typeOfTest$1("string"),isFunction$1=typeOfTest$1("function"),isNumber$1=typeOfTest$1("number"),isObject$1=he=>he!==null&&typeof he=="object",isBoolean$1=he=>he===!0||he===!1,isPlainObject$1=he=>{if(kindOf$1(he)!=="object")return!1;const fe=getPrototypeOf$1(he);return(fe===null||fe===Object.prototype||Object.getPrototypeOf(fe)===null)&&!(Symbol.toStringTag in he)&&!(Symbol.iterator in he)},isDate$1=kindOfTest$1("Date"),isFile$1=kindOfTest$1("File"),isBlob$1=kindOfTest$1("Blob"),isFileList$1=kindOfTest$1("FileList"),isStream$1=he=>isObject$1(he)&&isFunction$1(he.pipe),isFormData$1=he=>{let fe;return he&&(typeof FormData=="function"&&he instanceof FormData||isFunction$1(he.append)&&((fe=kindOf$1(he))==="formdata"||fe==="object"&&isFunction$1(he.toString)&&he.toString()==="[object FormData]"))},isURLSearchParams$1=kindOfTest$1("URLSearchParams"),[isReadableStream$1,isRequest$1,isResponse$1,isHeaders$1]=["ReadableStream","Request","Response","Headers"].map(kindOfTest$1),trim$1=he=>he.trim?he.trim():he.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function forEach$1(he,fe,{allOwnKeys:le=!1}={}){if(he===null||typeof he>"u")return;let pe,ge;if(typeof he!="object"&&(he=[he]),isArray$1(he))for(pe=0,ge=he.length;pe<ge;pe++)fe.call(null,he[pe],pe,he);else{const ye=le?Object.getOwnPropertyNames(he):Object.keys(he),xe=ye.length;let me;for(pe=0;pe<xe;pe++)me=ye[pe],fe.call(null,he[me],me,he)}}function findKey$1(he,fe){fe=fe.toLowerCase();const le=Object.keys(he);let pe=le.length,ge;for(;pe-- >0;)if(ge=le[pe],fe===ge.toLowerCase())return ge;return null}const _global$1=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,isContextDefined$1=he=>!isUndefined$1(he)&&he!==_global$1;function merge$1(){const{caseless:he}=isContextDefined$1(this)&&this||{},fe={},le=(pe,ge)=>{const ye=he&&findKey$1(fe,ge)||ge;isPlainObject$1(fe[ye])&&isPlainObject$1(pe)?fe[ye]=merge$1(fe[ye],pe):isPlainObject$1(pe)?fe[ye]=merge$1({},pe):isArray$1(pe)?fe[ye]=pe.slice():fe[ye]=pe};for(let pe=0,ge=arguments.length;pe<ge;pe++)arguments[pe]&&forEach$1(arguments[pe],le);return fe}const extend$1=(he,fe,le,{allOwnKeys:pe}={})=>(forEach$1(fe,(ge,ye)=>{le&&isFunction$1(ge)?he[ye]=bind$1(ge,le):he[ye]=ge},{allOwnKeys:pe}),he),stripBOM$1=he=>(he.charCodeAt(0)===65279&&(he=he.slice(1)),he),inherits$7=(he,fe,le,pe)=>{he.prototype=Object.create(fe.prototype,pe),he.prototype.constructor=he,Object.defineProperty(he,"super",{value:fe.prototype}),le&&Object.assign(he.prototype,le)},toFlatObject$1=(he,fe,le,pe)=>{let ge,ye,xe;const me={};if(fe=fe||{},he==null)return fe;do{for(ge=Object.getOwnPropertyNames(he),ye=ge.length;ye-- >0;)xe=ge[ye],(!pe||pe(xe,he,fe))&&!me[xe]&&(fe[xe]=he[xe],me[xe]=!0);he=le!==!1&&getPrototypeOf$1(he)}while(he&&(!le||le(he,fe))&&he!==Object.prototype);return fe},endsWith$1=(he,fe,le)=>{he=String(he),(le===void 0||le>he.length)&&(le=he.length),le-=fe.length;const pe=he.indexOf(fe,le);return pe!==-1&&pe===le},toArray$1=he=>{if(!he)return null;if(isArray$1(he))return he;let fe=he.length;if(!isNumber$1(fe))return null;const le=new Array(fe);for(;fe-- >0;)le[fe]=he[fe];return le},isTypedArray$1=(he=>fe=>he&&fe instanceof he)(typeof Uint8Array<"u"&&getPrototypeOf$1(Uint8Array)),forEachEntry$1=(he,fe)=>{const pe=(he&&he[Symbol.iterator]).call(he);let ge;for(;(ge=pe.next())&&!ge.done;){const ye=ge.value;fe.call(he,ye[0],ye[1])}},matchAll$1=(he,fe)=>{let le;const pe=[];for(;(le=he.exec(fe))!==null;)pe.push(le);return pe},isHTMLForm$1=kindOfTest$1("HTMLFormElement"),toCamelCase$1=he=>he.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(le,pe,ge){return pe.toUpperCase()+ge}),hasOwnProperty$1=(({hasOwnProperty:he})=>(fe,le)=>he.call(fe,le))(Object.prototype),isRegExp$1=kindOfTest$1("RegExp"),reduceDescriptors$1=(he,fe)=>{const le=Object.getOwnPropertyDescriptors(he),pe={};forEach$1(le,(ge,ye)=>{let xe;(xe=fe(ge,ye,he))!==!1&&(pe[ye]=xe||ge)}),Object.defineProperties(he,pe)},freezeMethods$1=he=>{reduceDescriptors$1(he,(fe,le)=>{if(isFunction$1(he)&&["arguments","caller","callee"].indexOf(le)!==-1)return!1;const pe=he[le];if(isFunction$1(pe)){if(fe.enumerable=!1,"writable"in fe){fe.writable=!1;return}fe.set||(fe.set=()=>{throw Error("Can not rewrite read-only method '"+le+"'")})}})},toObjectSet$1=(he,fe)=>{const le={},pe=ge=>{ge.forEach(ye=>{le[ye]=!0})};return isArray$1(he)?pe(he):pe(String(he).split(fe)),le},noop$1=()=>{},toFiniteNumber$1=(he,fe)=>he!=null&&Number.isFinite(he=+he)?he:fe,ALPHA$1="abcdefghijklmnopqrstuvwxyz",DIGIT$1="0123456789",ALPHABET$2={DIGIT:DIGIT$1,ALPHA:ALPHA$1,ALPHA_DIGIT:ALPHA$1+ALPHA$1.toUpperCase()+DIGIT$1},generateString$1=(he=16,fe=ALPHABET$2.ALPHA_DIGIT)=>{let le="";const{length:pe}=fe;for(;he--;)le+=fe[Math.random()*pe|0];return le};function isSpecCompliantForm$1(he){return!!(he&&isFunction$1(he.append)&&he[Symbol.toStringTag]==="FormData"&&he[Symbol.iterator])}const toJSONObject$1=he=>{const fe=new Array(10),le=(pe,ge)=>{if(isObject$1(pe)){if(fe.indexOf(pe)>=0)return;if(!("toJSON"in pe)){fe[ge]=pe;const ye=isArray$1(pe)?[]:{};return forEach$1(pe,(xe,me)=>{const we=le(xe,ge+1);!isUndefined$1(we)&&(ye[me]=we)}),fe[ge]=void 0,ye}}return pe};return le(he,0)},isAsyncFn$1=kindOfTest$1("AsyncFunction"),isThenable$1=he=>he&&(isObject$1(he)||isFunction$1(he))&&isFunction$1(he.then)&&isFunction$1(he.catch),_setImmediate$1=((he,fe)=>he?setImmediate:fe?((le,pe)=>(_global$1.addEventListener("message",({source:ge,data:ye})=>{ge===_global$1&&ye===le&&pe.length&&pe.shift()()},!1),ge=>{pe.push(ge),_global$1.postMessage(le,"*")}))(`axios@${Math.random()}`,[]):le=>setTimeout(le))(typeof setImmediate=="function",isFunction$1(_global$1.postMessage)),asap$1=typeof queueMicrotask<"u"?queueMicrotask.bind(_global$1):typeof process$1<"u"&&process$1.nextTick||_setImmediate$1,utils$5={isArray:isArray$1,isArrayBuffer:isArrayBuffer$1,isBuffer:isBuffer$1,isFormData:isFormData$1,isArrayBufferView:isArrayBufferView$1,isString:isString$1,isNumber:isNumber$1,isBoolean:isBoolean$1,isObject:isObject$1,isPlainObject:isPlainObject$1,isReadableStream:isReadableStream$1,isRequest:isRequest$1,isResponse:isResponse$1,isHeaders:isHeaders$1,isUndefined:isUndefined$1,isDate:isDate$1,isFile:isFile$1,isBlob:isBlob$1,isRegExp:isRegExp$1,isFunction:isFunction$1,isStream:isStream$1,isURLSearchParams:isURLSearchParams$1,isTypedArray:isTypedArray$1,isFileList:isFileList$1,forEach:forEach$1,merge:merge$1,extend:extend$1,trim:trim$1,stripBOM:stripBOM$1,inherits:inherits$7,toFlatObject:toFlatObject$1,kindOf:kindOf$1,kindOfTest:kindOfTest$1,endsWith:endsWith$1,toArray:toArray$1,forEachEntry:forEachEntry$1,matchAll:matchAll$1,isHTMLForm:isHTMLForm$1,hasOwnProperty:hasOwnProperty$1,hasOwnProp:hasOwnProperty$1,reduceDescriptors:reduceDescriptors$1,freezeMethods:freezeMethods$1,toObjectSet:toObjectSet$1,toCamelCase:toCamelCase$1,noop:noop$1,toFiniteNumber:toFiniteNumber$1,findKey:findKey$1,global:_global$1,isContextDefined:isContextDefined$1,ALPHABET:ALPHABET$2,generateString:generateString$1,isSpecCompliantForm:isSpecCompliantForm$1,toJSONObject:toJSONObject$1,isAsyncFn:isAsyncFn$1,isThenable:isThenable$1,setImmediate:_setImmediate$1,asap:asap$1};function AxiosError$1(he,fe,le,pe,ge){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=he,this.name="AxiosError",fe&&(this.code=fe),le&&(this.config=le),pe&&(this.request=pe),ge&&(this.response=ge,this.status=ge.status?ge.status:null)}utils$5.inherits(AxiosError$1,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:utils$5.toJSONObject(this.config),code:this.code,status:this.status}}});const prototype$3=AxiosError$1.prototype,descriptors$1={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(he=>{descriptors$1[he]={value:he}});Object.defineProperties(AxiosError$1,descriptors$1);Object.defineProperty(prototype$3,"isAxiosError",{value:!0});AxiosError$1.from=(he,fe,le,pe,ge,ye)=>{const xe=Object.create(prototype$3);return utils$5.toFlatObject(he,xe,function(we){return we!==Error.prototype},me=>me!=="isAxiosError"),AxiosError$1.call(xe,he.message,fe,le,pe,ge),xe.cause=he,xe.name=he.name,ye&&Object.assign(xe,ye),xe};const httpAdapter$1=null;function isVisitable$1(he){return utils$5.isPlainObject(he)||utils$5.isArray(he)}function removeBrackets$1(he){return utils$5.endsWith(he,"[]")?he.slice(0,-2):he}function renderKey$1(he,fe,le){return he?he.concat(fe).map(function(ge,ye){return ge=removeBrackets$1(ge),!le&&ye?"["+ge+"]":ge}).join(le?".":""):fe}function isFlatArray$1(he){return utils$5.isArray(he)&&!he.some(isVisitable$1)}const predicates$1=utils$5.toFlatObject(utils$5,{},null,function(fe){return/^is[A-Z]/.test(fe)});function toFormData$1(he,fe,le){if(!utils$5.isObject(he))throw new TypeError("target must be an object");fe=fe||new FormData,le=utils$5.toFlatObject(le,{metaTokens:!0,dots:!1,indexes:!1},!1,function(Fe,Ue){return!utils$5.isUndefined(Ue[Fe])});const pe=le.metaTokens,ge=le.visitor||Ae,ye=le.dots,xe=le.indexes,we=(le.Blob||typeof Blob<"u"&&Blob)&&utils$5.isSpecCompliantForm(fe);if(!utils$5.isFunction(ge))throw new TypeError("visitor must be a function");function Ee(Me){if(Me===null)return"";if(utils$5.isDate(Me))return Me.toISOString();if(!we&&utils$5.isBlob(Me))throw new AxiosError$1("Blob is not supported. Use a Buffer instead.");return utils$5.isArrayBuffer(Me)||utils$5.isTypedArray(Me)?we&&typeof Blob=="function"?new Blob([Me]):Buffer$4.from(Me):Me}function Ae(Me,Fe,Ue){let qe=Me;if(Me&&!Ue&&typeof Me=="object"){if(utils$5.endsWith(Fe,"{}"))Fe=pe?Fe:Fe.slice(0,-2),Me=JSON.stringify(Me);else if(utils$5.isArray(Me)&&isFlatArray$1(Me)||(utils$5.isFileList(Me)||utils$5.endsWith(Fe,"[]"))&&(qe=utils$5.toArray(Me)))return Fe=removeBrackets$1(Fe),qe.forEach(function(Qe,ot){!(utils$5.isUndefined(Qe)||Qe===null)&&fe.append(xe===!0?renderKey$1([Fe],ot,ye):xe===null?Fe:Fe+"[]",Ee(Qe))}),!1}return isVisitable$1(Me)?!0:(fe.append(renderKey$1(Ue,Fe,ye),Ee(Me)),!1)}const Se=[],Le=Object.assign(predicates$1,{defaultVisitor:Ae,convertValue:Ee,isVisitable:isVisitable$1});function He(Me,Fe){if(!utils$5.isUndefined(Me)){if(Se.indexOf(Me)!==-1)throw Error("Circular reference detected in "+Fe.join("."));Se.push(Me),utils$5.forEach(Me,function(qe,$e){(!(utils$5.isUndefined(qe)||qe===null)&&ge.call(fe,qe,utils$5.isString($e)?$e.trim():$e,Fe,Le))===!0&&He(qe,Fe?Fe.concat($e):[$e])}),Se.pop()}}if(!utils$5.isObject(he))throw new TypeError("data must be an object");return He(he),fe}function encode$5(he){const fe={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(he).replace(/[!'()~]|%20|%00/g,function(pe){return fe[pe]})}function AxiosURLSearchParams$1(he,fe){this._pairs=[],he&&toFormData$1(he,this,fe)}const prototype$2=AxiosURLSearchParams$1.prototype;prototype$2.append=function(fe,le){this._pairs.push([fe,le])};prototype$2.toString=function(fe){const le=fe?function(pe){return fe.call(this,pe,encode$5)}:encode$5;return this._pairs.map(function(ge){return le(ge[0])+"="+le(ge[1])},"").join("&")};function encode$4(he){return encodeURIComponent(he).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function buildURL$1(he,fe,le){if(!fe)return he;const pe=le&&le.encode||encode$4,ge=le&&le.serialize;let ye;if(ge?ye=ge(fe,le):ye=utils$5.isURLSearchParams(fe)?fe.toString():new AxiosURLSearchParams$1(fe,le).toString(pe),ye){const xe=he.indexOf("#");xe!==-1&&(he=he.slice(0,xe)),he+=(he.indexOf("?")===-1?"?":"&")+ye}return he}let InterceptorManager$1=class{constructor(){this.handlers=[]}use(fe,le,pe){return this.handlers.push({fulfilled:fe,rejected:le,synchronous:pe?pe.synchronous:!1,runWhen:pe?pe.runWhen:null}),this.handlers.length-1}eject(fe){this.handlers[fe]&&(this.handlers[fe]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(fe){utils$5.forEach(this.handlers,function(pe){pe!==null&&fe(pe)})}};const transitionalDefaults$1={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},URLSearchParams$2=typeof URLSearchParams<"u"?URLSearchParams:AxiosURLSearchParams$1,FormData$2=typeof FormData<"u"?FormData:null,Blob$2=typeof Blob<"u"?Blob:null,platform$3={isBrowser:!0,classes:{URLSearchParams:URLSearchParams$2,FormData:FormData$2,Blob:Blob$2},protocols:["http","https","file","blob","url","data"]},hasBrowserEnv$1=typeof window<"u"&&typeof document<"u",_navigator=typeof navigator=="object"&&navigator||void 0,hasStandardBrowserEnv$1=hasBrowserEnv$1&&(!_navigator||["ReactNative","NativeScript","NS"].indexOf(_navigator.product)<0),hasStandardBrowserWebWorkerEnv$1=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",origin$1=hasBrowserEnv$1&&window.location.href||"http://localhost",utils$4=Object.freeze(Object.defineProperty({__proto__:null,hasBrowserEnv:hasBrowserEnv$1,hasStandardBrowserEnv:hasStandardBrowserEnv$1,hasStandardBrowserWebWorkerEnv:hasStandardBrowserWebWorkerEnv$1,navigator:_navigator,origin:origin$1},Symbol.toStringTag,{value:"Module"})),platform$2={...utils$4,...platform$3};function toURLEncodedForm$1(he,fe){return toFormData$1(he,new platform$2.classes.URLSearchParams,Object.assign({visitor:function(le,pe,ge,ye){return platform$2.isNode&&utils$5.isBuffer(le)?(this.append(pe,le.toString("base64")),!1):ye.defaultVisitor.apply(this,arguments)}},fe))}function parsePropPath$1(he){return utils$5.matchAll(/\w+|\[(\w*)]/g,he).map(fe=>fe[0]==="[]"?"":fe[1]||fe[0])}function arrayToObject$1(he){const fe={},le=Object.keys(he);let pe;const ge=le.length;let ye;for(pe=0;pe<ge;pe++)ye=le[pe],fe[ye]=he[ye];return fe}function formDataToJSON$1(he){function fe(le,pe,ge,ye){let xe=le[ye++];if(xe==="__proto__")return!0;const me=Number.isFinite(+xe),we=ye>=le.length;return xe=!xe&&utils$5.isArray(ge)?ge.length:xe,we?(utils$5.hasOwnProp(ge,xe)?ge[xe]=[ge[xe],pe]:ge[xe]=pe,!me):((!ge[xe]||!utils$5.isObject(ge[xe]))&&(ge[xe]=[]),fe(le,pe,ge[xe],ye)&&utils$5.isArray(ge[xe])&&(ge[xe]=arrayToObject$1(ge[xe])),!me)}if(utils$5.isFormData(he)&&utils$5.isFunction(he.entries)){const le={};return utils$5.forEachEntry(he,(pe,ge)=>{fe(parsePropPath$1(pe),ge,le,0)}),le}return null}function stringifySafely$1(he,fe,le){if(utils$5.isString(he))try{return(fe||JSON.parse)(he),utils$5.trim(he)}catch(pe){if(pe.name!=="SyntaxError")throw pe}return(le||JSON.stringify)(he)}const defaults$1={transitional:transitionalDefaults$1,adapter:["xhr","http","fetch"],transformRequest:[function(fe,le){const pe=le.getContentType()||"",ge=pe.indexOf("application/json")>-1,ye=utils$5.isObject(fe);if(ye&&utils$5.isHTMLForm(fe)&&(fe=new FormData(fe)),utils$5.isFormData(fe))return ge?JSON.stringify(formDataToJSON$1(fe)):fe;if(utils$5.isArrayBuffer(fe)||utils$5.isBuffer(fe)||utils$5.isStream(fe)||utils$5.isFile(fe)||utils$5.isBlob(fe)||utils$5.isReadableStream(fe))return fe;if(utils$5.isArrayBufferView(fe))return fe.buffer;if(utils$5.isURLSearchParams(fe))return le.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),fe.toString();let me;if(ye){if(pe.indexOf("application/x-www-form-urlencoded")>-1)return toURLEncodedForm$1(fe,this.formSerializer).toString();if((me=utils$5.isFileList(fe))||pe.indexOf("multipart/form-data")>-1){const we=this.env&&this.env.FormData;return toFormData$1(me?{"files[]":fe}:fe,we&&new we,this.formSerializer)}}return ye||ge?(le.setContentType("application/json",!1),stringifySafely$1(fe)):fe}],transformResponse:[function(fe){const le=this.transitional||defaults$1.transitional,pe=le&&le.forcedJSONParsing,ge=this.responseType==="json";if(utils$5.isResponse(fe)||utils$5.isReadableStream(fe))return fe;if(fe&&utils$5.isString(fe)&&(pe&&!this.responseType||ge)){const xe=!(le&&le.silentJSONParsing)&&ge;try{return JSON.parse(fe)}catch(me){if(xe)throw me.name==="SyntaxError"?AxiosError$1.from(me,AxiosError$1.ERR_BAD_RESPONSE,this,null,this.response):me}}return fe}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:platform$2.classes.FormData,Blob:platform$2.classes.Blob},validateStatus:function(fe){return fe>=200&&fe<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};utils$5.forEach(["delete","get","head","post","put","patch"],he=>{defaults$1.headers[he]={}});const ignoreDuplicateOf$1=utils$5.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),parseHeaders$1=he=>{const fe={};let le,pe,ge;return he&&he.split(`
`).forEach(function(xe){ge=xe.indexOf(":"),le=xe.substring(0,ge).trim().toLowerCase(),pe=xe.substring(ge+1).trim(),!(!le||fe[le]&&ignoreDuplicateOf$1[le])&&(le==="set-cookie"?fe[le]?fe[le].push(pe):fe[le]=[pe]:fe[le]=fe[le]?fe[le]+", "+pe:pe)}),fe},$internals$1=Symbol("internals");function normalizeHeader$1(he){return he&&String(he).trim().toLowerCase()}function normalizeValue$1(he){return he===!1||he==null?he:utils$5.isArray(he)?he.map(normalizeValue$1):String(he)}function parseTokens$1(he){const fe=Object.create(null),le=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let pe;for(;pe=le.exec(he);)fe[pe[1]]=pe[2];return fe}const isValidHeaderName$1=he=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(he.trim());function matchHeaderValue$1(he,fe,le,pe,ge){if(utils$5.isFunction(pe))return pe.call(this,fe,le);if(ge&&(fe=le),!!utils$5.isString(fe)){if(utils$5.isString(pe))return fe.indexOf(pe)!==-1;if(utils$5.isRegExp(pe))return pe.test(fe)}}function formatHeader$1(he){return he.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(fe,le,pe)=>le.toUpperCase()+pe)}function buildAccessors$1(he,fe){const le=utils$5.toCamelCase(" "+fe);["get","set","has"].forEach(pe=>{Object.defineProperty(he,pe+le,{value:function(ge,ye,xe){return this[pe].call(this,fe,ge,ye,xe)},configurable:!0})})}let AxiosHeaders$1=class{constructor(fe){fe&&this.set(fe)}set(fe,le,pe){const ge=this;function ye(me,we,Ee){const Ae=normalizeHeader$1(we);if(!Ae)throw new Error("header name must be a non-empty string");const Se=utils$5.findKey(ge,Ae);(!Se||ge[Se]===void 0||Ee===!0||Ee===void 0&&ge[Se]!==!1)&&(ge[Se||we]=normalizeValue$1(me))}const xe=(me,we)=>utils$5.forEach(me,(Ee,Ae)=>ye(Ee,Ae,we));if(utils$5.isPlainObject(fe)||fe instanceof this.constructor)xe(fe,le);else if(utils$5.isString(fe)&&(fe=fe.trim())&&!isValidHeaderName$1(fe))xe(parseHeaders$1(fe),le);else if(utils$5.isHeaders(fe))for(const[me,we]of fe.entries())ye(we,me,pe);else fe!=null&&ye(le,fe,pe);return this}get(fe,le){if(fe=normalizeHeader$1(fe),fe){const pe=utils$5.findKey(this,fe);if(pe){const ge=this[pe];if(!le)return ge;if(le===!0)return parseTokens$1(ge);if(utils$5.isFunction(le))return le.call(this,ge,pe);if(utils$5.isRegExp(le))return le.exec(ge);throw new TypeError("parser must be boolean|regexp|function")}}}has(fe,le){if(fe=normalizeHeader$1(fe),fe){const pe=utils$5.findKey(this,fe);return!!(pe&&this[pe]!==void 0&&(!le||matchHeaderValue$1(this,this[pe],pe,le)))}return!1}delete(fe,le){const pe=this;let ge=!1;function ye(xe){if(xe=normalizeHeader$1(xe),xe){const me=utils$5.findKey(pe,xe);me&&(!le||matchHeaderValue$1(pe,pe[me],me,le))&&(delete pe[me],ge=!0)}}return utils$5.isArray(fe)?fe.forEach(ye):ye(fe),ge}clear(fe){const le=Object.keys(this);let pe=le.length,ge=!1;for(;pe--;){const ye=le[pe];(!fe||matchHeaderValue$1(this,this[ye],ye,fe,!0))&&(delete this[ye],ge=!0)}return ge}normalize(fe){const le=this,pe={};return utils$5.forEach(this,(ge,ye)=>{const xe=utils$5.findKey(pe,ye);if(xe){le[xe]=normalizeValue$1(ge),delete le[ye];return}const me=fe?formatHeader$1(ye):String(ye).trim();me!==ye&&delete le[ye],le[me]=normalizeValue$1(ge),pe[me]=!0}),this}concat(...fe){return this.constructor.concat(this,...fe)}toJSON(fe){const le=Object.create(null);return utils$5.forEach(this,(pe,ge)=>{pe!=null&&pe!==!1&&(le[ge]=fe&&utils$5.isArray(pe)?pe.join(", "):pe)}),le}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([fe,le])=>fe+": "+le).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(fe){return fe instanceof this?fe:new this(fe)}static concat(fe,...le){const pe=new this(fe);return le.forEach(ge=>pe.set(ge)),pe}static accessor(fe){const pe=(this[$internals$1]=this[$internals$1]={accessors:{}}).accessors,ge=this.prototype;function ye(xe){const me=normalizeHeader$1(xe);pe[me]||(buildAccessors$1(ge,xe),pe[me]=!0)}return utils$5.isArray(fe)?fe.forEach(ye):ye(fe),this}};AxiosHeaders$1.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);utils$5.reduceDescriptors(AxiosHeaders$1.prototype,({value:he},fe)=>{let le=fe[0].toUpperCase()+fe.slice(1);return{get:()=>he,set(pe){this[le]=pe}}});utils$5.freezeMethods(AxiosHeaders$1);function transformData$1(he,fe){const le=this||defaults$1,pe=fe||le,ge=AxiosHeaders$1.from(pe.headers);let ye=pe.data;return utils$5.forEach(he,function(me){ye=me.call(le,ye,ge.normalize(),fe?fe.status:void 0)}),ge.normalize(),ye}function isCancel$1(he){return!!(he&&he.__CANCEL__)}function CanceledError$1(he,fe,le){AxiosError$1.call(this,he??"canceled",AxiosError$1.ERR_CANCELED,fe,le),this.name="CanceledError"}utils$5.inherits(CanceledError$1,AxiosError$1,{__CANCEL__:!0});function settle$1(he,fe,le){const pe=le.config.validateStatus;!le.status||!pe||pe(le.status)?he(le):fe(new AxiosError$1("Request failed with status code "+le.status,[AxiosError$1.ERR_BAD_REQUEST,AxiosError$1.ERR_BAD_RESPONSE][Math.floor(le.status/100)-4],le.config,le.request,le))}function parseProtocol$1(he){const fe=/^([-+\w]{1,25})(:?\/\/|:)/.exec(he);return fe&&fe[1]||""}function speedometer$1(he,fe){he=he||10;const le=new Array(he),pe=new Array(he);let ge=0,ye=0,xe;return fe=fe!==void 0?fe:1e3,function(we){const Ee=Date.now(),Ae=pe[ye];xe||(xe=Ee),le[ge]=we,pe[ge]=Ee;let Se=ye,Le=0;for(;Se!==ge;)Le+=le[Se++],Se=Se%he;if(ge=(ge+1)%he,ge===ye&&(ye=(ye+1)%he),Ee-xe<fe)return;const He=Ae&&Ee-Ae;return He?Math.round(Le*1e3/He):void 0}}function throttle$1(he,fe){let le=0,pe=1e3/fe,ge,ye;const xe=(Ee,Ae=Date.now())=>{le=Ae,ge=null,ye&&(clearTimeout(ye),ye=null),he.apply(null,Ee)};return[(...Ee)=>{const Ae=Date.now(),Se=Ae-le;Se>=pe?xe(Ee,Ae):(ge=Ee,ye||(ye=setTimeout(()=>{ye=null,xe(ge)},pe-Se)))},()=>ge&&xe(ge)]}const progressEventReducer$1=(he,fe,le=3)=>{let pe=0;const ge=speedometer$1(50,250);return throttle$1(ye=>{const xe=ye.loaded,me=ye.lengthComputable?ye.total:void 0,we=xe-pe,Ee=ge(we),Ae=xe<=me;pe=xe;const Se={loaded:xe,total:me,progress:me?xe/me:void 0,bytes:we,rate:Ee||void 0,estimated:Ee&&me&&Ae?(me-xe)/Ee:void 0,event:ye,lengthComputable:me!=null,[fe?"download":"upload"]:!0};he(Se)},le)},progressEventDecorator$1=(he,fe)=>{const le=he!=null;return[pe=>fe[0]({lengthComputable:le,total:he,loaded:pe}),fe[1]]},asyncDecorator$1=he=>(...fe)=>utils$5.asap(()=>he(...fe)),isURLSameOrigin$1=platform$2.hasStandardBrowserEnv?function(){const fe=platform$2.navigator&&/(msie|trident)/i.test(platform$2.navigator.userAgent),le=document.createElement("a");let pe;function ge(ye){let xe=ye;return fe&&(le.setAttribute("href",xe),xe=le.href),le.setAttribute("href",xe),{href:le.href,protocol:le.protocol?le.protocol.replace(/:$/,""):"",host:le.host,search:le.search?le.search.replace(/^\?/,""):"",hash:le.hash?le.hash.replace(/^#/,""):"",hostname:le.hostname,port:le.port,pathname:le.pathname.charAt(0)==="/"?le.pathname:"/"+le.pathname}}return pe=ge(window.location.href),function(xe){const me=utils$5.isString(xe)?ge(xe):xe;return me.protocol===pe.protocol&&me.host===pe.host}}():function(){return function(){return!0}}(),cookies$1=platform$2.hasStandardBrowserEnv?{write(he,fe,le,pe,ge,ye){const xe=[he+"="+encodeURIComponent(fe)];utils$5.isNumber(le)&&xe.push("expires="+new Date(le).toGMTString()),utils$5.isString(pe)&&xe.push("path="+pe),utils$5.isString(ge)&&xe.push("domain="+ge),ye===!0&&xe.push("secure"),document.cookie=xe.join("; ")},read(he){const fe=document.cookie.match(new RegExp("(^|;\\s*)("+he+")=([^;]*)"));return fe?decodeURIComponent(fe[3]):null},remove(he){this.write(he,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function isAbsoluteURL$1(he){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(he)}function combineURLs$1(he,fe){return fe?he.replace(/\/?\/$/,"")+"/"+fe.replace(/^\/+/,""):he}function buildFullPath$1(he,fe){return he&&!isAbsoluteURL$1(fe)?combineURLs$1(he,fe):fe}const headersToObject$1=he=>he instanceof AxiosHeaders$1?{...he}:he;function mergeConfig$1(he,fe){fe=fe||{};const le={};function pe(Ee,Ae,Se){return utils$5.isPlainObject(Ee)&&utils$5.isPlainObject(Ae)?utils$5.merge.call({caseless:Se},Ee,Ae):utils$5.isPlainObject(Ae)?utils$5.merge({},Ae):utils$5.isArray(Ae)?Ae.slice():Ae}function ge(Ee,Ae,Se){if(utils$5.isUndefined(Ae)){if(!utils$5.isUndefined(Ee))return pe(void 0,Ee,Se)}else return pe(Ee,Ae,Se)}function ye(Ee,Ae){if(!utils$5.isUndefined(Ae))return pe(void 0,Ae)}function xe(Ee,Ae){if(utils$5.isUndefined(Ae)){if(!utils$5.isUndefined(Ee))return pe(void 0,Ee)}else return pe(void 0,Ae)}function me(Ee,Ae,Se){if(Se in fe)return pe(Ee,Ae);if(Se in he)return pe(void 0,Ee)}const we={url:ye,method:ye,data:ye,baseURL:xe,transformRequest:xe,transformResponse:xe,paramsSerializer:xe,timeout:xe,timeoutMessage:xe,withCredentials:xe,withXSRFToken:xe,adapter:xe,responseType:xe,xsrfCookieName:xe,xsrfHeaderName:xe,onUploadProgress:xe,onDownloadProgress:xe,decompress:xe,maxContentLength:xe,maxBodyLength:xe,beforeRedirect:xe,transport:xe,httpAgent:xe,httpsAgent:xe,cancelToken:xe,socketPath:xe,responseEncoding:xe,validateStatus:me,headers:(Ee,Ae)=>ge(headersToObject$1(Ee),headersToObject$1(Ae),!0)};return utils$5.forEach(Object.keys(Object.assign({},he,fe)),function(Ae){const Se=we[Ae]||ge,Le=Se(he[Ae],fe[Ae],Ae);utils$5.isUndefined(Le)&&Se!==me||(le[Ae]=Le)}),le}const resolveConfig$1=he=>{const fe=mergeConfig$1({},he);let{data:le,withXSRFToken:pe,xsrfHeaderName:ge,xsrfCookieName:ye,headers:xe,auth:me}=fe;fe.headers=xe=AxiosHeaders$1.from(xe),fe.url=buildURL$1(buildFullPath$1(fe.baseURL,fe.url),he.params,he.paramsSerializer),me&&xe.set("Authorization","Basic "+btoa((me.username||"")+":"+(me.password?unescape(encodeURIComponent(me.password)):"")));let we;if(utils$5.isFormData(le)){if(platform$2.hasStandardBrowserEnv||platform$2.hasStandardBrowserWebWorkerEnv)xe.setContentType(void 0);else if((we=xe.getContentType())!==!1){const[Ee,...Ae]=we?we.split(";").map(Se=>Se.trim()).filter(Boolean):[];xe.setContentType([Ee||"multipart/form-data",...Ae].join("; "))}}if(platform$2.hasStandardBrowserEnv&&(pe&&utils$5.isFunction(pe)&&(pe=pe(fe)),pe||pe!==!1&&isURLSameOrigin$1(fe.url))){const Ee=ge&&ye&&cookies$1.read(ye);Ee&&xe.set(ge,Ee)}return fe},isXHRAdapterSupported$1=typeof XMLHttpRequest<"u",xhrAdapter$1=isXHRAdapterSupported$1&&function(he){return new Promise(function(le,pe){const ge=resolveConfig$1(he);let ye=ge.data;const xe=AxiosHeaders$1.from(ge.headers).normalize();let{responseType:me,onUploadProgress:we,onDownloadProgress:Ee}=ge,Ae,Se,Le,He,Me;function Fe(){He&&He(),Me&&Me(),ge.cancelToken&&ge.cancelToken.unsubscribe(Ae),ge.signal&&ge.signal.removeEventListener("abort",Ae)}let Ue=new XMLHttpRequest;Ue.open(ge.method.toUpperCase(),ge.url,!0),Ue.timeout=ge.timeout;function qe(){if(!Ue)return;const Qe=AxiosHeaders$1.from("getAllResponseHeaders"in Ue&&Ue.getAllResponseHeaders()),nt={data:!me||me==="text"||me==="json"?Ue.responseText:Ue.response,status:Ue.status,statusText:Ue.statusText,headers:Qe,config:he,request:Ue};settle$1(function(mt){le(mt),Fe()},function(mt){pe(mt),Fe()},nt),Ue=null}"onloadend"in Ue?Ue.onloadend=qe:Ue.onreadystatechange=function(){!Ue||Ue.readyState!==4||Ue.status===0&&!(Ue.responseURL&&Ue.responseURL.indexOf("file:")===0)||setTimeout(qe)},Ue.onabort=function(){Ue&&(pe(new AxiosError$1("Request aborted",AxiosError$1.ECONNABORTED,he,Ue)),Ue=null)},Ue.onerror=function(){pe(new AxiosError$1("Network Error",AxiosError$1.ERR_NETWORK,he,Ue)),Ue=null},Ue.ontimeout=function(){let ot=ge.timeout?"timeout of "+ge.timeout+"ms exceeded":"timeout exceeded";const nt=ge.transitional||transitionalDefaults$1;ge.timeoutErrorMessage&&(ot=ge.timeoutErrorMessage),pe(new AxiosError$1(ot,nt.clarifyTimeoutError?AxiosError$1.ETIMEDOUT:AxiosError$1.ECONNABORTED,he,Ue)),Ue=null},ye===void 0&&xe.setContentType(null),"setRequestHeader"in Ue&&utils$5.forEach(xe.toJSON(),function(ot,nt){Ue.setRequestHeader(nt,ot)}),utils$5.isUndefined(ge.withCredentials)||(Ue.withCredentials=!!ge.withCredentials),me&&me!=="json"&&(Ue.responseType=ge.responseType),Ee&&([Le,Me]=progressEventReducer$1(Ee,!0),Ue.addEventListener("progress",Le)),we&&Ue.upload&&([Se,He]=progressEventReducer$1(we),Ue.upload.addEventListener("progress",Se),Ue.upload.addEventListener("loadend",He)),(ge.cancelToken||ge.signal)&&(Ae=Qe=>{Ue&&(pe(!Qe||Qe.type?new CanceledError$1(null,he,Ue):Qe),Ue.abort(),Ue=null)},ge.cancelToken&&ge.cancelToken.subscribe(Ae),ge.signal&&(ge.signal.aborted?Ae():ge.signal.addEventListener("abort",Ae)));const $e=parseProtocol$1(ge.url);if($e&&platform$2.protocols.indexOf($e)===-1){pe(new AxiosError$1("Unsupported protocol "+$e+":",AxiosError$1.ERR_BAD_REQUEST,he));return}Ue.send(ye||null)})},composeSignals$1=(he,fe)=>{const{length:le}=he=he?he.filter(Boolean):[];if(fe||le){let pe=new AbortController,ge;const ye=function(Ee){if(!ge){ge=!0,me();const Ae=Ee instanceof Error?Ee:this.reason;pe.abort(Ae instanceof AxiosError$1?Ae:new CanceledError$1(Ae instanceof Error?Ae.message:Ae))}};let xe=fe&&setTimeout(()=>{xe=null,ye(new AxiosError$1(`timeout ${fe} of ms exceeded`,AxiosError$1.ETIMEDOUT))},fe);const me=()=>{he&&(xe&&clearTimeout(xe),xe=null,he.forEach(Ee=>{Ee.unsubscribe?Ee.unsubscribe(ye):Ee.removeEventListener("abort",ye)}),he=null)};he.forEach(Ee=>Ee.addEventListener("abort",ye));const{signal:we}=pe;return we.unsubscribe=()=>utils$5.asap(me),we}},streamChunk$1=function*(he,fe){let le=he.byteLength;if(!fe||le<fe){yield he;return}let pe=0,ge;for(;pe<le;)ge=pe+fe,yield he.slice(pe,ge),pe=ge},readBytes$2=async function*(he,fe){for await(const le of readStream(he))yield*streamChunk$1(le,fe)},readStream=async function*(he){if(he[Symbol.asyncIterator]){yield*he;return}const fe=he.getReader();try{for(;;){const{done:le,value:pe}=await fe.read();if(le)break;yield pe}}finally{await fe.cancel()}},trackStream$1=(he,fe,le,pe)=>{const ge=readBytes$2(he,fe);let ye=0,xe,me=we=>{xe||(xe=!0,pe&&pe(we))};return new ReadableStream({async pull(we){try{const{done:Ee,value:Ae}=await ge.next();if(Ee){me(),we.close();return}let Se=Ae.byteLength;if(le){let Le=ye+=Se;le(Le)}we.enqueue(new Uint8Array(Ae))}catch(Ee){throw me(Ee),Ee}},cancel(we){return me(we),ge.return()}},{highWaterMark:2})},isFetchSupported$1=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",isReadableStreamSupported$1=isFetchSupported$1&&typeof ReadableStream=="function",encodeText$1=isFetchSupported$1&&(typeof TextEncoder=="function"?(he=>fe=>he.encode(fe))(new TextEncoder):async he=>new Uint8Array(await new Response(he).arrayBuffer())),test$1=(he,...fe)=>{try{return!!he(...fe)}catch{return!1}},supportsRequestStream$1=isReadableStreamSupported$1&&test$1(()=>{let he=!1;const fe=new Request(platform$2.origin,{body:new ReadableStream,method:"POST",get duplex(){return he=!0,"half"}}).headers.has("Content-Type");return he&&!fe}),DEFAULT_CHUNK_SIZE$1=64*1024,supportsResponseStream$1=isReadableStreamSupported$1&&test$1(()=>utils$5.isReadableStream(new Response("").body)),resolvers$1={stream:supportsResponseStream$1&&(he=>he.body)};isFetchSupported$1&&(he=>{["text","arrayBuffer","blob","formData","stream"].forEach(fe=>{!resolvers$1[fe]&&(resolvers$1[fe]=utils$5.isFunction(he[fe])?le=>le[fe]():(le,pe)=>{throw new AxiosError$1(`Response type '${fe}' is not supported`,AxiosError$1.ERR_NOT_SUPPORT,pe)})})})(new Response);const getBodyLength$1=async he=>{if(he==null)return 0;if(utils$5.isBlob(he))return he.size;if(utils$5.isSpecCompliantForm(he))return(await new Request(platform$2.origin,{method:"POST",body:he}).arrayBuffer()).byteLength;if(utils$5.isArrayBufferView(he)||utils$5.isArrayBuffer(he))return he.byteLength;if(utils$5.isURLSearchParams(he)&&(he=he+""),utils$5.isString(he))return(await encodeText$1(he)).byteLength},resolveBodyLength$1=async(he,fe)=>{const le=utils$5.toFiniteNumber(he.getContentLength());return le??getBodyLength$1(fe)},fetchAdapter$1=isFetchSupported$1&&(async he=>{let{url:fe,method:le,data:pe,signal:ge,cancelToken:ye,timeout:xe,onDownloadProgress:me,onUploadProgress:we,responseType:Ee,headers:Ae,withCredentials:Se="same-origin",fetchOptions:Le}=resolveConfig$1(he);Ee=Ee?(Ee+"").toLowerCase():"text";let He=composeSignals$1([ge,ye&&ye.toAbortSignal()],xe),Me;const Fe=He&&He.unsubscribe&&(()=>{He.unsubscribe()});let Ue;try{if(we&&supportsRequestStream$1&&le!=="get"&&le!=="head"&&(Ue=await resolveBodyLength$1(Ae,pe))!==0){let nt=new Request(fe,{method:"POST",body:pe,duplex:"half"}),ct;if(utils$5.isFormData(pe)&&(ct=nt.headers.get("content-type"))&&Ae.setContentType(ct),nt.body){const[mt,gt]=progressEventDecorator$1(Ue,progressEventReducer$1(asyncDecorator$1(we)));pe=trackStream$1(nt.body,DEFAULT_CHUNK_SIZE$1,mt,gt)}}utils$5.isString(Se)||(Se=Se?"include":"omit");const qe="credentials"in Request.prototype;Me=new Request(fe,{...Le,signal:He,method:le.toUpperCase(),headers:Ae.normalize().toJSON(),body:pe,duplex:"half",credentials:qe?Se:void 0});let $e=await fetch(Me);const Qe=supportsResponseStream$1&&(Ee==="stream"||Ee==="response");if(supportsResponseStream$1&&(me||Qe&&Fe)){const nt={};["status","statusText","headers"].forEach(Ht=>{nt[Ht]=$e[Ht]});const ct=utils$5.toFiniteNumber($e.headers.get("content-length")),[mt,gt]=me&&progressEventDecorator$1(ct,progressEventReducer$1(asyncDecorator$1(me),!0))||[];$e=new Response(trackStream$1($e.body,DEFAULT_CHUNK_SIZE$1,mt,()=>{gt&&gt(),Fe&&Fe()}),nt)}Ee=Ee||"text";let ot=await resolvers$1[utils$5.findKey(resolvers$1,Ee)||"text"]($e,he);return!Qe&&Fe&&Fe(),await new Promise((nt,ct)=>{settle$1(nt,ct,{data:ot,headers:AxiosHeaders$1.from($e.headers),status:$e.status,statusText:$e.statusText,config:he,request:Me})})}catch(qe){throw Fe&&Fe(),qe&&qe.name==="TypeError"&&/fetch/i.test(qe.message)?Object.assign(new AxiosError$1("Network Error",AxiosError$1.ERR_NETWORK,he,Me),{cause:qe.cause||qe}):AxiosError$1.from(qe,qe&&qe.code,he,Me)}}),knownAdapters$1={http:httpAdapter$1,xhr:xhrAdapter$1,fetch:fetchAdapter$1};utils$5.forEach(knownAdapters$1,(he,fe)=>{if(he){try{Object.defineProperty(he,"name",{value:fe})}catch{}Object.defineProperty(he,"adapterName",{value:fe})}});const renderReason$1=he=>`- ${he}`,isResolvedHandle$1=he=>utils$5.isFunction(he)||he===null||he===!1,adapters$1={getAdapter:he=>{he=utils$5.isArray(he)?he:[he];const{length:fe}=he;let le,pe;const ge={};for(let ye=0;ye<fe;ye++){le=he[ye];let xe;if(pe=le,!isResolvedHandle$1(le)&&(pe=knownAdapters$1[(xe=String(le)).toLowerCase()],pe===void 0))throw new AxiosError$1(`Unknown adapter '${xe}'`);if(pe)break;ge[xe||"#"+ye]=pe}if(!pe){const ye=Object.entries(ge).map(([me,we])=>`adapter ${me} `+(we===!1?"is not supported by the environment":"is not available in the build"));let xe=fe?ye.length>1?`since :
`+ye.map(renderReason$1).join(`
`):" "+renderReason$1(ye[0]):"as no adapter specified";throw new AxiosError$1("There is no suitable adapter to dispatch the request "+xe,"ERR_NOT_SUPPORT")}return pe},adapters:knownAdapters$1};function throwIfCancellationRequested$1(he){if(he.cancelToken&&he.cancelToken.throwIfRequested(),he.signal&&he.signal.aborted)throw new CanceledError$1(null,he)}function dispatchRequest$1(he){return throwIfCancellationRequested$1(he),he.headers=AxiosHeaders$1.from(he.headers),he.data=transformData$1.call(he,he.transformRequest),["post","put","patch"].indexOf(he.method)!==-1&&he.headers.setContentType("application/x-www-form-urlencoded",!1),adapters$1.getAdapter(he.adapter||defaults$1.adapter)(he).then(function(pe){return throwIfCancellationRequested$1(he),pe.data=transformData$1.call(he,he.transformResponse,pe),pe.headers=AxiosHeaders$1.from(pe.headers),pe},function(pe){return isCancel$1(pe)||(throwIfCancellationRequested$1(he),pe&&pe.response&&(pe.response.data=transformData$1.call(he,he.transformResponse,pe.response),pe.response.headers=AxiosHeaders$1.from(pe.response.headers))),Promise.reject(pe)})}const VERSION$1="1.7.7",validators$3={};["object","boolean","number","function","string","symbol"].forEach((he,fe)=>{validators$3[he]=function(pe){return typeof pe===he||"a"+(fe<1?"n ":" ")+he}});const deprecatedWarnings$1={};validators$3.transitional=function(fe,le,pe){function ge(ye,xe){return"[Axios v"+VERSION$1+"] Transitional option '"+ye+"'"+xe+(pe?". "+pe:"")}return(ye,xe,me)=>{if(fe===!1)throw new AxiosError$1(ge(xe," has been removed"+(le?" in "+le:"")),AxiosError$1.ERR_DEPRECATED);return le&&!deprecatedWarnings$1[xe]&&(deprecatedWarnings$1[xe]=!0,console.warn(ge(xe," has been deprecated since v"+le+" and will be removed in the near future"))),fe?fe(ye,xe,me):!0}};function assertOptions$1(he,fe,le){if(typeof he!="object")throw new AxiosError$1("options must be an object",AxiosError$1.ERR_BAD_OPTION_VALUE);const pe=Object.keys(he);let ge=pe.length;for(;ge-- >0;){const ye=pe[ge],xe=fe[ye];if(xe){const me=he[ye],we=me===void 0||xe(me,ye,he);if(we!==!0)throw new AxiosError$1("option "+ye+" must be "+we,AxiosError$1.ERR_BAD_OPTION_VALUE);continue}if(le!==!0)throw new AxiosError$1("Unknown option "+ye,AxiosError$1.ERR_BAD_OPTION)}}const validator$1={assertOptions:assertOptions$1,validators:validators$3},validators$2=validator$1.validators;let Axios$1=class{constructor(fe){this.defaults=fe,this.interceptors={request:new InterceptorManager$1,response:new InterceptorManager$1}}async request(fe,le){try{return await this._request(fe,le)}catch(pe){if(pe instanceof Error){let ge;Error.captureStackTrace?Error.captureStackTrace(ge={}):ge=new Error;const ye=ge.stack?ge.stack.replace(/^.+\n/,""):"";try{pe.stack?ye&&!String(pe.stack).endsWith(ye.replace(/^.+\n.+\n/,""))&&(pe.stack+=`
`+ye):pe.stack=ye}catch{}}throw pe}}_request(fe,le){typeof fe=="string"?(le=le||{},le.url=fe):le=fe||{},le=mergeConfig$1(this.defaults,le);const{transitional:pe,paramsSerializer:ge,headers:ye}=le;pe!==void 0&&validator$1.assertOptions(pe,{silentJSONParsing:validators$2.transitional(validators$2.boolean),forcedJSONParsing:validators$2.transitional(validators$2.boolean),clarifyTimeoutError:validators$2.transitional(validators$2.boolean)},!1),ge!=null&&(utils$5.isFunction(ge)?le.paramsSerializer={serialize:ge}:validator$1.assertOptions(ge,{encode:validators$2.function,serialize:validators$2.function},!0)),le.method=(le.method||this.defaults.method||"get").toLowerCase();let xe=ye&&utils$5.merge(ye.common,ye[le.method]);ye&&utils$5.forEach(["delete","get","head","post","put","patch","common"],Me=>{delete ye[Me]}),le.headers=AxiosHeaders$1.concat(xe,ye);const me=[];let we=!0;this.interceptors.request.forEach(function(Fe){typeof Fe.runWhen=="function"&&Fe.runWhen(le)===!1||(we=we&&Fe.synchronous,me.unshift(Fe.fulfilled,Fe.rejected))});const Ee=[];this.interceptors.response.forEach(function(Fe){Ee.push(Fe.fulfilled,Fe.rejected)});let Ae,Se=0,Le;if(!we){const Me=[dispatchRequest$1.bind(this),void 0];for(Me.unshift.apply(Me,me),Me.push.apply(Me,Ee),Le=Me.length,Ae=Promise.resolve(le);Se<Le;)Ae=Ae.then(Me[Se++],Me[Se++]);return Ae}Le=me.length;let He=le;for(Se=0;Se<Le;){const Me=me[Se++],Fe=me[Se++];try{He=Me(He)}catch(Ue){Fe.call(this,Ue);break}}try{Ae=dispatchRequest$1.call(this,He)}catch(Me){return Promise.reject(Me)}for(Se=0,Le=Ee.length;Se<Le;)Ae=Ae.then(Ee[Se++],Ee[Se++]);return Ae}getUri(fe){fe=mergeConfig$1(this.defaults,fe);const le=buildFullPath$1(fe.baseURL,fe.url);return buildURL$1(le,fe.params,fe.paramsSerializer)}};utils$5.forEach(["delete","get","head","options"],function(fe){Axios$1.prototype[fe]=function(le,pe){return this.request(mergeConfig$1(pe||{},{method:fe,url:le,data:(pe||{}).data}))}});utils$5.forEach(["post","put","patch"],function(fe){function le(pe){return function(ye,xe,me){return this.request(mergeConfig$1(me||{},{method:fe,headers:pe?{"Content-Type":"multipart/form-data"}:{},url:ye,data:xe}))}}Axios$1.prototype[fe]=le(),Axios$1.prototype[fe+"Form"]=le(!0)});let CancelToken$1=class bi{constructor(fe){if(typeof fe!="function")throw new TypeError("executor must be a function.");let le;this.promise=new Promise(function(ye){le=ye});const pe=this;this.promise.then(ge=>{if(!pe._listeners)return;let ye=pe._listeners.length;for(;ye-- >0;)pe._listeners[ye](ge);pe._listeners=null}),this.promise.then=ge=>{let ye;const xe=new Promise(me=>{pe.subscribe(me),ye=me}).then(ge);return xe.cancel=function(){pe.unsubscribe(ye)},xe},fe(function(ye,xe,me){pe.reason||(pe.reason=new CanceledError$1(ye,xe,me),le(pe.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(fe){if(this.reason){fe(this.reason);return}this._listeners?this._listeners.push(fe):this._listeners=[fe]}unsubscribe(fe){if(!this._listeners)return;const le=this._listeners.indexOf(fe);le!==-1&&this._listeners.splice(le,1)}toAbortSignal(){const fe=new AbortController,le=pe=>{fe.abort(pe)};return this.subscribe(le),fe.signal.unsubscribe=()=>this.unsubscribe(le),fe.signal}static source(){let fe;return{token:new bi(function(ge){fe=ge}),cancel:fe}}};function spread$1(he){return function(le){return he.apply(null,le)}}function isAxiosError$1(he){return utils$5.isObject(he)&&he.isAxiosError===!0}const HttpStatusCode$1={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(HttpStatusCode$1).forEach(([he,fe])=>{HttpStatusCode$1[fe]=he});function createInstance$1(he){const fe=new Axios$1(he),le=bind$1(Axios$1.prototype.request,fe);return utils$5.extend(le,Axios$1.prototype,fe,{allOwnKeys:!0}),utils$5.extend(le,fe,null,{allOwnKeys:!0}),le.create=function(ge){return createInstance$1(mergeConfig$1(he,ge))},le}const axios$1=createInstance$1(defaults$1);axios$1.Axios=Axios$1;axios$1.CanceledError=CanceledError$1;axios$1.CancelToken=CancelToken$1;axios$1.isCancel=isCancel$1;axios$1.VERSION=VERSION$1;axios$1.toFormData=toFormData$1;axios$1.AxiosError=AxiosError$1;axios$1.Cancel=axios$1.CanceledError;axios$1.all=function(fe){return Promise.all(fe)};axios$1.spread=spread$1;axios$1.isAxiosError=isAxiosError$1;axios$1.mergeConfig=mergeConfig$1;axios$1.AxiosHeaders=AxiosHeaders$1;axios$1.formToJSON=he=>formDataToJSON$1(utils$5.isHTMLForm(he)?new FormData(he):he);axios$1.getAdapter=adapters$1.getAdapter;axios$1.HttpStatusCode=HttpStatusCode$1;axios$1.default=axios$1;var cryptoBrowserifyExports=requireCryptoBrowserify();const crypto$4=getDefaultExportFromCjs(cryptoBrowserifyExports),nodeCrypto=_mergeNamespaces({__proto__:null,default:crypto$4},[cryptoBrowserifyExports]);function buildIrysTransaction(he){class fe extends he.arbundles.DataItem{constructor(ge,ye,xe){super((xe==null?void 0:xe.dataIsRawTransaction)===!0?Buffer$4.from(ge):ye.arbundles.createData(ge,ye.tokenConfig.getSigner(),{...xe,anchor:(xe==null?void 0:xe.anchor)??crypto$4.randomBytes(32).toString("base64").slice(0,32)}).getRaw());je(this,"Irys");je(this,"signer");this.Irys=ye,this.signer=ye.tokenConfig.getSigner()}sign(){return super.sign(this.signer)}get size(){return this.getRaw().length}async uploadWithReceipt(ge){return(await this.Irys.uploader.uploadTransaction(this,ge)).data}async upload(ge){return(await this.Irys.uploader.uploadTransaction(this,ge)).data}async getPrice(){return this.Irys.utils.getPrice(this.Irys.tokenConfig.name,this.size)}async isValid(){return he.arbundles.DataItem.verify(this.getRaw())}}return fe}var base64url$3={exports:{}},base64url$2={},padString$1={};Object.defineProperty(padString$1,"__esModule",{value:!0});function padString(he){var fe=4,le=he.length,pe=le%fe;if(!pe)return he;var ge=le,ye=fe-pe,xe=le+ye,me=Buffer$4.alloc(xe);for(me.write(he);ye--;)me.write("=",ge++);return me.toString()}padString$1.default=padString;Object.defineProperty(base64url$2,"__esModule",{value:!0});var pad_string_1=padString$1;function encode$3(he,fe){return fe===void 0&&(fe="utf8"),Buffer$4.isBuffer(he)?fromBase64(he.toString("base64")):fromBase64(Buffer$4.from(he,fe).toString("base64"))}function decode$1(he,fe){return fe===void 0&&(fe="utf8"),Buffer$4.from(toBase64(he),"base64").toString(fe)}function toBase64(he){return he=he.toString(),pad_string_1.default(he).replace(/\-/g,"+").replace(/_/g,"/")}function fromBase64(he){return he.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function toBuffer$1(he){return Buffer$4.from(toBase64(he),"base64")}var base64url$1=encode$3;base64url$1.encode=encode$3;base64url$1.decode=decode$1;base64url$1.toBase64=toBase64;base64url$1.fromBase64=fromBase64;base64url$1.toBuffer=toBuffer$1;base64url$2.default=base64url$1;(function(he){he.exports=base64url$2.default,he.exports.default=he.exports})(base64url$3);var base64urlExports=base64url$3.exports;const base64url=getDefaultExportFromCjs(base64urlExports);var retry$3={};function RetryOperation(he,fe){typeof fe=="boolean"&&(fe={forever:fe}),this._originalTimeouts=JSON.parse(JSON.stringify(he)),this._timeouts=he,this._options=fe||{},this._maxRetryTime=fe&&fe.maxRetryTime||1/0,this._fn=null,this._errors=[],this._attempts=1,this._operationTimeout=null,this._operationTimeoutCb=null,this._timeout=null,this._operationStart=null,this._timer=null,this._options.forever&&(this._cachedTimeouts=this._timeouts.slice(0))}var retry_operation=RetryOperation;RetryOperation.prototype.reset=function(){this._attempts=1,this._timeouts=this._originalTimeouts.slice(0)};RetryOperation.prototype.stop=function(){this._timeout&&clearTimeout(this._timeout),this._timer&&clearTimeout(this._timer),this._timeouts=[],this._cachedTimeouts=null};RetryOperation.prototype.retry=function(he){if(this._timeout&&clearTimeout(this._timeout),!he)return!1;var fe=new Date().getTime();if(he&&fe-this._operationStart>=this._maxRetryTime)return this._errors.push(he),this._errors.unshift(new Error("RetryOperation timeout occurred")),!1;this._errors.push(he);var le=this._timeouts.shift();if(le===void 0)if(this._cachedTimeouts)this._errors.splice(0,this._errors.length-1),le=this._cachedTimeouts.slice(-1);else return!1;var pe=this;return this._timer=setTimeout(function(){pe._attempts++,pe._operationTimeoutCb&&(pe._timeout=setTimeout(function(){pe._operationTimeoutCb(pe._attempts)},pe._operationTimeout),pe._options.unref&&pe._timeout.unref()),pe._fn(pe._attempts)},le),this._options.unref&&this._timer.unref(),!0};RetryOperation.prototype.attempt=function(he,fe){this._fn=he,fe&&(fe.timeout&&(this._operationTimeout=fe.timeout),fe.cb&&(this._operationTimeoutCb=fe.cb));var le=this;this._operationTimeoutCb&&(this._timeout=setTimeout(function(){le._operationTimeoutCb()},le._operationTimeout)),this._operationStart=new Date().getTime(),this._fn(this._attempts)};RetryOperation.prototype.try=function(he){console.log("Using RetryOperation.try() is deprecated"),this.attempt(he)};RetryOperation.prototype.start=function(he){console.log("Using RetryOperation.start() is deprecated"),this.attempt(he)};RetryOperation.prototype.start=RetryOperation.prototype.try;RetryOperation.prototype.errors=function(){return this._errors};RetryOperation.prototype.attempts=function(){return this._attempts};RetryOperation.prototype.mainError=function(){if(this._errors.length===0)return null;for(var he={},fe=null,le=0,pe=0;pe<this._errors.length;pe++){var ge=this._errors[pe],ye=ge.message,xe=(he[ye]||0)+1;he[ye]=xe,xe>=le&&(fe=ge,le=xe)}return fe};(function(he){var fe=retry_operation;he.operation=function(le){var pe=he.timeouts(le);return new fe(pe,{forever:le&&(le.forever||le.retries===1/0),unref:le&&le.unref,maxRetryTime:le&&le.maxRetryTime})},he.timeouts=function(le){if(le instanceof Array)return[].concat(le);var pe={retries:10,factor:2,minTimeout:1*1e3,maxTimeout:1/0,randomize:!1};for(var ge in le)pe[ge]=le[ge];if(pe.minTimeout>pe.maxTimeout)throw new Error("minTimeout is greater than maxTimeout");for(var ye=[],xe=0;xe<pe.retries;xe++)ye.push(this.createTimeout(xe,pe));return le&&le.forever&&!ye.length&&ye.push(this.createTimeout(xe,pe)),ye.sort(function(me,we){return me-we}),ye},he.createTimeout=function(le,pe){var ge=pe.randomize?Math.random()+1:1,ye=Math.round(ge*Math.max(pe.minTimeout,1)*Math.pow(pe.factor,le));return ye=Math.min(ye,pe.maxTimeout),ye},he.wrap=function(le,pe,ge){if(pe instanceof Array&&(ge=pe,pe=null),!ge){ge=[];for(var ye in le)typeof le[ye]=="function"&&ge.push(ye)}for(var xe=0;xe<ge.length;xe++){var me=ge[xe],we=le[me];le[me]=(function(Ae){var Se=he.operation(pe),Le=Array.prototype.slice.call(arguments,1),He=Le.pop();Le.push(function(Me){Se.retry(Me)||(Me&&(arguments[0]=Se.mainError()),He.apply(this,arguments))}),Se.attempt(function(){Ae.apply(le,Le)})}).bind(le,we),le[me].options=pe}}})(retry$3);var retry$2=retry$3,retrier=retry$2;function retry(he,fe){function le(pe,ge){var ye=fe||{},xe;"randomize"in ye||(ye.randomize=!0),xe=retrier.operation(ye);function me(Ae){ge(Ae||new Error("Aborted"))}function we(Ae,Se){if(Ae.bail){me(Ae);return}xe.retry(Ae)?ye.onRetry&&ye.onRetry(Ae,Se):ge(xe.mainError())}function Ee(Ae){var Se;try{Se=he(me,Ae)}catch(Le){we(Le,Ae);return}Promise.resolve(Se).then(pe).catch(function(He){we(He,Ae)})}xe.attempt(Ee)}return new Promise(le)}var lib$8=retry;const retry$1=getDefaultExportFromCjs(lib$8);BigNumber$1.set({DECIMAL_PLACES:50});const sleep=he=>new Promise(fe=>setTimeout(fe,he)),httpErrData=he=>typeof he.data!="string"?he.statusText:he.data;class Utils{constructor(fe,le,pe){je(this,"api");je(this,"token");je(this,"tokenConfig");je(this,"arbundles");this.api=fe,this.token=le,this.tokenConfig=pe,this.arbundles=this.tokenConfig.irys.arbundles}static checkAndThrow(fe,le,pe){if(fe!=null&&fe.status&&!(pe??[]).includes(fe.status)&&fe.status!=200)throw new Error(`HTTP Error: ${le}: ${fe.status} ${typeof fe.data!="string"?fe.statusText:fe.data}`)}async getNonce(){const fe=await this.api.get(`/account/withdrawals/${this.tokenConfig.name}?address=${this.tokenConfig.address}`);return Utils.checkAndThrow(fe,"Getting withdrawal nonce"),fe.data}async getBalance(fe){const le=await this.api.get(`/account/balance/${this.tokenConfig.name}?address=${fe}`);return Utils.checkAndThrow(le,"Getting balance"),new BigNumber$1(le.data.balance)}async getBundlerAddress(fe){const le=await this.api.get("/info");Utils.checkAndThrow(le,"Getting Bundler address");const pe=le.data.addresses[fe];if(!pe)throw new Error(`Specified bundler does not support token ${fe}`);return pe}async getPrice(fe,le){const pe=await this.api.get(`/price/${fe}/${le}`);return Utils.checkAndThrow(pe,"Getting storage cost"),new BigNumber$1(pe.data)}async estimateFolderPrice(fe){Array.isArray(fe)&&(fe={fileCount:fe.length,totalBytes:fe.reduce((xe,me)=>xe+me,0)});const le=fe.headerSizeAvg??this.arbundles.createData("",this.tokenConfig.getSigner()).getRaw().length,ge=(await this.getPrice(this.tokenConfig.name,le)).multipliedBy(fe.fileCount);return(await this.getPrice(this.tokenConfig.name,fe.totalBytes)).plus(ge).decimalPlaces(0)}toAtomic(fe){return new BigNumber$1(fe).multipliedBy(this.tokenConfig.base[1])}fromAtomic(fe){return new BigNumber$1(fe).dividedBy(this.tokenConfig.base[1])}async confirmationPoll(fe,le=30){if(this.tokenConfig.isSlow)return;le<0&&(le=0);let pe,ge;const ye=async()=>{for(;!ge;){if(await this.tokenConfig.getTx(fe).then(Ee=>Ee==null?void 0:Ee.confirmed).catch(Ee=>(pe=Ee,!1)))return!0;await sleep(1e3)}return!1},xe=async()=>(await sleep(le*1e3),ge=!0,"RACE"),me=await Promise.race([xe(),ye()]);return me==="RACE"?(console.warn(`Tx ${fe} didn't finalize after ${le} seconds ${pe?` - ${pe}`:""}`),pe):me}unitConverter(fe){return new BigNumber$1(fe).dividedBy(this.tokenConfig.base[1])}async verifyReceipt(fe){return Utils.verifyReceipt(this.arbundles,fe)}static async verifyReceipt(fe,le){const{id:pe,deadlineHeight:ge,timestamp:ye,public:xe,signature:me,version:we}=le,Ee=await fe.deepHash([fe.stringToBuffer("Bundlr"),fe.stringToBuffer(we),fe.stringToBuffer(pe),fe.stringToBuffer(ge.toString()),fe.stringToBuffer(ye.toString())]);return await fe.getCryptoDriver().verify(xe,Ee,base64url.toBuffer(me))}async getReceipt(fe){var me,we,Ee,Ae,Se,Le;const le=`query {
      transactions(ids: ["${fe}"]) {
        edges {
          node {
            receipt {
              signature
              timestamp
              version
              deadlineHeight
            }
          }
        }
      }
    }`,pe=await retry$1(async()=>await this.api.post("/graphql",{query:le},{headers:{"content-type":"application/json"},validateStatus:He=>He===200})),ge=(Le=(Se=(Ae=(Ee=(we=(me=pe==null?void 0:pe.data)==null?void 0:me.data)==null?void 0:we.transactions)==null?void 0:Ee.edges)==null?void 0:Ae.at(0))==null?void 0:Se.node)==null?void 0:Le.receipt;if(!ge)throw new Error(`Missing required receipt data from node for tx: ${fe}`);const xe={public:(await this.api.get("/public")).data,version:ge.version,id:fe,timestamp:ge.timestamp,validatorSignatures:[],signature:ge.signature,deadlineHeight:ge.deadlineHeight,verify:async()=>!1};return xe.verify=async()=>this.verifyReceipt(xe),xe}}const utils$3=Utils,erc20abi=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];async function withdrawBalance(he,fe,le){const pe=he.tokenConfig,{deepHash:ge,stringToBuffer:ye}=pe.irys.arbundles,xe=await pe.getPublicKey(),me=le==="all",we={publicKey:xe,currency:he.token,amount:me?"all":new BigNumber$1(le).toString(),nonce:await he.getNonce(),signature:"",sigType:pe.getSigner().signatureType},Ee=await ge([ye(we.currency),ye(we.amount.toString()),ye(we.nonce.toString())]);Buffer$4.isBuffer(we.publicKey)||(we.publicKey=Buffer$4.from(we.publicKey));const Ae=await pe.sign(Ee),Se=await pe.verify(we.publicKey,Ee,Ae);we.publicKey=base64url.encode(we.publicKey),we.signature=base64url.encode(Buffer$4.from(Ae));const Le=base64url.toBuffer(we.publicKey),He=base64url.toBuffer(we.signature),Me=await ge([ye(we.currency),ye(we.amount.toString()),ye(we.nonce.toString())]),Fe=await pe.verify(Le,Me,He),Ue=pe.ownerToAddress(pe.name=="arweave"?base64url.decode(we.publicKey):base64url.toBuffer(we.publicKey))===pe.address;if(!(Se||Fe||Ue))throw new Error(`Internal withdrawal validation failed - please report this!
Debug Info:${JSON.stringify(we)}`);const qe=await fe.post("/account/withdraw",we);if(qe.status===202){const $e=qe.data.tx_id,Qe=await he.confirmationPoll($e);if(Qe!==!0)throw new Error(`Unable to confirm withdrawal tx ${$e} ${Qe?Qe==null?void 0:Qe.toString():""}`)}else utils$3.checkAndThrow(qe,"Withdrawing balance");return qe.data}class GraphQLQuery{constructor({url:fe,network:le,retryConfig:pe,query:ge,queryName:ye,opts:xe}){je(this,"queryVars",{});je(this,"queryFields");je(this,"queryInfo");je(this,"_query");je(this,"gqlURL");je(this,"config");je(this,"resultTracker",{numPages:0,numResults:0,done:!1});if(fe=le?this.parseNetwork(le):fe,!fe)throw new Error("URL or network is required");if(this.gqlURL=new URL(fe),this.config={first:!1,userProvided:!1,numPages:1/0,numResults:1e3,retryOpts:{retries:3,maxTimeout:2e3,minTimeout:500,...pe}},ge===!1)return this;if(!ge)throw new Error(`Unable to find query with name ${ye}`);if(this.queryInfo={...ge},this.queryFields=ge.query,!(xe!=null&&xe.skipVariableSetters))for(const me of Object.keys(ge.vars)){if(this[me])throw new Error(`Field setter ${me} has a key conflict - disable with opts.skipVariableSetters OR change the field name and add to query.remapVars`);this[me]=we=>(this.queryVars[me]=we,this)}return this}parseNetwork(fe){switch(fe){case"mainnet":return new URL("https://arweave.mainnet.irys.xyz/graphql");case"devnet":return new URL("https://arweave.devnet.irys.xyz/graphql");case"arweave":return new URL("https://arweave.net/graphql");default:return}}buildQuery(){var we,Ee,Ae,Se;if(this.config.userProvided)return this;const fe=Le=>JSON.stringify(Le,(He,Me)=>{if(Me instanceof Array)return Me[0];if(typeof Me=="object")return Me;if(Me!==!1)return""}).replaceAll(":","").replaceAll('"',"").replaceAll(",",`
          `),le=fe(this.queryFields),pe=fe({pageInfo:{[((we=this.queryInfo.paging)==null?void 0:we.hasNextPage)??"hasNextPage"]:void 0}}).slice(1,-1),ge=this.queryInfo.enumValues,ye={...this.queryInfo.vars,...this.queryVars};this.config.numResults&&((Ee=this.queryInfo.paging)!=null&&Ee.limiterName)&&(ye[(Ae=this.queryInfo.paging)==null?void 0:Ae.limiterName]=Math.max(this.config.numResults,1));for(const[Le,He]of Object.entries(this.queryInfo.remapVars??{}))if((ye==null?void 0:ye[Le])!==void 0){if(typeof He=="function"){const Me=He(Le,ye[Le],ye);if(!Me)continue;const[Fe,Ue]=Me;if(ye[Fe]=Ue,Fe===Le)continue}else ye[He]=ye[Le];ye[Le]=void 0}const xe=JSON.stringify(ye,function(Le,He){return He===void 0||He instanceof Array||typeof He=="object"||typeof He=="number"||ge!=null&&ge.includes(Le)?He:`'${He}'`}).replaceAll('"',"").replaceAll("'",'"').slice(1,-1);if(!((Se=this==null?void 0:this.queryInfo)!=null&&Se.name))throw new Error("Query name is undefined!");const me=this.queryInfo.paging?`query {
      ${this.queryInfo.name}(
        ${xe}
      ) {
        edges {
          cursor
          node ${le}
        }
        ${pe}
      }
    }`:`query {
    ${this.queryInfo.name}(
      ${xe}
    ) 
    ${le}
  }`;return this._query=me,this}async getPage(){var pe;if(this.resultTracker.done)return;if(this.buildQuery(),!this._query)throw new Error("Unable to run undefined query");let fe;try{fe=await retry$1(async ge=>{const ye=await axios$1(this.gqlURL.toString(),{method:"post",headers:{"Content-Type":"application/json"},data:{query:this._query}});if(ye.data.errors)throw ye;return ye},this.config.retryOpts)}catch(ge){throw new Error(`Error running query
 ${this._query} - ${ge.message?ge.message+" -":""} (${JSON.stringify(((pe=ge==null?void 0:ge.data)==null?void 0:pe.errors.map(ye=>ye.message))??(ge==null?void 0:ge.errors)??ge)}) `)}if(this.config.userProvided)return this.trimmer([fe.data.data].flat(20));const le=fe.data.data[this.queryInfo.name];if(this.queryInfo.paging){const ge=le.pageInfo[this.queryInfo.paging.hasNextPage]?le.edges.at(-1)[this.queryInfo.paging.cursor]:void 0;return this.queryVars.after=ge,this.trimmer(le.edges.map(ye=>ye.node))}return this.trimmer([le].flat(20))}trimmer(fe){var ge,ye;const le=++this.resultTracker.numPages,pe=this.resultTracker.numResults+=fe.length;if(fe.length===0)return this.resultTracker.done=!0,fe;if(le>=((ge=this==null?void 0:this.config)==null?void 0:ge.numPages)&&(this.resultTracker.done=!0),pe>=((ye=this==null?void 0:this.config)==null?void 0:ye.numResults)){this.resultTracker.done=!0;const xe=this.config.numResults-(pe-fe.length);return fe.slice(0,xe)}return fe}async first(){const fe=await this.getPage();return(fe==null?void 0:fe.at(0))??void 0}maxPages(fe){return this.config.numPages=fe,this}limit(fe){return this.config.numResults=fe,this}url(fe){return this.gqlURL=new URL(fe),this}network(fe){const le=this.parseNetwork(fe);if(!le)throw new Error(`Invalid network: ${fe}`);return this.gqlURL=le,this}async all(){const fe=[];do{const le=await this.getPage();if(!le)break;fe.push(...le)}while(this.queryVars.after);return fe}async*generator(){do{const fe=await this.getPage();if(!fe)return;for(const le of fe)yield le}while(this.queryVars.after)}stream(){return streamBrowserify.Readable.from(this.generator())}query(fe){return this._query=fe,this.config.userProvided=!0,this}fields(fe,le=!1){const pe=(ge,ye,xe)=>{for(const me of Object.keys(xe)){let we=ye[me];Array.isArray(we)&&(we=we[0]);const Ee=xe[me];if(we===void 0)throw new Error(`Illegal field ${ge}${me}`);typeof Ee=="object"&&pe(ge+me+".",we,Ee)}};return le||pe("",this.queryFields,fe),this.queryFields=fe,this}variables(fe){return this.queryVars={...this.queryVars,...fe},this}toQuery(){return this.buildQuery(),this._query}tReturn(){return"tReturn"}tQuery(){return"tQuery"}tVars(){return"tVars"}async then(fe,le){return this.all().then(fe,le)}async catch(fe){return this.then().catch(fe)}async finally(fe){return this.then().finally(fe)}}const block={id:"",timestamp:0,height:"",previous:""},blocksVars={ids:void 0,minHeight:void 0,maxHeight:void 0,pageSize:10,after:void 0,sort:"DESC"},arweaveBlocksQuery={name:"blocks",query:block,vars:blocksVars,enumValues:["sort"],remapVars:{pageSize:"first",sort:(he,fe)=>[he,fe==="ASC"?"HEIGHT_ASC":"HEIGHT_DESC"],minHeight:(he,fe,le)=>{le.height={...le.height,min:fe},le.minHeight=void 0},maxHeight:(he,fe,le)=>{le.height={...le.height,max:fe},le.maxHeight=void 0}},paging:{hasNextPage:"hasNextPage",cursor:"cursor",limiterName:"pageSize"}},transaction={id:"",anchor:"",signature:"",recipient:"",owner:{address:"",key:""},fee:{winston:"",ar:""},quantity:{winston:"",ar:""},data:{size:"",type:""},tags:[{name:"",value:""}],block:{id:"",timestamp:0,height:0,previous:""},bundledIn:{id:""}},transactionsVars={ids:void 0,from:void 0,to:void 0,tags:void 0,bundledIn:void 0,minHeight:void 0,maxHeight:void 0,pageSize:10,after:void 0,sort:"DESC"},arweaveTransactionsQuery={name:"transactions",query:transaction,enumValues:["sort"],vars:transactionsVars,remapVars:{pageSize:"first",from:"owners",to:"recipients",sort:(he,fe)=>[he,fe==="ASC"?"HEIGHT_ASC":"HEIGHT_DESC"],minHeight:(he,fe,le)=>{le.block={...le.block,min:fe},le.minHeight=void 0},maxHeight:(he,fe,le)=>{le.block={...le.block,max:fe},le.maxHeight=void 0}},paging:{hasNextPage:"hasNextPage",cursor:"cursor",limiterName:"pageSize"}},paymentApprovals={amount:"",payingAddress:"",approvedAddress:"",expiresBy:0,timestamp:0,token:""},paymentApprovalVars={tokens:void 0,payingAddresses:void 0,approvedAddresses:void 0,pageSize:100,order:"ASC",after:void 0},irysPaymentApprovalsQuery={name:"paymentApprovals",query:paymentApprovals,enumValues:["order"],vars:paymentApprovalVars,remapVars:{pageSize:"limit"},paging:{hasNextPage:"hasNextPage",cursor:"cursor",limiterName:"pageSize"}},transactions={id:"",receipt:{deadlineHeight:0,signature:"",timestamp:0,version:""},tags:[{name:"",value:""}],address:"",token:"",signature:"",timestamp:0},transactionVars={ids:void 0,after:void 0,token:void 0,from:void 0,pageSize:100,sort:"ASC",tags:void 0,fromTimestamp:void 0,toTimestamp:void 0},irysTransactionsQuery={name:"transactions",query:transactions,enumValues:["order"],vars:transactionVars,remapVars:{pageSize:"first",sort:"order",from:"owners",fromTimestamp:(he,fe,le)=>{const pe=new Date(fe).getTime();if(isNaN(pe))throw new Error("invalid from timestamp");le.timestamp={...le.timestamp,from:pe},le.fromTimestamp=void 0},toTimestamp:(he,fe,le)=>{const pe=new Date(fe).getTime();if(isNaN(pe))throw new Error("invalid to timestamp");le.timestamp={...le.timestamp,to:pe},le.toTimestamp=void 0}},paging:{hasNextPage:"hasNextPage",cursor:"cursor",limiterName:"pageSize"}},queries={"irys:transactions":irysTransactionsQuery,"arweave:transactions":arweaveTransactionsQuery,"arweave:blocks":arweaveBlocksQuery,"irys:paymentApprovals":irysPaymentApprovalsQuery};class Query{constructor(fe={network:"mainnet"}){je(this,"opts");this.opts=fe}search(fe,le){const pe=(le==null?void 0:le.query)??queries[fe];return new GraphQLQuery({...this.opts,query:pe,queryName:fe})}}class Irys{constructor({url:fe,network:le,arbundles:pe}){je(this,"api");je(this,"utils");je(this,"uploader");je(this,"funder");je(this,"_address");je(this,"token");je(this,"tokenConfig");je(this,"provenance");je(this,"transactions");je(this,"approval");je(this,"_readyPromise");je(this,"url");je(this,"arbundles");je(this,"IrysTransaction");je(this,"debug",!1);switch(le){case"mainnet":fe="https://arweave.mainnet.irys.xyz";break;case"devnet":fe="https://arweave.devnet.irys.xyz";break}if(!fe)throw new Error("Missing required Irys constructor parameter: URL or valid Network");const ge=new URL(fe);this.url=ge,this.arbundles=pe,this.IrysTransaction=buildIrysTransaction(this)}get address(){if(!this._address)throw new Error("Address is undefined, please provide a wallet or run `await irys.ready()`");return this._address}set address(fe){this._address=fe}get signer(){return this.tokenConfig.getSigner()}get search(){const fe=new Query({url:new URL("/graphql",this.url)});return fe.search.bind(fe)}query(fe){return new Query(fe??{url:new URL("graphql",this.url)})}async withdrawBalance(fe){return withdrawBalance(this.utils,this.api,fe)}async withdrawAll(){return withdrawBalance(this.utils,this.api,"all")}async getLoadedBalance(){if(!this.address)throw new Error("address is undefined");return this.utils.getBalance(this.address)}async getBalance(fe){return this.utils.getBalance(fe)}async fund(fe,le){return this.funder.fund(fe,le)}async getPrice(fe){return this.utils.getPrice(this.token,fe)}async verifyReceipt(fe){return utils$3.verifyReceipt(this.arbundles,fe)}createTransaction(fe,le){return new this.IrysTransaction(fe,this,le)}getSigner(){return this.tokenConfig.getSigner()}async upload(fe,le){return this.uploader.uploadData(fe,le)}async uploadWithReceipt(fe,le){return this.uploader.uploadData(fe,{...le})}async ready(){return this.tokenConfig.ready&&await this.tokenConfig.ready(),this.address=this.tokenConfig.address,this}get transaction(){const fe=this;return{fromRaw(le){return new fe.IrysTransaction(le,fe,{dataIsRawTransaction:!0})}}}}je(Irys,"VERSION","0.2.11");let Api$1=class{constructor(fe){je(this,"_instance");je(this,"cookieMap",new Map);je(this,"config");fe&&this.applyConfig(fe)}applyConfig(fe){this.config=this.mergeDefaults(fe),this._instance=void 0}getConfig(){return this.config}async requestInterceptor(fe){const le=this.cookieMap.get(new URL(fe.baseURL??"").hostname);return le&&(fe.headers.cookie=le),fe}async responseInterceptor(fe){var pe;const le=(pe=fe.headers)==null?void 0:pe["set-cookie"];return le&&this.cookieMap.set(fe.request.host,le),fe}mergeDefaults(fe){return{url:fe.url,timeout:fe.timeout??2e4,logging:fe.logging??!1,logger:fe.logger??console.log,headers:{...fe.headers,"x-irys-js-sdk-version":Irys.VERSION},withCredentials:fe.withCredentials??!1,retry:{retries:3,maxTimeout:5e3}}}async get(fe,le){var pe;try{return await this.request(fe,{...le,method:"GET"})}catch(ge){if((pe=ge.response)!=null&&pe.status)return ge.response;throw ge}}async post(fe,le,pe){var ge;try{return await this.request(fe,{data:le,...pe,method:"POST"})}catch(ye){if((ge=ye.response)!=null&&ge.status)return ye.response;throw ye}}get instance(){if(this._instance)return this._instance;const fe=axios$1.create({baseURL:this.config.url.toString(),timeout:this.config.timeout,maxContentLength:1024*1024*512,headers:this.config.headers,withCredentials:this.config.withCredentials});return this.config.withCredentials&&(fe.interceptors.request.use(this.requestInterceptor.bind(this)),fe.interceptors.response.use(this.responseInterceptor.bind(this))),this.config.logging&&(fe.interceptors.request.use(le=>(this.config.logger(`Requesting: ${le.baseURL}/${le.url}`),le)),fe.interceptors.response.use(le=>(this.config.logger(`Response: ${le.config.url} - ${le.status}`),le))),this._instance=fe}async request(fe,le){const pe=this.instance,ge=(le==null?void 0:le.url)??new URL(fe,this.config.url).toString();return pe({...le,url:ge})}};class Fund{constructor(fe){je(this,"utils");this.utils=fe}async fund(fe,le=1){if(fe=new BigNumber$1(fe),!fe.isInteger())throw new Error("must use an integer for funding amount");const pe=this.utils.tokenConfig,ge=await this.utils.getBundlerAddress(this.utils.token);let ye=pe.needsFee?await pe.getFee(fe,ge,le):void 0;ye&&BigNumber$1.isBigNumber(ye)&&pe.getFee.length<3&&(ye=ye.multipliedBy(le).integerValue());const xe=await pe.createTx(fe,ge,ye),me=await pe.sendTx(xe.tx);if(xe.txId??(xe.txId=me),!xe.txId)throw new Error("Undefined transaction ID");let we=await this.utils.confirmationPoll(xe.txId);if(!await this.submitTransaction(xe.txId).catch(Ae=>{we=Ae}))throw new Error(`failed to post funding tx - ${xe.txId} - keep this id! 
 ${we?` - ${(we==null?void 0:we.message)??we}`:""}`);return{reward:BigNumber$1.isBigNumber(ye)?ye.toString():JSON.stringify(ye),target:ge,quantity:fe.toString(),id:xe.txId}}async submitTransaction(fe){return await retry$1(async()=>{const le=await this.utils.api.post(`/account/balance/${this.utils.token}`,{tx_id:fe});return utils$3.checkAndThrow(le,`Posting transaction ${fe} information to the bundler`,[202]),le},{retries:5,maxTimeout:1e3,minTimeout:100,randomize:!0})}async submitFundTransaction(fe){return this.submitTransaction(fe)}}class Provenance{constructor(fe){je(this,"irys");this.irys=fe}async upload(fe,le){return this.irys.uploadWithReceipt(fe,le)}async uploadProof(fe){return await this.irys.uploadWithReceipt("",{tags:Object.entries({dataProtocol:"Provenance-Confirmation",...fe}).map(([le,pe])=>({name:tagMap[le],value:pe}))})}async getAllProofs(fe,le){var me,we;const pe=Object.entries(fe).map(([Ee,Ae])=>({name:tagMap[Ee],values:[Ae]}));if(pe.length===0)throw new Error("Getting a provenance proof requires at least one query element");const ge=`
    query ($tags: [TagFilter!]) {
      transactions(tags: $tags) {
        edges {
          node {
            id
            receipt {
              deadlineHeight
              signature
              timestamp
              version
            }
            tags {
              name
              value
            }
          }
        }
      }
    }
    `,ye=[];let xe=null;do{const Ee=await this.irys.api.post("/graphql",{query:ge,variables:{tags:pe,limit:(le==null?void 0:le.limit)??null,after:xe}},void 0);xe=(we=(me=Ee.data.data.transactions)==null?void 0:me.pageInfo)!=null&&we.hasNextPage?Ee.data.data.transactions.pageInfo.endCursor:null,ye.push(...Ee.data.data.transactions.edges.map(Ae=>Ae.node))}while(xe);return ye}async getProof(fe){const le=(await this.getAllProofs(fe,{limit:1})).at(0);if(!le)throw new Error(`Unable to locate proof with fields ${JSON.stringify(fe)}`);return le}}const tagMap={dataProtocol:"Data-Protocol",hashingAlgo:"Hashing-Algo",dataHash:"Data-Hash",uploadedFor:"Uploaded-For",prompt:"Prompt",promptHash:"Prompt-Hash",model:"Model"};let Transaction$1=class{constructor(fe){je(this,"irys");this.irys=fe}async getById(fe){const le=(await this.query({ids:[fe],limit:1})).at(0);if(!le)throw new Error(`Unable to locate tx with id ${fe}`);return le}async getByOwner(fe){const le=(await this.query({owners:[fe],limit:1})).at(0);if(!le)throw new Error(`Unable to locate tx with owner ${fe}`);return le}async getByTag(fe,le){const pe=(await this.query({tags:[{name:fe,values:[le]}],limit:1})).at(0);if(!pe)throw new Error(`Unable to locate tx with tag ${fe}:${le}`);return pe}async query(fe){var ye,xe;const le=`
    query ($ids: [String!], $after: String, $currency: String, $owners: [String!], $limit: Int, $order: SortOrder, $hasTags: Boolean, $tags: [TagFilter!]) {
      transactions(ids: $ids, after: $after, currency: $currency, owners: $owners, limit: $limit, order: $order, hasTags: $hasTags, tags: $tags) {
        edges {
          cursor
          node {
            address
            currency
            id
            receipt {
              deadlineHeight
              signature
              timestamp
              version
            }
            signature
            tags {
              name
              value
            }
            timestamp
          }
        }
        pageInfo {
          endCursor
          hasNextPage
        }
      }
    }
    `,pe=[];let ge=null;do{const me=await this.irys.api.post("/graphql",{query:le,variables:{...fe,after:ge??fe.after}},void 0);ge=(xe=(ye=me.data.data.transactions)==null?void 0:ye.pageInfo)!=null&&xe.hasNextPage?me.data.data.transactions.pageInfo.endCursor:null,pe.push(...me.data.data.transactions.edges.map(we=>we.node))}while(ge);return pe}},Signer$1=class{constructor(){je(this,"publicKey");je(this,"signatureType");je(this,"signatureLength");je(this,"ownerLength");je(this,"pem")}static verify(fe,le,pe,ge){throw new Error("You must implement verify method on child")}};var SignatureConfig;(function(he){he[he.ARWEAVE=1]="ARWEAVE",he[he.ED25519=2]="ED25519",he[he.ETHEREUM=3]="ETHEREUM",he[he.SOLANA=4]="SOLANA",he[he.INJECTEDAPTOS=5]="INJECTEDAPTOS",he[he.MULTIAPTOS=6]="MULTIAPTOS",he[he.TYPEDETHEREUM=7]="TYPEDETHEREUM"})(SignatureConfig||(SignatureConfig={}));const SIG_CONFIG={[SignatureConfig.ARWEAVE]:{sigLength:512,pubLength:512,sigName:"arweave"},[SignatureConfig.ED25519]:{sigLength:64,pubLength:32,sigName:"ed25519"},[SignatureConfig.ETHEREUM]:{sigLength:65,pubLength:65,sigName:"ethereum"},[SignatureConfig.SOLANA]:{sigLength:64,pubLength:32,sigName:"solana"},[SignatureConfig.INJECTEDAPTOS]:{sigLength:64,pubLength:32,sigName:"injectedAptos"},[SignatureConfig.MULTIAPTOS]:{sigLength:64*32+4,pubLength:32*32+1,sigName:"multiAptos"},[SignatureConfig.TYPEDETHEREUM]:{sigLength:65,pubLength:42,sigName:"typedEthereum"}};/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */const _0n$4=BigInt(0),_1n$5=BigInt(1),_2n$3=BigInt(2),_8n$1=BigInt(8),CU_O=BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),CURVE=Object.freeze({a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),P:BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),l:CU_O,n:CU_O,h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960")}),POW_2_256=BigInt("0x10000000000000000000000000000000000000000000000000000000000000000"),SQRT_M1=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");BigInt("6853475219497561581579357271197624642482790079785650197046958215289687604742");const SQRT_AD_MINUS_ONE=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),INVSQRT_A_MINUS_D=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),ONE_MINUS_D_SQ=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),D_MINUS_ONE_SQ=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");class ExtendedPoint{constructor(fe,le,pe,ge){this.x=fe,this.y=le,this.z=pe,this.t=ge}static fromAffine(fe){if(!(fe instanceof Point$2))throw new TypeError("ExtendedPoint#fromAffine: expected Point");return fe.equals(Point$2.ZERO)?ExtendedPoint.ZERO:new ExtendedPoint(fe.x,fe.y,_1n$5,mod$1(fe.x*fe.y))}static toAffineBatch(fe){const le=invertBatch(fe.map(pe=>pe.z));return fe.map((pe,ge)=>pe.toAffine(le[ge]))}static normalizeZ(fe){return this.toAffineBatch(fe).map(this.fromAffine)}equals(fe){assertExtPoint(fe);const{x:le,y:pe,z:ge}=this,{x:ye,y:xe,z:me}=fe,we=mod$1(le*me),Ee=mod$1(ye*ge),Ae=mod$1(pe*me),Se=mod$1(xe*ge);return we===Ee&&Ae===Se}negate(){return new ExtendedPoint(mod$1(-this.x),this.y,this.z,mod$1(-this.t))}double(){const{x:fe,y:le,z:pe}=this,{a:ge}=CURVE,ye=mod$1(fe*fe),xe=mod$1(le*le),me=mod$1(_2n$3*mod$1(pe*pe)),we=mod$1(ge*ye),Ee=fe+le,Ae=mod$1(mod$1(Ee*Ee)-ye-xe),Se=we+xe,Le=Se-me,He=we-xe,Me=mod$1(Ae*Le),Fe=mod$1(Se*He),Ue=mod$1(Ae*He),qe=mod$1(Le*Se);return new ExtendedPoint(Me,Fe,qe,Ue)}add(fe){assertExtPoint(fe);const{x:le,y:pe,z:ge,t:ye}=this,{x:xe,y:me,z:we,t:Ee}=fe,Ae=mod$1((pe-le)*(me+xe)),Se=mod$1((pe+le)*(me-xe)),Le=mod$1(Se-Ae);if(Le===_0n$4)return this.double();const He=mod$1(ge*_2n$3*Ee),Me=mod$1(ye*_2n$3*we),Fe=Me+He,Ue=Se+Ae,qe=Me-He,$e=mod$1(Fe*Le),Qe=mod$1(Ue*qe),ot=mod$1(Fe*qe),nt=mod$1(Le*Ue);return new ExtendedPoint($e,Qe,nt,ot)}subtract(fe){return this.add(fe.negate())}precomputeWindow(fe){const le=1+256/fe,pe=[];let ge=this,ye=ge;for(let xe=0;xe<le;xe++){ye=ge,pe.push(ye);for(let me=1;me<2**(fe-1);me++)ye=ye.add(ge),pe.push(ye);ge=ye.double()}return pe}wNAF(fe,le){!le&&this.equals(ExtendedPoint.BASE)&&(le=Point$2.BASE);const pe=le&&le._WINDOW_SIZE||1;if(256%pe)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let ge=le&&pointPrecomputes.get(le);ge||(ge=this.precomputeWindow(pe),le&&pe!==1&&(ge=ExtendedPoint.normalizeZ(ge),pointPrecomputes.set(le,ge)));let ye=ExtendedPoint.ZERO,xe=ExtendedPoint.BASE;const me=1+256/pe,we=2**(pe-1),Ee=BigInt(2**pe-1),Ae=2**pe,Se=BigInt(pe);for(let Le=0;Le<me;Le++){const He=Le*we;let Me=Number(fe&Ee);fe>>=Se,Me>we&&(Me-=Ae,fe+=_1n$5);const Fe=He,Ue=He+Math.abs(Me)-1,qe=Le%2!==0,$e=Me<0;Me===0?xe=xe.add(constTimeNegate(qe,ge[Fe])):ye=ye.add(constTimeNegate($e,ge[Ue]))}return ExtendedPoint.normalizeZ([ye,xe])[0]}multiply(fe,le){return this.wNAF(normalizeScalar(fe,CURVE.l),le)}multiplyUnsafe(fe){let le=normalizeScalar(fe,CURVE.l,!1);const pe=ExtendedPoint.BASE,ge=ExtendedPoint.ZERO;if(le===_0n$4)return ge;if(this.equals(ge)||le===_1n$5)return this;if(this.equals(pe))return this.wNAF(le);let ye=ge,xe=this;for(;le>_0n$4;)le&_1n$5&&(ye=ye.add(xe)),xe=xe.double(),le>>=_1n$5;return ye}isSmallOrder(){return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO)}isTorsionFree(){let fe=this.multiplyUnsafe(CURVE.l/_2n$3).double();return CURVE.l%_2n$3&&(fe=fe.add(this)),fe.equals(ExtendedPoint.ZERO)}toAffine(fe){const{x:le,y:pe,z:ge}=this,ye=this.equals(ExtendedPoint.ZERO);fe==null&&(fe=ye?_8n$1:invert$1(ge));const xe=mod$1(le*fe),me=mod$1(pe*fe),we=mod$1(ge*fe);if(ye)return Point$2.ZERO;if(we!==_1n$5)throw new Error("invZ was invalid");return new Point$2(xe,me)}fromRistrettoBytes(){legacyRist()}toRistrettoBytes(){legacyRist()}fromRistrettoHash(){legacyRist()}}ExtendedPoint.BASE=new ExtendedPoint(CURVE.Gx,CURVE.Gy,_1n$5,mod$1(CURVE.Gx*CURVE.Gy));ExtendedPoint.ZERO=new ExtendedPoint(_0n$4,_1n$5,_1n$5,_0n$4);function constTimeNegate(he,fe){const le=fe.negate();return he?le:fe}function assertExtPoint(he){if(!(he instanceof ExtendedPoint))throw new TypeError("ExtendedPoint expected")}function assertRstPoint(he){if(!(he instanceof RistrettoPoint))throw new TypeError("RistrettoPoint expected")}function legacyRist(){throw new Error("Legacy method: switch to RistrettoPoint")}class RistrettoPoint{constructor(fe){this.ep=fe}static calcElligatorRistrettoMap(fe){const{d:le}=CURVE,pe=mod$1(SQRT_M1*fe*fe),ge=mod$1((pe+_1n$5)*ONE_MINUS_D_SQ);let ye=BigInt(-1);const xe=mod$1((ye-le*pe)*mod$1(pe+le));let{isValid:me,value:we}=uvRatio(ge,xe),Ee=mod$1(we*fe);edIsNegative(Ee)||(Ee=mod$1(-Ee)),me||(we=Ee),me||(ye=pe);const Ae=mod$1(ye*(pe-_1n$5)*D_MINUS_ONE_SQ-xe),Se=we*we,Le=mod$1((we+we)*xe),He=mod$1(Ae*SQRT_AD_MINUS_ONE),Me=mod$1(_1n$5-Se),Fe=mod$1(_1n$5+Se);return new ExtendedPoint(mod$1(Le*Fe),mod$1(Me*He),mod$1(He*Fe),mod$1(Le*Me))}static hashToCurve(fe){fe=ensureBytes$1(fe,64);const le=bytes255ToNumberLE(fe.slice(0,32)),pe=this.calcElligatorRistrettoMap(le),ge=bytes255ToNumberLE(fe.slice(32,64)),ye=this.calcElligatorRistrettoMap(ge);return new RistrettoPoint(pe.add(ye))}static fromHex(fe){fe=ensureBytes$1(fe,32);const{a:le,d:pe}=CURVE,ge="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",ye=bytes255ToNumberLE(fe);if(!equalBytes$1(numberTo32BytesLE(ye),fe)||edIsNegative(ye))throw new Error(ge);const xe=mod$1(ye*ye),me=mod$1(_1n$5+le*xe),we=mod$1(_1n$5-le*xe),Ee=mod$1(me*me),Ae=mod$1(we*we),Se=mod$1(le*pe*Ee-Ae),{isValid:Le,value:He}=invertSqrt(mod$1(Se*Ae)),Me=mod$1(He*we),Fe=mod$1(He*Me*Se);let Ue=mod$1((ye+ye)*Me);edIsNegative(Ue)&&(Ue=mod$1(-Ue));const qe=mod$1(me*Fe),$e=mod$1(Ue*qe);if(!Le||edIsNegative($e)||qe===_0n$4)throw new Error(ge);return new RistrettoPoint(new ExtendedPoint(Ue,qe,_1n$5,$e))}toRawBytes(){let{x:fe,y:le,z:pe,t:ge}=this.ep;const ye=mod$1(mod$1(pe+le)*mod$1(pe-le)),xe=mod$1(fe*le),me=mod$1(xe*xe),{value:we}=invertSqrt(mod$1(ye*me)),Ee=mod$1(we*ye),Ae=mod$1(we*xe),Se=mod$1(Ee*Ae*ge);let Le;if(edIsNegative(ge*Se)){let Me=mod$1(le*SQRT_M1),Fe=mod$1(fe*SQRT_M1);fe=Me,le=Fe,Le=mod$1(Ee*INVSQRT_A_MINUS_D)}else Le=Ae;edIsNegative(fe*Se)&&(le=mod$1(-le));let He=mod$1((pe-le)*Le);return edIsNegative(He)&&(He=mod$1(-He)),numberTo32BytesLE(He)}toHex(){return bytesToHex$2(this.toRawBytes())}toString(){return this.toHex()}equals(fe){assertRstPoint(fe);const le=this.ep,pe=fe.ep,ge=mod$1(le.x*pe.y)===mod$1(le.y*pe.x),ye=mod$1(le.y*pe.y)===mod$1(le.x*pe.x);return ge||ye}add(fe){return assertRstPoint(fe),new RistrettoPoint(this.ep.add(fe.ep))}subtract(fe){return assertRstPoint(fe),new RistrettoPoint(this.ep.subtract(fe.ep))}multiply(fe){return new RistrettoPoint(this.ep.multiply(fe))}multiplyUnsafe(fe){return new RistrettoPoint(this.ep.multiplyUnsafe(fe))}}RistrettoPoint.BASE=new RistrettoPoint(ExtendedPoint.BASE);RistrettoPoint.ZERO=new RistrettoPoint(ExtendedPoint.ZERO);const pointPrecomputes=new WeakMap;let Point$2=class ri{constructor(fe,le){this.x=fe,this.y=le}_setWindowSize(fe){this._WINDOW_SIZE=fe,pointPrecomputes.delete(this)}static fromHex(fe,le=!0){const{d:pe,P:ge}=CURVE;fe=ensureBytes$1(fe,32);const ye=fe.slice();ye[31]=fe[31]&-129;const xe=bytesToNumberLE$1(ye);if(le&&xe>=ge)throw new Error("Expected 0 < hex < P");if(!le&&xe>=POW_2_256)throw new Error("Expected 0 < hex < 2**256");const me=mod$1(xe*xe),we=mod$1(me-_1n$5),Ee=mod$1(pe*me+_1n$5);let{isValid:Ae,value:Se}=uvRatio(we,Ee);if(!Ae)throw new Error("Point.fromHex: invalid y coordinate");const Le=(Se&_1n$5)===_1n$5;return(fe[31]&128)!==0!==Le&&(Se=mod$1(-Se)),new ri(Se,xe)}static async fromPrivateKey(fe){return(await getExtendedPublicKey(fe)).point}toRawBytes(){const fe=numberTo32BytesLE(this.y);return fe[31]|=this.x&_1n$5?128:0,fe}toHex(){return bytesToHex$2(this.toRawBytes())}toX25519(){const{y:fe}=this,le=mod$1((_1n$5+fe)*invert$1(_1n$5-fe));return numberTo32BytesLE(le)}isTorsionFree(){return ExtendedPoint.fromAffine(this).isTorsionFree()}equals(fe){return this.x===fe.x&&this.y===fe.y}negate(){return new ri(mod$1(-this.x),this.y)}add(fe){return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(fe)).toAffine()}subtract(fe){return this.add(fe.negate())}multiply(fe){return ExtendedPoint.fromAffine(this).multiply(fe,this).toAffine()}};Point$2.BASE=new Point$2(CURVE.Gx,CURVE.Gy);Point$2.ZERO=new Point$2(_0n$4,_1n$5);let Signature$2=class wi{constructor(fe,le){this.r=fe,this.s=le,this.assertValidity()}static fromHex(fe){const le=ensureBytes$1(fe,64),pe=Point$2.fromHex(le.slice(0,32),!1),ge=bytesToNumberLE$1(le.slice(32,64));return new wi(pe,ge)}assertValidity(){const{r:fe,s:le}=this;if(!(fe instanceof Point$2))throw new Error("Expected Point instance");return normalizeScalar(le,CURVE.l,!1),this}toRawBytes(){const fe=new Uint8Array(64);return fe.set(this.r.toRawBytes()),fe.set(numberTo32BytesLE(this.s),32),fe}toHex(){return bytesToHex$2(this.toRawBytes())}};function concatBytes$2(...he){if(!he.every(pe=>pe instanceof Uint8Array))throw new Error("Expected Uint8Array list");if(he.length===1)return he[0];const fe=he.reduce((pe,ge)=>pe+ge.length,0),le=new Uint8Array(fe);for(let pe=0,ge=0;pe<he.length;pe++){const ye=he[pe];le.set(ye,ge),ge+=ye.length}return le}const hexes$2=Array.from({length:256},(he,fe)=>fe.toString(16).padStart(2,"0"));function bytesToHex$2(he){if(!(he instanceof Uint8Array))throw new Error("Uint8Array expected");let fe="";for(let le=0;le<he.length;le++)fe+=hexes$2[he[le]];return fe}function hexToBytes$2(he){if(typeof he!="string")throw new TypeError("hexToBytes: expected string, got "+typeof he);if(he.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const fe=new Uint8Array(he.length/2);for(let le=0;le<fe.length;le++){const pe=le*2,ge=he.slice(pe,pe+2),ye=Number.parseInt(ge,16);if(Number.isNaN(ye)||ye<0)throw new Error("Invalid byte sequence");fe[le]=ye}return fe}function numberTo32BytesBE(he){const le=he.toString(16).padStart(64,"0");return hexToBytes$2(le)}function numberTo32BytesLE(he){return numberTo32BytesBE(he).reverse()}function edIsNegative(he){return(mod$1(he)&_1n$5)===_1n$5}function bytesToNumberLE$1(he){if(!(he instanceof Uint8Array))throw new Error("Expected Uint8Array");return BigInt("0x"+bytesToHex$2(Uint8Array.from(he).reverse()))}const MAX_255B=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function bytes255ToNumberLE(he){return mod$1(bytesToNumberLE$1(he)&MAX_255B)}function mod$1(he,fe=CURVE.P){const le=he%fe;return le>=_0n$4?le:fe+le}function invert$1(he,fe=CURVE.P){if(he===_0n$4||fe<=_0n$4)throw new Error(`invert: expected positive integers, got n=${he} mod=${fe}`);let le=mod$1(he,fe),pe=fe,ge=_0n$4,ye=_1n$5;for(;le!==_0n$4;){const me=pe/le,we=pe%le,Ee=ge-ye*me;pe=le,le=we,ge=ye,ye=Ee}if(pe!==_1n$5)throw new Error("invert: does not exist");return mod$1(ge,fe)}function invertBatch(he,fe=CURVE.P){const le=new Array(he.length),pe=he.reduce((ye,xe,me)=>xe===_0n$4?ye:(le[me]=ye,mod$1(ye*xe,fe)),_1n$5),ge=invert$1(pe,fe);return he.reduceRight((ye,xe,me)=>xe===_0n$4?ye:(le[me]=mod$1(ye*le[me],fe),mod$1(ye*xe,fe)),ge),le}function pow2$1(he,fe){const{P:le}=CURVE;let pe=he;for(;fe-- >_0n$4;)pe*=pe,pe%=le;return pe}function pow_2_252_3(he){const{P:fe}=CURVE,le=BigInt(5),pe=BigInt(10),ge=BigInt(20),ye=BigInt(40),xe=BigInt(80),we=he*he%fe*he%fe,Ee=pow2$1(we,_2n$3)*we%fe,Ae=pow2$1(Ee,_1n$5)*he%fe,Se=pow2$1(Ae,le)*Ae%fe,Le=pow2$1(Se,pe)*Se%fe,He=pow2$1(Le,ge)*Le%fe,Me=pow2$1(He,ye)*He%fe,Fe=pow2$1(Me,xe)*Me%fe,Ue=pow2$1(Fe,xe)*Me%fe,qe=pow2$1(Ue,pe)*Se%fe;return{pow_p_5_8:pow2$1(qe,_2n$3)*he%fe,b2:we}}function uvRatio(he,fe){const le=mod$1(fe*fe*fe),pe=mod$1(le*le*fe),ge=pow_2_252_3(he*pe).pow_p_5_8;let ye=mod$1(he*le*ge);const xe=mod$1(fe*ye*ye),me=ye,we=mod$1(ye*SQRT_M1),Ee=xe===he,Ae=xe===mod$1(-he),Se=xe===mod$1(-he*SQRT_M1);return Ee&&(ye=me),(Ae||Se)&&(ye=we),edIsNegative(ye)&&(ye=mod$1(-ye)),{isValid:Ee||Ae,value:ye}}function invertSqrt(he){return uvRatio(_1n$5,he)}function modlLE(he){return mod$1(bytesToNumberLE$1(he),CURVE.l)}function equalBytes$1(he,fe){if(he.length!==fe.length)return!1;for(let le=0;le<he.length;le++)if(he[le]!==fe[le])return!1;return!0}function ensureBytes$1(he,fe){const le=he instanceof Uint8Array?Uint8Array.from(he):hexToBytes$2(he);if(typeof fe=="number"&&le.length!==fe)throw new Error(`Expected ${fe} bytes`);return le}function normalizeScalar(he,fe,le=!0){if(!fe)throw new TypeError("Specify max value");if(typeof he=="number"&&Number.isSafeInteger(he)&&(he=BigInt(he)),typeof he=="bigint"&&he<fe){if(le){if(_0n$4<he)return he}else if(_0n$4<=he)return he}throw new TypeError("Expected valid scalar: 0 < scalar < max")}function adjustBytes25519(he){return he[0]&=248,he[31]&=127,he[31]|=64,he}function checkPrivateKey(he){if(he=typeof he=="bigint"||typeof he=="number"?numberTo32BytesBE(normalizeScalar(he,POW_2_256)):ensureBytes$1(he),he.length!==32)throw new Error("Expected 32 bytes");return he}function getKeyFromHash(he){const fe=adjustBytes25519(he.slice(0,32)),le=he.slice(32,64),pe=modlLE(fe),ge=Point$2.BASE.multiply(pe),ye=ge.toRawBytes();return{head:fe,prefix:le,scalar:pe,point:ge,pointBytes:ye}}let _sha512Sync;async function getExtendedPublicKey(he){return getKeyFromHash(await utils$2.sha512(checkPrivateKey(he)))}async function sign$2(he,fe){he=ensureBytes$1(he);const{prefix:le,scalar:pe,pointBytes:ge}=await getExtendedPublicKey(fe),ye=modlLE(await utils$2.sha512(le,he)),xe=Point$2.BASE.multiply(ye),me=modlLE(await utils$2.sha512(xe.toRawBytes(),ge,he)),we=mod$1(ye+me*pe,CURVE.l);return new Signature$2(xe,we).toRawBytes()}function prepareVerification(he,fe,le){fe=ensureBytes$1(fe),le instanceof Point$2||(le=Point$2.fromHex(le,!1));const{r:pe,s:ge}=he instanceof Signature$2?he.assertValidity():Signature$2.fromHex(he),ye=ExtendedPoint.BASE.multiplyUnsafe(ge);return{r:pe,s:ge,SB:ye,pub:le,msg:fe}}function finishVerification(he,fe,le,pe){const ge=modlLE(pe),ye=ExtendedPoint.fromAffine(he).multiplyUnsafe(ge);return ExtendedPoint.fromAffine(fe).add(ye).subtract(le).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO)}async function verify(he,fe,le){const{r:pe,SB:ge,msg:ye,pub:xe}=prepareVerification(he,fe,le),me=await utils$2.sha512(pe.toRawBytes(),xe.toRawBytes(),ye);return finishVerification(xe,pe,ge,me)}Point$2.BASE._setWindowSize(8);const crypto$3={node:nodeCrypto,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0},utils$2={bytesToHex:bytesToHex$2,hexToBytes:hexToBytes$2,concatBytes:concatBytes$2,getExtendedPublicKey,mod:mod$1,invert:invert$1,TORSION_SUBGROUP:["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"],hashToPrivateScalar:he=>{if(he=ensureBytes$1(he),he.length<40||he.length>1024)throw new Error("Expected 40-1024 bytes of private key as per FIPS 186");return mod$1(bytesToNumberLE$1(he),CURVE.l-_1n$5)+_1n$5},randomBytes:(he=32)=>{if(crypto$3.web)return crypto$3.web.getRandomValues(new Uint8Array(he));if(crypto$3.node){const{randomBytes:fe}=crypto$3.node;return new Uint8Array(fe(he).buffer)}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>utils$2.randomBytes(32),sha512:async(...he)=>{const fe=concatBytes$2(...he);if(crypto$3.web){const le=await crypto$3.web.subtle.digest("SHA-512",fe.buffer);return new Uint8Array(le)}else{if(crypto$3.node)return Uint8Array.from(crypto$3.node.createHash("sha512").update(fe).digest());throw new Error("The environment doesn't have sha512 function")}},precompute(he=8,fe=Point$2.BASE){const le=fe.equals(Point$2.BASE)?fe:new Point$2(fe.x,fe.y);return le._setWindowSize(he),le.multiply(_2n$3),le},sha512Sync:void 0};Object.defineProperties(utils$2,{sha512Sync:{configurable:!1,get(){return _sha512Sync},set(he){_sha512Sync||(_sha512Sync=he)}}});class Curve25519{constructor(fe,le){je(this,"_key");je(this,"pk");je(this,"ownerLength",SIG_CONFIG[2].pubLength);je(this,"signatureLength",SIG_CONFIG[2].sigLength);je(this,"_publicKey");je(this,"signatureType",2);this._key=fe,this.pk=le}get publicKey(){return this._publicKey}get key(){throw new Error("You must implement `key`")}sign(fe){return sign$2(Buffer$4.from(fe),Buffer$4.from(this.key))}static async verify(fe,le,pe){let ge=fe;return typeof fe=="string"&&(ge=base64url.toBuffer(fe)),verify(Buffer$4.from(pe),Buffer$4.from(le),Buffer$4.from(ge))}}var toByteArray_1=toByteArray,fromByteArray_1=fromByteArray,lookup=[],revLookup=[],Arr=typeof Uint8Array<"u"?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var i$g=0,len=code.length;i$g<len;++i$g)lookup[i$g]=code[i$g],revLookup[code.charCodeAt(i$g)]=i$g;revLookup[45]=62;revLookup[95]=63;function getLens(he){var fe=he.length;if(fe%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var le=he.indexOf("=");le===-1&&(le=fe);var pe=le===fe?0:4-le%4;return[le,pe]}function _byteLength(he,fe,le){return(fe+le)*3/4-le}function toByteArray(he){var fe,le=getLens(he),pe=le[0],ge=le[1],ye=new Arr(_byteLength(he,pe,ge)),xe=0,me=ge>0?pe-4:pe,we;for(we=0;we<me;we+=4)fe=revLookup[he.charCodeAt(we)]<<18|revLookup[he.charCodeAt(we+1)]<<12|revLookup[he.charCodeAt(we+2)]<<6|revLookup[he.charCodeAt(we+3)],ye[xe++]=fe>>16&255,ye[xe++]=fe>>8&255,ye[xe++]=fe&255;return ge===2&&(fe=revLookup[he.charCodeAt(we)]<<2|revLookup[he.charCodeAt(we+1)]>>4,ye[xe++]=fe&255),ge===1&&(fe=revLookup[he.charCodeAt(we)]<<10|revLookup[he.charCodeAt(we+1)]<<4|revLookup[he.charCodeAt(we+2)]>>2,ye[xe++]=fe>>8&255,ye[xe++]=fe&255),ye}function tripletToBase64(he){return lookup[he>>18&63]+lookup[he>>12&63]+lookup[he>>6&63]+lookup[he&63]}function encodeChunk(he,fe,le){for(var pe,ge=[],ye=fe;ye<le;ye+=3)pe=(he[ye]<<16&16711680)+(he[ye+1]<<8&65280)+(he[ye+2]&255),ge.push(tripletToBase64(pe));return ge.join("")}function fromByteArray(he){for(var fe,le=he.length,pe=le%3,ge=[],ye=16383,xe=0,me=le-pe;xe<me;xe+=ye)ge.push(encodeChunk(he,xe,xe+ye>me?me:xe+ye));return pe===1?(fe=he[le-1],ge.push(lookup[fe>>2]+lookup[fe<<4&63]+"==")):pe===2&&(fe=(he[le-2]<<8)+he[le-1],ge.push(lookup[fe>>10]+lookup[fe>>4&63]+lookup[fe<<2&63]+"=")),ge.join("")}function concatBuffers(he){let fe=0;for(const ge of he)fe+=ge.byteLength;const le=new Uint8Array(fe);let pe=0;le.set(new Uint8Array(he[0]),pe),pe+=he[0].byteLength;for(let ge=1;ge<he.length;ge++)le.set(new Uint8Array(he[ge]),pe),pe+=he[ge].byteLength;return le}function b64UrlToString(he){const fe=b64UrlToBuffer(he);return bufferToString(fe)}function bufferToString(he){return new TextDecoder("utf-8",{fatal:!0}).decode(he)}function stringToBuffer(he){return new TextEncoder().encode(he)}function stringToB64Url(he){return bufferTob64Url(stringToBuffer(he))}function b64UrlToBuffer(he){return new Uint8Array(toByteArray_1(b64UrlDecode(he)))}function bufferTob64(he){return fromByteArray_1(new Uint8Array(he))}function bufferTob64Url(he){return b64UrlEncode(bufferTob64(he))}function b64UrlEncode(he){return he.replace(/\+/g,"-").replace(/\//g,"_").replace(/\=/g,"")}function b64UrlDecode(he){he=he.replace(/\-/g,"+").replace(/\_/g,"/");let fe;return he.length%4==0?fe=0:fe=4-he.length%4,he.concat("=".repeat(fe))}function winstonToAr(he){return new BigNumber$1(he).shiftedBy(-12)}function arToWinston(he){return new BigNumber$1(he).shiftedBy(12)}const ArweaveUtils=Object.freeze(Object.defineProperty({__proto__:null,arToWinston,b64UrlDecode,b64UrlEncode,b64UrlToBuffer,b64UrlToString,bufferToString,bufferTob64,bufferTob64Url,concatBuffers,stringToB64Url,stringToBuffer,winstonToAr},Symbol.toStringTag,{value:"Module"}));class WebCryptoDriver{constructor(){je(this,"keyLength",4096);je(this,"publicExponent",65537);je(this,"hashAlgorithm","sha256");je(this,"driver");this.driver=crypto==null?void 0:crypto.subtle}async generateJWK(){const fe=await this.driver.generateKey({name:"RSA-PSS",modulusLength:4096,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign"]),le=await this.driver.exportKey("jwk",fe.privateKey);return{kty:le.kty,e:le.e,n:le.n,d:le.d,p:le.p,q:le.q,dp:le.dp,dq:le.dq,qi:le.qi}}async sign(fe,le,{saltLength:pe}={saltLength:32}){const ge=await this.driver.sign({name:"RSA-PSS",saltLength:pe},await this.jwkToCryptoKey(fe),le);return new Uint8Array(ge)}async hash(fe,le="SHA-256"){const pe=await this.driver.digest(le,fe);return new Uint8Array(pe)}async verify(fe,le,pe){const ge={kty:"RSA",e:"AQAB",n:fe},ye=await this.jwkToPublicCryptoKey(ge),xe=await this.driver.digest("SHA-256",le),me=await this.driver.verify({name:"RSA-PSS",saltLength:0},ye,pe,le),we=await this.driver.verify({name:"RSA-PSS",saltLength:32},ye,pe,le),Ee=await this.driver.verify({name:"RSA-PSS",saltLength:Math.ceil((ye.algorithm.modulusLength-1)/8)-xe.byteLength-2},ye,pe,le);return me||we||Ee}async jwkToCryptoKey(fe){return this.driver.importKey("jwk",fe,{name:"RSA-PSS",hash:{name:"SHA-256"}},!1,["sign"])}async jwkToPublicCryptoKey(fe){return this.driver.importKey("jwk",fe,{name:"RSA-PSS",hash:{name:"SHA-256"}},!1,["verify"])}async encrypt(fe,le,pe){const ge=await this.driver.importKey("raw",typeof le=="string"?stringToBuffer(le):le,{name:"PBKDF2",length:32},!1,["deriveKey"]),ye=await this.driver.deriveKey({name:"PBKDF2",salt:stringToBuffer(pe||"salt"),iterations:1e5,hash:"SHA-256"},ge,{name:"AES-CBC",length:256},!1,["encrypt","decrypt"]),xe=new Uint8Array(16);crypto.getRandomValues(xe);const me=await this.driver.encrypt({name:"AES-CBC",iv:xe},ye,fe);return concatBuffers([xe,me])}async decrypt(fe,le,pe){const ge=await this.driver.importKey("raw",typeof le=="string"?stringToBuffer(le):le,{name:"PBKDF2",length:32},!1,["deriveKey"]),ye=await this.driver.deriveKey({name:"PBKDF2",salt:stringToBuffer(pe||"salt"),iterations:1e5,hash:"SHA-256"},ge,{name:"AES-CBC",length:256},!1,["encrypt","decrypt"]),xe=fe.slice(0,16),me=await this.driver.decrypt({name:"AES-CBC",iv:xe},ye,fe.slice(16));return concatBuffers([me])}}async function deepHash(he){if(typeof he[Symbol.asyncIterator]=="function"){const ge=he,ye=cryptoBrowserifyExports.createHash("sha384");let xe=0;for await(const Ee of ge)xe+=Ee.byteLength,ye.update(Ee);const me=concatBuffers([stringToBuffer("blob"),stringToBuffer(xe.toString())]),we=concatBuffers([await getCryptoDriver().hash(me,"SHA-384"),ye.digest()]);return await getCryptoDriver().hash(we,"SHA-384")}else if(Array.isArray(he)){const ge=concatBuffers([stringToBuffer("list"),stringToBuffer(he.length.toString())]);return await deepHashChunks(he,await getCryptoDriver().hash(ge,"SHA-384"))}const fe=he,le=concatBuffers([stringToBuffer("blob"),stringToBuffer(fe.byteLength.toString())]),pe=concatBuffers([await getCryptoDriver().hash(le,"SHA-384"),await getCryptoDriver().hash(fe,"SHA-384")]);return await getCryptoDriver().hash(pe,"SHA-384")}async function deepHashChunks(he,fe){if(he.length<1)return fe;const le=concatBuffers([fe,await deepHash(he[0])]),pe=await getCryptoDriver().hash(le,"SHA-384");return await deepHashChunks(he.slice(1),pe)}class ArweaveError extends Error{constructor(le,pe={}){var fe=(...Do)=>(super(...Do),je(this,"type"),je(this,"response"),this);pe.message?fe(pe.message):fe(),this.type=le,this.response=pe.response}getType(){return this.type}}function getError(he){let fe=he.data;if(typeof he.data=="string")try{fe=JSON.parse(he.data)}catch{}if(he.data instanceof ArrayBuffer||he.data instanceof Uint8Array)try{fe=JSON.parse(fe.toString())}catch{}return fe?fe.error||fe:he.statusText||"unknown"}class Blocks{constructor(fe,le){je(this,"api");je(this,"network");this.api=fe,this.network=le}async getByHash(fe){const le=await this.api.get(`block/hash/${fe}`);if(le.status===200)return le.data;throw le.status===404?new ArweaveError("BLOCK_NOT_FOUND"):new Error(`Error while loading block data: ${le}`)}async getByHeight(fe){const le=await this.api.get(`block/height/${fe}`);if(le.status===200)return le.data;throw le.status===404?new ArweaveError("BLOCK_NOT_FOUND"):new Error(`Error while loading block data: ${le}`)}async getCurrent(){const{current:fe}=await this.network.getInfo();return await this.getByHash(fe)}}const MAX_CHUNK_SIZE=256*1024,MIN_CHUNK_SIZE=32*1024,NOTE_SIZE=32,HASH_SIZE=32;class Merkle{constructor(fe){je(this,"crypto");this.crypto=fe.deps.crypto}async chunkData(fe){const le=[];let pe=fe,ge=0;for(;pe.byteLength>=MAX_CHUNK_SIZE;){let ye=MAX_CHUNK_SIZE;const xe=pe.byteLength-MAX_CHUNK_SIZE;xe>0&&xe<MIN_CHUNK_SIZE&&(ye=Math.ceil(pe.byteLength/2));const me=pe.slice(0,ye),we=await this.crypto.hash(me);ge+=me.byteLength,le.push({dataHash:we,minByteRange:ge-me.byteLength,maxByteRange:ge}),pe=pe.slice(ye)}return le.push({dataHash:await this.crypto.hash(pe),minByteRange:ge,maxByteRange:ge+pe.byteLength}),le}async generateLeaves(fe){return Promise.all(fe.map(async({dataHash:le,minByteRange:pe,maxByteRange:ge})=>({type:"leaf",id:await this.hash(await Promise.all([this.hash(le),this.hash(intToBuffer$1(ge))])),dataHash:le,minByteRange:pe,maxByteRange:ge})))}async computeRootHash(fe){return(await this.generateTree(fe)).id}async generateTree(fe){return await this.buildLayers(await this.generateLeaves(await this.chunkData(fe)))}async generateTransactionChunks(fe){const le=await this.chunkData(fe),pe=await this.generateLeaves(le),ge=await this.buildLayers(pe),ye=await this.generateProofs(ge),xe=le.slice(-1)[0];return xe.maxByteRange-xe.minByteRange===0&&(le.splice(le.length-1,1),ye.splice(ye.length-1,1)),{data_root:ge.id,chunks:le,proofs:ye}}async buildLayers(fe,le=0){if(fe.length<2)return fe[0];const pe=[];for(let ge=0;ge<fe.length;ge+=2)pe.push(await this.hashBranch(fe[ge],fe[ge+1]));return this.buildLayers(pe,le+1)}generateProofs(fe){const le=this.resolveBranchProofs(fe);return Array.isArray(le)?arrayFlatten(le):[le]}resolveBranchProofs(fe,le=new Uint8Array,pe=0){if(fe.type=="leaf")return{offset:fe.maxByteRange-1,proof:concatBuffers([le,fe.dataHash,intToBuffer$1(fe.maxByteRange)])};if(fe.type=="branch"){const ge=concatBuffers([le,fe.leftChild.id,fe.rightChild.id,intToBuffer$1(fe.byteRange)]);return[this.resolveBranchProofs(fe.leftChild,ge,pe+1),this.resolveBranchProofs(fe.rightChild,ge,pe+1)]}throw new Error("Unexpected node type")}async validatePath(fe,le,pe,ge,ye){if(ge<=0)return!1;if(le>=ge)return this.validatePath(fe,0,ge-1,ge,ye);if(le<0)return this.validatePath(fe,0,0,ge,ye);if(ye.length==HASH_SIZE+NOTE_SIZE){const Le=ye.slice(0,HASH_SIZE),He=ye.slice(Le.length,Le.length+NOTE_SIZE),Me=await this.hash([await this.hash(Le),await this.hash(He)]);return arrayCompare(fe,Me)?{offset:ge-1,leftBound:pe,rightBound:ge,chunkSize:ge-pe}:!1}const xe=ye.slice(0,HASH_SIZE),me=ye.slice(xe.length,xe.length+HASH_SIZE),we=ye.slice(xe.length+me.length,xe.length+me.length+NOTE_SIZE),Ee=bufferToInt(we),Ae=ye.slice(xe.length+me.length+we.length),Se=await this.hash([await this.hash(xe),await this.hash(me),await this.hash(we)]);return arrayCompare(fe,Se)?le<Ee?await this.validatePath(xe,le,pe,Math.min(ge,Ee),Ae):await this.validatePath(me,le,Math.max(pe,Ee),ge,Ae):!1}async hashBranch(fe,le){return le?{type:"branch",id:await this.hash([await this.hash(fe.id),await this.hash(le.id),await this.hash(intToBuffer$1(fe.maxByteRange))]),byteRange:fe.maxByteRange,maxByteRange:le.maxByteRange,leftChild:fe,rightChild:le}:fe}async hash(fe){return Array.isArray(fe)&&(fe=Arweave$2.utils.concatBuffers(fe)),new Uint8Array(await this.crypto.hash(fe))}async debug(fe,le=""){if(fe.byteLength<1)return le;const pe=fe.slice(0,HASH_SIZE),ge=fe.slice(pe.length,pe.length+HASH_SIZE),ye=fe.slice(pe.length+ge.length,pe.length+ge.length+NOTE_SIZE),xe=bufferToInt(ye),me=fe.slice(pe.length+ge.length+ye.length),we=await this.hash([await this.hash(pe),await this.hash(ge),await this.hash(ye)]),Ee=`${le}
${JSON.stringify(Buffer$4.from(pe))},${JSON.stringify(Buffer$4.from(ge))},${xe} => ${JSON.stringify(we)}`;return this.debug(me,Ee)}}function arrayFlatten(he){const fe=[];return he.forEach(le=>{Array.isArray(le)?fe.push(...arrayFlatten(le)):fe.push(le)}),fe}function intToBuffer$1(he){const fe=new Uint8Array(NOTE_SIZE);for(let le=fe.length-1;le>=0;le--){const pe=he%256;fe[le]=pe,he=(he-pe)/256}return fe}function bufferToInt(he){let fe=0;for(let le=0;le<he.length;le++)fe*=256,fe+=he[le];return fe}const arrayCompare=(he,fe)=>he.every((le,pe)=>fe[pe]===le);class Chunks{constructor(fe){je(this,"api");this.api=fe}async getTransactionMetadata(fe){const le=await this.api.get(`tx/${fe}/offset`);if(le.status===200)return le.data;throw new Error(`Unable to get transaction offset: ${getError(le)}`)}async getChunk(fe){const le=await this.api.get(`chunk/${fe}`);if(le.status===200)return le.data;throw new Error(`Unable to get chunk: ${getError(le)}`)}async getChunkData(fe){const le=await this.getChunk(fe);return b64UrlToBuffer(le.chunk)}firstChunkOffset(fe){return parseInt(fe.offset)-parseInt(fe.size)+1}async downloadChunkedData(fe,le){const pe=await this.getTransactionMetadata(fe),ge=parseInt(pe.size),ye=new Uint8Array(ge);let xe=0;for await(const me of this.concurrentChunkDownloader(fe,le))ye.set(me,xe),xe+=me.length;return ye}async*concurrentChunkDownloader(fe,le){const pe={concurrency:10,...le},ge=await this.getTransactionMetadata(fe),ye=new BigNumber$1(ge.offset),xe=new BigNumber$1(ge.size),me=ye.minus(xe).plus(1);let we=0;const Ee=Math.ceil(xe.dividedBy(MAX_CHUNK_SIZE).toNumber()),Ae=Fe=>this.getChunkData(Fe.toString()).then(Ue=>(we+=Ue.length,Ue)),Se=[],Le=Ee-2,He=Math.min(Le,pe.concurrency);let Me=0;for(let Fe=0;Fe<He;Fe++)Se.push(Ae(me.plus(MAX_CHUNK_SIZE*Me++)));for(;Me<Le;)Se.push(Ae(me.plus(MAX_CHUNK_SIZE*Me++))),yield Se.shift();for(;Se.length>0;)yield Se.shift();if(yield Ae(me.plus(MAX_CHUNK_SIZE*Me++)),xe.isGreaterThan(we)&&(yield Ae(me.plus(MAX_CHUNK_SIZE*Me++))),!xe.isEqualTo(we))throw new Error(`got ${we}B, expected ${xe.toString()}B`)}}function augmentCrypto(he,fe){const le=he;return le.deepHash=new fe.deepHash({deps:{utils:{stringToBuffer,concatBuffers},crypto:he}}),le}class DeepHash{constructor({deps:fe}){je(this,"crypto");je(this,"utils");this.crypto=fe.crypto,this.utils=fe.utils}async deepHash(fe){if(Array.isArray(fe)){const ge=this.utils.concatBuffers([this.utils.stringToBuffer("list"),this.utils.stringToBuffer(fe.length.toString())]);return await this.deepHashChunks(fe,await this.crypto.hash(ge,"SHA-384"))}const le=this.utils.concatBuffers([this.utils.stringToBuffer("blob"),this.utils.stringToBuffer(fe.byteLength.toString())]),pe=this.utils.concatBuffers([await this.crypto.hash(le,"SHA-384"),await this.crypto.hash(fe,"SHA-384")]);return await this.crypto.hash(pe,"SHA-384")}async deepHashChunks(fe,le){if(fe.length<1)return le;const pe=this.utils.concatBuffers([le,await this.deepHash(fe[0])]),ge=await this.crypto.hash(pe,"SHA-384");return await this.deepHashChunks(fe.slice(1),ge)}}class Api{constructor(fe){je(this,"_instance");je(this,"cookieMap",new Map);je(this,"config");fe&&this.applyConfig(fe)}applyConfig(fe){this.config=this.mergeDefaults(fe),this._instance=void 0}getConfig(){return this.config}async requestInterceptor(fe){const le=this.cookieMap.get(new URL(fe.baseURL??"").host);return le&&(fe.headers.cookie=le),fe}async responseInterceptor(fe){var pe;const le=(pe=fe.headers)==null?void 0:pe["set-cookie"];return le&&this.cookieMap.set(fe.request.host,le),fe}mergeDefaults(fe){return fe.headers??(fe.headers={}),fe.network&&!Object.keys(fe.headers).includes("x-network")&&(fe.headers["x-network"]=fe.network),{url:fe.url,timeout:fe.timeout??2e4,logging:fe.logging??!1,logger:fe.logger??console.log,headers:{...fe.headers,"x-irys-arweave-version":Arweave$2.VERSION},withCredentials:fe.withCredentials??!1,retry:{retries:3,maxTimeout:5e3}}}async get(fe,le){var pe;try{return await this.request(fe,{...le,method:"GET"})}catch(ge){if((pe=ge.response)!=null&&pe.status)return ge.response;throw ge}}async post(fe,le,pe){var ge;try{return await this.request(fe,{data:le,...pe,method:"POST"})}catch(ye){if((ge=ye.response)!=null&&ge.status)return ye.response;throw ye}}get instance(){if(this._instance)return this._instance;const fe=axios$1.create({baseURL:this.config.url.toString(),timeout:this.config.timeout,maxContentLength:1024*1024*512,headers:this.config.headers,withCredentials:this.config.withCredentials});return this.config.withCredentials&&(fe.interceptors.request.use(this.requestInterceptor.bind(this)),fe.interceptors.response.use(this.responseInterceptor.bind(this))),this.config.logging&&(fe.interceptors.request.use(le=>(this.config.logger(`Requesting: ${le.baseURL}/${le.url}`),le)),fe.interceptors.response.use(le=>(this.config.logger(`Response: ${le.config.url} - ${le.status}`),le))),this._instance=fe}async request(fe,le){const pe=this.instance,ge=(le==null?void 0:le.url)??new URL(fe,this.config.url).toString();return retry$1(ye=>pe({...le,url:ge}),{...this.config.retry,...le==null?void 0:le.retry})}}const isApiConfig=he=>typeof he!="string"&&"url"in he,defaultFallbackConfig={maxAttempts:15,randomlySelect:!0};class FallbackApi{constructor({gateways:fe,miners:le,opts:pe}){je(this,"minerInstances",[]);je(this,"globalConfig");je(this,"gatewayInstances",[]);this.globalConfig=(pe==null?void 0:pe.globalConfig)??{},le&&this.addMiners(le),fe&&this.addGateways(fe)}async addPeersFrom(fe,le){const pe=(await this.get("",{url:new URL("/peers",fe).toString()})).data;this.addMiners(pe.slice(0,le==null?void 0:le.limit).map(ge=>`http://${ge}`))}addMiners(fe){fe.forEach(le=>this.minerInstances.push(new Api(isApiConfig(le)?le:{url:new URL(le),...this.globalConfig})))}addGateways(fe){fe.forEach(le=>this.gatewayInstances.push(new Api(isApiConfig(le)?le:{url:new URL(le),...this.globalConfig})))}async get(fe,le){return this.request(fe,{...le,method:"GET"})}async post(fe,le,pe){return this.request(fe,{data:le,...pe,method:"POST"})}async request(fe,le){const pe={...defaultFallbackConfig,...le==null?void 0:le.fallback};let ge=0;const ye=le!=null&&le.gatewayOnly?this.gatewayInstances:this.gatewayInstances.concat(this.minerInstances),xe=Math.min(Math.max(pe==null?void 0:pe.maxAttempts,1),ye.length),me=pe==null?void 0:pe.onFallback;if(ye.length===0)throw new Error("Unable to run request due to 0 configured gateways/miners.");for(;ge++<xe;){const we=ye.at(pe!=null&&pe.randomlySelect?Math.floor(Math.random()*ye.length):ge-1);if(we)try{return await we.request(fe,{...le})}catch(Ee){if(me==null||me(Ee,we),ge>=xe)throw Ee}}throw new Error("unreachable")}}class BaseObject{get(fe,le){if(!Object.getOwnPropertyNames(this).includes(fe))throw new Error(`Field "${fe}" is not a property of the Arweave Transaction class.`);if(this[fe]instanceof Uint8Array)return le&&le.decode&&le.string?bufferToString(this[fe]):le&&le.decode&&!le.string?this[fe]:bufferTob64Url(this[fe]);if(this[fe]instanceof Array){if((le==null?void 0:le.decode)!==void 0||(le==null?void 0:le.string)!==void 0)throw fe==="tags"&&console.warn(`Did you mean to use 'transaction["tags"]' ?`),new Error("Cannot decode or stringify an array.");return this[fe]}return le&&le.decode==!0?le&&le.string?b64UrlToString(this[fe]):b64UrlToBuffer(this[fe]):this[fe]}}class ArweaveTag extends BaseObject{constructor(le,pe){super();je(this,"name");je(this,"value");this.name=le,this.value=pe}}class Transaction extends BaseObject{constructor({attributes:le,deps:pe}){super();je(this,"format",2);je(this,"id","");je(this,"last_tx","");je(this,"owner","");je(this,"tags",[]);je(this,"target","");je(this,"quantity","0");je(this,"data_size","0");je(this,"data",new Uint8Array);je(this,"data_root","");je(this,"reward","0");je(this,"signature","");je(this,"merkle");je(this,"deepHash");je(this,"chunks");this.merkle=pe.merkle,this.deepHash=pe.deepHash,Object.assign(this,le),typeof this.data=="string"&&(this.data=b64UrlToBuffer(this.data)),le.tags&&(this.tags=le.tags)}addTag(le,pe){this.tags.push({name:stringToB64Url(le),value:stringToB64Url(pe)})}toJSON(){return{format:this.format,id:this.id,last_tx:this.last_tx,owner:this.owner,tags:this.tags,target:this.target,quantity:this.quantity,data:bufferTob64Url(this.data),data_size:this.data_size,data_root:this.data_root,data_tree:this.data_tree,reward:this.reward,signature:this.signature}}setOwner(le){this.owner=le}setSignature({id:le,owner:pe,reward:ge,tags:ye,signature:xe}){this.id=le,this.owner=pe,ge&&(this.reward=ge),ye&&(this.tags=ye),this.signature=xe}async prepareChunks(le){!this.chunks&&le.byteLength>0&&(this.chunks=await this.merkle.generateTransactionChunks(le),this.data_root=bufferTob64Url(this.chunks.data_root)),!this.chunks&&le.byteLength===0&&(this.chunks={chunks:[],data_root:new Uint8Array,proofs:[]},this.data_root="")}getChunk(le,pe){if(!this.chunks)throw new Error("Chunks have not been prepared");const ge=this.chunks.proofs[le],ye=this.chunks.chunks[le];return{data_root:this.data_root,data_size:this.data_size,data_path:bufferTob64Url(ge.proof),offset:ge.offset.toString(),chunk:bufferTob64Url(pe.slice(ye.minByteRange,ye.maxByteRange))}}async getSignatureData(){switch(this.format){case 1:const le=this.tags.reduce((ge,ye)=>concatBuffers([ge,b64UrlToBuffer(ye.name),b64UrlToBuffer(ye.value)]),new Uint8Array);return concatBuffers([this.get("owner",{decode:!0,string:!1}),this.get("target",{decode:!0,string:!1}),this.get("data",{decode:!0,string:!1}),stringToBuffer(this.quantity),stringToBuffer(this.reward),this.get("last_tx",{decode:!0,string:!1}),le]);case 2:this.data_root||await this.prepareChunks(this.data);const pe=this.tags.map(ge=>[b64UrlToBuffer(ge.name),b64UrlToBuffer(ge.value)]);return await this.deepHash.deepHash([stringToBuffer(this.format.toString()),this.get("owner",{decode:!0,string:!1}),this.get("target",{decode:!0,string:!1}),stringToBuffer(this.quantity),stringToBuffer(this.reward),this.get("last_tx",{decode:!0,string:!1}),pe,stringToBuffer(this.data_size),this.get("data_root",{decode:!0,string:!1})]);default:throw new Error(`Unexpected transaction format: ${this.format}`)}}}class Network{constructor(fe){je(this,"api");this.api=fe}getInfo(){return this.api.get("info").then(fe=>fe.data)}getPeers(){return this.api.get("peers").then(fe=>fe.data)}}const MAX_CHUNKS_IN_BODY=1,FATAL_CHUNK_UPLOAD_ERRORS=["invalid_json","chunk_too_big","data_path_too_big","offset_too_big","data_size_too_big","chunk_proof_ratio_not_attractive","invalid_proof"],ERROR_DELAY=1e3*40;class TransactionUploader{constructor({deps:fe,transaction:le}){je(this,"chunkIndex",0);je(this,"txPosted",!1);je(this,"transaction");je(this,"lastRequestTimeEnd",0);je(this,"totalErrors",0);je(this,"data");je(this,"lastResponseStatus",0);je(this,"lastResponseError","");je(this,"crypto");je(this,"api");je(this,"merkle");je(this,"deepHash");if(!le.id)throw new Error("Transaction is not signed");if(!le.chunks)throw new Error("Transaction chunks not prepared");this.api=fe.api,this.crypto=fe.crypto,this.merkle=fe.merkle,this.deepHash=fe.deepHash,this.data=le.data,this.transaction=new Transaction({attributes:Object.assign({},le,{data:new Uint8Array(0)}),deps:{merkle:fe.merkle,deepHash:fe.deepHash}})}get isComplete(){return this.txPosted&&this.chunkIndex===this.transaction.chunks.chunks.length}get totalChunks(){return this.transaction.chunks.chunks.length}get uploadedChunks(){return this.chunkIndex}get pctComplete(){return Math.trunc(this.uploadedChunks/this.totalChunks*100)}async uploadChunk(fe){if(this.isComplete)throw new Error("Upload is already complete");if(this.lastResponseError!==""?this.totalErrors++:this.totalErrors=0,this.totalErrors===100)throw new Error(`Unable to complete upload: ${this.lastResponseStatus}: ${this.lastResponseError}`);let le=this.lastResponseError===""?0:Math.max(this.lastRequestTimeEnd+ERROR_DELAY-Date.now(),ERROR_DELAY);if(le>0&&(le=le-le*Math.random()*.3,await new Promise(xe=>setTimeout(xe,le))),this.lastResponseError="",!this.txPosted){await this.postTransaction();return}fe&&(this.chunkIndex=fe);const pe=this.transaction.getChunk(fe||this.chunkIndex,this.data);if(!await this.merkle.validatePath(this.transaction.chunks.data_root,parseInt(pe.offset),0,parseInt(pe.data_size),b64UrlToBuffer(pe.data_path)))throw new Error(`Unable to validate chunk ${this.chunkIndex}`);const ye=await this.api.post("chunk",this.transaction.getChunk(this.chunkIndex,this.data)).catch(xe=>(console.error(xe.message),{status:-1,data:{error:xe.message}}));if(this.lastRequestTimeEnd=Date.now(),this.lastResponseStatus=ye.status,this.lastResponseStatus==200)this.chunkIndex++;else if(this.lastResponseError=getError(ye),FATAL_CHUNK_UPLOAD_ERRORS.includes(this.lastResponseError))throw new Error(`Fatal error uploading chunk ${this.chunkIndex}: ${this.lastResponseError}`)}static async fromSerialized({serialized:fe,data:le,deps:pe}){if(!fe||typeof fe.chunkIndex!="number"||typeof fe.transaction!="object")throw new Error("Serialized object does not match expected format.");const ge=new Transaction(fe.transaction);ge.chunks||await ge.prepareChunks(le);const ye=new TransactionUploader({deps:pe,transaction:ge});if(ye.chunkIndex=fe.chunkIndex,ye.lastRequestTimeEnd=fe.lastRequestTimeEnd,ye.lastResponseError=fe.lastResponseError,ye.lastResponseStatus=fe.lastResponseStatus,ye.txPosted=fe.txPosted,ye.data=le,ye.transaction.data_root!==fe.transaction.data_root)throw new Error("Data mismatch: Uploader doesn't match provided data.");return ye}static async fromTransactionId(fe,le){const pe=await fe.get(`tx/${le}`);if(pe.status!==200)throw new Error(`Tx ${le} not found: ${pe.status}`);const ge=pe.data;return ge.data=new Uint8Array(0),{txPosted:!0,chunkIndex:0,lastResponseError:"",lastRequestTimeEnd:0,lastResponseStatus:0,transaction:ge}}toJSON(){return{chunkIndex:this.chunkIndex,transaction:this.transaction,lastRequestTimeEnd:this.lastRequestTimeEnd,lastResponseStatus:this.lastResponseStatus,lastResponseError:this.lastResponseError,txPosted:this.txPosted}}async postTransaction(){if(this.totalChunks<=MAX_CHUNKS_IN_BODY){this.transaction.data=this.data;const pe=await this.api.post("tx",this.transaction).catch(ge=>(console.error(ge),{status:-1,data:{error:ge.message}}));if(this.lastRequestTimeEnd=Date.now(),this.lastResponseStatus=pe.status,this.transaction.data=new Uint8Array(0),pe.status>=200&&pe.status<300){this.txPosted=!0,this.chunkIndex=MAX_CHUNKS_IN_BODY;return}throw this.lastResponseError=getError(pe),new Error(`Unable to upload transaction: ${pe.status}, ${this.lastResponseError}`)}const le=await this.api.post("tx",this.transaction);if(this.lastRequestTimeEnd=Date.now(),this.lastResponseStatus=le.status,!(le.status>=200&&le.status<300))throw this.lastResponseError=getError(le),new Error(`Unable to upload transaction: ${le.status}, ${this.lastResponseError}`);this.txPosted=!0}}class Transactions{constructor({deps:fe}){je(this,"api");je(this,"crypto");je(this,"chunks");je(this,"merkle");je(this,"deepHash");this.api=fe.api,this.crypto=fe.crypto,this.chunks=fe.chunks,this.merkle=fe.merkle,this.deepHash=fe.deepHash}getTransactionAnchor(){return this.api.get("tx_anchor",{transformResponse:[]}).then(fe=>fe.data)}getPrice(fe,le){const pe=le?`price/${fe}/${le}`:`price/${fe}`;return this.api.get(pe,{transformResponse:[function(ge){return ge}]}).then(ge=>ge.data)}async get(fe){const le=await this.api.get(`tx/${fe}`);if(le.status==200){const pe=parseInt(le.data.data_size);if(le.data.format>=2&&pe>0&&pe<=1024*1024*12){const ge=await this.getData(fe);return new Transaction({attributes:{...le.data,data:ge},deps:{merkle:this.merkle,deepHash:this.deepHash}})}return new Transaction({attributes:{...le.data,format:le.data.format||1},deps:{merkle:this.merkle,deepHash:this.deepHash}})}throw le.status===404?new ArweaveError("TX_NOT_FOUND"):le.status===410?new ArweaveError("TX_FAILED"):new ArweaveError("TX_INVALID")}fromRaw(fe){return new Transaction({attributes:fe,deps:{merkle:this.merkle,deepHash:this.deepHash}})}getStatus(fe){return this.api.get(`tx/${fe}/status`).then(le=>le.status===200?{status:200,confirmed:le.data}:{status:le.status,confirmed:null})}async getData(fe){let le;try{le=(await this.api.get(`/${fe}`,{responseType:"arraybuffer"})).data}catch(pe){console.error(`Error while trying to download contiguous data from gateway cache for ${fe}`),console.error(pe)}if(!le){console.warn(`Falling back to chunks for ${fe}`);try{le=await this.chunks.downloadChunkedData(fe)}catch(pe){console.error(`Error while trying to download chunked data for ${fe}`),console.error(pe)}}if(!le)throw new Error(`${fe} data was not found!`);return le}async getDataStream(fe){let le;try{const pe=(await this.api.get(`/${fe}`,{responseType:"arraybuffer"})).data;le=async function*(){yield pe}()}catch(pe){console.error(`Error while trying to download contiguous data from gateway cache for ${fe}`),console.error(pe)}if(!le){console.warn(`Falling back to chunks for ${fe}`);try{le=this.chunks.concurrentChunkDownloader(fe)}catch(pe){console.error(`Error while trying to download chunked data for ${fe}`),console.error(pe)}}if(!le)throw new Error(`${fe} data was not found!`);return le}async sign(fe,le,pe){const ye=typeof le=="object"&&(me=>{let we=!0;return["n","e","d","p","q","dp","dq","qi"].map(Ee=>!(Ee in me)&&(we=!1)),we})(le),xe=typeof arweaveWallet=="object";if(!ye&&!xe)throw new Error("No valid JWK or external wallet found to sign transaction.");if(xe){try{(await arweaveWallet.getPermissions()).includes("SIGN_TRANSACTION")||await arweaveWallet.connect(["SIGN_TRANSACTION"])}catch{}fe.tags=fe.tags.map(we=>new ArweaveTag(we.name,we.value));const me=await arweaveWallet.sign(fe,pe);fe.setSignature({id:me.id,owner:me.owner,reward:me.reward,tags:me.tags,signature:me.signature})}else if(ye){fe.setOwner(le.n);const me=await fe.getSignatureData(),we=await this.crypto.sign(le,me,pe),Ee=await this.crypto.hash(we);fe.setSignature({id:bufferTob64Url(Ee),owner:le.n,signature:bufferTob64Url(we)})}else throw new Error("An error occurred while signing. Check wallet is valid")}async verify(fe){const le=await fe.getSignatureData(),pe=fe.get("signature",{decode:!0,string:!1}),ge=bufferTob64Url(await this.crypto.hash(pe));if(fe.id!==ge)throw new Error("Invalid transaction signature or ID! The transaction ID doesn't match the expected SHA-256 hash of the signature.");return this.crypto.verify(fe.owner,le,pe)}async post(fe){if(typeof fe=="string"?fe=new Transaction({attributes:JSON.parse(fe),deps:{merkle:this.merkle,deepHash:this.deepHash}}):typeof fe.readInt32BE=="function"?fe=new Transaction({attributes:JSON.parse(fe.toString()),deps:{merkle:this.merkle,deepHash:this.deepHash}}):typeof fe=="object"&&!(fe instanceof Transaction)&&(fe=new Transaction({attributes:fe,deps:{merkle:this.merkle,deepHash:this.deepHash}})),!(fe instanceof Transaction))throw new Error("Must be Transaction object");fe.chunks||await fe.prepareChunks(fe.data);const le=await this.getUploader(fe,fe.data);try{for(;!le.isComplete;)await le.uploadChunk()}catch(pe){if(le.lastResponseStatus>0)return{status:le.lastResponseStatus,statusText:le.lastResponseError,data:{error:le.lastResponseError}};throw pe}return{status:200,statusText:"OK",data:{}}}async getUploader(fe,le){let pe;if(le instanceof ArrayBuffer&&(le=new Uint8Array(le)),fe instanceof Transaction){if(le||(le=fe.data),!(le instanceof Uint8Array))throw new Error("Data format is invalid");fe.chunks||await fe.prepareChunks(le),pe=new TransactionUploader({transaction:fe,deps:{api:this.api,crypto:this.crypto,merkle:this.merkle,deepHash:this.deepHash}}),(!pe.data||pe.data.length===0)&&(pe.data=le)}else{if(typeof fe=="string"&&(fe=await TransactionUploader.fromTransactionId(this.api,fe)),!le||!(le instanceof Uint8Array))throw new Error("Must provide data when resuming upload");pe=await TransactionUploader.fromSerialized({deps:{api:this.api,merkle:this.merkle,crypto:this.crypto,deepHash:this.deepHash},serialized:fe,data:le})}return pe}async*upload(fe,le){const pe=await this.getUploader(fe,le);for(;!pe.isComplete;)await pe.uploadChunk(),yield pe;return pe}}class Wallets{constructor(fe,le){je(this,"api");je(this,"crypto");this.api=fe,this.crypto=le}getBalance(fe){return this.api.get(`wallet/${fe}/balance`,{transformResponse:[function(le){return le}]}).then(le=>le.data)}getLastTransactionID(fe){return this.api.get(`wallet/${fe}/last_tx`).then(le=>le.data)}generate(){return this.crypto.generateJWK()}async jwkToAddress(fe){return!fe||fe==="use_wallet"?this.getAddress():this.getAddress(fe)}async getAddress(fe){if(!fe||fe==="use_wallet"){try{await arweaveWallet.connect(["ACCESS_ADDRESS"])}catch{}return arweaveWallet.getActiveAddress()}else return this.ownerToAddress(fe.n)}async ownerToAddress(fe){return bufferTob64Url(await this.crypto.hash(b64UrlToBuffer(fe)))}}var Gn;let Arweave$1=(Gn=class{constructor(fe){je(this,"config");je(this,"api");je(this,"wallets");je(this,"transactions");je(this,"network");je(this,"blocks");je(this,"chunks");je(this,"crypto");je(this,"deepHash");je(this,"merkle");if(this.config=fe,!fe.crypto)throw new Error("config.crypto is required");this.crypto=augmentCrypto(fe.crypto,{deepHash:DeepHash}),this.deepHash=this.crypto.deepHash;const le=fe.gateways?Array.isArray(fe.gateways)?fe.gateways:[fe.gateways]:void 0;this.api=new FallbackApi({gateways:le,miners:fe.miners}),this.wallets=new Wallets(this.api,this.crypto),this.chunks=new Chunks(this.api),this.network=new Network(this.api),this.blocks=new Blocks(this.api,this.network),this.merkle=new Merkle({deps:{crypto:this.crypto}}),this.transactions=new Transactions({deps:{api:this.api,crypto:fe.crypto,chunks:this.chunks,merkle:this.merkle,deepHash:this.deepHash}})}get utils(){return Gn.utils}getConfig(){return this.config}async createTransaction(fe,le){const pe={};if(Object.assign(pe,fe),!fe.data&&!(fe.target&&fe.quantity))throw new Error("A new Arweave transaction must have a 'data' value, or 'target' and 'quantity' values.");if(fe.owner==null&&le&&le!=="use_wallet"&&(pe.owner=le.n),fe.last_tx==null&&(pe.last_tx=await this.transactions.getTransactionAnchor()),typeof fe.data=="string"&&(fe.data=stringToBuffer(fe.data)),fe.data instanceof ArrayBuffer&&(fe.data=new Uint8Array(fe.data)),fe.data&&!(fe.data instanceof Uint8Array))throw new Error("Expected data to be a string, Uint8Array or ArrayBuffer");if(fe.reward==null){const ye=fe.data?fe.data.byteLength:0;pe.reward=await this.transactions.getPrice(ye,pe.target)}pe.data_root="",pe.data_size=fe.data?fe.data.byteLength.toString():"0",pe.data=fe.data||new Uint8Array(0);const ge=new Transaction({attributes:pe,deps:{merkle:this.merkle,deepHash:this.deepHash}});return await ge.getSignatureData(),ge}},je(Gn,"init"),je(Gn,"utils",ArweaveUtils),je(Gn,"VERSION","0.0.1"),Gn);const Arweave$2=Arweave$1;class Arweave extends Arweave$1{constructor(fe,le){super({crypto:(le==null?void 0:le.crypto)??new WebCryptoDriver,...le,gateways:fe??"https://arweave.net"})}static init(fe){return new Arweave(fe)}}const driver=WebCryptoDriver.default?WebCryptoDriver.default:WebCryptoDriver;class CryptoDriver extends driver{getPublicKey(fe){throw new Error("Unimplemented")}}let driverInstance;function getCryptoDriver(){return driverInstance??(driverInstance=new CryptoDriver)}class Rsa4096Pss{constructor(fe,le){je(this,"_key");je(this,"pk");je(this,"signatureType",1);je(this,"ownerLength",SIG_CONFIG[1].pubLength);je(this,"signatureLength",SIG_CONFIG[1].sigLength);je(this,"_publicKey");this._key=fe,this.pk=le,le||(this.pk=getCryptoDriver().getPublicKey(JSON.parse(fe)))}get publicKey(){return this._publicKey}sign(fe){return cryptoBrowserifyExports.createSign("sha256").update(fe).sign({key:this._key,padding:cryptoBrowserifyExports.constants.RSA_PKCS1_PSS_PADDING})}static async verify(fe,le,pe){return await getCryptoDriver().verify(Buffer$4.isBuffer(fe)?base64url.encode(fe):fe,le,pe)}}var api$2={},encoders={},buffer$1=require$$0,Buffer$3=buffer$1.Buffer,safer={},key$1;for(key$1 in buffer$1)buffer$1.hasOwnProperty(key$1)&&(key$1==="SlowBuffer"||key$1==="Buffer"||(safer[key$1]=buffer$1[key$1]));var Safer=safer.Buffer={};for(key$1 in Buffer$3)Buffer$3.hasOwnProperty(key$1)&&(key$1==="allocUnsafe"||key$1==="allocUnsafeSlow"||(Safer[key$1]=Buffer$3[key$1]));safer.Buffer.prototype=Buffer$3.prototype;(!Safer.from||Safer.from===Uint8Array.from)&&(Safer.from=function(he,fe,le){if(typeof he=="number")throw new TypeError('The "value" argument must not be of type number. Received type '+typeof he);if(he&&typeof he.length>"u")throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof he);return Buffer$3(he,fe,le)});Safer.alloc||(Safer.alloc=function(he,fe,le){if(typeof he!="number")throw new TypeError('The "size" argument must be of type number. Received type '+typeof he);if(he<0||he>=2*(1<<30))throw new RangeError('The value "'+he+'" is invalid for option "size"');var pe=Buffer$3(he);return!fe||fe.length===0?pe.fill(0):typeof le=="string"?pe.fill(fe,le):pe.fill(fe),pe});if(!safer.kStringMaxLength)try{safer.kStringMaxLength=process$1.binding("buffer").kStringMaxLength}catch{}safer.constants||(safer.constants={MAX_LENGTH:safer.kMaxLength},safer.kStringMaxLength&&(safer.constants.MAX_STRING_LENGTH=safer.kStringMaxLength));var safer_1=safer,reporter={};const inherits$6=inherits_browserExports;function Reporter$2(he){this._reporterState={obj:null,path:[],options:he||{},errors:[]}}reporter.Reporter=Reporter$2;Reporter$2.prototype.isError=function(fe){return fe instanceof ReporterError};Reporter$2.prototype.save=function(){const fe=this._reporterState;return{obj:fe.obj,pathLen:fe.path.length}};Reporter$2.prototype.restore=function(fe){const le=this._reporterState;le.obj=fe.obj,le.path=le.path.slice(0,fe.pathLen)};Reporter$2.prototype.enterKey=function(fe){return this._reporterState.path.push(fe)};Reporter$2.prototype.exitKey=function(fe){const le=this._reporterState;le.path=le.path.slice(0,fe-1)};Reporter$2.prototype.leaveKey=function(fe,le,pe){const ge=this._reporterState;this.exitKey(fe),ge.obj!==null&&(ge.obj[le]=pe)};Reporter$2.prototype.path=function(){return this._reporterState.path.join("/")};Reporter$2.prototype.enterObject=function(){const fe=this._reporterState,le=fe.obj;return fe.obj={},le};Reporter$2.prototype.leaveObject=function(fe){const le=this._reporterState,pe=le.obj;return le.obj=fe,pe};Reporter$2.prototype.error=function(fe){let le;const pe=this._reporterState,ge=fe instanceof ReporterError;if(ge?le=fe:le=new ReporterError(pe.path.map(function(ye){return"["+JSON.stringify(ye)+"]"}).join(""),fe.message||fe,fe.stack),!pe.options.partial)throw le;return ge||pe.errors.push(le),le};Reporter$2.prototype.wrapResult=function(fe){const le=this._reporterState;return le.options.partial?{result:this.isError(fe)?null:fe,errors:le.errors}:fe};function ReporterError(he,fe){this.path=he,this.rethrow(fe)}inherits$6(ReporterError,Error);ReporterError.prototype.rethrow=function(fe){if(this.message=fe+" at: "+(this.path||"(shallow)"),Error.captureStackTrace&&Error.captureStackTrace(this,ReporterError),!this.stack)try{throw new Error(this.message)}catch(le){this.stack=le.stack}return this};var buffer={};const inherits$5=inherits_browserExports,Reporter$1=reporter.Reporter,Buffer$2=safer_1.Buffer;function DecoderBuffer$2(he,fe){if(Reporter$1.call(this,fe),!Buffer$2.isBuffer(he)){this.error("Input not Buffer");return}this.base=he,this.offset=0,this.length=he.length}inherits$5(DecoderBuffer$2,Reporter$1);buffer.DecoderBuffer=DecoderBuffer$2;DecoderBuffer$2.isDecoderBuffer=function(fe){return fe instanceof DecoderBuffer$2?!0:typeof fe=="object"&&Buffer$2.isBuffer(fe.base)&&fe.constructor.name==="DecoderBuffer"&&typeof fe.offset=="number"&&typeof fe.length=="number"&&typeof fe.save=="function"&&typeof fe.restore=="function"&&typeof fe.isEmpty=="function"&&typeof fe.readUInt8=="function"&&typeof fe.skip=="function"&&typeof fe.raw=="function"};DecoderBuffer$2.prototype.save=function(){return{offset:this.offset,reporter:Reporter$1.prototype.save.call(this)}};DecoderBuffer$2.prototype.restore=function(fe){const le=new DecoderBuffer$2(this.base);return le.offset=fe.offset,le.length=this.offset,this.offset=fe.offset,Reporter$1.prototype.restore.call(this,fe.reporter),le};DecoderBuffer$2.prototype.isEmpty=function(){return this.offset===this.length};DecoderBuffer$2.prototype.readUInt8=function(fe){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(fe||"DecoderBuffer overrun")};DecoderBuffer$2.prototype.skip=function(fe,le){if(!(this.offset+fe<=this.length))return this.error(le||"DecoderBuffer overrun");const pe=new DecoderBuffer$2(this.base);return pe._reporterState=this._reporterState,pe.offset=this.offset,pe.length=this.offset+fe,this.offset+=fe,pe};DecoderBuffer$2.prototype.raw=function(fe){return this.base.slice(fe?fe.offset:this.offset,this.length)};function EncoderBuffer$1(he,fe){if(Array.isArray(he))this.length=0,this.value=he.map(function(le){return EncoderBuffer$1.isEncoderBuffer(le)||(le=new EncoderBuffer$1(le,fe)),this.length+=le.length,le},this);else if(typeof he=="number"){if(!(0<=he&&he<=255))return fe.error("non-byte EncoderBuffer value");this.value=he,this.length=1}else if(typeof he=="string")this.value=he,this.length=Buffer$2.byteLength(he);else if(Buffer$2.isBuffer(he))this.value=he,this.length=he.length;else return fe.error("Unsupported type: "+typeof he)}buffer.EncoderBuffer=EncoderBuffer$1;EncoderBuffer$1.isEncoderBuffer=function(fe){return fe instanceof EncoderBuffer$1?!0:typeof fe=="object"&&fe.constructor.name==="EncoderBuffer"&&typeof fe.length=="number"&&typeof fe.join=="function"};EncoderBuffer$1.prototype.join=function(fe,le){return fe||(fe=Buffer$2.alloc(this.length)),le||(le=0),this.length===0||(Array.isArray(this.value)?this.value.forEach(function(pe){pe.join(fe,le),le+=pe.length}):(typeof this.value=="number"?fe[le]=this.value:typeof this.value=="string"?fe.write(this.value,le):Buffer$2.isBuffer(this.value)&&this.value.copy(fe,le),le+=this.length)),fe};const Reporter=reporter.Reporter,EncoderBuffer=buffer.EncoderBuffer,DecoderBuffer$1=buffer.DecoderBuffer,assert$6=requireMinimalisticAssert(),tags=["seq","seqof","set","setof","objid","bool","gentime","utctime","null_","enum","int","objDesc","bitstr","bmpstr","charstr","genstr","graphstr","ia5str","iso646str","numstr","octstr","printstr","t61str","unistr","utf8str","videostr"],methods=["key","obj","use","optional","explicit","implicit","def","choice","any","contains"].concat(tags),overrided=["_peekTag","_decodeTag","_use","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeInt","_decodeBool","_decodeList","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool"];function Node$2(he,fe,le){const pe={};this._baseState=pe,pe.name=le,pe.enc=he,pe.parent=fe||null,pe.children=null,pe.tag=null,pe.args=null,pe.reverseArgs=null,pe.choice=null,pe.optional=!1,pe.any=!1,pe.obj=!1,pe.use=null,pe.useDecoder=null,pe.key=null,pe.default=null,pe.explicit=null,pe.implicit=null,pe.contains=null,pe.parent||(pe.children=[],this._wrap())}var node=Node$2;const stateProps=["enc","parent","children","tag","args","reverseArgs","choice","optional","any","obj","use","alteredUse","key","default","explicit","implicit","contains"];Node$2.prototype.clone=function(){const fe=this._baseState,le={};stateProps.forEach(function(ge){le[ge]=fe[ge]});const pe=new this.constructor(le.parent);return pe._baseState=le,pe};Node$2.prototype._wrap=function(){const fe=this._baseState;methods.forEach(function(le){this[le]=function(){const ge=new this.constructor(this);return fe.children.push(ge),ge[le].apply(ge,arguments)}},this)};Node$2.prototype._init=function(fe){const le=this._baseState;assert$6(le.parent===null),fe.call(this),le.children=le.children.filter(function(pe){return pe._baseState.parent===this},this),assert$6.equal(le.children.length,1,"Root node can have only one child")};Node$2.prototype._useArgs=function(fe){const le=this._baseState,pe=fe.filter(function(ge){return ge instanceof this.constructor},this);fe=fe.filter(function(ge){return!(ge instanceof this.constructor)},this),pe.length!==0&&(assert$6(le.children===null),le.children=pe,pe.forEach(function(ge){ge._baseState.parent=this},this)),fe.length!==0&&(assert$6(le.args===null),le.args=fe,le.reverseArgs=fe.map(function(ge){if(typeof ge!="object"||ge.constructor!==Object)return ge;const ye={};return Object.keys(ge).forEach(function(xe){xe==(xe|0)&&(xe|=0);const me=ge[xe];ye[me]=xe}),ye}))};overrided.forEach(function(he){Node$2.prototype[he]=function(){const le=this._baseState;throw new Error(he+" not implemented for encoding: "+le.enc)}});tags.forEach(function(he){Node$2.prototype[he]=function(){const le=this._baseState,pe=Array.prototype.slice.call(arguments);return assert$6(le.tag===null),le.tag=he,this._useArgs(pe),this}});Node$2.prototype.use=function(fe){assert$6(fe);const le=this._baseState;return assert$6(le.use===null),le.use=fe,this};Node$2.prototype.optional=function(){const fe=this._baseState;return fe.optional=!0,this};Node$2.prototype.def=function(fe){const le=this._baseState;return assert$6(le.default===null),le.default=fe,le.optional=!0,this};Node$2.prototype.explicit=function(fe){const le=this._baseState;return assert$6(le.explicit===null&&le.implicit===null),le.explicit=fe,this};Node$2.prototype.implicit=function(fe){const le=this._baseState;return assert$6(le.explicit===null&&le.implicit===null),le.implicit=fe,this};Node$2.prototype.obj=function(){const fe=this._baseState,le=Array.prototype.slice.call(arguments);return fe.obj=!0,le.length!==0&&this._useArgs(le),this};Node$2.prototype.key=function(fe){const le=this._baseState;return assert$6(le.key===null),le.key=fe,this};Node$2.prototype.any=function(){const fe=this._baseState;return fe.any=!0,this};Node$2.prototype.choice=function(fe){const le=this._baseState;return assert$6(le.choice===null),le.choice=fe,this._useArgs(Object.keys(fe).map(function(pe){return fe[pe]})),this};Node$2.prototype.contains=function(fe){const le=this._baseState;return assert$6(le.use===null),le.contains=fe,this};Node$2.prototype._decode=function(fe,le){const pe=this._baseState;if(pe.parent===null)return fe.wrapResult(pe.children[0]._decode(fe,le));let ge=pe.default,ye=!0,xe=null;if(pe.key!==null&&(xe=fe.enterKey(pe.key)),pe.optional){let we=null;if(pe.explicit!==null?we=pe.explicit:pe.implicit!==null?we=pe.implicit:pe.tag!==null&&(we=pe.tag),we===null&&!pe.any){const Ee=fe.save();try{pe.choice===null?this._decodeGeneric(pe.tag,fe,le):this._decodeChoice(fe,le),ye=!0}catch{ye=!1}fe.restore(Ee)}else if(ye=this._peekTag(fe,we,pe.any),fe.isError(ye))return ye}let me;if(pe.obj&&ye&&(me=fe.enterObject()),ye){if(pe.explicit!==null){const Ee=this._decodeTag(fe,pe.explicit);if(fe.isError(Ee))return Ee;fe=Ee}const we=fe.offset;if(pe.use===null&&pe.choice===null){let Ee;pe.any&&(Ee=fe.save());const Ae=this._decodeTag(fe,pe.implicit!==null?pe.implicit:pe.tag,pe.any);if(fe.isError(Ae))return Ae;pe.any?ge=fe.raw(Ee):fe=Ae}if(le&&le.track&&pe.tag!==null&&le.track(fe.path(),we,fe.length,"tagged"),le&&le.track&&pe.tag!==null&&le.track(fe.path(),fe.offset,fe.length,"content"),pe.any||(pe.choice===null?ge=this._decodeGeneric(pe.tag,fe,le):ge=this._decodeChoice(fe,le)),fe.isError(ge))return ge;if(!pe.any&&pe.choice===null&&pe.children!==null&&pe.children.forEach(function(Ae){Ae._decode(fe,le)}),pe.contains&&(pe.tag==="octstr"||pe.tag==="bitstr")){const Ee=new DecoderBuffer$1(ge);ge=this._getUse(pe.contains,fe._reporterState.obj)._decode(Ee,le)}}return pe.obj&&ye&&(ge=fe.leaveObject(me)),pe.key!==null&&(ge!==null||ye===!0)?fe.leaveKey(xe,pe.key,ge):xe!==null&&fe.exitKey(xe),ge};Node$2.prototype._decodeGeneric=function(fe,le,pe){const ge=this._baseState;return fe==="seq"||fe==="set"?null:fe==="seqof"||fe==="setof"?this._decodeList(le,fe,ge.args[0],pe):/str$/.test(fe)?this._decodeStr(le,fe,pe):fe==="objid"&&ge.args?this._decodeObjid(le,ge.args[0],ge.args[1],pe):fe==="objid"?this._decodeObjid(le,null,null,pe):fe==="gentime"||fe==="utctime"?this._decodeTime(le,fe,pe):fe==="null_"?this._decodeNull(le,pe):fe==="bool"?this._decodeBool(le,pe):fe==="objDesc"?this._decodeStr(le,fe,pe):fe==="int"||fe==="enum"?this._decodeInt(le,ge.args&&ge.args[0],pe):ge.use!==null?this._getUse(ge.use,le._reporterState.obj)._decode(le,pe):le.error("unknown tag: "+fe)};Node$2.prototype._getUse=function(fe,le){const pe=this._baseState;return pe.useDecoder=this._use(fe,le),assert$6(pe.useDecoder._baseState.parent===null),pe.useDecoder=pe.useDecoder._baseState.children[0],pe.implicit!==pe.useDecoder._baseState.implicit&&(pe.useDecoder=pe.useDecoder.clone(),pe.useDecoder._baseState.implicit=pe.implicit),pe.useDecoder};Node$2.prototype._decodeChoice=function(fe,le){const pe=this._baseState;let ge=null,ye=!1;return Object.keys(pe.choice).some(function(xe){const me=fe.save(),we=pe.choice[xe];try{const Ee=we._decode(fe,le);if(fe.isError(Ee))return!1;ge={type:xe,value:Ee},ye=!0}catch{return fe.restore(me),!1}return!0},this),ye?ge:fe.error("Choice not matched")};Node$2.prototype._createEncoderBuffer=function(fe){return new EncoderBuffer(fe,this.reporter)};Node$2.prototype._encode=function(fe,le,pe){const ge=this._baseState;if(ge.default!==null&&ge.default===fe)return;const ye=this._encodeValue(fe,le,pe);if(ye!==void 0&&!this._skipDefault(ye,le,pe))return ye};Node$2.prototype._encodeValue=function(fe,le,pe){const ge=this._baseState;if(ge.parent===null)return ge.children[0]._encode(fe,le||new Reporter);let ye=null;if(this.reporter=le,ge.optional&&fe===void 0)if(ge.default!==null)fe=ge.default;else return;let xe=null,me=!1;if(ge.any)ye=this._createEncoderBuffer(fe);else if(ge.choice)ye=this._encodeChoice(fe,le);else if(ge.contains)xe=this._getUse(ge.contains,pe)._encode(fe,le),me=!0;else if(ge.children)xe=ge.children.map(function(we){if(we._baseState.tag==="null_")return we._encode(null,le,fe);if(we._baseState.key===null)return le.error("Child should have a key");const Ee=le.enterKey(we._baseState.key);if(typeof fe!="object")return le.error("Child expected, but input is not object");const Ae=we._encode(fe[we._baseState.key],le,fe);return le.leaveKey(Ee),Ae},this).filter(function(we){return we}),xe=this._createEncoderBuffer(xe);else if(ge.tag==="seqof"||ge.tag==="setof"){if(!(ge.args&&ge.args.length===1))return le.error("Too many args for : "+ge.tag);if(!Array.isArray(fe))return le.error("seqof/setof, but data is not Array");const we=this.clone();we._baseState.implicit=null,xe=this._createEncoderBuffer(fe.map(function(Ee){const Ae=this._baseState;return this._getUse(Ae.args[0],fe)._encode(Ee,le)},we))}else ge.use!==null?ye=this._getUse(ge.use,pe)._encode(fe,le):(xe=this._encodePrimitive(ge.tag,fe),me=!0);if(!ge.any&&ge.choice===null){const we=ge.implicit!==null?ge.implicit:ge.tag,Ee=ge.implicit===null?"universal":"context";we===null?ge.use===null&&le.error("Tag could be omitted only for .use()"):ge.use===null&&(ye=this._encodeComposite(we,me,Ee,xe))}return ge.explicit!==null&&(ye=this._encodeComposite(ge.explicit,!1,"context",ye)),ye};Node$2.prototype._encodeChoice=function(fe,le){const pe=this._baseState,ge=pe.choice[fe.type];return ge||assert$6(!1,fe.type+" not found in "+JSON.stringify(Object.keys(pe.choice))),ge._encode(fe.value,le)};Node$2.prototype._encodePrimitive=function(fe,le){const pe=this._baseState;if(/str$/.test(fe))return this._encodeStr(le,fe);if(fe==="objid"&&pe.args)return this._encodeObjid(le,pe.reverseArgs[0],pe.args[1]);if(fe==="objid")return this._encodeObjid(le,null,null);if(fe==="gentime"||fe==="utctime")return this._encodeTime(le,fe);if(fe==="null_")return this._encodeNull();if(fe==="int"||fe==="enum")return this._encodeInt(le,pe.args&&pe.reverseArgs[0]);if(fe==="bool")return this._encodeBool(le);if(fe==="objDesc")return this._encodeStr(le,fe);throw new Error("Unsupported tag: "+fe)};Node$2.prototype._isNumstr=function(fe){return/^[0-9 ]*$/.test(fe)};Node$2.prototype._isPrintstr=function(fe){return/^[A-Za-z0-9 '()+,-./:=?]*$/.test(fe)};var der$2={};(function(he){function fe(le){const pe={};return Object.keys(le).forEach(function(ge){(ge|0)==ge&&(ge=ge|0);const ye=le[ge];pe[ye]=ge}),pe}he.tagClass={0:"universal",1:"application",2:"context",3:"private"},he.tagClassByName=fe(he.tagClass),he.tag={0:"end",1:"bool",2:"int",3:"bitstr",4:"octstr",5:"null_",6:"objid",7:"objDesc",8:"external",9:"real",10:"enum",11:"embed",12:"utf8str",13:"relativeOid",16:"seq",17:"set",18:"numstr",19:"printstr",20:"t61str",21:"videostr",22:"ia5str",23:"utctime",24:"gentime",25:"graphstr",26:"iso646str",27:"genstr",28:"unistr",29:"charstr",30:"bmpstr"},he.tagByName=fe(he.tag)})(der$2);const inherits$4=inherits_browserExports,Buffer$1=safer_1.Buffer,Node$1=node,der$1=der$2;function DEREncoder$1(he){this.enc="der",this.name=he.name,this.entity=he,this.tree=new DERNode$1,this.tree._init(he.body)}var der_1$1=DEREncoder$1;DEREncoder$1.prototype.encode=function(fe,le){return this.tree._encode(fe,le).join()};function DERNode$1(he){Node$1.call(this,"der",he)}inherits$4(DERNode$1,Node$1);DERNode$1.prototype._encodeComposite=function(fe,le,pe,ge){const ye=encodeTag(fe,le,pe,this.reporter);if(ge.length<128){const we=Buffer$1.alloc(2);return we[0]=ye,we[1]=ge.length,this._createEncoderBuffer([we,ge])}let xe=1;for(let we=ge.length;we>=256;we>>=8)xe++;const me=Buffer$1.alloc(2+xe);me[0]=ye,me[1]=128|xe;for(let we=1+xe,Ee=ge.length;Ee>0;we--,Ee>>=8)me[we]=Ee&255;return this._createEncoderBuffer([me,ge])};DERNode$1.prototype._encodeStr=function(fe,le){if(le==="bitstr")return this._createEncoderBuffer([fe.unused|0,fe.data]);if(le==="bmpstr"){const pe=Buffer$1.alloc(fe.length*2);for(let ge=0;ge<fe.length;ge++)pe.writeUInt16BE(fe.charCodeAt(ge),ge*2);return this._createEncoderBuffer(pe)}else return le==="numstr"?this._isNumstr(fe)?this._createEncoderBuffer(fe):this.reporter.error("Encoding of string type: numstr supports only digits and space"):le==="printstr"?this._isPrintstr(fe)?this._createEncoderBuffer(fe):this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"):/str$/.test(le)?this._createEncoderBuffer(fe):le==="objDesc"?this._createEncoderBuffer(fe):this.reporter.error("Encoding of string type: "+le+" unsupported")};DERNode$1.prototype._encodeObjid=function(fe,le,pe){if(typeof fe=="string"){if(!le)return this.reporter.error("string objid given, but no values map found");if(!le.hasOwnProperty(fe))return this.reporter.error("objid not found in values map");fe=le[fe].split(/[\s.]+/g);for(let me=0;me<fe.length;me++)fe[me]|=0}else if(Array.isArray(fe)){fe=fe.slice();for(let me=0;me<fe.length;me++)fe[me]|=0}if(!Array.isArray(fe))return this.reporter.error("objid() should be either array or string, got: "+JSON.stringify(fe));if(!pe){if(fe[1]>=40)return this.reporter.error("Second objid identifier OOB");fe.splice(0,2,fe[0]*40+fe[1])}let ge=0;for(let me=0;me<fe.length;me++){let we=fe[me];for(ge++;we>=128;we>>=7)ge++}const ye=Buffer$1.alloc(ge);let xe=ye.length-1;for(let me=fe.length-1;me>=0;me--){let we=fe[me];for(ye[xe--]=we&127;(we>>=7)>0;)ye[xe--]=128|we&127}return this._createEncoderBuffer(ye)};function two(he){return he<10?"0"+he:he}DERNode$1.prototype._encodeTime=function(fe,le){let pe;const ge=new Date(fe);return le==="gentime"?pe=[two(ge.getUTCFullYear()),two(ge.getUTCMonth()+1),two(ge.getUTCDate()),two(ge.getUTCHours()),two(ge.getUTCMinutes()),two(ge.getUTCSeconds()),"Z"].join(""):le==="utctime"?pe=[two(ge.getUTCFullYear()%100),two(ge.getUTCMonth()+1),two(ge.getUTCDate()),two(ge.getUTCHours()),two(ge.getUTCMinutes()),two(ge.getUTCSeconds()),"Z"].join(""):this.reporter.error("Encoding "+le+" time is not supported yet"),this._encodeStr(pe,"octstr")};DERNode$1.prototype._encodeNull=function(){return this._createEncoderBuffer("")};DERNode$1.prototype._encodeInt=function(fe,le){if(typeof fe=="string"){if(!le)return this.reporter.error("String int or enum given, but no values map");if(!le.hasOwnProperty(fe))return this.reporter.error("Values map doesn't contain: "+JSON.stringify(fe));fe=le[fe]}if(typeof fe!="number"&&!Buffer$1.isBuffer(fe)){const ye=fe.toArray();!fe.sign&&ye[0]&128&&ye.unshift(0),fe=Buffer$1.from(ye)}if(Buffer$1.isBuffer(fe)){let ye=fe.length;fe.length===0&&ye++;const xe=Buffer$1.alloc(ye);return fe.copy(xe),fe.length===0&&(xe[0]=0),this._createEncoderBuffer(xe)}if(fe<128)return this._createEncoderBuffer(fe);if(fe<256)return this._createEncoderBuffer([0,fe]);let pe=1;for(let ye=fe;ye>=256;ye>>=8)pe++;const ge=new Array(pe);for(let ye=ge.length-1;ye>=0;ye--)ge[ye]=fe&255,fe>>=8;return ge[0]&128&&ge.unshift(0),this._createEncoderBuffer(Buffer$1.from(ge))};DERNode$1.prototype._encodeBool=function(fe){return this._createEncoderBuffer(fe?255:0)};DERNode$1.prototype._use=function(fe,le){return typeof fe=="function"&&(fe=fe(le)),fe._getEncoder("der").tree};DERNode$1.prototype._skipDefault=function(fe,le,pe){const ge=this._baseState;let ye;if(ge.default===null)return!1;const xe=fe.join();if(ge.defaultBuffer===void 0&&(ge.defaultBuffer=this._encodeValue(ge.default,le,pe).join()),xe.length!==ge.defaultBuffer.length)return!1;for(ye=0;ye<xe.length;ye++)if(xe[ye]!==ge.defaultBuffer[ye])return!1;return!0};function encodeTag(he,fe,le,pe){let ge;if(he==="seqof"?he="seq":he==="setof"&&(he="set"),der$1.tagByName.hasOwnProperty(he))ge=der$1.tagByName[he];else if(typeof he=="number"&&(he|0)===he)ge=he;else return pe.error("Unknown tag: "+he);return ge>=31?pe.error("Multi-octet tag encoding unsupported"):(fe||(ge|=32),ge|=der$1.tagClassByName[le||"universal"]<<6,ge)}const inherits$3=inherits_browserExports,DEREncoder=der_1$1;function PEMEncoder(he){DEREncoder.call(this,he),this.enc="pem"}inherits$3(PEMEncoder,DEREncoder);var pem$1=PEMEncoder;PEMEncoder.prototype.encode=function(fe,le){const ge=DEREncoder.prototype.encode.call(this,fe).toString("base64"),ye=["-----BEGIN "+le.label+"-----"];for(let xe=0;xe<ge.length;xe+=64)ye.push(ge.slice(xe,xe+64));return ye.push("-----END "+le.label+"-----"),ye.join(`
`)};(function(he){const fe=he;fe.der=der_1$1,fe.pem=pem$1})(encoders);var decoders={},bn$1={exports:{}};bn$1.exports;(function(he){(function(fe,le){function pe(ze,ve){if(!ze)throw new Error(ve||"Assertion failed")}function ge(ze,ve){ze.super_=ve;var ke=function(){};ke.prototype=ve.prototype,ze.prototype=new ke,ze.prototype.constructor=ze}function ye(ze,ve,ke){if(ye.isBN(ze))return ze;this.negative=0,this.words=null,this.length=0,this.red=null,ze!==null&&((ve==="le"||ve==="be")&&(ke=ve,ve=10),this._init(ze||0,ve||10,ke||"be"))}typeof fe=="object"?fe.exports=ye:le.BN=ye,ye.BN=ye,ye.wordSize=26;var xe;try{typeof window<"u"&&typeof window.Buffer<"u"?xe=window.Buffer:xe=require$$0.Buffer}catch{}ye.isBN=function(ve){return ve instanceof ye?!0:ve!==null&&typeof ve=="object"&&ve.constructor.wordSize===ye.wordSize&&Array.isArray(ve.words)},ye.max=function(ve,ke){return ve.cmp(ke)>0?ve:ke},ye.min=function(ve,ke){return ve.cmp(ke)<0?ve:ke},ye.prototype._init=function(ve,ke,Oe){if(typeof ve=="number")return this._initNumber(ve,ke,Oe);if(typeof ve=="object")return this._initArray(ve,ke,Oe);ke==="hex"&&(ke=16),pe(ke===(ke|0)&&ke>=2&&ke<=36),ve=ve.toString().replace(/\s+/g,"");var Pe=0;ve[0]==="-"&&(Pe++,this.negative=1),Pe<ve.length&&(ke===16?this._parseHex(ve,Pe,Oe):(this._parseBase(ve,ke,Pe),Oe==="le"&&this._initArray(this.toArray(),ke,Oe)))},ye.prototype._initNumber=function(ve,ke,Oe){ve<0&&(this.negative=1,ve=-ve),ve<67108864?(this.words=[ve&67108863],this.length=1):ve<4503599627370496?(this.words=[ve&67108863,ve/67108864&67108863],this.length=2):(pe(ve<9007199254740992),this.words=[ve&67108863,ve/67108864&67108863,1],this.length=3),Oe==="le"&&this._initArray(this.toArray(),ke,Oe)},ye.prototype._initArray=function(ve,ke,Oe){if(pe(typeof ve.length=="number"),ve.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(ve.length/3),this.words=new Array(this.length);for(var Pe=0;Pe<this.length;Pe++)this.words[Pe]=0;var Re,Ye,Xe=0;if(Oe==="be")for(Pe=ve.length-1,Re=0;Pe>=0;Pe-=3)Ye=ve[Pe]|ve[Pe-1]<<8|ve[Pe-2]<<16,this.words[Re]|=Ye<<Xe&67108863,this.words[Re+1]=Ye>>>26-Xe&67108863,Xe+=24,Xe>=26&&(Xe-=26,Re++);else if(Oe==="le")for(Pe=0,Re=0;Pe<ve.length;Pe+=3)Ye=ve[Pe]|ve[Pe+1]<<8|ve[Pe+2]<<16,this.words[Re]|=Ye<<Xe&67108863,this.words[Re+1]=Ye>>>26-Xe&67108863,Xe+=24,Xe>=26&&(Xe-=26,Re++);return this.strip()};function me(ze,ve){var ke=ze.charCodeAt(ve);return ke>=65&&ke<=70?ke-55:ke>=97&&ke<=102?ke-87:ke-48&15}function we(ze,ve,ke){var Oe=me(ze,ke);return ke-1>=ve&&(Oe|=me(ze,ke-1)<<4),Oe}ye.prototype._parseHex=function(ve,ke,Oe){this.length=Math.ceil((ve.length-ke)/6),this.words=new Array(this.length);for(var Pe=0;Pe<this.length;Pe++)this.words[Pe]=0;var Re=0,Ye=0,Xe;if(Oe==="be")for(Pe=ve.length-1;Pe>=ke;Pe-=2)Xe=we(ve,ke,Pe)<<Re,this.words[Ye]|=Xe&67108863,Re>=18?(Re-=18,Ye+=1,this.words[Ye]|=Xe>>>26):Re+=8;else{var Je=ve.length-ke;for(Pe=Je%2===0?ke+1:ke;Pe<ve.length;Pe+=2)Xe=we(ve,ke,Pe)<<Re,this.words[Ye]|=Xe&67108863,Re>=18?(Re-=18,Ye+=1,this.words[Ye]|=Xe>>>26):Re+=8}this.strip()};function Ee(ze,ve,ke,Oe){for(var Pe=0,Re=Math.min(ze.length,ke),Ye=ve;Ye<Re;Ye++){var Xe=ze.charCodeAt(Ye)-48;Pe*=Oe,Xe>=49?Pe+=Xe-49+10:Xe>=17?Pe+=Xe-17+10:Pe+=Xe}return Pe}ye.prototype._parseBase=function(ve,ke,Oe){this.words=[0],this.length=1;for(var Pe=0,Re=1;Re<=67108863;Re*=ke)Pe++;Pe--,Re=Re/ke|0;for(var Ye=ve.length-Oe,Xe=Ye%Pe,Je=Math.min(Ye,Ye-Xe)+Oe,Ie=0,De=Oe;De<Je;De+=Pe)Ie=Ee(ve,De,De+Pe,ke),this.imuln(Re),this.words[0]+Ie<67108864?this.words[0]+=Ie:this._iaddn(Ie);if(Xe!==0){var We=1;for(Ie=Ee(ve,De,ve.length,ke),De=0;De<Xe;De++)We*=ke;this.imuln(We),this.words[0]+Ie<67108864?this.words[0]+=Ie:this._iaddn(Ie)}this.strip()},ye.prototype.copy=function(ve){ve.words=new Array(this.length);for(var ke=0;ke<this.length;ke++)ve.words[ke]=this.words[ke];ve.length=this.length,ve.negative=this.negative,ve.red=this.red},ye.prototype.clone=function(){var ve=new ye(null);return this.copy(ve),ve},ye.prototype._expand=function(ve){for(;this.length<ve;)this.words[this.length++]=0;return this},ye.prototype.strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},ye.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},ye.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var Ae=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],Se=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],Le=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];ye.prototype.toString=function(ve,ke){ve=ve||10,ke=ke|0||1;var Oe;if(ve===16||ve==="hex"){Oe="";for(var Pe=0,Re=0,Ye=0;Ye<this.length;Ye++){var Xe=this.words[Ye],Je=((Xe<<Pe|Re)&16777215).toString(16);Re=Xe>>>24-Pe&16777215,Re!==0||Ye!==this.length-1?Oe=Ae[6-Je.length]+Je+Oe:Oe=Je+Oe,Pe+=2,Pe>=26&&(Pe-=26,Ye--)}for(Re!==0&&(Oe=Re.toString(16)+Oe);Oe.length%ke!==0;)Oe="0"+Oe;return this.negative!==0&&(Oe="-"+Oe),Oe}if(ve===(ve|0)&&ve>=2&&ve<=36){var Ie=Se[ve],De=Le[ve];Oe="";var We=this.clone();for(We.negative=0;!We.isZero();){var it=We.modn(De).toString(ve);We=We.idivn(De),We.isZero()?Oe=it+Oe:Oe=Ae[Ie-it.length]+it+Oe}for(this.isZero()&&(Oe="0"+Oe);Oe.length%ke!==0;)Oe="0"+Oe;return this.negative!==0&&(Oe="-"+Oe),Oe}pe(!1,"Base should be between 2 and 36")},ye.prototype.toNumber=function(){var ve=this.words[0];return this.length===2?ve+=this.words[1]*67108864:this.length===3&&this.words[2]===1?ve+=4503599627370496+this.words[1]*67108864:this.length>2&&pe(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-ve:ve},ye.prototype.toJSON=function(){return this.toString(16)},ye.prototype.toBuffer=function(ve,ke){return pe(typeof xe<"u"),this.toArrayLike(xe,ve,ke)},ye.prototype.toArray=function(ve,ke){return this.toArrayLike(Array,ve,ke)},ye.prototype.toArrayLike=function(ve,ke,Oe){var Pe=this.byteLength(),Re=Oe||Math.max(1,Pe);pe(Pe<=Re,"byte array longer than desired length"),pe(Re>0,"Requested array length <= 0"),this.strip();var Ye=ke==="le",Xe=new ve(Re),Je,Ie,De=this.clone();if(Ye){for(Ie=0;!De.isZero();Ie++)Je=De.andln(255),De.iushrn(8),Xe[Ie]=Je;for(;Ie<Re;Ie++)Xe[Ie]=0}else{for(Ie=0;Ie<Re-Pe;Ie++)Xe[Ie]=0;for(Ie=0;!De.isZero();Ie++)Je=De.andln(255),De.iushrn(8),Xe[Re-Ie-1]=Je}return Xe},Math.clz32?ye.prototype._countBits=function(ve){return 32-Math.clz32(ve)}:ye.prototype._countBits=function(ve){var ke=ve,Oe=0;return ke>=4096&&(Oe+=13,ke>>>=13),ke>=64&&(Oe+=7,ke>>>=7),ke>=8&&(Oe+=4,ke>>>=4),ke>=2&&(Oe+=2,ke>>>=2),Oe+ke},ye.prototype._zeroBits=function(ve){if(ve===0)return 26;var ke=ve,Oe=0;return ke&8191||(Oe+=13,ke>>>=13),ke&127||(Oe+=7,ke>>>=7),ke&15||(Oe+=4,ke>>>=4),ke&3||(Oe+=2,ke>>>=2),ke&1||Oe++,Oe},ye.prototype.bitLength=function(){var ve=this.words[this.length-1],ke=this._countBits(ve);return(this.length-1)*26+ke};function He(ze){for(var ve=new Array(ze.bitLength()),ke=0;ke<ve.length;ke++){var Oe=ke/26|0,Pe=ke%26;ve[ke]=(ze.words[Oe]&1<<Pe)>>>Pe}return ve}ye.prototype.zeroBits=function(){if(this.isZero())return 0;for(var ve=0,ke=0;ke<this.length;ke++){var Oe=this._zeroBits(this.words[ke]);if(ve+=Oe,Oe!==26)break}return ve},ye.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},ye.prototype.toTwos=function(ve){return this.negative!==0?this.abs().inotn(ve).iaddn(1):this.clone()},ye.prototype.fromTwos=function(ve){return this.testn(ve-1)?this.notn(ve).iaddn(1).ineg():this.clone()},ye.prototype.isNeg=function(){return this.negative!==0},ye.prototype.neg=function(){return this.clone().ineg()},ye.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},ye.prototype.iuor=function(ve){for(;this.length<ve.length;)this.words[this.length++]=0;for(var ke=0;ke<ve.length;ke++)this.words[ke]=this.words[ke]|ve.words[ke];return this.strip()},ye.prototype.ior=function(ve){return pe((this.negative|ve.negative)===0),this.iuor(ve)},ye.prototype.or=function(ve){return this.length>ve.length?this.clone().ior(ve):ve.clone().ior(this)},ye.prototype.uor=function(ve){return this.length>ve.length?this.clone().iuor(ve):ve.clone().iuor(this)},ye.prototype.iuand=function(ve){var ke;this.length>ve.length?ke=ve:ke=this;for(var Oe=0;Oe<ke.length;Oe++)this.words[Oe]=this.words[Oe]&ve.words[Oe];return this.length=ke.length,this.strip()},ye.prototype.iand=function(ve){return pe((this.negative|ve.negative)===0),this.iuand(ve)},ye.prototype.and=function(ve){return this.length>ve.length?this.clone().iand(ve):ve.clone().iand(this)},ye.prototype.uand=function(ve){return this.length>ve.length?this.clone().iuand(ve):ve.clone().iuand(this)},ye.prototype.iuxor=function(ve){var ke,Oe;this.length>ve.length?(ke=this,Oe=ve):(ke=ve,Oe=this);for(var Pe=0;Pe<Oe.length;Pe++)this.words[Pe]=ke.words[Pe]^Oe.words[Pe];if(this!==ke)for(;Pe<ke.length;Pe++)this.words[Pe]=ke.words[Pe];return this.length=ke.length,this.strip()},ye.prototype.ixor=function(ve){return pe((this.negative|ve.negative)===0),this.iuxor(ve)},ye.prototype.xor=function(ve){return this.length>ve.length?this.clone().ixor(ve):ve.clone().ixor(this)},ye.prototype.uxor=function(ve){return this.length>ve.length?this.clone().iuxor(ve):ve.clone().iuxor(this)},ye.prototype.inotn=function(ve){pe(typeof ve=="number"&&ve>=0);var ke=Math.ceil(ve/26)|0,Oe=ve%26;this._expand(ke),Oe>0&&ke--;for(var Pe=0;Pe<ke;Pe++)this.words[Pe]=~this.words[Pe]&67108863;return Oe>0&&(this.words[Pe]=~this.words[Pe]&67108863>>26-Oe),this.strip()},ye.prototype.notn=function(ve){return this.clone().inotn(ve)},ye.prototype.setn=function(ve,ke){pe(typeof ve=="number"&&ve>=0);var Oe=ve/26|0,Pe=ve%26;return this._expand(Oe+1),ke?this.words[Oe]=this.words[Oe]|1<<Pe:this.words[Oe]=this.words[Oe]&~(1<<Pe),this.strip()},ye.prototype.iadd=function(ve){var ke;if(this.negative!==0&&ve.negative===0)return this.negative=0,ke=this.isub(ve),this.negative^=1,this._normSign();if(this.negative===0&&ve.negative!==0)return ve.negative=0,ke=this.isub(ve),ve.negative=1,ke._normSign();var Oe,Pe;this.length>ve.length?(Oe=this,Pe=ve):(Oe=ve,Pe=this);for(var Re=0,Ye=0;Ye<Pe.length;Ye++)ke=(Oe.words[Ye]|0)+(Pe.words[Ye]|0)+Re,this.words[Ye]=ke&67108863,Re=ke>>>26;for(;Re!==0&&Ye<Oe.length;Ye++)ke=(Oe.words[Ye]|0)+Re,this.words[Ye]=ke&67108863,Re=ke>>>26;if(this.length=Oe.length,Re!==0)this.words[this.length]=Re,this.length++;else if(Oe!==this)for(;Ye<Oe.length;Ye++)this.words[Ye]=Oe.words[Ye];return this},ye.prototype.add=function(ve){var ke;return ve.negative!==0&&this.negative===0?(ve.negative=0,ke=this.sub(ve),ve.negative^=1,ke):ve.negative===0&&this.negative!==0?(this.negative=0,ke=ve.sub(this),this.negative=1,ke):this.length>ve.length?this.clone().iadd(ve):ve.clone().iadd(this)},ye.prototype.isub=function(ve){if(ve.negative!==0){ve.negative=0;var ke=this.iadd(ve);return ve.negative=1,ke._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(ve),this.negative=1,this._normSign();var Oe=this.cmp(ve);if(Oe===0)return this.negative=0,this.length=1,this.words[0]=0,this;var Pe,Re;Oe>0?(Pe=this,Re=ve):(Pe=ve,Re=this);for(var Ye=0,Xe=0;Xe<Re.length;Xe++)ke=(Pe.words[Xe]|0)-(Re.words[Xe]|0)+Ye,Ye=ke>>26,this.words[Xe]=ke&67108863;for(;Ye!==0&&Xe<Pe.length;Xe++)ke=(Pe.words[Xe]|0)+Ye,Ye=ke>>26,this.words[Xe]=ke&67108863;if(Ye===0&&Xe<Pe.length&&Pe!==this)for(;Xe<Pe.length;Xe++)this.words[Xe]=Pe.words[Xe];return this.length=Math.max(this.length,Xe),Pe!==this&&(this.negative=1),this.strip()},ye.prototype.sub=function(ve){return this.clone().isub(ve)};function Me(ze,ve,ke){ke.negative=ve.negative^ze.negative;var Oe=ze.length+ve.length|0;ke.length=Oe,Oe=Oe-1|0;var Pe=ze.words[0]|0,Re=ve.words[0]|0,Ye=Pe*Re,Xe=Ye&67108863,Je=Ye/67108864|0;ke.words[0]=Xe;for(var Ie=1;Ie<Oe;Ie++){for(var De=Je>>>26,We=Je&67108863,it=Math.min(Ie,ve.length-1),Ze=Math.max(0,Ie-ze.length+1);Ze<=it;Ze++){var Ce=Ie-Ze|0;Pe=ze.words[Ce]|0,Re=ve.words[Ze]|0,Ye=Pe*Re+We,De+=Ye/67108864|0,We=Ye&67108863}ke.words[Ie]=We|0,Je=De|0}return Je!==0?ke.words[Ie]=Je|0:ke.length--,ke.strip()}var Fe=function(ve,ke,Oe){var Pe=ve.words,Re=ke.words,Ye=Oe.words,Xe=0,Je,Ie,De,We=Pe[0]|0,it=We&8191,Ze=We>>>13,Ce=Pe[1]|0,_e=Ce&8191,at=Ce>>>13,yt=Pe[2]|0,pt=yt&8191,kt=yt>>>13,er=Pe[3]|0,zt=er&8191,or=er>>>13,ar=Pe[4]|0,pr=ar&8191,Mr=ar>>>13,Ln=Pe[5]|0,jr=Ln&8191,Br=Ln>>>13,Bn=Pe[6]|0,Vr=Bn&8191,Jr=Bn>>>13,kn=Pe[7]|0,Fr=kn&8191,zr=kn>>>13,Sn=Pe[8]|0,Yr=Sn&8191,Hr=Sn>>>13,Un=Pe[9]|0,Wr=Un&8191,Pr=Un>>>13,In=Re[0]|0,Ur=In&8191,Ir=In>>>13,hn=Re[1]|0,Cr=hn&8191,Tr=hn>>>13,pn=Re[2]|0,kr=pn&8191,Rr=pn>>>13,Tn=Re[3]|0,Xr=Tn&8191,Zr=Tn>>>13,un=Re[4]|0,vr=un&8191,Sr=un>>>13,Cn=Re[5]|0,Nr=Cn&8191,qr=Cn>>>13,Dn=Re[6]|0,xr=Dn&8191,Qr=Dn>>>13,Te=Re[7]|0,Ne=Te&8191,Ke=Te>>>13,Be=Re[8]|0,Ge=Be&8191,rt=Be>>>13,st=Re[9]|0,dt=st&8191,wt=st>>>13;Oe.negative=ve.negative^ke.negative,Oe.length=19,Je=Math.imul(it,Ur),Ie=Math.imul(it,Ir),Ie=Ie+Math.imul(Ze,Ur)|0,De=Math.imul(Ze,Ir);var _t=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(_t>>>26)|0,_t&=67108863,Je=Math.imul(_e,Ur),Ie=Math.imul(_e,Ir),Ie=Ie+Math.imul(at,Ur)|0,De=Math.imul(at,Ir),Je=Je+Math.imul(it,Cr)|0,Ie=Ie+Math.imul(it,Tr)|0,Ie=Ie+Math.imul(Ze,Cr)|0,De=De+Math.imul(Ze,Tr)|0;var Wt=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(Wt>>>26)|0,Wt&=67108863,Je=Math.imul(pt,Ur),Ie=Math.imul(pt,Ir),Ie=Ie+Math.imul(kt,Ur)|0,De=Math.imul(kt,Ir),Je=Je+Math.imul(_e,Cr)|0,Ie=Ie+Math.imul(_e,Tr)|0,Ie=Ie+Math.imul(at,Cr)|0,De=De+Math.imul(at,Tr)|0,Je=Je+Math.imul(it,kr)|0,Ie=Ie+Math.imul(it,Rr)|0,Ie=Ie+Math.imul(Ze,kr)|0,De=De+Math.imul(Ze,Rr)|0;var yr=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(yr>>>26)|0,yr&=67108863,Je=Math.imul(zt,Ur),Ie=Math.imul(zt,Ir),Ie=Ie+Math.imul(or,Ur)|0,De=Math.imul(or,Ir),Je=Je+Math.imul(pt,Cr)|0,Ie=Ie+Math.imul(pt,Tr)|0,Ie=Ie+Math.imul(kt,Cr)|0,De=De+Math.imul(kt,Tr)|0,Je=Je+Math.imul(_e,kr)|0,Ie=Ie+Math.imul(_e,Rr)|0,Ie=Ie+Math.imul(at,kr)|0,De=De+Math.imul(at,Rr)|0,Je=Je+Math.imul(it,Xr)|0,Ie=Ie+Math.imul(it,Zr)|0,Ie=Ie+Math.imul(Ze,Xr)|0,De=De+Math.imul(Ze,Zr)|0;var Xt=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(Xt>>>26)|0,Xt&=67108863,Je=Math.imul(pr,Ur),Ie=Math.imul(pr,Ir),Ie=Ie+Math.imul(Mr,Ur)|0,De=Math.imul(Mr,Ir),Je=Je+Math.imul(zt,Cr)|0,Ie=Ie+Math.imul(zt,Tr)|0,Ie=Ie+Math.imul(or,Cr)|0,De=De+Math.imul(or,Tr)|0,Je=Je+Math.imul(pt,kr)|0,Ie=Ie+Math.imul(pt,Rr)|0,Ie=Ie+Math.imul(kt,kr)|0,De=De+Math.imul(kt,Rr)|0,Je=Je+Math.imul(_e,Xr)|0,Ie=Ie+Math.imul(_e,Zr)|0,Ie=Ie+Math.imul(at,Xr)|0,De=De+Math.imul(at,Zr)|0,Je=Je+Math.imul(it,vr)|0,Ie=Ie+Math.imul(it,Sr)|0,Ie=Ie+Math.imul(Ze,vr)|0,De=De+Math.imul(Ze,Sr)|0;var sr=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(sr>>>26)|0,sr&=67108863,Je=Math.imul(jr,Ur),Ie=Math.imul(jr,Ir),Ie=Ie+Math.imul(Br,Ur)|0,De=Math.imul(Br,Ir),Je=Je+Math.imul(pr,Cr)|0,Ie=Ie+Math.imul(pr,Tr)|0,Ie=Ie+Math.imul(Mr,Cr)|0,De=De+Math.imul(Mr,Tr)|0,Je=Je+Math.imul(zt,kr)|0,Ie=Ie+Math.imul(zt,Rr)|0,Ie=Ie+Math.imul(or,kr)|0,De=De+Math.imul(or,Rr)|0,Je=Je+Math.imul(pt,Xr)|0,Ie=Ie+Math.imul(pt,Zr)|0,Ie=Ie+Math.imul(kt,Xr)|0,De=De+Math.imul(kt,Zr)|0,Je=Je+Math.imul(_e,vr)|0,Ie=Ie+Math.imul(_e,Sr)|0,Ie=Ie+Math.imul(at,vr)|0,De=De+Math.imul(at,Sr)|0,Je=Je+Math.imul(it,Nr)|0,Ie=Ie+Math.imul(it,qr)|0,Ie=Ie+Math.imul(Ze,Nr)|0,De=De+Math.imul(Ze,qr)|0;var cr=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(cr>>>26)|0,cr&=67108863,Je=Math.imul(Vr,Ur),Ie=Math.imul(Vr,Ir),Ie=Ie+Math.imul(Jr,Ur)|0,De=Math.imul(Jr,Ir),Je=Je+Math.imul(jr,Cr)|0,Ie=Ie+Math.imul(jr,Tr)|0,Ie=Ie+Math.imul(Br,Cr)|0,De=De+Math.imul(Br,Tr)|0,Je=Je+Math.imul(pr,kr)|0,Ie=Ie+Math.imul(pr,Rr)|0,Ie=Ie+Math.imul(Mr,kr)|0,De=De+Math.imul(Mr,Rr)|0,Je=Je+Math.imul(zt,Xr)|0,Ie=Ie+Math.imul(zt,Zr)|0,Ie=Ie+Math.imul(or,Xr)|0,De=De+Math.imul(or,Zr)|0,Je=Je+Math.imul(pt,vr)|0,Ie=Ie+Math.imul(pt,Sr)|0,Ie=Ie+Math.imul(kt,vr)|0,De=De+Math.imul(kt,Sr)|0,Je=Je+Math.imul(_e,Nr)|0,Ie=Ie+Math.imul(_e,qr)|0,Ie=Ie+Math.imul(at,Nr)|0,De=De+Math.imul(at,qr)|0,Je=Je+Math.imul(it,xr)|0,Ie=Ie+Math.imul(it,Qr)|0,Ie=Ie+Math.imul(Ze,xr)|0,De=De+Math.imul(Ze,Qr)|0;var fr=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(fr>>>26)|0,fr&=67108863,Je=Math.imul(Fr,Ur),Ie=Math.imul(Fr,Ir),Ie=Ie+Math.imul(zr,Ur)|0,De=Math.imul(zr,Ir),Je=Je+Math.imul(Vr,Cr)|0,Ie=Ie+Math.imul(Vr,Tr)|0,Ie=Ie+Math.imul(Jr,Cr)|0,De=De+Math.imul(Jr,Tr)|0,Je=Je+Math.imul(jr,kr)|0,Ie=Ie+Math.imul(jr,Rr)|0,Ie=Ie+Math.imul(Br,kr)|0,De=De+Math.imul(Br,Rr)|0,Je=Je+Math.imul(pr,Xr)|0,Ie=Ie+Math.imul(pr,Zr)|0,Ie=Ie+Math.imul(Mr,Xr)|0,De=De+Math.imul(Mr,Zr)|0,Je=Je+Math.imul(zt,vr)|0,Ie=Ie+Math.imul(zt,Sr)|0,Ie=Ie+Math.imul(or,vr)|0,De=De+Math.imul(or,Sr)|0,Je=Je+Math.imul(pt,Nr)|0,Ie=Ie+Math.imul(pt,qr)|0,Ie=Ie+Math.imul(kt,Nr)|0,De=De+Math.imul(kt,qr)|0,Je=Je+Math.imul(_e,xr)|0,Ie=Ie+Math.imul(_e,Qr)|0,Ie=Ie+Math.imul(at,xr)|0,De=De+Math.imul(at,Qr)|0,Je=Je+Math.imul(it,Ne)|0,Ie=Ie+Math.imul(it,Ke)|0,Ie=Ie+Math.imul(Ze,Ne)|0,De=De+Math.imul(Ze,Ke)|0;var gr=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(gr>>>26)|0,gr&=67108863,Je=Math.imul(Yr,Ur),Ie=Math.imul(Yr,Ir),Ie=Ie+Math.imul(Hr,Ur)|0,De=Math.imul(Hr,Ir),Je=Je+Math.imul(Fr,Cr)|0,Ie=Ie+Math.imul(Fr,Tr)|0,Ie=Ie+Math.imul(zr,Cr)|0,De=De+Math.imul(zr,Tr)|0,Je=Je+Math.imul(Vr,kr)|0,Ie=Ie+Math.imul(Vr,Rr)|0,Ie=Ie+Math.imul(Jr,kr)|0,De=De+Math.imul(Jr,Rr)|0,Je=Je+Math.imul(jr,Xr)|0,Ie=Ie+Math.imul(jr,Zr)|0,Ie=Ie+Math.imul(Br,Xr)|0,De=De+Math.imul(Br,Zr)|0,Je=Je+Math.imul(pr,vr)|0,Ie=Ie+Math.imul(pr,Sr)|0,Ie=Ie+Math.imul(Mr,vr)|0,De=De+Math.imul(Mr,Sr)|0,Je=Je+Math.imul(zt,Nr)|0,Ie=Ie+Math.imul(zt,qr)|0,Ie=Ie+Math.imul(or,Nr)|0,De=De+Math.imul(or,qr)|0,Je=Je+Math.imul(pt,xr)|0,Ie=Ie+Math.imul(pt,Qr)|0,Ie=Ie+Math.imul(kt,xr)|0,De=De+Math.imul(kt,Qr)|0,Je=Je+Math.imul(_e,Ne)|0,Ie=Ie+Math.imul(_e,Ke)|0,Ie=Ie+Math.imul(at,Ne)|0,De=De+Math.imul(at,Ke)|0,Je=Je+Math.imul(it,Ge)|0,Ie=Ie+Math.imul(it,rt)|0,Ie=Ie+Math.imul(Ze,Ge)|0,De=De+Math.imul(Ze,rt)|0;var ur=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(ur>>>26)|0,ur&=67108863,Je=Math.imul(Wr,Ur),Ie=Math.imul(Wr,Ir),Ie=Ie+Math.imul(Pr,Ur)|0,De=Math.imul(Pr,Ir),Je=Je+Math.imul(Yr,Cr)|0,Ie=Ie+Math.imul(Yr,Tr)|0,Ie=Ie+Math.imul(Hr,Cr)|0,De=De+Math.imul(Hr,Tr)|0,Je=Je+Math.imul(Fr,kr)|0,Ie=Ie+Math.imul(Fr,Rr)|0,Ie=Ie+Math.imul(zr,kr)|0,De=De+Math.imul(zr,Rr)|0,Je=Je+Math.imul(Vr,Xr)|0,Ie=Ie+Math.imul(Vr,Zr)|0,Ie=Ie+Math.imul(Jr,Xr)|0,De=De+Math.imul(Jr,Zr)|0,Je=Je+Math.imul(jr,vr)|0,Ie=Ie+Math.imul(jr,Sr)|0,Ie=Ie+Math.imul(Br,vr)|0,De=De+Math.imul(Br,Sr)|0,Je=Je+Math.imul(pr,Nr)|0,Ie=Ie+Math.imul(pr,qr)|0,Ie=Ie+Math.imul(Mr,Nr)|0,De=De+Math.imul(Mr,qr)|0,Je=Je+Math.imul(zt,xr)|0,Ie=Ie+Math.imul(zt,Qr)|0,Ie=Ie+Math.imul(or,xr)|0,De=De+Math.imul(or,Qr)|0,Je=Je+Math.imul(pt,Ne)|0,Ie=Ie+Math.imul(pt,Ke)|0,Ie=Ie+Math.imul(kt,Ne)|0,De=De+Math.imul(kt,Ke)|0,Je=Je+Math.imul(_e,Ge)|0,Ie=Ie+Math.imul(_e,rt)|0,Ie=Ie+Math.imul(at,Ge)|0,De=De+Math.imul(at,rt)|0,Je=Je+Math.imul(it,dt)|0,Ie=Ie+Math.imul(it,wt)|0,Ie=Ie+Math.imul(Ze,dt)|0,De=De+Math.imul(Ze,wt)|0;var dr=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(dr>>>26)|0,dr&=67108863,Je=Math.imul(Wr,Cr),Ie=Math.imul(Wr,Tr),Ie=Ie+Math.imul(Pr,Cr)|0,De=Math.imul(Pr,Tr),Je=Je+Math.imul(Yr,kr)|0,Ie=Ie+Math.imul(Yr,Rr)|0,Ie=Ie+Math.imul(Hr,kr)|0,De=De+Math.imul(Hr,Rr)|0,Je=Je+Math.imul(Fr,Xr)|0,Ie=Ie+Math.imul(Fr,Zr)|0,Ie=Ie+Math.imul(zr,Xr)|0,De=De+Math.imul(zr,Zr)|0,Je=Je+Math.imul(Vr,vr)|0,Ie=Ie+Math.imul(Vr,Sr)|0,Ie=Ie+Math.imul(Jr,vr)|0,De=De+Math.imul(Jr,Sr)|0,Je=Je+Math.imul(jr,Nr)|0,Ie=Ie+Math.imul(jr,qr)|0,Ie=Ie+Math.imul(Br,Nr)|0,De=De+Math.imul(Br,qr)|0,Je=Je+Math.imul(pr,xr)|0,Ie=Ie+Math.imul(pr,Qr)|0,Ie=Ie+Math.imul(Mr,xr)|0,De=De+Math.imul(Mr,Qr)|0,Je=Je+Math.imul(zt,Ne)|0,Ie=Ie+Math.imul(zt,Ke)|0,Ie=Ie+Math.imul(or,Ne)|0,De=De+Math.imul(or,Ke)|0,Je=Je+Math.imul(pt,Ge)|0,Ie=Ie+Math.imul(pt,rt)|0,Ie=Ie+Math.imul(kt,Ge)|0,De=De+Math.imul(kt,rt)|0,Je=Je+Math.imul(_e,dt)|0,Ie=Ie+Math.imul(_e,wt)|0,Ie=Ie+Math.imul(at,dt)|0,De=De+Math.imul(at,wt)|0;var lr=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(lr>>>26)|0,lr&=67108863,Je=Math.imul(Wr,kr),Ie=Math.imul(Wr,Rr),Ie=Ie+Math.imul(Pr,kr)|0,De=Math.imul(Pr,Rr),Je=Je+Math.imul(Yr,Xr)|0,Ie=Ie+Math.imul(Yr,Zr)|0,Ie=Ie+Math.imul(Hr,Xr)|0,De=De+Math.imul(Hr,Zr)|0,Je=Je+Math.imul(Fr,vr)|0,Ie=Ie+Math.imul(Fr,Sr)|0,Ie=Ie+Math.imul(zr,vr)|0,De=De+Math.imul(zr,Sr)|0,Je=Je+Math.imul(Vr,Nr)|0,Ie=Ie+Math.imul(Vr,qr)|0,Ie=Ie+Math.imul(Jr,Nr)|0,De=De+Math.imul(Jr,qr)|0,Je=Je+Math.imul(jr,xr)|0,Ie=Ie+Math.imul(jr,Qr)|0,Ie=Ie+Math.imul(Br,xr)|0,De=De+Math.imul(Br,Qr)|0,Je=Je+Math.imul(pr,Ne)|0,Ie=Ie+Math.imul(pr,Ke)|0,Ie=Ie+Math.imul(Mr,Ne)|0,De=De+Math.imul(Mr,Ke)|0,Je=Je+Math.imul(zt,Ge)|0,Ie=Ie+Math.imul(zt,rt)|0,Ie=Ie+Math.imul(or,Ge)|0,De=De+Math.imul(or,rt)|0,Je=Je+Math.imul(pt,dt)|0,Ie=Ie+Math.imul(pt,wt)|0,Ie=Ie+Math.imul(kt,dt)|0,De=De+Math.imul(kt,wt)|0;var tr=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(tr>>>26)|0,tr&=67108863,Je=Math.imul(Wr,Xr),Ie=Math.imul(Wr,Zr),Ie=Ie+Math.imul(Pr,Xr)|0,De=Math.imul(Pr,Zr),Je=Je+Math.imul(Yr,vr)|0,Ie=Ie+Math.imul(Yr,Sr)|0,Ie=Ie+Math.imul(Hr,vr)|0,De=De+Math.imul(Hr,Sr)|0,Je=Je+Math.imul(Fr,Nr)|0,Ie=Ie+Math.imul(Fr,qr)|0,Ie=Ie+Math.imul(zr,Nr)|0,De=De+Math.imul(zr,qr)|0,Je=Je+Math.imul(Vr,xr)|0,Ie=Ie+Math.imul(Vr,Qr)|0,Ie=Ie+Math.imul(Jr,xr)|0,De=De+Math.imul(Jr,Qr)|0,Je=Je+Math.imul(jr,Ne)|0,Ie=Ie+Math.imul(jr,Ke)|0,Ie=Ie+Math.imul(Br,Ne)|0,De=De+Math.imul(Br,Ke)|0,Je=Je+Math.imul(pr,Ge)|0,Ie=Ie+Math.imul(pr,rt)|0,Ie=Ie+Math.imul(Mr,Ge)|0,De=De+Math.imul(Mr,rt)|0,Je=Je+Math.imul(zt,dt)|0,Ie=Ie+Math.imul(zt,wt)|0,Ie=Ie+Math.imul(or,dt)|0,De=De+Math.imul(or,wt)|0;var ir=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(ir>>>26)|0,ir&=67108863,Je=Math.imul(Wr,vr),Ie=Math.imul(Wr,Sr),Ie=Ie+Math.imul(Pr,vr)|0,De=Math.imul(Pr,Sr),Je=Je+Math.imul(Yr,Nr)|0,Ie=Ie+Math.imul(Yr,qr)|0,Ie=Ie+Math.imul(Hr,Nr)|0,De=De+Math.imul(Hr,qr)|0,Je=Je+Math.imul(Fr,xr)|0,Ie=Ie+Math.imul(Fr,Qr)|0,Ie=Ie+Math.imul(zr,xr)|0,De=De+Math.imul(zr,Qr)|0,Je=Je+Math.imul(Vr,Ne)|0,Ie=Ie+Math.imul(Vr,Ke)|0,Ie=Ie+Math.imul(Jr,Ne)|0,De=De+Math.imul(Jr,Ke)|0,Je=Je+Math.imul(jr,Ge)|0,Ie=Ie+Math.imul(jr,rt)|0,Ie=Ie+Math.imul(Br,Ge)|0,De=De+Math.imul(Br,rt)|0,Je=Je+Math.imul(pr,dt)|0,Ie=Ie+Math.imul(pr,wt)|0,Ie=Ie+Math.imul(Mr,dt)|0,De=De+Math.imul(Mr,wt)|0;var Zt=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(Zt>>>26)|0,Zt&=67108863,Je=Math.imul(Wr,Nr),Ie=Math.imul(Wr,qr),Ie=Ie+Math.imul(Pr,Nr)|0,De=Math.imul(Pr,qr),Je=Je+Math.imul(Yr,xr)|0,Ie=Ie+Math.imul(Yr,Qr)|0,Ie=Ie+Math.imul(Hr,xr)|0,De=De+Math.imul(Hr,Qr)|0,Je=Je+Math.imul(Fr,Ne)|0,Ie=Ie+Math.imul(Fr,Ke)|0,Ie=Ie+Math.imul(zr,Ne)|0,De=De+Math.imul(zr,Ke)|0,Je=Je+Math.imul(Vr,Ge)|0,Ie=Ie+Math.imul(Vr,rt)|0,Ie=Ie+Math.imul(Jr,Ge)|0,De=De+Math.imul(Jr,rt)|0,Je=Je+Math.imul(jr,dt)|0,Ie=Ie+Math.imul(jr,wt)|0,Ie=Ie+Math.imul(Br,dt)|0,De=De+Math.imul(Br,wt)|0;var rr=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(rr>>>26)|0,rr&=67108863,Je=Math.imul(Wr,xr),Ie=Math.imul(Wr,Qr),Ie=Ie+Math.imul(Pr,xr)|0,De=Math.imul(Pr,Qr),Je=Je+Math.imul(Yr,Ne)|0,Ie=Ie+Math.imul(Yr,Ke)|0,Ie=Ie+Math.imul(Hr,Ne)|0,De=De+Math.imul(Hr,Ke)|0,Je=Je+Math.imul(Fr,Ge)|0,Ie=Ie+Math.imul(Fr,rt)|0,Ie=Ie+Math.imul(zr,Ge)|0,De=De+Math.imul(zr,rt)|0,Je=Je+Math.imul(Vr,dt)|0,Ie=Ie+Math.imul(Vr,wt)|0,Ie=Ie+Math.imul(Jr,dt)|0,De=De+Math.imul(Jr,wt)|0;var nr=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(nr>>>26)|0,nr&=67108863,Je=Math.imul(Wr,Ne),Ie=Math.imul(Wr,Ke),Ie=Ie+Math.imul(Pr,Ne)|0,De=Math.imul(Pr,Ke),Je=Je+Math.imul(Yr,Ge)|0,Ie=Ie+Math.imul(Yr,rt)|0,Ie=Ie+Math.imul(Hr,Ge)|0,De=De+Math.imul(Hr,rt)|0,Je=Je+Math.imul(Fr,dt)|0,Ie=Ie+Math.imul(Fr,wt)|0,Ie=Ie+Math.imul(zr,dt)|0,De=De+Math.imul(zr,wt)|0;var $t=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+($t>>>26)|0,$t&=67108863,Je=Math.imul(Wr,Ge),Ie=Math.imul(Wr,rt),Ie=Ie+Math.imul(Pr,Ge)|0,De=Math.imul(Pr,rt),Je=Je+Math.imul(Yr,dt)|0,Ie=Ie+Math.imul(Yr,wt)|0,Ie=Ie+Math.imul(Hr,dt)|0,De=De+Math.imul(Hr,wt)|0;var ft=(Xe+Je|0)+((Ie&8191)<<13)|0;Xe=(De+(Ie>>>13)|0)+(ft>>>26)|0,ft&=67108863,Je=Math.imul(Wr,dt),Ie=Math.imul(Wr,wt),Ie=Ie+Math.imul(Pr,dt)|0,De=Math.imul(Pr,wt);var lt=(Xe+Je|0)+((Ie&8191)<<13)|0;return Xe=(De+(Ie>>>13)|0)+(lt>>>26)|0,lt&=67108863,Ye[0]=_t,Ye[1]=Wt,Ye[2]=yr,Ye[3]=Xt,Ye[4]=sr,Ye[5]=cr,Ye[6]=fr,Ye[7]=gr,Ye[8]=ur,Ye[9]=dr,Ye[10]=lr,Ye[11]=tr,Ye[12]=ir,Ye[13]=Zt,Ye[14]=rr,Ye[15]=nr,Ye[16]=$t,Ye[17]=ft,Ye[18]=lt,Xe!==0&&(Ye[19]=Xe,Oe.length++),Oe};Math.imul||(Fe=Me);function Ue(ze,ve,ke){ke.negative=ve.negative^ze.negative,ke.length=ze.length+ve.length;for(var Oe=0,Pe=0,Re=0;Re<ke.length-1;Re++){var Ye=Pe;Pe=0;for(var Xe=Oe&67108863,Je=Math.min(Re,ve.length-1),Ie=Math.max(0,Re-ze.length+1);Ie<=Je;Ie++){var De=Re-Ie,We=ze.words[De]|0,it=ve.words[Ie]|0,Ze=We*it,Ce=Ze&67108863;Ye=Ye+(Ze/67108864|0)|0,Ce=Ce+Xe|0,Xe=Ce&67108863,Ye=Ye+(Ce>>>26)|0,Pe+=Ye>>>26,Ye&=67108863}ke.words[Re]=Xe,Oe=Ye,Ye=Pe}return Oe!==0?ke.words[Re]=Oe:ke.length--,ke.strip()}function qe(ze,ve,ke){var Oe=new $e;return Oe.mulp(ze,ve,ke)}ye.prototype.mulTo=function(ve,ke){var Oe,Pe=this.length+ve.length;return this.length===10&&ve.length===10?Oe=Fe(this,ve,ke):Pe<63?Oe=Me(this,ve,ke):Pe<1024?Oe=Ue(this,ve,ke):Oe=qe(this,ve,ke),Oe};function $e(ze,ve){this.x=ze,this.y=ve}$e.prototype.makeRBT=function(ve){for(var ke=new Array(ve),Oe=ye.prototype._countBits(ve)-1,Pe=0;Pe<ve;Pe++)ke[Pe]=this.revBin(Pe,Oe,ve);return ke},$e.prototype.revBin=function(ve,ke,Oe){if(ve===0||ve===Oe-1)return ve;for(var Pe=0,Re=0;Re<ke;Re++)Pe|=(ve&1)<<ke-Re-1,ve>>=1;return Pe},$e.prototype.permute=function(ve,ke,Oe,Pe,Re,Ye){for(var Xe=0;Xe<Ye;Xe++)Pe[Xe]=ke[ve[Xe]],Re[Xe]=Oe[ve[Xe]]},$e.prototype.transform=function(ve,ke,Oe,Pe,Re,Ye){this.permute(Ye,ve,ke,Oe,Pe,Re);for(var Xe=1;Xe<Re;Xe<<=1)for(var Je=Xe<<1,Ie=Math.cos(2*Math.PI/Je),De=Math.sin(2*Math.PI/Je),We=0;We<Re;We+=Je)for(var it=Ie,Ze=De,Ce=0;Ce<Xe;Ce++){var _e=Oe[We+Ce],at=Pe[We+Ce],yt=Oe[We+Ce+Xe],pt=Pe[We+Ce+Xe],kt=it*yt-Ze*pt;pt=it*pt+Ze*yt,yt=kt,Oe[We+Ce]=_e+yt,Pe[We+Ce]=at+pt,Oe[We+Ce+Xe]=_e-yt,Pe[We+Ce+Xe]=at-pt,Ce!==Je&&(kt=Ie*it-De*Ze,Ze=Ie*Ze+De*it,it=kt)}},$e.prototype.guessLen13b=function(ve,ke){var Oe=Math.max(ke,ve)|1,Pe=Oe&1,Re=0;for(Oe=Oe/2|0;Oe;Oe=Oe>>>1)Re++;return 1<<Re+1+Pe},$e.prototype.conjugate=function(ve,ke,Oe){if(!(Oe<=1))for(var Pe=0;Pe<Oe/2;Pe++){var Re=ve[Pe];ve[Pe]=ve[Oe-Pe-1],ve[Oe-Pe-1]=Re,Re=ke[Pe],ke[Pe]=-ke[Oe-Pe-1],ke[Oe-Pe-1]=-Re}},$e.prototype.normalize13b=function(ve,ke){for(var Oe=0,Pe=0;Pe<ke/2;Pe++){var Re=Math.round(ve[2*Pe+1]/ke)*8192+Math.round(ve[2*Pe]/ke)+Oe;ve[Pe]=Re&67108863,Re<67108864?Oe=0:Oe=Re/67108864|0}return ve},$e.prototype.convert13b=function(ve,ke,Oe,Pe){for(var Re=0,Ye=0;Ye<ke;Ye++)Re=Re+(ve[Ye]|0),Oe[2*Ye]=Re&8191,Re=Re>>>13,Oe[2*Ye+1]=Re&8191,Re=Re>>>13;for(Ye=2*ke;Ye<Pe;++Ye)Oe[Ye]=0;pe(Re===0),pe((Re&-8192)===0)},$e.prototype.stub=function(ve){for(var ke=new Array(ve),Oe=0;Oe<ve;Oe++)ke[Oe]=0;return ke},$e.prototype.mulp=function(ve,ke,Oe){var Pe=2*this.guessLen13b(ve.length,ke.length),Re=this.makeRBT(Pe),Ye=this.stub(Pe),Xe=new Array(Pe),Je=new Array(Pe),Ie=new Array(Pe),De=new Array(Pe),We=new Array(Pe),it=new Array(Pe),Ze=Oe.words;Ze.length=Pe,this.convert13b(ve.words,ve.length,Xe,Pe),this.convert13b(ke.words,ke.length,De,Pe),this.transform(Xe,Ye,Je,Ie,Pe,Re),this.transform(De,Ye,We,it,Pe,Re);for(var Ce=0;Ce<Pe;Ce++){var _e=Je[Ce]*We[Ce]-Ie[Ce]*it[Ce];Ie[Ce]=Je[Ce]*it[Ce]+Ie[Ce]*We[Ce],Je[Ce]=_e}return this.conjugate(Je,Ie,Pe),this.transform(Je,Ie,Ze,Ye,Pe,Re),this.conjugate(Ze,Ye,Pe),this.normalize13b(Ze,Pe),Oe.negative=ve.negative^ke.negative,Oe.length=ve.length+ke.length,Oe.strip()},ye.prototype.mul=function(ve){var ke=new ye(null);return ke.words=new Array(this.length+ve.length),this.mulTo(ve,ke)},ye.prototype.mulf=function(ve){var ke=new ye(null);return ke.words=new Array(this.length+ve.length),qe(this,ve,ke)},ye.prototype.imul=function(ve){return this.clone().mulTo(ve,this)},ye.prototype.imuln=function(ve){pe(typeof ve=="number"),pe(ve<67108864);for(var ke=0,Oe=0;Oe<this.length;Oe++){var Pe=(this.words[Oe]|0)*ve,Re=(Pe&67108863)+(ke&67108863);ke>>=26,ke+=Pe/67108864|0,ke+=Re>>>26,this.words[Oe]=Re&67108863}return ke!==0&&(this.words[Oe]=ke,this.length++),this},ye.prototype.muln=function(ve){return this.clone().imuln(ve)},ye.prototype.sqr=function(){return this.mul(this)},ye.prototype.isqr=function(){return this.imul(this.clone())},ye.prototype.pow=function(ve){var ke=He(ve);if(ke.length===0)return new ye(1);for(var Oe=this,Pe=0;Pe<ke.length&&ke[Pe]===0;Pe++,Oe=Oe.sqr());if(++Pe<ke.length)for(var Re=Oe.sqr();Pe<ke.length;Pe++,Re=Re.sqr())ke[Pe]!==0&&(Oe=Oe.mul(Re));return Oe},ye.prototype.iushln=function(ve){pe(typeof ve=="number"&&ve>=0);var ke=ve%26,Oe=(ve-ke)/26,Pe=67108863>>>26-ke<<26-ke,Re;if(ke!==0){var Ye=0;for(Re=0;Re<this.length;Re++){var Xe=this.words[Re]&Pe,Je=(this.words[Re]|0)-Xe<<ke;this.words[Re]=Je|Ye,Ye=Xe>>>26-ke}Ye&&(this.words[Re]=Ye,this.length++)}if(Oe!==0){for(Re=this.length-1;Re>=0;Re--)this.words[Re+Oe]=this.words[Re];for(Re=0;Re<Oe;Re++)this.words[Re]=0;this.length+=Oe}return this.strip()},ye.prototype.ishln=function(ve){return pe(this.negative===0),this.iushln(ve)},ye.prototype.iushrn=function(ve,ke,Oe){pe(typeof ve=="number"&&ve>=0);var Pe;ke?Pe=(ke-ke%26)/26:Pe=0;var Re=ve%26,Ye=Math.min((ve-Re)/26,this.length),Xe=67108863^67108863>>>Re<<Re,Je=Oe;if(Pe-=Ye,Pe=Math.max(0,Pe),Je){for(var Ie=0;Ie<Ye;Ie++)Je.words[Ie]=this.words[Ie];Je.length=Ye}if(Ye!==0)if(this.length>Ye)for(this.length-=Ye,Ie=0;Ie<this.length;Ie++)this.words[Ie]=this.words[Ie+Ye];else this.words[0]=0,this.length=1;var De=0;for(Ie=this.length-1;Ie>=0&&(De!==0||Ie>=Pe);Ie--){var We=this.words[Ie]|0;this.words[Ie]=De<<26-Re|We>>>Re,De=We&Xe}return Je&&De!==0&&(Je.words[Je.length++]=De),this.length===0&&(this.words[0]=0,this.length=1),this.strip()},ye.prototype.ishrn=function(ve,ke,Oe){return pe(this.negative===0),this.iushrn(ve,ke,Oe)},ye.prototype.shln=function(ve){return this.clone().ishln(ve)},ye.prototype.ushln=function(ve){return this.clone().iushln(ve)},ye.prototype.shrn=function(ve){return this.clone().ishrn(ve)},ye.prototype.ushrn=function(ve){return this.clone().iushrn(ve)},ye.prototype.testn=function(ve){pe(typeof ve=="number"&&ve>=0);var ke=ve%26,Oe=(ve-ke)/26,Pe=1<<ke;if(this.length<=Oe)return!1;var Re=this.words[Oe];return!!(Re&Pe)},ye.prototype.imaskn=function(ve){pe(typeof ve=="number"&&ve>=0);var ke=ve%26,Oe=(ve-ke)/26;if(pe(this.negative===0,"imaskn works only with positive numbers"),this.length<=Oe)return this;if(ke!==0&&Oe++,this.length=Math.min(Oe,this.length),ke!==0){var Pe=67108863^67108863>>>ke<<ke;this.words[this.length-1]&=Pe}return this.strip()},ye.prototype.maskn=function(ve){return this.clone().imaskn(ve)},ye.prototype.iaddn=function(ve){return pe(typeof ve=="number"),pe(ve<67108864),ve<0?this.isubn(-ve):this.negative!==0?this.length===1&&(this.words[0]|0)<ve?(this.words[0]=ve-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(ve),this.negative=1,this):this._iaddn(ve)},ye.prototype._iaddn=function(ve){this.words[0]+=ve;for(var ke=0;ke<this.length&&this.words[ke]>=67108864;ke++)this.words[ke]-=67108864,ke===this.length-1?this.words[ke+1]=1:this.words[ke+1]++;return this.length=Math.max(this.length,ke+1),this},ye.prototype.isubn=function(ve){if(pe(typeof ve=="number"),pe(ve<67108864),ve<0)return this.iaddn(-ve);if(this.negative!==0)return this.negative=0,this.iaddn(ve),this.negative=1,this;if(this.words[0]-=ve,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var ke=0;ke<this.length&&this.words[ke]<0;ke++)this.words[ke]+=67108864,this.words[ke+1]-=1;return this.strip()},ye.prototype.addn=function(ve){return this.clone().iaddn(ve)},ye.prototype.subn=function(ve){return this.clone().isubn(ve)},ye.prototype.iabs=function(){return this.negative=0,this},ye.prototype.abs=function(){return this.clone().iabs()},ye.prototype._ishlnsubmul=function(ve,ke,Oe){var Pe=ve.length+Oe,Re;this._expand(Pe);var Ye,Xe=0;for(Re=0;Re<ve.length;Re++){Ye=(this.words[Re+Oe]|0)+Xe;var Je=(ve.words[Re]|0)*ke;Ye-=Je&67108863,Xe=(Ye>>26)-(Je/67108864|0),this.words[Re+Oe]=Ye&67108863}for(;Re<this.length-Oe;Re++)Ye=(this.words[Re+Oe]|0)+Xe,Xe=Ye>>26,this.words[Re+Oe]=Ye&67108863;if(Xe===0)return this.strip();for(pe(Xe===-1),Xe=0,Re=0;Re<this.length;Re++)Ye=-(this.words[Re]|0)+Xe,Xe=Ye>>26,this.words[Re]=Ye&67108863;return this.negative=1,this.strip()},ye.prototype._wordDiv=function(ve,ke){var Oe=this.length-ve.length,Pe=this.clone(),Re=ve,Ye=Re.words[Re.length-1]|0,Xe=this._countBits(Ye);Oe=26-Xe,Oe!==0&&(Re=Re.ushln(Oe),Pe.iushln(Oe),Ye=Re.words[Re.length-1]|0);var Je=Pe.length-Re.length,Ie;if(ke!=="mod"){Ie=new ye(null),Ie.length=Je+1,Ie.words=new Array(Ie.length);for(var De=0;De<Ie.length;De++)Ie.words[De]=0}var We=Pe.clone()._ishlnsubmul(Re,1,Je);We.negative===0&&(Pe=We,Ie&&(Ie.words[Je]=1));for(var it=Je-1;it>=0;it--){var Ze=(Pe.words[Re.length+it]|0)*67108864+(Pe.words[Re.length+it-1]|0);for(Ze=Math.min(Ze/Ye|0,67108863),Pe._ishlnsubmul(Re,Ze,it);Pe.negative!==0;)Ze--,Pe.negative=0,Pe._ishlnsubmul(Re,1,it),Pe.isZero()||(Pe.negative^=1);Ie&&(Ie.words[it]=Ze)}return Ie&&Ie.strip(),Pe.strip(),ke!=="div"&&Oe!==0&&Pe.iushrn(Oe),{div:Ie||null,mod:Pe}},ye.prototype.divmod=function(ve,ke,Oe){if(pe(!ve.isZero()),this.isZero())return{div:new ye(0),mod:new ye(0)};var Pe,Re,Ye;return this.negative!==0&&ve.negative===0?(Ye=this.neg().divmod(ve,ke),ke!=="mod"&&(Pe=Ye.div.neg()),ke!=="div"&&(Re=Ye.mod.neg(),Oe&&Re.negative!==0&&Re.iadd(ve)),{div:Pe,mod:Re}):this.negative===0&&ve.negative!==0?(Ye=this.divmod(ve.neg(),ke),ke!=="mod"&&(Pe=Ye.div.neg()),{div:Pe,mod:Ye.mod}):this.negative&ve.negative?(Ye=this.neg().divmod(ve.neg(),ke),ke!=="div"&&(Re=Ye.mod.neg(),Oe&&Re.negative!==0&&Re.isub(ve)),{div:Ye.div,mod:Re}):ve.length>this.length||this.cmp(ve)<0?{div:new ye(0),mod:this}:ve.length===1?ke==="div"?{div:this.divn(ve.words[0]),mod:null}:ke==="mod"?{div:null,mod:new ye(this.modn(ve.words[0]))}:{div:this.divn(ve.words[0]),mod:new ye(this.modn(ve.words[0]))}:this._wordDiv(ve,ke)},ye.prototype.div=function(ve){return this.divmod(ve,"div",!1).div},ye.prototype.mod=function(ve){return this.divmod(ve,"mod",!1).mod},ye.prototype.umod=function(ve){return this.divmod(ve,"mod",!0).mod},ye.prototype.divRound=function(ve){var ke=this.divmod(ve);if(ke.mod.isZero())return ke.div;var Oe=ke.div.negative!==0?ke.mod.isub(ve):ke.mod,Pe=ve.ushrn(1),Re=ve.andln(1),Ye=Oe.cmp(Pe);return Ye<0||Re===1&&Ye===0?ke.div:ke.div.negative!==0?ke.div.isubn(1):ke.div.iaddn(1)},ye.prototype.modn=function(ve){pe(ve<=67108863);for(var ke=(1<<26)%ve,Oe=0,Pe=this.length-1;Pe>=0;Pe--)Oe=(ke*Oe+(this.words[Pe]|0))%ve;return Oe},ye.prototype.idivn=function(ve){pe(ve<=67108863);for(var ke=0,Oe=this.length-1;Oe>=0;Oe--){var Pe=(this.words[Oe]|0)+ke*67108864;this.words[Oe]=Pe/ve|0,ke=Pe%ve}return this.strip()},ye.prototype.divn=function(ve){return this.clone().idivn(ve)},ye.prototype.egcd=function(ve){pe(ve.negative===0),pe(!ve.isZero());var ke=this,Oe=ve.clone();ke.negative!==0?ke=ke.umod(ve):ke=ke.clone();for(var Pe=new ye(1),Re=new ye(0),Ye=new ye(0),Xe=new ye(1),Je=0;ke.isEven()&&Oe.isEven();)ke.iushrn(1),Oe.iushrn(1),++Je;for(var Ie=Oe.clone(),De=ke.clone();!ke.isZero();){for(var We=0,it=1;!(ke.words[0]&it)&&We<26;++We,it<<=1);if(We>0)for(ke.iushrn(We);We-- >0;)(Pe.isOdd()||Re.isOdd())&&(Pe.iadd(Ie),Re.isub(De)),Pe.iushrn(1),Re.iushrn(1);for(var Ze=0,Ce=1;!(Oe.words[0]&Ce)&&Ze<26;++Ze,Ce<<=1);if(Ze>0)for(Oe.iushrn(Ze);Ze-- >0;)(Ye.isOdd()||Xe.isOdd())&&(Ye.iadd(Ie),Xe.isub(De)),Ye.iushrn(1),Xe.iushrn(1);ke.cmp(Oe)>=0?(ke.isub(Oe),Pe.isub(Ye),Re.isub(Xe)):(Oe.isub(ke),Ye.isub(Pe),Xe.isub(Re))}return{a:Ye,b:Xe,gcd:Oe.iushln(Je)}},ye.prototype._invmp=function(ve){pe(ve.negative===0),pe(!ve.isZero());var ke=this,Oe=ve.clone();ke.negative!==0?ke=ke.umod(ve):ke=ke.clone();for(var Pe=new ye(1),Re=new ye(0),Ye=Oe.clone();ke.cmpn(1)>0&&Oe.cmpn(1)>0;){for(var Xe=0,Je=1;!(ke.words[0]&Je)&&Xe<26;++Xe,Je<<=1);if(Xe>0)for(ke.iushrn(Xe);Xe-- >0;)Pe.isOdd()&&Pe.iadd(Ye),Pe.iushrn(1);for(var Ie=0,De=1;!(Oe.words[0]&De)&&Ie<26;++Ie,De<<=1);if(Ie>0)for(Oe.iushrn(Ie);Ie-- >0;)Re.isOdd()&&Re.iadd(Ye),Re.iushrn(1);ke.cmp(Oe)>=0?(ke.isub(Oe),Pe.isub(Re)):(Oe.isub(ke),Re.isub(Pe))}var We;return ke.cmpn(1)===0?We=Pe:We=Re,We.cmpn(0)<0&&We.iadd(ve),We},ye.prototype.gcd=function(ve){if(this.isZero())return ve.abs();if(ve.isZero())return this.abs();var ke=this.clone(),Oe=ve.clone();ke.negative=0,Oe.negative=0;for(var Pe=0;ke.isEven()&&Oe.isEven();Pe++)ke.iushrn(1),Oe.iushrn(1);do{for(;ke.isEven();)ke.iushrn(1);for(;Oe.isEven();)Oe.iushrn(1);var Re=ke.cmp(Oe);if(Re<0){var Ye=ke;ke=Oe,Oe=Ye}else if(Re===0||Oe.cmpn(1)===0)break;ke.isub(Oe)}while(!0);return Oe.iushln(Pe)},ye.prototype.invm=function(ve){return this.egcd(ve).a.umod(ve)},ye.prototype.isEven=function(){return(this.words[0]&1)===0},ye.prototype.isOdd=function(){return(this.words[0]&1)===1},ye.prototype.andln=function(ve){return this.words[0]&ve},ye.prototype.bincn=function(ve){pe(typeof ve=="number");var ke=ve%26,Oe=(ve-ke)/26,Pe=1<<ke;if(this.length<=Oe)return this._expand(Oe+1),this.words[Oe]|=Pe,this;for(var Re=Pe,Ye=Oe;Re!==0&&Ye<this.length;Ye++){var Xe=this.words[Ye]|0;Xe+=Re,Re=Xe>>>26,Xe&=67108863,this.words[Ye]=Xe}return Re!==0&&(this.words[Ye]=Re,this.length++),this},ye.prototype.isZero=function(){return this.length===1&&this.words[0]===0},ye.prototype.cmpn=function(ve){var ke=ve<0;if(this.negative!==0&&!ke)return-1;if(this.negative===0&&ke)return 1;this.strip();var Oe;if(this.length>1)Oe=1;else{ke&&(ve=-ve),pe(ve<=67108863,"Number is too big");var Pe=this.words[0]|0;Oe=Pe===ve?0:Pe<ve?-1:1}return this.negative!==0?-Oe|0:Oe},ye.prototype.cmp=function(ve){if(this.negative!==0&&ve.negative===0)return-1;if(this.negative===0&&ve.negative!==0)return 1;var ke=this.ucmp(ve);return this.negative!==0?-ke|0:ke},ye.prototype.ucmp=function(ve){if(this.length>ve.length)return 1;if(this.length<ve.length)return-1;for(var ke=0,Oe=this.length-1;Oe>=0;Oe--){var Pe=this.words[Oe]|0,Re=ve.words[Oe]|0;if(Pe!==Re){Pe<Re?ke=-1:Pe>Re&&(ke=1);break}}return ke},ye.prototype.gtn=function(ve){return this.cmpn(ve)===1},ye.prototype.gt=function(ve){return this.cmp(ve)===1},ye.prototype.gten=function(ve){return this.cmpn(ve)>=0},ye.prototype.gte=function(ve){return this.cmp(ve)>=0},ye.prototype.ltn=function(ve){return this.cmpn(ve)===-1},ye.prototype.lt=function(ve){return this.cmp(ve)===-1},ye.prototype.lten=function(ve){return this.cmpn(ve)<=0},ye.prototype.lte=function(ve){return this.cmp(ve)<=0},ye.prototype.eqn=function(ve){return this.cmpn(ve)===0},ye.prototype.eq=function(ve){return this.cmp(ve)===0},ye.red=function(ve){return new Ht(ve)},ye.prototype.toRed=function(ve){return pe(!this.red,"Already a number in reduction context"),pe(this.negative===0,"red works only with positives"),ve.convertTo(this)._forceRed(ve)},ye.prototype.fromRed=function(){return pe(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},ye.prototype._forceRed=function(ve){return this.red=ve,this},ye.prototype.forceRed=function(ve){return pe(!this.red,"Already a number in reduction context"),this._forceRed(ve)},ye.prototype.redAdd=function(ve){return pe(this.red,"redAdd works only with red numbers"),this.red.add(this,ve)},ye.prototype.redIAdd=function(ve){return pe(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,ve)},ye.prototype.redSub=function(ve){return pe(this.red,"redSub works only with red numbers"),this.red.sub(this,ve)},ye.prototype.redISub=function(ve){return pe(this.red,"redISub works only with red numbers"),this.red.isub(this,ve)},ye.prototype.redShl=function(ve){return pe(this.red,"redShl works only with red numbers"),this.red.shl(this,ve)},ye.prototype.redMul=function(ve){return pe(this.red,"redMul works only with red numbers"),this.red._verify2(this,ve),this.red.mul(this,ve)},ye.prototype.redIMul=function(ve){return pe(this.red,"redMul works only with red numbers"),this.red._verify2(this,ve),this.red.imul(this,ve)},ye.prototype.redSqr=function(){return pe(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},ye.prototype.redISqr=function(){return pe(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},ye.prototype.redSqrt=function(){return pe(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},ye.prototype.redInvm=function(){return pe(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},ye.prototype.redNeg=function(){return pe(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},ye.prototype.redPow=function(ve){return pe(this.red&&!ve.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,ve)};var Qe={k256:null,p224:null,p192:null,p25519:null};function ot(ze,ve){this.name=ze,this.p=new ye(ve,16),this.n=this.p.bitLength(),this.k=new ye(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}ot.prototype._tmp=function(){var ve=new ye(null);return ve.words=new Array(Math.ceil(this.n/13)),ve},ot.prototype.ireduce=function(ve){var ke=ve,Oe;do this.split(ke,this.tmp),ke=this.imulK(ke),ke=ke.iadd(this.tmp),Oe=ke.bitLength();while(Oe>this.n);var Pe=Oe<this.n?-1:ke.ucmp(this.p);return Pe===0?(ke.words[0]=0,ke.length=1):Pe>0?ke.isub(this.p):ke.strip!==void 0?ke.strip():ke._strip(),ke},ot.prototype.split=function(ve,ke){ve.iushrn(this.n,0,ke)},ot.prototype.imulK=function(ve){return ve.imul(this.k)};function nt(){ot.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}ge(nt,ot),nt.prototype.split=function(ve,ke){for(var Oe=4194303,Pe=Math.min(ve.length,9),Re=0;Re<Pe;Re++)ke.words[Re]=ve.words[Re];if(ke.length=Pe,ve.length<=9){ve.words[0]=0,ve.length=1;return}var Ye=ve.words[9];for(ke.words[ke.length++]=Ye&Oe,Re=10;Re<ve.length;Re++){var Xe=ve.words[Re]|0;ve.words[Re-10]=(Xe&Oe)<<4|Ye>>>22,Ye=Xe}Ye>>>=22,ve.words[Re-10]=Ye,Ye===0&&ve.length>10?ve.length-=10:ve.length-=9},nt.prototype.imulK=function(ve){ve.words[ve.length]=0,ve.words[ve.length+1]=0,ve.length+=2;for(var ke=0,Oe=0;Oe<ve.length;Oe++){var Pe=ve.words[Oe]|0;ke+=Pe*977,ve.words[Oe]=ke&67108863,ke=Pe*64+(ke/67108864|0)}return ve.words[ve.length-1]===0&&(ve.length--,ve.words[ve.length-1]===0&&ve.length--),ve};function ct(){ot.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}ge(ct,ot);function mt(){ot.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}ge(mt,ot);function gt(){ot.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}ge(gt,ot),gt.prototype.imulK=function(ve){for(var ke=0,Oe=0;Oe<ve.length;Oe++){var Pe=(ve.words[Oe]|0)*19+ke,Re=Pe&67108863;Pe>>>=26,ve.words[Oe]=Re,ke=Pe}return ke!==0&&(ve.words[ve.length++]=ke),ve},ye._prime=function(ve){if(Qe[ve])return Qe[ve];var ke;if(ve==="k256")ke=new nt;else if(ve==="p224")ke=new ct;else if(ve==="p192")ke=new mt;else if(ve==="p25519")ke=new gt;else throw new Error("Unknown prime "+ve);return Qe[ve]=ke,ke};function Ht(ze){if(typeof ze=="string"){var ve=ye._prime(ze);this.m=ve.p,this.prime=ve}else pe(ze.gtn(1),"modulus must be greater than 1"),this.m=ze,this.prime=null}Ht.prototype._verify1=function(ve){pe(ve.negative===0,"red works only with positives"),pe(ve.red,"red works only with red numbers")},Ht.prototype._verify2=function(ve,ke){pe((ve.negative|ke.negative)===0,"red works only with positives"),pe(ve.red&&ve.red===ke.red,"red works only with red numbers")},Ht.prototype.imod=function(ve){return this.prime?this.prime.ireduce(ve)._forceRed(this):ve.umod(this.m)._forceRed(this)},Ht.prototype.neg=function(ve){return ve.isZero()?ve.clone():this.m.sub(ve)._forceRed(this)},Ht.prototype.add=function(ve,ke){this._verify2(ve,ke);var Oe=ve.add(ke);return Oe.cmp(this.m)>=0&&Oe.isub(this.m),Oe._forceRed(this)},Ht.prototype.iadd=function(ve,ke){this._verify2(ve,ke);var Oe=ve.iadd(ke);return Oe.cmp(this.m)>=0&&Oe.isub(this.m),Oe},Ht.prototype.sub=function(ve,ke){this._verify2(ve,ke);var Oe=ve.sub(ke);return Oe.cmpn(0)<0&&Oe.iadd(this.m),Oe._forceRed(this)},Ht.prototype.isub=function(ve,ke){this._verify2(ve,ke);var Oe=ve.isub(ke);return Oe.cmpn(0)<0&&Oe.iadd(this.m),Oe},Ht.prototype.shl=function(ve,ke){return this._verify1(ve),this.imod(ve.ushln(ke))},Ht.prototype.imul=function(ve,ke){return this._verify2(ve,ke),this.imod(ve.imul(ke))},Ht.prototype.mul=function(ve,ke){return this._verify2(ve,ke),this.imod(ve.mul(ke))},Ht.prototype.isqr=function(ve){return this.imul(ve,ve.clone())},Ht.prototype.sqr=function(ve){return this.mul(ve,ve)},Ht.prototype.sqrt=function(ve){if(ve.isZero())return ve.clone();var ke=this.m.andln(3);if(pe(ke%2===1),ke===3){var Oe=this.m.add(new ye(1)).iushrn(2);return this.pow(ve,Oe)}for(var Pe=this.m.subn(1),Re=0;!Pe.isZero()&&Pe.andln(1)===0;)Re++,Pe.iushrn(1);pe(!Pe.isZero());var Ye=new ye(1).toRed(this),Xe=Ye.redNeg(),Je=this.m.subn(1).iushrn(1),Ie=this.m.bitLength();for(Ie=new ye(2*Ie*Ie).toRed(this);this.pow(Ie,Je).cmp(Xe)!==0;)Ie.redIAdd(Xe);for(var De=this.pow(Ie,Pe),We=this.pow(ve,Pe.addn(1).iushrn(1)),it=this.pow(ve,Pe),Ze=Re;it.cmp(Ye)!==0;){for(var Ce=it,_e=0;Ce.cmp(Ye)!==0;_e++)Ce=Ce.redSqr();pe(_e<Ze);var at=this.pow(De,new ye(1).iushln(Ze-_e-1));We=We.redMul(at),De=at.redSqr(),it=it.redMul(De),Ze=_e}return We},Ht.prototype.invm=function(ve){var ke=ve._invmp(this.m);return ke.negative!==0?(ke.negative=0,this.imod(ke).redNeg()):this.imod(ke)},Ht.prototype.pow=function(ve,ke){if(ke.isZero())return new ye(1).toRed(this);if(ke.cmpn(1)===0)return ve.clone();var Oe=4,Pe=new Array(1<<Oe);Pe[0]=new ye(1).toRed(this),Pe[1]=ve;for(var Re=2;Re<Pe.length;Re++)Pe[Re]=this.mul(Pe[Re-1],ve);var Ye=Pe[0],Xe=0,Je=0,Ie=ke.bitLength()%26;for(Ie===0&&(Ie=26),Re=ke.length-1;Re>=0;Re--){for(var De=ke.words[Re],We=Ie-1;We>=0;We--){var it=De>>We&1;if(Ye!==Pe[0]&&(Ye=this.sqr(Ye)),it===0&&Xe===0){Je=0;continue}Xe<<=1,Xe|=it,Je++,!(Je!==Oe&&(Re!==0||We!==0))&&(Ye=this.mul(Ye,Pe[Xe]),Je=0,Xe=0)}Ie=26}return Ye},Ht.prototype.convertTo=function(ve){var ke=ve.umod(this.m);return ke===ve?ke.clone():ke},Ht.prototype.convertFrom=function(ve){var ke=ve.clone();return ke.red=null,ke},ye.mont=function(ve){return new jt(ve)};function jt(ze){Ht.call(this,ze),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new ye(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}ge(jt,Ht),jt.prototype.convertTo=function(ve){return this.imod(ve.ushln(this.shift))},jt.prototype.convertFrom=function(ve){var ke=this.imod(ve.mul(this.rinv));return ke.red=null,ke},jt.prototype.imul=function(ve,ke){if(ve.isZero()||ke.isZero())return ve.words[0]=0,ve.length=1,ve;var Oe=ve.imul(ke),Pe=Oe.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),Re=Oe.isub(Pe).iushrn(this.shift),Ye=Re;return Re.cmp(this.m)>=0?Ye=Re.isub(this.m):Re.cmpn(0)<0&&(Ye=Re.iadd(this.m)),Ye._forceRed(this)},jt.prototype.mul=function(ve,ke){if(ve.isZero()||ke.isZero())return new ye(0)._forceRed(this);var Oe=ve.mul(ke),Pe=Oe.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),Re=Oe.isub(Pe).iushrn(this.shift),Ye=Re;return Re.cmp(this.m)>=0?Ye=Re.isub(this.m):Re.cmpn(0)<0&&(Ye=Re.iadd(this.m)),Ye._forceRed(this)},jt.prototype.invm=function(ve){var ke=this.imod(ve._invmp(this.m).mul(this.r2));return ke._forceRed(this)}})(he,commonjsGlobal)})(bn$1);var bnExports=bn$1.exports;const bn=getDefaultExportFromCjs(bnExports),inherits$2=inherits_browserExports,bignum=bnExports,DecoderBuffer=buffer.DecoderBuffer,Node=node,der=der$2;function DERDecoder$1(he){this.enc="der",this.name=he.name,this.entity=he,this.tree=new DERNode,this.tree._init(he.body)}var der_1=DERDecoder$1;DERDecoder$1.prototype.decode=function(fe,le){return DecoderBuffer.isDecoderBuffer(fe)||(fe=new DecoderBuffer(fe,le)),this.tree._decode(fe,le)};function DERNode(he){Node.call(this,"der",he)}inherits$2(DERNode,Node);DERNode.prototype._peekTag=function(fe,le,pe){if(fe.isEmpty())return!1;const ge=fe.save(),ye=derDecodeTag(fe,'Failed to peek tag: "'+le+'"');return fe.isError(ye)?ye:(fe.restore(ge),ye.tag===le||ye.tagStr===le||ye.tagStr+"of"===le||pe)};DERNode.prototype._decodeTag=function(fe,le,pe){const ge=derDecodeTag(fe,'Failed to decode tag of "'+le+'"');if(fe.isError(ge))return ge;let ye=derDecodeLen(fe,ge.primitive,'Failed to get length of "'+le+'"');if(fe.isError(ye))return ye;if(!pe&&ge.tag!==le&&ge.tagStr!==le&&ge.tagStr+"of"!==le)return fe.error('Failed to match tag: "'+le+'"');if(ge.primitive||ye!==null)return fe.skip(ye,'Failed to match body of: "'+le+'"');const xe=fe.save(),me=this._skipUntilEnd(fe,'Failed to skip indefinite length body: "'+this.tag+'"');return fe.isError(me)?me:(ye=fe.offset-xe.offset,fe.restore(xe),fe.skip(ye,'Failed to match body of: "'+le+'"'))};DERNode.prototype._skipUntilEnd=function(fe,le){for(;;){const pe=derDecodeTag(fe,le);if(fe.isError(pe))return pe;const ge=derDecodeLen(fe,pe.primitive,le);if(fe.isError(ge))return ge;let ye;if(pe.primitive||ge!==null?ye=fe.skip(ge):ye=this._skipUntilEnd(fe,le),fe.isError(ye))return ye;if(pe.tagStr==="end")break}};DERNode.prototype._decodeList=function(fe,le,pe,ge){const ye=[];for(;!fe.isEmpty();){const xe=this._peekTag(fe,"end");if(fe.isError(xe))return xe;const me=pe.decode(fe,"der",ge);if(fe.isError(me)&&xe)break;ye.push(me)}return ye};DERNode.prototype._decodeStr=function(fe,le){if(le==="bitstr"){const pe=fe.readUInt8();return fe.isError(pe)?pe:{unused:pe,data:fe.raw()}}else if(le==="bmpstr"){const pe=fe.raw();if(pe.length%2===1)return fe.error("Decoding of string type: bmpstr length mismatch");let ge="";for(let ye=0;ye<pe.length/2;ye++)ge+=String.fromCharCode(pe.readUInt16BE(ye*2));return ge}else if(le==="numstr"){const pe=fe.raw().toString("ascii");return this._isNumstr(pe)?pe:fe.error("Decoding of string type: numstr unsupported characters")}else{if(le==="octstr")return fe.raw();if(le==="objDesc")return fe.raw();if(le==="printstr"){const pe=fe.raw().toString("ascii");return this._isPrintstr(pe)?pe:fe.error("Decoding of string type: printstr unsupported characters")}else return/str$/.test(le)?fe.raw().toString():fe.error("Decoding of string type: "+le+" unsupported")}};DERNode.prototype._decodeObjid=function(fe,le,pe){let ge;const ye=[];let xe=0,me=0;for(;!fe.isEmpty();)me=fe.readUInt8(),xe<<=7,xe|=me&127,me&128||(ye.push(xe),xe=0);me&128&&ye.push(xe);const we=ye[0]/40|0,Ee=ye[0]%40;if(pe?ge=ye:ge=[we,Ee].concat(ye.slice(1)),le){let Ae=le[ge.join(" ")];Ae===void 0&&(Ae=le[ge.join(".")]),Ae!==void 0&&(ge=Ae)}return ge};DERNode.prototype._decodeTime=function(fe,le){const pe=fe.raw().toString();let ge,ye,xe,me,we,Ee;if(le==="gentime")ge=pe.slice(0,4)|0,ye=pe.slice(4,6)|0,xe=pe.slice(6,8)|0,me=pe.slice(8,10)|0,we=pe.slice(10,12)|0,Ee=pe.slice(12,14)|0;else if(le==="utctime")ge=pe.slice(0,2)|0,ye=pe.slice(2,4)|0,xe=pe.slice(4,6)|0,me=pe.slice(6,8)|0,we=pe.slice(8,10)|0,Ee=pe.slice(10,12)|0,ge<70?ge=2e3+ge:ge=1900+ge;else return fe.error("Decoding "+le+" time is not supported yet");return Date.UTC(ge,ye-1,xe,me,we,Ee,0)};DERNode.prototype._decodeNull=function(){return null};DERNode.prototype._decodeBool=function(fe){const le=fe.readUInt8();return fe.isError(le)?le:le!==0};DERNode.prototype._decodeInt=function(fe,le){const pe=fe.raw();let ge=new bignum(pe);return le&&(ge=le[ge.toString(10)]||ge),ge};DERNode.prototype._use=function(fe,le){return typeof fe=="function"&&(fe=fe(le)),fe._getDecoder("der").tree};function derDecodeTag(he,fe){let le=he.readUInt8(fe);if(he.isError(le))return le;const pe=der.tagClass[le>>6],ge=(le&32)===0;if((le&31)===31){let xe=le;for(le=0;(xe&128)===128;){if(xe=he.readUInt8(fe),he.isError(xe))return xe;le<<=7,le|=xe&127}}else le&=31;const ye=der.tag[le];return{cls:pe,primitive:ge,tag:le,tagStr:ye}}function derDecodeLen(he,fe,le){let pe=he.readUInt8(le);if(he.isError(pe))return pe;if(!fe&&pe===128)return null;if(!(pe&128))return pe;const ge=pe&127;if(ge>4)return he.error("length octect is too long");pe=0;for(let ye=0;ye<ge;ye++){pe<<=8;const xe=he.readUInt8(le);if(he.isError(xe))return xe;pe|=xe}return pe}const inherits$1=inherits_browserExports,Buffer=safer_1.Buffer,DERDecoder=der_1;function PEMDecoder(he){DERDecoder.call(this,he),this.enc="pem"}inherits$1(PEMDecoder,DERDecoder);var pem=PEMDecoder;PEMDecoder.prototype.decode=function(fe,le){const pe=fe.toString().split(/[\r\n]+/g),ge=le.label.toUpperCase(),ye=/^-----(BEGIN|END) ([^-]+)-----$/;let xe=-1,me=-1;for(let Ae=0;Ae<pe.length;Ae++){const Se=pe[Ae].match(ye);if(Se!==null&&Se[2]===ge)if(xe===-1){if(Se[1]!=="BEGIN")break;xe=Ae}else{if(Se[1]!=="END")break;me=Ae;break}}if(xe===-1||me===-1)throw new Error("PEM section not found for: "+ge);const we=pe.slice(xe+1,me).join("");we.replace(/[^a-z0-9+/=]+/gi,"");const Ee=Buffer.from(we,"base64");return DERDecoder.prototype.decode.call(this,Ee,le)};(function(he){const fe=he;fe.der=der_1,fe.pem=pem})(decoders);(function(he){const fe=encoders,le=decoders,pe=inherits_browserExports,ge=he;ge.define=function(me,we){return new ye(me,we)};function ye(xe,me){this.name=xe,this.body=me,this.decoders={},this.encoders={}}ye.prototype._createNamed=function(me){const we=this.name;function Ee(Ae){this._initNamed(Ae,we)}return pe(Ee,me),Ee.prototype._initNamed=function(Se,Le){me.call(this,Se,Le)},new Ee(this)},ye.prototype._getDecoder=function(me){return me=me||"der",this.decoders.hasOwnProperty(me)||(this.decoders[me]=this._createNamed(le[me])),this.decoders[me]},ye.prototype.decode=function(me,we,Ee){return this._getDecoder(we).decode(me,Ee)},ye.prototype._getEncoder=function(me){return me=me||"der",this.encoders.hasOwnProperty(me)||(this.encoders[me]=this._createNamed(fe[me])),this.encoders[me]},ye.prototype.encode=function(me,we,Ee){return this._getEncoder(we).encode(me,Ee)}})(api$2);const api$1=getDefaultExportFromCjs(api$2),define=api$1.define,RSAPublicKey=define("RSAPublicKey",function(){this.seq().obj(this.key("n").int(),this.key("e").int())}),AlgorithmIdentifier=define("AlgorithmIdentifier",function(){this.seq().obj(this.key("algorithm").objid(),this.key("parameters").optional().any())});define("PublicKeyInfo",function(){this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier),this.key("publicKey").bitstr())});const Version=define("Version",function(){this.int({0:"two-prime",1:"multi"})}),OtherPrimeInfos=define("OtherPrimeInfos",function(){this.seq().obj(this.key("ri").int(),this.key("di").int(),this.key("ti").int())}),RSAPrivateKey=define("RSAPrivateKey",function(){this.seq().obj(this.key("version").use(Version),this.key("n").int(),this.key("e").int(),this.key("d").int(),this.key("p").int(),this.key("q").int(),this.key("dp").int(),this.key("dq").int(),this.key("qi").int(),this.key("other").optional().use(OtherPrimeInfos))});define("PrivateKeyInfo",function(){this.seq().obj(this.key("version").use(Version),this.key("algorithm").use(AlgorithmIdentifier),this.key("privateKey").bitstr())});function parse(he){return{n:string2bn(he.n),e:string2bn(he.e),d:he.d&&string2bn(he.d),p:he.p&&string2bn(he.p),q:he.q&&string2bn(he.q),dp:he.dp&&string2bn(he.dp),dq:he.dq&&string2bn(he.dq),qi:he.qi&&string2bn(he.qi)}}function base64url2bn(he){return new bn(Buffer$4.from(he,"base64"))}function string2bn(he){return/^[0-9]+$/.test(he)?new bn(he,10):base64url2bn(he)}function jwkTopem(he){const fe=parse(he),le=!!fe.d,pe=le?"PRIVATE":"PUBLIC",ge="-----BEGIN RSA "+pe+` KEY-----
`,ye=`
-----END RSA `+pe+` KEY-----
`;let xe=Buffer$4.alloc(0);le?(fe.version="two-prime",xe=RSAPrivateKey.encode(fe,"der")):xe=RSAPublicKey.encode(fe,"der");const me=xe.toString("base64").match(/.{1,64}/g).join(`
`);return ge+me+ye}class ArweaveSigner extends Rsa4096Pss{constructor(le){super(jwkTopem(le),le.n);je(this,"jwk");this.jwk=le}get publicKey(){if(!this.pk)throw new Error("ArweaveSigner - pk is undefined");return base64url.toBuffer(this.pk)}sign(le){return getCryptoDriver().sign(this.jwk,le)}static async verify(le,pe,ge){return await getCryptoDriver().verify(le,pe,ge)}}class InjectedSolanaSigner{constructor(fe){je(this,"_publicKey");je(this,"ownerLength",SIG_CONFIG[2].pubLength);je(this,"signatureLength",SIG_CONFIG[2].sigLength);je(this,"signatureType",2);je(this,"pem");je(this,"provider");if(this.provider=fe,!this.provider.publicKey)throw new Error("InjectedSolanaSigner - provider.publicKey is undefined");this._publicKey=this.provider.publicKey.toBuffer()}get publicKey(){return this._publicKey}async sign(fe){if(!this.provider.signMessage)throw new Error("Selected Wallet does not support message signing");return await this.provider.signMessage(fe)}static async verify(fe,le,pe){let ge=fe;return typeof fe=="string"&&(ge=base64url.toBuffer(fe)),verify(Buffer$4.from(pe),Buffer$4.from(le),Buffer$4.from(ge))}}var sha3$1={exports:{}};(function(he){(function(){var fe="input is invalid type",le="finalize already called",pe=typeof window=="object",ge=pe?window:{};ge.JS_SHA3_NO_WINDOW&&(pe=!1);var ye=!pe&&typeof self=="object",xe=!ge.JS_SHA3_NO_NODE_JS&&typeof process$1=="object"&&process$1.versions&&process$1.versions.node;xe?ge=commonjsGlobal:ye&&(ge=self);var me=!ge.JS_SHA3_NO_COMMON_JS&&!0&&he.exports,we=!ge.JS_SHA3_NO_ARRAY_BUFFER&&typeof ArrayBuffer<"u",Ee="0123456789abcdef".split(""),Ae=[31,7936,2031616,520093696],Se=[4,1024,262144,67108864],Le=[1,256,65536,16777216],He=[6,1536,393216,100663296],Me=[0,8,16,24],Fe=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],Ue=[224,256,384,512],qe=[128,256],$e=["hex","buffer","arrayBuffer","array","digest"],Qe={128:168,256:136};(ge.JS_SHA3_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(Ce){return Object.prototype.toString.call(Ce)==="[object Array]"}),we&&(ge.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(Ce){return typeof Ce=="object"&&Ce.buffer&&Ce.buffer.constructor===ArrayBuffer});for(var ot=function(Ce,_e,at){return function(yt){return new We(Ce,_e,Ce).update(yt)[at]()}},nt=function(Ce,_e,at){return function(yt,pt){return new We(Ce,_e,pt).update(yt)[at]()}},ct=function(Ce,_e,at){return function(yt,pt,kt,er){return Oe["cshake"+Ce].update(yt,pt,kt,er)[at]()}},mt=function(Ce,_e,at){return function(yt,pt,kt,er){return Oe["kmac"+Ce].update(yt,pt,kt,er)[at]()}},gt=function(Ce,_e,at,yt){for(var pt=0;pt<$e.length;++pt){var kt=$e[pt];Ce[kt]=_e(at,yt,kt)}return Ce},Ht=function(Ce,_e){var at=ot(Ce,_e,"hex");return at.create=function(){return new We(Ce,_e,Ce)},at.update=function(yt){return at.create().update(yt)},gt(at,ot,Ce,_e)},jt=function(Ce,_e){var at=nt(Ce,_e,"hex");return at.create=function(yt){return new We(Ce,_e,yt)},at.update=function(yt,pt){return at.create(pt).update(yt)},gt(at,nt,Ce,_e)},ze=function(Ce,_e){var at=Qe[Ce],yt=ct(Ce,_e,"hex");return yt.create=function(pt,kt,er){return!kt&&!er?Oe["shake"+Ce].create(pt):new We(Ce,_e,pt).bytepad([kt,er],at)},yt.update=function(pt,kt,er,zt){return yt.create(kt,er,zt).update(pt)},gt(yt,ct,Ce,_e)},ve=function(Ce,_e){var at=Qe[Ce],yt=mt(Ce,_e,"hex");return yt.create=function(pt,kt,er){return new it(Ce,_e,kt).bytepad(["KMAC",er],at).bytepad([pt],at)},yt.update=function(pt,kt,er,zt){return yt.create(pt,er,zt).update(kt)},gt(yt,mt,Ce,_e)},ke=[{name:"keccak",padding:Le,bits:Ue,createMethod:Ht},{name:"sha3",padding:He,bits:Ue,createMethod:Ht},{name:"shake",padding:Ae,bits:qe,createMethod:jt},{name:"cshake",padding:Se,bits:qe,createMethod:ze},{name:"kmac",padding:Se,bits:qe,createMethod:ve}],Oe={},Pe=[],Re=0;Re<ke.length;++Re)for(var Ye=ke[Re],Xe=Ye.bits,Je=0;Je<Xe.length;++Je){var Ie=Ye.name+"_"+Xe[Je];if(Pe.push(Ie),Oe[Ie]=Ye.createMethod(Xe[Je],Ye.padding),Ye.name!=="sha3"){var De=Ye.name+Xe[Je];Pe.push(De),Oe[De]=Oe[Ie]}}function We(Ce,_e,at){this.blocks=[],this.s=[],this.padding=_e,this.outputBits=at,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(Ce<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=at>>5,this.extraBytes=(at&31)>>3;for(var yt=0;yt<50;++yt)this.s[yt]=0}We.prototype.update=function(Ce){if(this.finalized)throw new Error(le);var _e,at=typeof Ce;if(at!=="string"){if(at==="object"){if(Ce===null)throw new Error(fe);if(we&&Ce.constructor===ArrayBuffer)Ce=new Uint8Array(Ce);else if(!Array.isArray(Ce)&&(!we||!ArrayBuffer.isView(Ce)))throw new Error(fe)}else throw new Error(fe);_e=!0}for(var yt=this.blocks,pt=this.byteCount,kt=Ce.length,er=this.blockCount,zt=0,or=this.s,ar,pr;zt<kt;){if(this.reset)for(this.reset=!1,yt[0]=this.block,ar=1;ar<er+1;++ar)yt[ar]=0;if(_e)for(ar=this.start;zt<kt&&ar<pt;++zt)yt[ar>>2]|=Ce[zt]<<Me[ar++&3];else for(ar=this.start;zt<kt&&ar<pt;++zt)pr=Ce.charCodeAt(zt),pr<128?yt[ar>>2]|=pr<<Me[ar++&3]:pr<2048?(yt[ar>>2]|=(192|pr>>6)<<Me[ar++&3],yt[ar>>2]|=(128|pr&63)<<Me[ar++&3]):pr<55296||pr>=57344?(yt[ar>>2]|=(224|pr>>12)<<Me[ar++&3],yt[ar>>2]|=(128|pr>>6&63)<<Me[ar++&3],yt[ar>>2]|=(128|pr&63)<<Me[ar++&3]):(pr=65536+((pr&1023)<<10|Ce.charCodeAt(++zt)&1023),yt[ar>>2]|=(240|pr>>18)<<Me[ar++&3],yt[ar>>2]|=(128|pr>>12&63)<<Me[ar++&3],yt[ar>>2]|=(128|pr>>6&63)<<Me[ar++&3],yt[ar>>2]|=(128|pr&63)<<Me[ar++&3]);if(this.lastByteIndex=ar,ar>=pt){for(this.start=ar-pt,this.block=yt[er],ar=0;ar<er;++ar)or[ar]^=yt[ar];Ze(or),this.reset=!0}else this.start=ar}return this},We.prototype.encode=function(Ce,_e){var at=Ce&255,yt=1,pt=[at];for(Ce=Ce>>8,at=Ce&255;at>0;)pt.unshift(at),Ce=Ce>>8,at=Ce&255,++yt;return _e?pt.push(yt):pt.unshift(yt),this.update(pt),pt.length},We.prototype.encodeString=function(Ce){var _e,at=typeof Ce;if(at!=="string"){if(at==="object"){if(Ce===null)throw new Error(fe);if(we&&Ce.constructor===ArrayBuffer)Ce=new Uint8Array(Ce);else if(!Array.isArray(Ce)&&(!we||!ArrayBuffer.isView(Ce)))throw new Error(fe)}else throw new Error(fe);_e=!0}var yt=0,pt=Ce.length;if(_e)yt=pt;else for(var kt=0;kt<Ce.length;++kt){var er=Ce.charCodeAt(kt);er<128?yt+=1:er<2048?yt+=2:er<55296||er>=57344?yt+=3:(er=65536+((er&1023)<<10|Ce.charCodeAt(++kt)&1023),yt+=4)}return yt+=this.encode(yt*8),this.update(Ce),yt},We.prototype.bytepad=function(Ce,_e){for(var at=this.encode(_e),yt=0;yt<Ce.length;++yt)at+=this.encodeString(Ce[yt]);var pt=_e-at%_e,kt=[];return kt.length=pt,this.update(kt),this},We.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var Ce=this.blocks,_e=this.lastByteIndex,at=this.blockCount,yt=this.s;if(Ce[_e>>2]|=this.padding[_e&3],this.lastByteIndex===this.byteCount)for(Ce[0]=Ce[at],_e=1;_e<at+1;++_e)Ce[_e]=0;for(Ce[at-1]|=2147483648,_e=0;_e<at;++_e)yt[_e]^=Ce[_e];Ze(yt)}},We.prototype.toString=We.prototype.hex=function(){this.finalize();for(var Ce=this.blockCount,_e=this.s,at=this.outputBlocks,yt=this.extraBytes,pt=0,kt=0,er="",zt;kt<at;){for(pt=0;pt<Ce&&kt<at;++pt,++kt)zt=_e[pt],er+=Ee[zt>>4&15]+Ee[zt&15]+Ee[zt>>12&15]+Ee[zt>>8&15]+Ee[zt>>20&15]+Ee[zt>>16&15]+Ee[zt>>28&15]+Ee[zt>>24&15];kt%Ce===0&&(Ze(_e),pt=0)}return yt&&(zt=_e[pt],er+=Ee[zt>>4&15]+Ee[zt&15],yt>1&&(er+=Ee[zt>>12&15]+Ee[zt>>8&15]),yt>2&&(er+=Ee[zt>>20&15]+Ee[zt>>16&15])),er},We.prototype.arrayBuffer=function(){this.finalize();var Ce=this.blockCount,_e=this.s,at=this.outputBlocks,yt=this.extraBytes,pt=0,kt=0,er=this.outputBits>>3,zt;yt?zt=new ArrayBuffer(at+1<<2):zt=new ArrayBuffer(er);for(var or=new Uint32Array(zt);kt<at;){for(pt=0;pt<Ce&&kt<at;++pt,++kt)or[kt]=_e[pt];kt%Ce===0&&Ze(_e)}return yt&&(or[pt]=_e[pt],zt=zt.slice(0,er)),zt},We.prototype.buffer=We.prototype.arrayBuffer,We.prototype.digest=We.prototype.array=function(){this.finalize();for(var Ce=this.blockCount,_e=this.s,at=this.outputBlocks,yt=this.extraBytes,pt=0,kt=0,er=[],zt,or;kt<at;){for(pt=0;pt<Ce&&kt<at;++pt,++kt)zt=kt<<2,or=_e[pt],er[zt]=or&255,er[zt+1]=or>>8&255,er[zt+2]=or>>16&255,er[zt+3]=or>>24&255;kt%Ce===0&&Ze(_e)}return yt&&(zt=kt<<2,or=_e[pt],er[zt]=or&255,yt>1&&(er[zt+1]=or>>8&255),yt>2&&(er[zt+2]=or>>16&255)),er};function it(Ce,_e,at){We.call(this,Ce,_e,at)}it.prototype=new We,it.prototype.finalize=function(){return this.encode(this.outputBits,!0),We.prototype.finalize.call(this)};var Ze=function(Ce){var _e,at,yt,pt,kt,er,zt,or,ar,pr,Mr,Ln,jr,Br,Bn,Vr,Jr,kn,Fr,zr,Sn,Yr,Hr,Un,Wr,Pr,In,Ur,Ir,hn,Cr,Tr,pn,kr,Rr,Tn,Xr,Zr,un,vr,Sr,Cn,Nr,qr,Dn,xr,Qr,Te,Ne,Ke,Be,Ge,rt,st,dt,wt,_t,Wt,yr,Xt,sr,cr,fr;for(yt=0;yt<48;yt+=2)pt=Ce[0]^Ce[10]^Ce[20]^Ce[30]^Ce[40],kt=Ce[1]^Ce[11]^Ce[21]^Ce[31]^Ce[41],er=Ce[2]^Ce[12]^Ce[22]^Ce[32]^Ce[42],zt=Ce[3]^Ce[13]^Ce[23]^Ce[33]^Ce[43],or=Ce[4]^Ce[14]^Ce[24]^Ce[34]^Ce[44],ar=Ce[5]^Ce[15]^Ce[25]^Ce[35]^Ce[45],pr=Ce[6]^Ce[16]^Ce[26]^Ce[36]^Ce[46],Mr=Ce[7]^Ce[17]^Ce[27]^Ce[37]^Ce[47],Ln=Ce[8]^Ce[18]^Ce[28]^Ce[38]^Ce[48],jr=Ce[9]^Ce[19]^Ce[29]^Ce[39]^Ce[49],_e=Ln^(er<<1|zt>>>31),at=jr^(zt<<1|er>>>31),Ce[0]^=_e,Ce[1]^=at,Ce[10]^=_e,Ce[11]^=at,Ce[20]^=_e,Ce[21]^=at,Ce[30]^=_e,Ce[31]^=at,Ce[40]^=_e,Ce[41]^=at,_e=pt^(or<<1|ar>>>31),at=kt^(ar<<1|or>>>31),Ce[2]^=_e,Ce[3]^=at,Ce[12]^=_e,Ce[13]^=at,Ce[22]^=_e,Ce[23]^=at,Ce[32]^=_e,Ce[33]^=at,Ce[42]^=_e,Ce[43]^=at,_e=er^(pr<<1|Mr>>>31),at=zt^(Mr<<1|pr>>>31),Ce[4]^=_e,Ce[5]^=at,Ce[14]^=_e,Ce[15]^=at,Ce[24]^=_e,Ce[25]^=at,Ce[34]^=_e,Ce[35]^=at,Ce[44]^=_e,Ce[45]^=at,_e=or^(Ln<<1|jr>>>31),at=ar^(jr<<1|Ln>>>31),Ce[6]^=_e,Ce[7]^=at,Ce[16]^=_e,Ce[17]^=at,Ce[26]^=_e,Ce[27]^=at,Ce[36]^=_e,Ce[37]^=at,Ce[46]^=_e,Ce[47]^=at,_e=pr^(pt<<1|kt>>>31),at=Mr^(kt<<1|pt>>>31),Ce[8]^=_e,Ce[9]^=at,Ce[18]^=_e,Ce[19]^=at,Ce[28]^=_e,Ce[29]^=at,Ce[38]^=_e,Ce[39]^=at,Ce[48]^=_e,Ce[49]^=at,Br=Ce[0],Bn=Ce[1],xr=Ce[11]<<4|Ce[10]>>>28,Qr=Ce[10]<<4|Ce[11]>>>28,Ur=Ce[20]<<3|Ce[21]>>>29,Ir=Ce[21]<<3|Ce[20]>>>29,Xt=Ce[31]<<9|Ce[30]>>>23,sr=Ce[30]<<9|Ce[31]>>>23,Cn=Ce[40]<<18|Ce[41]>>>14,Nr=Ce[41]<<18|Ce[40]>>>14,kr=Ce[2]<<1|Ce[3]>>>31,Rr=Ce[3]<<1|Ce[2]>>>31,Vr=Ce[13]<<12|Ce[12]>>>20,Jr=Ce[12]<<12|Ce[13]>>>20,Te=Ce[22]<<10|Ce[23]>>>22,Ne=Ce[23]<<10|Ce[22]>>>22,hn=Ce[33]<<13|Ce[32]>>>19,Cr=Ce[32]<<13|Ce[33]>>>19,cr=Ce[42]<<2|Ce[43]>>>30,fr=Ce[43]<<2|Ce[42]>>>30,st=Ce[5]<<30|Ce[4]>>>2,dt=Ce[4]<<30|Ce[5]>>>2,Tn=Ce[14]<<6|Ce[15]>>>26,Xr=Ce[15]<<6|Ce[14]>>>26,kn=Ce[25]<<11|Ce[24]>>>21,Fr=Ce[24]<<11|Ce[25]>>>21,Ke=Ce[34]<<15|Ce[35]>>>17,Be=Ce[35]<<15|Ce[34]>>>17,Tr=Ce[45]<<29|Ce[44]>>>3,pn=Ce[44]<<29|Ce[45]>>>3,Un=Ce[6]<<28|Ce[7]>>>4,Wr=Ce[7]<<28|Ce[6]>>>4,wt=Ce[17]<<23|Ce[16]>>>9,_t=Ce[16]<<23|Ce[17]>>>9,Zr=Ce[26]<<25|Ce[27]>>>7,un=Ce[27]<<25|Ce[26]>>>7,zr=Ce[36]<<21|Ce[37]>>>11,Sn=Ce[37]<<21|Ce[36]>>>11,Ge=Ce[47]<<24|Ce[46]>>>8,rt=Ce[46]<<24|Ce[47]>>>8,qr=Ce[8]<<27|Ce[9]>>>5,Dn=Ce[9]<<27|Ce[8]>>>5,Pr=Ce[18]<<20|Ce[19]>>>12,In=Ce[19]<<20|Ce[18]>>>12,Wt=Ce[29]<<7|Ce[28]>>>25,yr=Ce[28]<<7|Ce[29]>>>25,vr=Ce[38]<<8|Ce[39]>>>24,Sr=Ce[39]<<8|Ce[38]>>>24,Yr=Ce[48]<<14|Ce[49]>>>18,Hr=Ce[49]<<14|Ce[48]>>>18,Ce[0]=Br^~Vr&kn,Ce[1]=Bn^~Jr&Fr,Ce[10]=Un^~Pr&Ur,Ce[11]=Wr^~In&Ir,Ce[20]=kr^~Tn&Zr,Ce[21]=Rr^~Xr&un,Ce[30]=qr^~xr&Te,Ce[31]=Dn^~Qr&Ne,Ce[40]=st^~wt&Wt,Ce[41]=dt^~_t&yr,Ce[2]=Vr^~kn&zr,Ce[3]=Jr^~Fr&Sn,Ce[12]=Pr^~Ur&hn,Ce[13]=In^~Ir&Cr,Ce[22]=Tn^~Zr&vr,Ce[23]=Xr^~un&Sr,Ce[32]=xr^~Te&Ke,Ce[33]=Qr^~Ne&Be,Ce[42]=wt^~Wt&Xt,Ce[43]=_t^~yr&sr,Ce[4]=kn^~zr&Yr,Ce[5]=Fr^~Sn&Hr,Ce[14]=Ur^~hn&Tr,Ce[15]=Ir^~Cr&pn,Ce[24]=Zr^~vr&Cn,Ce[25]=un^~Sr&Nr,Ce[34]=Te^~Ke&Ge,Ce[35]=Ne^~Be&rt,Ce[44]=Wt^~Xt&cr,Ce[45]=yr^~sr&fr,Ce[6]=zr^~Yr&Br,Ce[7]=Sn^~Hr&Bn,Ce[16]=hn^~Tr&Un,Ce[17]=Cr^~pn&Wr,Ce[26]=vr^~Cn&kr,Ce[27]=Sr^~Nr&Rr,Ce[36]=Ke^~Ge&qr,Ce[37]=Be^~rt&Dn,Ce[46]=Xt^~cr&st,Ce[47]=sr^~fr&dt,Ce[8]=Yr^~Br&Vr,Ce[9]=Hr^~Bn&Jr,Ce[18]=Tr^~Un&Pr,Ce[19]=pn^~Wr&In,Ce[28]=Cn^~kr&Tn,Ce[29]=Nr^~Rr&Xr,Ce[38]=Ge^~qr&xr,Ce[39]=rt^~Dn&Qr,Ce[48]=cr^~st&wt,Ce[49]=fr^~dt&_t,Ce[0]^=Fe[yt],Ce[1]^=Fe[yt+1]};if(me)he.exports=Oe;else for(Re=0;Re<Pe.length;++Re)ge[Pe[Re]]=Oe[Pe[Re]]})()})(sha3$1);var sha3Exports=sha3$1.exports;const sha3=getDefaultExportFromCjs(sha3Exports),version$j="logger/5.7.0";let _permanentCensorErrors=!1,_censorErrors=!1;const LogLevels={debug:1,default:2,info:2,warning:3,error:4,off:5};let _logLevel=LogLevels.default,_globalLogger=null;function _checkNormalize(){try{const he=[];if(["NFD","NFC","NFKD","NFKC"].forEach(fe=>{try{if("test".normalize(fe)!=="test")throw new Error("bad normalize")}catch{he.push(fe)}}),he.length)throw new Error("missing "+he.join(", "));if("é".normalize("NFD")!=="é")throw new Error("broken implementation")}catch(he){return he.message}return null}const _normalizeError=_checkNormalize();var LogLevel;(function(he){he.DEBUG="DEBUG",he.INFO="INFO",he.WARNING="WARNING",he.ERROR="ERROR",he.OFF="OFF"})(LogLevel||(LogLevel={}));var ErrorCode;(function(he){he.UNKNOWN_ERROR="UNKNOWN_ERROR",he.NOT_IMPLEMENTED="NOT_IMPLEMENTED",he.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",he.NETWORK_ERROR="NETWORK_ERROR",he.SERVER_ERROR="SERVER_ERROR",he.TIMEOUT="TIMEOUT",he.BUFFER_OVERRUN="BUFFER_OVERRUN",he.NUMERIC_FAULT="NUMERIC_FAULT",he.MISSING_NEW="MISSING_NEW",he.INVALID_ARGUMENT="INVALID_ARGUMENT",he.MISSING_ARGUMENT="MISSING_ARGUMENT",he.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",he.CALL_EXCEPTION="CALL_EXCEPTION",he.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",he.NONCE_EXPIRED="NONCE_EXPIRED",he.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",he.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",he.TRANSACTION_REPLACED="TRANSACTION_REPLACED",he.ACTION_REJECTED="ACTION_REJECTED"})(ErrorCode||(ErrorCode={}));const HEX="0123456789abcdef";class Logger{constructor(fe){Object.defineProperty(this,"version",{enumerable:!0,value:fe,writable:!1})}_log(fe,le){const pe=fe.toLowerCase();LogLevels[pe]==null&&this.throwArgumentError("invalid log level name","logLevel",fe),!(_logLevel>LogLevels[pe])&&console.log.apply(console,le)}debug(...fe){this._log(Logger.levels.DEBUG,fe)}info(...fe){this._log(Logger.levels.INFO,fe)}warn(...fe){this._log(Logger.levels.WARNING,fe)}makeError(fe,le,pe){if(_censorErrors)return this.makeError("censored error",le,{});le||(le=Logger.errors.UNKNOWN_ERROR),pe||(pe={});const ge=[];Object.keys(pe).forEach(we=>{const Ee=pe[we];try{if(Ee instanceof Uint8Array){let Ae="";for(let Se=0;Se<Ee.length;Se++)Ae+=HEX[Ee[Se]>>4],Ae+=HEX[Ee[Se]&15];ge.push(we+"=Uint8Array(0x"+Ae+")")}else ge.push(we+"="+JSON.stringify(Ee))}catch{ge.push(we+"="+JSON.stringify(pe[we].toString()))}}),ge.push(`code=${le}`),ge.push(`version=${this.version}`);const ye=fe;let xe="";switch(le){case ErrorCode.NUMERIC_FAULT:{xe="NUMERIC_FAULT";const we=fe;switch(we){case"overflow":case"underflow":case"division-by-zero":xe+="-"+we;break;case"negative-power":case"negative-width":xe+="-unsupported";break;case"unbound-bitwise-result":xe+="-unbound-result";break}break}case ErrorCode.CALL_EXCEPTION:case ErrorCode.INSUFFICIENT_FUNDS:case ErrorCode.MISSING_NEW:case ErrorCode.NONCE_EXPIRED:case ErrorCode.REPLACEMENT_UNDERPRICED:case ErrorCode.TRANSACTION_REPLACED:case ErrorCode.UNPREDICTABLE_GAS_LIMIT:xe=le;break}xe&&(fe+=" [ See: https://links.ethers.org/v5-errors-"+xe+" ]"),ge.length&&(fe+=" ("+ge.join(", ")+")");const me=new Error(fe);return me.reason=ye,me.code=le,Object.keys(pe).forEach(function(we){me[we]=pe[we]}),me}throwError(fe,le,pe){throw this.makeError(fe,le,pe)}throwArgumentError(fe,le,pe){return this.throwError(fe,Logger.errors.INVALID_ARGUMENT,{argument:le,value:pe})}assert(fe,le,pe,ge){fe||this.throwError(le,pe,ge)}assertArgument(fe,le,pe,ge){fe||this.throwArgumentError(le,pe,ge)}checkNormalize(fe){_normalizeError&&this.throwError("platform missing String.prototype.normalize",Logger.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:_normalizeError})}checkSafeUint53(fe,le){typeof fe=="number"&&(le==null&&(le="value not safe"),(fe<0||fe>=9007199254740991)&&this.throwError(le,Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:fe}),fe%1&&this.throwError(le,Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:fe}))}checkArgumentCount(fe,le,pe){pe?pe=": "+pe:pe="",fe<le&&this.throwError("missing argument"+pe,Logger.errors.MISSING_ARGUMENT,{count:fe,expectedCount:le}),fe>le&&this.throwError("too many arguments"+pe,Logger.errors.UNEXPECTED_ARGUMENT,{count:fe,expectedCount:le})}checkNew(fe,le){(fe===Object||fe==null)&&this.throwError("missing new",Logger.errors.MISSING_NEW,{name:le.name})}checkAbstract(fe,le){fe===le?this.throwError("cannot instantiate abstract class "+JSON.stringify(le.name)+" directly; use a sub-class",Logger.errors.UNSUPPORTED_OPERATION,{name:fe.name,operation:"new"}):(fe===Object||fe==null)&&this.throwError("missing new",Logger.errors.MISSING_NEW,{name:le.name})}static globalLogger(){return _globalLogger||(_globalLogger=new Logger(version$j)),_globalLogger}static setCensorship(fe,le){if(!fe&&le&&this.globalLogger().throwError("cannot permanently disable censorship",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),_permanentCensorErrors){if(!fe)return;this.globalLogger().throwError("error censorship permanent",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_censorErrors=!!fe,_permanentCensorErrors=!!le}static setLogLevel(fe){const le=LogLevels[fe.toLowerCase()];if(le==null){Logger.globalLogger().warn("invalid log level - "+fe);return}_logLevel=le}static from(fe){return new Logger(fe)}}Logger.errors=ErrorCode;Logger.levels=LogLevel;const version$i="bytes/5.7.0",logger$n=new Logger(version$i);function isHexable(he){return!!he.toHexString}function addSlice(he){return he.slice||(he.slice=function(){const fe=Array.prototype.slice.call(arguments);return addSlice(new Uint8Array(Array.prototype.slice.apply(he,fe)))}),he}function isBytesLike(he){return isHexString$1(he)&&!(he.length%2)||isBytes$4(he)}function isInteger(he){return typeof he=="number"&&he==he&&he%1===0}function isBytes$4(he){if(he==null)return!1;if(he.constructor===Uint8Array)return!0;if(typeof he=="string"||!isInteger(he.length)||he.length<0)return!1;for(let fe=0;fe<he.length;fe++){const le=he[fe];if(!isInteger(le)||le<0||le>=256)return!1}return!0}function arrayify(he,fe){if(fe||(fe={}),typeof he=="number"){logger$n.checkSafeUint53(he,"invalid arrayify value");const le=[];for(;he;)le.unshift(he&255),he=parseInt(String(he/256));return le.length===0&&le.push(0),addSlice(new Uint8Array(le))}if(fe.allowMissingPrefix&&typeof he=="string"&&he.substring(0,2)!=="0x"&&(he="0x"+he),isHexable(he)&&(he=he.toHexString()),isHexString$1(he)){let le=he.substring(2);le.length%2&&(fe.hexPad==="left"?le="0"+le:fe.hexPad==="right"?le+="0":logger$n.throwArgumentError("hex data is odd-length","value",he));const pe=[];for(let ge=0;ge<le.length;ge+=2)pe.push(parseInt(le.substring(ge,ge+2),16));return addSlice(new Uint8Array(pe))}return isBytes$4(he)?addSlice(new Uint8Array(he)):logger$n.throwArgumentError("invalid arrayify value","value",he)}function concat(he){const fe=he.map(ge=>arrayify(ge)),le=fe.reduce((ge,ye)=>ge+ye.length,0),pe=new Uint8Array(le);return fe.reduce((ge,ye)=>(pe.set(ye,ge),ge+ye.length),0),addSlice(pe)}function stripZeros(he){let fe=arrayify(he);if(fe.length===0)return fe;let le=0;for(;le<fe.length&&fe[le]===0;)le++;return le&&(fe=fe.slice(le)),fe}function zeroPad(he,fe){he=arrayify(he),he.length>fe&&logger$n.throwArgumentError("value out of range","value",arguments[0]);const le=new Uint8Array(fe);return le.set(he,fe-he.length),addSlice(le)}function isHexString$1(he,fe){return!(typeof he!="string"||!he.match(/^0x[0-9A-Fa-f]*$/)||fe&&he.length!==2+2*fe)}const HexCharacters="0123456789abcdef";function hexlify(he,fe){if(fe||(fe={}),typeof he=="number"){logger$n.checkSafeUint53(he,"invalid hexlify value");let le="";for(;he;)le=HexCharacters[he&15]+le,he=Math.floor(he/16);return le.length?(le.length%2&&(le="0"+le),"0x"+le):"0x00"}if(typeof he=="bigint")return he=he.toString(16),he.length%2?"0x0"+he:"0x"+he;if(fe.allowMissingPrefix&&typeof he=="string"&&he.substring(0,2)!=="0x"&&(he="0x"+he),isHexable(he))return he.toHexString();if(isHexString$1(he))return he.length%2&&(fe.hexPad==="left"?he="0x0"+he.substring(2):fe.hexPad==="right"?he+="0":logger$n.throwArgumentError("hex data is odd-length","value",he)),he.toLowerCase();if(isBytes$4(he)){let le="0x";for(let pe=0;pe<he.length;pe++){let ge=he[pe];le+=HexCharacters[(ge&240)>>4]+HexCharacters[ge&15]}return le}return logger$n.throwArgumentError("invalid hexlify value","value",he)}function hexDataLength(he){if(typeof he!="string")he=hexlify(he);else if(!isHexString$1(he)||he.length%2)return null;return(he.length-2)/2}function hexDataSlice(he,fe,le){return typeof he!="string"?he=hexlify(he):(!isHexString$1(he)||he.length%2)&&logger$n.throwArgumentError("invalid hexData","value",he),fe=2+2*fe,le!=null?"0x"+he.substring(fe,2+2*le):"0x"+he.substring(fe)}function hexConcat(he){let fe="0x";return he.forEach(le=>{fe+=hexlify(le).substring(2)}),fe}function hexZeroPad(he,fe){for(typeof he!="string"?he=hexlify(he):isHexString$1(he)||logger$n.throwArgumentError("invalid hex string","value",he),he.length>2*fe+2&&logger$n.throwArgumentError("value out of range","value",arguments[1]);he.length<2*fe+2;)he="0x0"+he.substring(2);return he}function splitSignature(he){const fe={r:"0x",s:"0x",_vs:"0x",recoveryParam:0,v:0,yParityAndS:"0x",compact:"0x"};if(isBytesLike(he)){let le=arrayify(he);le.length===64?(fe.v=27+(le[32]>>7),le[32]&=127,fe.r=hexlify(le.slice(0,32)),fe.s=hexlify(le.slice(32,64))):le.length===65?(fe.r=hexlify(le.slice(0,32)),fe.s=hexlify(le.slice(32,64)),fe.v=le[64]):logger$n.throwArgumentError("invalid signature string","signature",he),fe.v<27&&(fe.v===0||fe.v===1?fe.v+=27:logger$n.throwArgumentError("signature invalid v byte","signature",he)),fe.recoveryParam=1-fe.v%2,fe.recoveryParam&&(le[32]|=128),fe._vs=hexlify(le.slice(32,64))}else{if(fe.r=he.r,fe.s=he.s,fe.v=he.v,fe.recoveryParam=he.recoveryParam,fe._vs=he._vs,fe._vs!=null){const ge=zeroPad(arrayify(fe._vs),32);fe._vs=hexlify(ge);const ye=ge[0]>=128?1:0;fe.recoveryParam==null?fe.recoveryParam=ye:fe.recoveryParam!==ye&&logger$n.throwArgumentError("signature recoveryParam mismatch _vs","signature",he),ge[0]&=127;const xe=hexlify(ge);fe.s==null?fe.s=xe:fe.s!==xe&&logger$n.throwArgumentError("signature v mismatch _vs","signature",he)}if(fe.recoveryParam==null)fe.v==null?logger$n.throwArgumentError("signature missing v and recoveryParam","signature",he):fe.v===0||fe.v===1?fe.recoveryParam=fe.v:fe.recoveryParam=1-fe.v%2;else if(fe.v==null)fe.v=27+fe.recoveryParam;else{const ge=fe.v===0||fe.v===1?fe.v:1-fe.v%2;fe.recoveryParam!==ge&&logger$n.throwArgumentError("signature recoveryParam mismatch v","signature",he)}fe.r==null||!isHexString$1(fe.r)?logger$n.throwArgumentError("signature missing or invalid r","signature",he):fe.r=hexZeroPad(fe.r,32),fe.s==null||!isHexString$1(fe.s)?logger$n.throwArgumentError("signature missing or invalid s","signature",he):fe.s=hexZeroPad(fe.s,32);const le=arrayify(fe.s);le[0]>=128&&logger$n.throwArgumentError("signature s out of range","signature",he),fe.recoveryParam&&(le[0]|=128);const pe=hexlify(le);fe._vs&&(isHexString$1(fe._vs)||logger$n.throwArgumentError("signature invalid _vs","signature",he),fe._vs=hexZeroPad(fe._vs,32)),fe._vs==null?fe._vs=pe:fe._vs!==pe&&logger$n.throwArgumentError("signature _vs mismatch v and s","signature",he)}return fe.yParityAndS=fe._vs,fe.compact=fe.r+fe.yParityAndS.substring(2),fe}function joinSignature(he){return he=splitSignature(he),hexlify(concat([he.r,he.s,he.recoveryParam?"0x1c":"0x1b"]))}function keccak256$1(he){return"0x"+sha3.keccak_256(arrayify(he))}const version$h="bignumber/5.7.0";var BN$1=BN$2.BN;const logger$m=new Logger(version$h),_constructorGuard$2={},MAX_SAFE=9007199254740991;let _warnedToStringRadix=!1;class BigNumber{constructor(fe,le){fe!==_constructorGuard$2&&logger$m.throwError("cannot call constructor directly; use BigNumber.from",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"}),this._hex=le,this._isBigNumber=!0,Object.freeze(this)}fromTwos(fe){return toBigNumber(toBN(this).fromTwos(fe))}toTwos(fe){return toBigNumber(toBN(this).toTwos(fe))}abs(){return this._hex[0]==="-"?BigNumber.from(this._hex.substring(1)):this}add(fe){return toBigNumber(toBN(this).add(toBN(fe)))}sub(fe){return toBigNumber(toBN(this).sub(toBN(fe)))}div(fe){return BigNumber.from(fe).isZero()&&throwFault("division-by-zero","div"),toBigNumber(toBN(this).div(toBN(fe)))}mul(fe){return toBigNumber(toBN(this).mul(toBN(fe)))}mod(fe){const le=toBN(fe);return le.isNeg()&&throwFault("division-by-zero","mod"),toBigNumber(toBN(this).umod(le))}pow(fe){const le=toBN(fe);return le.isNeg()&&throwFault("negative-power","pow"),toBigNumber(toBN(this).pow(le))}and(fe){const le=toBN(fe);return(this.isNegative()||le.isNeg())&&throwFault("unbound-bitwise-result","and"),toBigNumber(toBN(this).and(le))}or(fe){const le=toBN(fe);return(this.isNegative()||le.isNeg())&&throwFault("unbound-bitwise-result","or"),toBigNumber(toBN(this).or(le))}xor(fe){const le=toBN(fe);return(this.isNegative()||le.isNeg())&&throwFault("unbound-bitwise-result","xor"),toBigNumber(toBN(this).xor(le))}mask(fe){return(this.isNegative()||fe<0)&&throwFault("negative-width","mask"),toBigNumber(toBN(this).maskn(fe))}shl(fe){return(this.isNegative()||fe<0)&&throwFault("negative-width","shl"),toBigNumber(toBN(this).shln(fe))}shr(fe){return(this.isNegative()||fe<0)&&throwFault("negative-width","shr"),toBigNumber(toBN(this).shrn(fe))}eq(fe){return toBN(this).eq(toBN(fe))}lt(fe){return toBN(this).lt(toBN(fe))}lte(fe){return toBN(this).lte(toBN(fe))}gt(fe){return toBN(this).gt(toBN(fe))}gte(fe){return toBN(this).gte(toBN(fe))}isNegative(){return this._hex[0]==="-"}isZero(){return toBN(this).isZero()}toNumber(){try{return toBN(this).toNumber()}catch{throwFault("overflow","toNumber",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch{}return logger$m.throwError("this platform does not support BigInt",Logger.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){return arguments.length>0&&(arguments[0]===10?_warnedToStringRadix||(_warnedToStringRadix=!0,logger$m.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")):arguments[0]===16?logger$m.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",Logger.errors.UNEXPECTED_ARGUMENT,{}):logger$m.throwError("BigNumber.toString does not accept parameters",Logger.errors.UNEXPECTED_ARGUMENT,{})),toBN(this).toString(10)}toHexString(){return this._hex}toJSON(fe){return{type:"BigNumber",hex:this.toHexString()}}static from(fe){if(fe instanceof BigNumber)return fe;if(typeof fe=="string")return fe.match(/^-?0x[0-9a-f]+$/i)?new BigNumber(_constructorGuard$2,toHex(fe)):fe.match(/^-?[0-9]+$/)?new BigNumber(_constructorGuard$2,toHex(new BN$1(fe))):logger$m.throwArgumentError("invalid BigNumber string","value",fe);if(typeof fe=="number")return fe%1&&throwFault("underflow","BigNumber.from",fe),(fe>=MAX_SAFE||fe<=-MAX_SAFE)&&throwFault("overflow","BigNumber.from",fe),BigNumber.from(String(fe));const le=fe;if(typeof le=="bigint")return BigNumber.from(le.toString());if(isBytes$4(le))return BigNumber.from(hexlify(le));if(le)if(le.toHexString){const pe=le.toHexString();if(typeof pe=="string")return BigNumber.from(pe)}else{let pe=le._hex;if(pe==null&&le.type==="BigNumber"&&(pe=le.hex),typeof pe=="string"&&(isHexString$1(pe)||pe[0]==="-"&&isHexString$1(pe.substring(1))))return BigNumber.from(pe)}return logger$m.throwArgumentError("invalid BigNumber value","value",fe)}static isBigNumber(fe){return!!(fe&&fe._isBigNumber)}}function toHex(he){if(typeof he!="string")return toHex(he.toString(16));if(he[0]==="-")return he=he.substring(1),he[0]==="-"&&logger$m.throwArgumentError("invalid hex","value",he),he=toHex(he),he==="0x00"?he:"-"+he;if(he.substring(0,2)!=="0x"&&(he="0x"+he),he==="0x")return"0x00";for(he.length%2&&(he="0x0"+he.substring(2));he.length>4&&he.substring(0,4)==="0x00";)he="0x"+he.substring(4);return he}function toBigNumber(he){return BigNumber.from(toHex(he))}function toBN(he){const fe=BigNumber.from(he).toHexString();return fe[0]==="-"?new BN$1("-"+fe.substring(3),16):new BN$1(fe.substring(2),16)}function throwFault(he,fe,le){const pe={fault:he,operation:fe};return le!=null&&(pe.value=le),logger$m.throwError(he,Logger.errors.NUMERIC_FAULT,pe)}function _base36To16(he){return new BN$1(he,36).toString(16)}const NegativeOne$1=BigNumber.from(-1),Zero$1=BigNumber.from(0),One$1=BigNumber.from(1),MaxUint256$1=BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),version$g="strings/5.7.0",logger$l=new Logger(version$g);var UnicodeNormalizationForm;(function(he){he.current="",he.NFC="NFC",he.NFD="NFD",he.NFKC="NFKC",he.NFKD="NFKD"})(UnicodeNormalizationForm||(UnicodeNormalizationForm={}));var Utf8ErrorReason;(function(he){he.UNEXPECTED_CONTINUE="unexpected continuation byte",he.BAD_PREFIX="bad codepoint prefix",he.OVERRUN="string overrun",he.MISSING_CONTINUE="missing continuation byte",he.OUT_OF_RANGE="out of UTF-8 range",he.UTF16_SURROGATE="UTF-16 surrogate",he.OVERLONG="overlong representation"})(Utf8ErrorReason||(Utf8ErrorReason={}));function errorFunc(he,fe,le,pe,ge){return logger$l.throwArgumentError(`invalid codepoint at offset ${fe}; ${he}`,"bytes",le)}function ignoreFunc(he,fe,le,pe,ge){if(he===Utf8ErrorReason.BAD_PREFIX||he===Utf8ErrorReason.UNEXPECTED_CONTINUE){let ye=0;for(let xe=fe+1;xe<le.length&&le[xe]>>6===2;xe++)ye++;return ye}return he===Utf8ErrorReason.OVERRUN?le.length-fe-1:0}function replaceFunc(he,fe,le,pe,ge){return he===Utf8ErrorReason.OVERLONG?(pe.push(ge),0):(pe.push(65533),ignoreFunc(he,fe,le))}const Utf8ErrorFuncs=Object.freeze({error:errorFunc,ignore:ignoreFunc,replace:replaceFunc});function getUtf8CodePoints(he,fe){fe==null&&(fe=Utf8ErrorFuncs.error),he=arrayify(he);const le=[];let pe=0;for(;pe<he.length;){const ge=he[pe++];if(!(ge>>7)){le.push(ge);continue}let ye=null,xe=null;if((ge&224)===192)ye=1,xe=127;else if((ge&240)===224)ye=2,xe=2047;else if((ge&248)===240)ye=3,xe=65535;else{(ge&192)===128?pe+=fe(Utf8ErrorReason.UNEXPECTED_CONTINUE,pe-1,he,le):pe+=fe(Utf8ErrorReason.BAD_PREFIX,pe-1,he,le);continue}if(pe-1+ye>=he.length){pe+=fe(Utf8ErrorReason.OVERRUN,pe-1,he,le);continue}let me=ge&(1<<8-ye-1)-1;for(let we=0;we<ye;we++){let Ee=he[pe];if((Ee&192)!=128){pe+=fe(Utf8ErrorReason.MISSING_CONTINUE,pe,he,le),me=null;break}me=me<<6|Ee&63,pe++}if(me!==null){if(me>1114111){pe+=fe(Utf8ErrorReason.OUT_OF_RANGE,pe-1-ye,he,le,me);continue}if(me>=55296&&me<=57343){pe+=fe(Utf8ErrorReason.UTF16_SURROGATE,pe-1-ye,he,le,me);continue}if(me<=xe){pe+=fe(Utf8ErrorReason.OVERLONG,pe-1-ye,he,le,me);continue}le.push(me)}}return le}function toUtf8Bytes(he,fe=UnicodeNormalizationForm.current){fe!=UnicodeNormalizationForm.current&&(logger$l.checkNormalize(),he=he.normalize(fe));let le=[];for(let pe=0;pe<he.length;pe++){const ge=he.charCodeAt(pe);if(ge<128)le.push(ge);else if(ge<2048)le.push(ge>>6|192),le.push(ge&63|128);else if((ge&64512)==55296){pe++;const ye=he.charCodeAt(pe);if(pe>=he.length||(ye&64512)!==56320)throw new Error("invalid utf-8 string");const xe=65536+((ge&1023)<<10)+(ye&1023);le.push(xe>>18|240),le.push(xe>>12&63|128),le.push(xe>>6&63|128),le.push(xe&63|128)}else le.push(ge>>12|224),le.push(ge>>6&63|128),le.push(ge&63|128)}return arrayify(le)}function _toUtf8String(he){return he.map(fe=>fe<=65535?String.fromCharCode(fe):(fe-=65536,String.fromCharCode((fe>>10&1023)+55296,(fe&1023)+56320))).join("")}function toUtf8String(he,fe){return _toUtf8String(getUtf8CodePoints(he,fe))}function id(he){return keccak256$1(toUtf8Bytes(he))}const version$f="hash/5.7.0",messagePrefix=`Ethereum Signed Message:
`;function hashMessage(he){return typeof he=="string"&&(he=toUtf8Bytes(he)),keccak256$1(concat([toUtf8Bytes(messagePrefix),toUtf8Bytes(String(he.length)),he]))}const version$e="rlp/5.7.0",logger$k=new Logger(version$e);function arrayifyInteger(he){const fe=[];for(;he;)fe.unshift(he&255),he>>=8;return fe}function _encode(he){if(Array.isArray(he)){let pe=[];if(he.forEach(function(ye){pe=pe.concat(_encode(ye))}),pe.length<=55)return pe.unshift(192+pe.length),pe;const ge=arrayifyInteger(pe.length);return ge.unshift(247+ge.length),ge.concat(pe)}isBytesLike(he)||logger$k.throwArgumentError("RLP object must be BytesLike","object",he);const fe=Array.prototype.slice.call(arrayify(he));if(fe.length===1&&fe[0]<=127)return fe;if(fe.length<=55)return fe.unshift(128+fe.length),fe;const le=arrayifyInteger(fe.length);return le.unshift(183+le.length),le.concat(fe)}function encode$2(he){return hexlify(_encode(he))}const version$d="address/5.7.0",logger$j=new Logger(version$d);function getChecksumAddress(he){isHexString$1(he,20)||logger$j.throwArgumentError("invalid address","address",he),he=he.toLowerCase();const fe=he.substring(2).split(""),le=new Uint8Array(40);for(let ge=0;ge<40;ge++)le[ge]=fe[ge].charCodeAt(0);const pe=arrayify(keccak256$1(le));for(let ge=0;ge<40;ge+=2)pe[ge>>1]>>4>=8&&(fe[ge]=fe[ge].toUpperCase()),(pe[ge>>1]&15)>=8&&(fe[ge+1]=fe[ge+1].toUpperCase());return"0x"+fe.join("")}const MAX_SAFE_INTEGER=9007199254740991;function log10(he){return Math.log10?Math.log10(he):Math.log(he)/Math.LN10}const ibanLookup={};for(let he=0;he<10;he++)ibanLookup[String(he)]=String(he);for(let he=0;he<26;he++)ibanLookup[String.fromCharCode(65+he)]=String(10+he);const safeDigits=Math.floor(log10(MAX_SAFE_INTEGER));function ibanChecksum(he){he=he.toUpperCase(),he=he.substring(4)+he.substring(0,2)+"00";let fe=he.split("").map(pe=>ibanLookup[pe]).join("");for(;fe.length>=safeDigits;){let pe=fe.substring(0,safeDigits);fe=parseInt(pe,10)%97+fe.substring(pe.length)}let le=String(98-parseInt(fe,10)%97);for(;le.length<2;)le="0"+le;return le}function getAddress(he){let fe=null;if(typeof he!="string"&&logger$j.throwArgumentError("invalid address","address",he),he.match(/^(0x)?[0-9a-fA-F]{40}$/))he.substring(0,2)!=="0x"&&(he="0x"+he),fe=getChecksumAddress(he),he.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&fe!==he&&logger$j.throwArgumentError("bad address checksum","address",he);else if(he.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){for(he.substring(2,4)!==ibanChecksum(he)&&logger$j.throwArgumentError("bad icap checksum","address",he),fe=_base36To16(he.substring(4));fe.length<40;)fe="0"+fe;fe=getChecksumAddress("0x"+fe)}else logger$j.throwArgumentError("invalid address","address",he);return fe}function getContractAddress(he){let fe=null;try{fe=getAddress(he.from)}catch{logger$j.throwArgumentError("missing from address","transaction",he)}const le=stripZeros(arrayify(BigNumber.from(he.nonce).toHexString()));return getAddress(hexDataSlice(keccak256$1(encode$2([fe,le])),12))}const version$c="properties/5.7.0";var __awaiter$a=function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})};const logger$i=new Logger(version$c);function defineReadOnly(he,fe,le){Object.defineProperty(he,fe,{enumerable:!0,value:le,writable:!1})}function getStatic(he,fe){for(let le=0;le<32;le++){if(he[fe])return he[fe];if(!he.prototype||typeof he.prototype!="object")break;he=Object.getPrototypeOf(he.prototype).constructor}return null}function resolveProperties(he){return __awaiter$a(this,void 0,void 0,function*(){const fe=Object.keys(he).map(pe=>{const ge=he[pe];return Promise.resolve(ge).then(ye=>({key:pe,value:ye}))});return(yield Promise.all(fe)).reduce((pe,ge)=>(pe[ge.key]=ge.value,pe),{})})}function checkProperties(he,fe){(!he||typeof he!="object")&&logger$i.throwArgumentError("invalid object","object",he),Object.keys(he).forEach(le=>{fe[le]||logger$i.throwArgumentError("invalid object key - "+le,"transaction:"+le,he)})}function shallowCopy(he){const fe={};for(const le in he)fe[le]=he[le];return fe}const opaque={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function _isFrozen(he){if(he==null||opaque[typeof he])return!0;if(Array.isArray(he)||typeof he=="object"){if(!Object.isFrozen(he))return!1;const fe=Object.keys(he);for(let le=0;le<fe.length;le++){let pe=null;try{pe=he[fe[le]]}catch{continue}if(!_isFrozen(pe))return!1}return!0}return logger$i.throwArgumentError(`Cannot deepCopy ${typeof he}`,"object",he)}function _deepCopy(he){if(_isFrozen(he))return he;if(Array.isArray(he))return Object.freeze(he.map(fe=>deepCopy(fe)));if(typeof he=="object"){const fe={};for(const le in he){const pe=he[le];pe!==void 0&&defineReadOnly(fe,le,deepCopy(pe))}return fe}return logger$i.throwArgumentError(`Cannot deepCopy ${typeof he}`,"object",he)}function deepCopy(he){return _deepCopy(he)}class Description{constructor(fe){for(const le in fe)this[le]=deepCopy(fe[le])}}var __awaiter$9=function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})};const logger$h=new Logger(version$f),padding=new Uint8Array(32);padding.fill(0);const NegativeOne=BigNumber.from(-1),Zero=BigNumber.from(0),One=BigNumber.from(1),MaxUint256=BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function hexPadRight(he){const fe=arrayify(he),le=fe.length%32;return le?hexConcat([fe,padding.slice(le)]):hexlify(fe)}const hexTrue=hexZeroPad(One.toHexString(),32),hexFalse=hexZeroPad(Zero.toHexString(),32),domainFieldTypes={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},domainFieldNames=["name","version","chainId","verifyingContract","salt"];function checkString(he){return function(fe){return typeof fe!="string"&&logger$h.throwArgumentError(`invalid domain value for ${JSON.stringify(he)}`,`domain.${he}`,fe),fe}}const domainChecks={name:checkString("name"),version:checkString("version"),chainId:function(he){try{return BigNumber.from(he).toString()}catch{}return logger$h.throwArgumentError('invalid domain value for "chainId"',"domain.chainId",he)},verifyingContract:function(he){try{return getAddress(he).toLowerCase()}catch{}return logger$h.throwArgumentError('invalid domain value "verifyingContract"',"domain.verifyingContract",he)},salt:function(he){try{const fe=arrayify(he);if(fe.length!==32)throw new Error("bad length");return hexlify(fe)}catch{}return logger$h.throwArgumentError('invalid domain value "salt"',"domain.salt",he)}};function getBaseEncoder(he){{const fe=he.match(/^(u?)int(\d*)$/);if(fe){const le=fe[1]==="",pe=parseInt(fe[2]||"256");(pe%8!==0||pe>256||fe[2]&&fe[2]!==String(pe))&&logger$h.throwArgumentError("invalid numeric width","type",he);const ge=MaxUint256.mask(le?pe-1:pe),ye=le?ge.add(One).mul(NegativeOne):Zero;return function(xe){const me=BigNumber.from(xe);return(me.lt(ye)||me.gt(ge))&&logger$h.throwArgumentError(`value out-of-bounds for ${he}`,"value",xe),hexZeroPad(me.toTwos(256).toHexString(),32)}}}{const fe=he.match(/^bytes(\d+)$/);if(fe){const le=parseInt(fe[1]);return(le===0||le>32||fe[1]!==String(le))&&logger$h.throwArgumentError("invalid bytes width","type",he),function(pe){return arrayify(pe).length!==le&&logger$h.throwArgumentError(`invalid length for ${he}`,"value",pe),hexPadRight(pe)}}}switch(he){case"address":return function(fe){return hexZeroPad(getAddress(fe),32)};case"bool":return function(fe){return fe?hexTrue:hexFalse};case"bytes":return function(fe){return keccak256$1(fe)};case"string":return function(fe){return id(fe)}}return null}function encodeType(he,fe){return`${he}(${fe.map(({name:le,type:pe})=>pe+" "+le).join(",")})`}class TypedDataEncoder{constructor(fe){defineReadOnly(this,"types",Object.freeze(deepCopy(fe))),defineReadOnly(this,"_encoderCache",{}),defineReadOnly(this,"_types",{});const le={},pe={},ge={};Object.keys(fe).forEach(me=>{le[me]={},pe[me]=[],ge[me]={}});for(const me in fe){const we={};fe[me].forEach(Ee=>{we[Ee.name]&&logger$h.throwArgumentError(`duplicate variable name ${JSON.stringify(Ee.name)} in ${JSON.stringify(me)}`,"types",fe),we[Ee.name]=!0;const Ae=Ee.type.match(/^([^\x5b]*)(\x5b|$)/)[1];Ae===me&&logger$h.throwArgumentError(`circular type reference to ${JSON.stringify(Ae)}`,"types",fe),!getBaseEncoder(Ae)&&(pe[Ae]||logger$h.throwArgumentError(`unknown type ${JSON.stringify(Ae)}`,"types",fe),pe[Ae].push(me),le[me][Ae]=!0)})}const ye=Object.keys(pe).filter(me=>pe[me].length===0);ye.length===0?logger$h.throwArgumentError("missing primary type","types",fe):ye.length>1&&logger$h.throwArgumentError(`ambiguous primary types or unused types: ${ye.map(me=>JSON.stringify(me)).join(", ")}`,"types",fe),defineReadOnly(this,"primaryType",ye[0]);function xe(me,we){we[me]&&logger$h.throwArgumentError(`circular type reference to ${JSON.stringify(me)}`,"types",fe),we[me]=!0,Object.keys(le[me]).forEach(Ee=>{pe[Ee]&&(xe(Ee,we),Object.keys(we).forEach(Ae=>{ge[Ae][Ee]=!0}))}),delete we[me]}xe(this.primaryType,{});for(const me in ge){const we=Object.keys(ge[me]);we.sort(),this._types[me]=encodeType(me,fe[me])+we.map(Ee=>encodeType(Ee,fe[Ee])).join("")}}getEncoder(fe){let le=this._encoderCache[fe];return le||(le=this._encoderCache[fe]=this._getEncoder(fe)),le}_getEncoder(fe){{const ge=getBaseEncoder(fe);if(ge)return ge}const le=fe.match(/^(.*)(\x5b(\d*)\x5d)$/);if(le){const ge=le[1],ye=this.getEncoder(ge),xe=parseInt(le[3]);return me=>{xe>=0&&me.length!==xe&&logger$h.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",me);let we=me.map(ye);return this._types[ge]&&(we=we.map(keccak256$1)),keccak256$1(hexConcat(we))}}const pe=this.types[fe];if(pe){const ge=id(this._types[fe]);return ye=>{const xe=pe.map(({name:me,type:we})=>{const Ee=this.getEncoder(we)(ye[me]);return this._types[we]?keccak256$1(Ee):Ee});return xe.unshift(ge),hexConcat(xe)}}return logger$h.throwArgumentError(`unknown type: ${fe}`,"type",fe)}encodeType(fe){const le=this._types[fe];return le||logger$h.throwArgumentError(`unknown type: ${JSON.stringify(fe)}`,"name",fe),le}encodeData(fe,le){return this.getEncoder(fe)(le)}hashStruct(fe,le){return keccak256$1(this.encodeData(fe,le))}encode(fe){return this.encodeData(this.primaryType,fe)}hash(fe){return this.hashStruct(this.primaryType,fe)}_visit(fe,le,pe){if(getBaseEncoder(fe))return pe(fe,le);const ge=fe.match(/^(.*)(\x5b(\d*)\x5d)$/);if(ge){const xe=ge[1],me=parseInt(ge[3]);return me>=0&&le.length!==me&&logger$h.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",le),le.map(we=>this._visit(xe,we,pe))}const ye=this.types[fe];return ye?ye.reduce((xe,{name:me,type:we})=>(xe[me]=this._visit(we,le[me],pe),xe),{}):logger$h.throwArgumentError(`unknown type: ${fe}`,"type",fe)}visit(fe,le){return this._visit(this.primaryType,fe,le)}static from(fe){return new TypedDataEncoder(fe)}static getPrimaryType(fe){return TypedDataEncoder.from(fe).primaryType}static hashStruct(fe,le,pe){return TypedDataEncoder.from(le).hashStruct(fe,pe)}static hashDomain(fe){const le=[];for(const pe in fe){const ge=domainFieldTypes[pe];ge||logger$h.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(pe)}`,"domain",fe),le.push({name:pe,type:ge})}return le.sort((pe,ge)=>domainFieldNames.indexOf(pe.name)-domainFieldNames.indexOf(ge.name)),TypedDataEncoder.hashStruct("EIP712Domain",{EIP712Domain:le},fe)}static encode(fe,le,pe){return hexConcat(["0x1901",TypedDataEncoder.hashDomain(fe),TypedDataEncoder.from(le).hash(pe)])}static hash(fe,le,pe){return keccak256$1(TypedDataEncoder.encode(fe,le,pe))}static resolveNames(fe,le,pe,ge){return __awaiter$9(this,void 0,void 0,function*(){fe=shallowCopy(fe);const ye={};fe.verifyingContract&&!isHexString$1(fe.verifyingContract,20)&&(ye[fe.verifyingContract]="0x");const xe=TypedDataEncoder.from(le);xe.visit(pe,(me,we)=>(me==="address"&&!isHexString$1(we,20)&&(ye[we]="0x"),we));for(const me in ye)ye[me]=yield ge(me);return fe.verifyingContract&&ye[fe.verifyingContract]&&(fe.verifyingContract=ye[fe.verifyingContract]),pe=xe.visit(pe,(me,we)=>me==="address"&&ye[we]?ye[we]:we),{domain:fe,value:pe}})}static getPayload(fe,le,pe){TypedDataEncoder.hashDomain(fe);const ge={},ye=[];domainFieldNames.forEach(we=>{const Ee=fe[we];Ee!=null&&(ge[we]=domainChecks[we](Ee),ye.push({name:we,type:domainFieldTypes[we]}))});const xe=TypedDataEncoder.from(le),me=shallowCopy(le);return me.EIP712Domain?logger$h.throwArgumentError("types must not contain EIP712Domain type","types.EIP712Domain",le):me.EIP712Domain=ye,xe.encode(pe),{types:me,domain:ge,primaryType:xe.primaryType,message:xe.visit(pe,(we,Ee)=>{if(we.match(/^bytes(\d*)/))return hexlify(arrayify(Ee));if(we.match(/^u?int/))return BigNumber.from(Ee).toString();switch(we){case"address":return Ee.toLowerCase();case"bool":return!!Ee;case"string":return typeof Ee!="string"&&logger$h.throwArgumentError("invalid string","value",Ee),Ee}return logger$h.throwArgumentError("unsupported type","type",we)})}}}var hashExports=requireHash();const hash$2=getDefaultExportFromCjs(hashExports);function createCommonjsModule(he,fe,le){return le={path:fe,exports:{},require:function(pe,ge){return commonjsRequire(pe,ge??le.path)}},he(le,le.exports),le.exports}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var minimalisticAssert=assert$1;function assert$1(he,fe){if(!he)throw new Error(fe||"Assertion failed")}assert$1.equal=function(fe,le,pe){if(fe!=le)throw new Error(pe||"Assertion failed: "+fe+" != "+le)};var utils_1=createCommonjsModule(function(he,fe){var le=fe;function pe(xe,me){if(Array.isArray(xe))return xe.slice();if(!xe)return[];var we=[];if(typeof xe!="string"){for(var Ee=0;Ee<xe.length;Ee++)we[Ee]=xe[Ee]|0;return we}if(me==="hex"){xe=xe.replace(/[^a-z0-9]+/ig,""),xe.length%2!==0&&(xe="0"+xe);for(var Ee=0;Ee<xe.length;Ee+=2)we.push(parseInt(xe[Ee]+xe[Ee+1],16))}else for(var Ee=0;Ee<xe.length;Ee++){var Ae=xe.charCodeAt(Ee),Se=Ae>>8,Le=Ae&255;Se?we.push(Se,Le):we.push(Le)}return we}le.toArray=pe;function ge(xe){return xe.length===1?"0"+xe:xe}le.zero2=ge;function ye(xe){for(var me="",we=0;we<xe.length;we++)me+=ge(xe[we].toString(16));return me}le.toHex=ye,le.encode=function(me,we){return we==="hex"?ye(me):me}}),utils_1$1=createCommonjsModule(function(he,fe){var le=fe;le.assert=minimalisticAssert,le.toArray=utils_1.toArray,le.zero2=utils_1.zero2,le.toHex=utils_1.toHex,le.encode=utils_1.encode;function pe(we,Ee,Ae){var Se=new Array(Math.max(we.bitLength(),Ae)+1);Se.fill(0);for(var Le=1<<Ee+1,He=we.clone(),Me=0;Me<Se.length;Me++){var Fe,Ue=He.andln(Le-1);He.isOdd()?(Ue>(Le>>1)-1?Fe=(Le>>1)-Ue:Fe=Ue,He.isubn(Fe)):Fe=0,Se[Me]=Fe,He.iushrn(1)}return Se}le.getNAF=pe;function ge(we,Ee){var Ae=[[],[]];we=we.clone(),Ee=Ee.clone();for(var Se=0,Le=0,He;we.cmpn(-Se)>0||Ee.cmpn(-Le)>0;){var Me=we.andln(3)+Se&3,Fe=Ee.andln(3)+Le&3;Me===3&&(Me=-1),Fe===3&&(Fe=-1);var Ue;Me&1?(He=we.andln(7)+Se&7,(He===3||He===5)&&Fe===2?Ue=-Me:Ue=Me):Ue=0,Ae[0].push(Ue);var qe;Fe&1?(He=Ee.andln(7)+Le&7,(He===3||He===5)&&Me===2?qe=-Fe:qe=Fe):qe=0,Ae[1].push(qe),2*Se===Ue+1&&(Se=1-Se),2*Le===qe+1&&(Le=1-Le),we.iushrn(1),Ee.iushrn(1)}return Ae}le.getJSF=ge;function ye(we,Ee,Ae){var Se="_"+Ee;we.prototype[Ee]=function(){return this[Se]!==void 0?this[Se]:this[Se]=Ae.call(this)}}le.cachedProperty=ye;function xe(we){return typeof we=="string"?le.toArray(we,"hex"):we}le.parseBytes=xe;function me(we){return new BN$2(we,"hex","le")}le.intFromLE=me}),getNAF=utils_1$1.getNAF,getJSF=utils_1$1.getJSF,assert$1$1=utils_1$1.assert;function BaseCurve(he,fe){this.type=he,this.p=new BN$2(fe.p,16),this.red=fe.prime?BN$2.red(fe.prime):BN$2.mont(this.p),this.zero=new BN$2(0).toRed(this.red),this.one=new BN$2(1).toRed(this.red),this.two=new BN$2(2).toRed(this.red),this.n=fe.n&&new BN$2(fe.n,16),this.g=fe.g&&this.pointFromJSON(fe.g,fe.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var le=this.n&&this.p.div(this.n);!le||le.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}var base$1=BaseCurve;BaseCurve.prototype.point=function(){throw new Error("Not implemented")};BaseCurve.prototype.validate=function(){throw new Error("Not implemented")};BaseCurve.prototype._fixedNafMul=function(fe,le){assert$1$1(fe.precomputed);var pe=fe._getDoubles(),ge=getNAF(le,1,this._bitLength),ye=(1<<pe.step+1)-(pe.step%2===0?2:1);ye/=3;var xe=[],me,we;for(me=0;me<ge.length;me+=pe.step){we=0;for(var Ee=me+pe.step-1;Ee>=me;Ee--)we=(we<<1)+ge[Ee];xe.push(we)}for(var Ae=this.jpoint(null,null,null),Se=this.jpoint(null,null,null),Le=ye;Le>0;Le--){for(me=0;me<xe.length;me++)we=xe[me],we===Le?Se=Se.mixedAdd(pe.points[me]):we===-Le&&(Se=Se.mixedAdd(pe.points[me].neg()));Ae=Ae.add(Se)}return Ae.toP()};BaseCurve.prototype._wnafMul=function(fe,le){var pe=4,ge=fe._getNAFPoints(pe);pe=ge.wnd;for(var ye=ge.points,xe=getNAF(le,pe,this._bitLength),me=this.jpoint(null,null,null),we=xe.length-1;we>=0;we--){for(var Ee=0;we>=0&&xe[we]===0;we--)Ee++;if(we>=0&&Ee++,me=me.dblp(Ee),we<0)break;var Ae=xe[we];assert$1$1(Ae!==0),fe.type==="affine"?Ae>0?me=me.mixedAdd(ye[Ae-1>>1]):me=me.mixedAdd(ye[-Ae-1>>1].neg()):Ae>0?me=me.add(ye[Ae-1>>1]):me=me.add(ye[-Ae-1>>1].neg())}return fe.type==="affine"?me.toP():me};BaseCurve.prototype._wnafMulAdd=function(fe,le,pe,ge,ye){var xe=this._wnafT1,me=this._wnafT2,we=this._wnafT3,Ee=0,Ae,Se,Le;for(Ae=0;Ae<ge;Ae++){Le=le[Ae];var He=Le._getNAFPoints(fe);xe[Ae]=He.wnd,me[Ae]=He.points}for(Ae=ge-1;Ae>=1;Ae-=2){var Me=Ae-1,Fe=Ae;if(xe[Me]!==1||xe[Fe]!==1){we[Me]=getNAF(pe[Me],xe[Me],this._bitLength),we[Fe]=getNAF(pe[Fe],xe[Fe],this._bitLength),Ee=Math.max(we[Me].length,Ee),Ee=Math.max(we[Fe].length,Ee);continue}var Ue=[le[Me],null,null,le[Fe]];le[Me].y.cmp(le[Fe].y)===0?(Ue[1]=le[Me].add(le[Fe]),Ue[2]=le[Me].toJ().mixedAdd(le[Fe].neg())):le[Me].y.cmp(le[Fe].y.redNeg())===0?(Ue[1]=le[Me].toJ().mixedAdd(le[Fe]),Ue[2]=le[Me].add(le[Fe].neg())):(Ue[1]=le[Me].toJ().mixedAdd(le[Fe]),Ue[2]=le[Me].toJ().mixedAdd(le[Fe].neg()));var qe=[-3,-1,-5,-7,0,7,5,1,3],$e=getJSF(pe[Me],pe[Fe]);for(Ee=Math.max($e[0].length,Ee),we[Me]=new Array(Ee),we[Fe]=new Array(Ee),Se=0;Se<Ee;Se++){var Qe=$e[0][Se]|0,ot=$e[1][Se]|0;we[Me][Se]=qe[(Qe+1)*3+(ot+1)],we[Fe][Se]=0,me[Me]=Ue}}var nt=this.jpoint(null,null,null),ct=this._wnafT4;for(Ae=Ee;Ae>=0;Ae--){for(var mt=0;Ae>=0;){var gt=!0;for(Se=0;Se<ge;Se++)ct[Se]=we[Se][Ae]|0,ct[Se]!==0&&(gt=!1);if(!gt)break;mt++,Ae--}if(Ae>=0&&mt++,nt=nt.dblp(mt),Ae<0)break;for(Se=0;Se<ge;Se++){var Ht=ct[Se];Ht!==0&&(Ht>0?Le=me[Se][Ht-1>>1]:Ht<0&&(Le=me[Se][-Ht-1>>1].neg()),Le.type==="affine"?nt=nt.mixedAdd(Le):nt=nt.add(Le))}}for(Ae=0;Ae<ge;Ae++)me[Ae]=null;return ye?nt:nt.toP()};function BasePoint(he,fe){this.curve=he,this.type=fe,this.precomputed=null}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function(){throw new Error("Not implemented")};BasePoint.prototype.validate=function(){return this.curve.validate(this)};BaseCurve.prototype.decodePoint=function(fe,le){fe=utils_1$1.toArray(fe,le);var pe=this.p.byteLength();if((fe[0]===4||fe[0]===6||fe[0]===7)&&fe.length-1===2*pe){fe[0]===6?assert$1$1(fe[fe.length-1]%2===0):fe[0]===7&&assert$1$1(fe[fe.length-1]%2===1);var ge=this.point(fe.slice(1,1+pe),fe.slice(1+pe,1+2*pe));return ge}else if((fe[0]===2||fe[0]===3)&&fe.length-1===pe)return this.pointFromX(fe.slice(1,1+pe),fe[0]===3);throw new Error("Unknown point format")};BasePoint.prototype.encodeCompressed=function(fe){return this.encode(fe,!0)};BasePoint.prototype._encode=function(fe){var le=this.curve.p.byteLength(),pe=this.getX().toArray("be",le);return fe?[this.getY().isEven()?2:3].concat(pe):[4].concat(pe,this.getY().toArray("be",le))};BasePoint.prototype.encode=function(fe,le){return utils_1$1.encode(this._encode(le),fe)};BasePoint.prototype.precompute=function(fe){if(this.precomputed)return this;var le={doubles:null,naf:null,beta:null};return le.naf=this._getNAFPoints(8),le.doubles=this._getDoubles(4,fe),le.beta=this._getBeta(),this.precomputed=le,this};BasePoint.prototype._hasDoubles=function(fe){if(!this.precomputed)return!1;var le=this.precomputed.doubles;return le?le.points.length>=Math.ceil((fe.bitLength()+1)/le.step):!1};BasePoint.prototype._getDoubles=function(fe,le){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var pe=[this],ge=this,ye=0;ye<le;ye+=fe){for(var xe=0;xe<fe;xe++)ge=ge.dbl();pe.push(ge)}return{step:fe,points:pe}};BasePoint.prototype._getNAFPoints=function(fe){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var le=[this],pe=(1<<fe)-1,ge=pe===1?null:this.dbl(),ye=1;ye<pe;ye++)le[ye]=le[ye-1].add(ge);return{wnd:fe,points:le}};BasePoint.prototype._getBeta=function(){return null};BasePoint.prototype.dblp=function(fe){for(var le=this,pe=0;pe<fe;pe++)le=le.dbl();return le};var inherits_browser=createCommonjsModule(function(he){typeof Object.create=="function"?he.exports=function(le,pe){pe&&(le.super_=pe,le.prototype=Object.create(pe.prototype,{constructor:{value:le,enumerable:!1,writable:!0,configurable:!0}}))}:he.exports=function(le,pe){if(pe){le.super_=pe;var ge=function(){};ge.prototype=pe.prototype,le.prototype=new ge,le.prototype.constructor=le}}}),assert$2=utils_1$1.assert;function ShortCurve(he){base$1.call(this,"short",he),this.a=new BN$2(he.a,16).toRed(this.red),this.b=new BN$2(he.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=this.a.fromRed().cmpn(0)===0,this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0,this.endo=this._getEndomorphism(he),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}inherits_browser(ShortCurve,base$1);var short_1=ShortCurve;ShortCurve.prototype._getEndomorphism=function(fe){if(!(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)){var le,pe;if(fe.beta)le=new BN$2(fe.beta,16).toRed(this.red);else{var ge=this._getEndoRoots(this.p);le=ge[0].cmp(ge[1])<0?ge[0]:ge[1],le=le.toRed(this.red)}if(fe.lambda)pe=new BN$2(fe.lambda,16);else{var ye=this._getEndoRoots(this.n);this.g.mul(ye[0]).x.cmp(this.g.x.redMul(le))===0?pe=ye[0]:(pe=ye[1],assert$2(this.g.mul(pe).x.cmp(this.g.x.redMul(le))===0))}var xe;return fe.basis?xe=fe.basis.map(function(me){return{a:new BN$2(me.a,16),b:new BN$2(me.b,16)}}):xe=this._getEndoBasis(pe),{beta:le,lambda:pe,basis:xe}}};ShortCurve.prototype._getEndoRoots=function(fe){var le=fe===this.p?this.red:BN$2.mont(fe),pe=new BN$2(2).toRed(le).redInvm(),ge=pe.redNeg(),ye=new BN$2(3).toRed(le).redNeg().redSqrt().redMul(pe),xe=ge.redAdd(ye).fromRed(),me=ge.redSub(ye).fromRed();return[xe,me]};ShortCurve.prototype._getEndoBasis=function(fe){for(var le=this.n.ushrn(Math.floor(this.n.bitLength()/2)),pe=fe,ge=this.n.clone(),ye=new BN$2(1),xe=new BN$2(0),me=new BN$2(0),we=new BN$2(1),Ee,Ae,Se,Le,He,Me,Fe,Ue=0,qe,$e;pe.cmpn(0)!==0;){var Qe=ge.div(pe);qe=ge.sub(Qe.mul(pe)),$e=me.sub(Qe.mul(ye));var ot=we.sub(Qe.mul(xe));if(!Se&&qe.cmp(le)<0)Ee=Fe.neg(),Ae=ye,Se=qe.neg(),Le=$e;else if(Se&&++Ue===2)break;Fe=qe,ge=pe,pe=qe,me=ye,ye=$e,we=xe,xe=ot}He=qe.neg(),Me=$e;var nt=Se.sqr().add(Le.sqr()),ct=He.sqr().add(Me.sqr());return ct.cmp(nt)>=0&&(He=Ee,Me=Ae),Se.negative&&(Se=Se.neg(),Le=Le.neg()),He.negative&&(He=He.neg(),Me=Me.neg()),[{a:Se,b:Le},{a:He,b:Me}]};ShortCurve.prototype._endoSplit=function(fe){var le=this.endo.basis,pe=le[0],ge=le[1],ye=ge.b.mul(fe).divRound(this.n),xe=pe.b.neg().mul(fe).divRound(this.n),me=ye.mul(pe.a),we=xe.mul(ge.a),Ee=ye.mul(pe.b),Ae=xe.mul(ge.b),Se=fe.sub(me).sub(we),Le=Ee.add(Ae).neg();return{k1:Se,k2:Le}};ShortCurve.prototype.pointFromX=function(fe,le){fe=new BN$2(fe,16),fe.red||(fe=fe.toRed(this.red));var pe=fe.redSqr().redMul(fe).redIAdd(fe.redMul(this.a)).redIAdd(this.b),ge=pe.redSqrt();if(ge.redSqr().redSub(pe).cmp(this.zero)!==0)throw new Error("invalid point");var ye=ge.fromRed().isOdd();return(le&&!ye||!le&&ye)&&(ge=ge.redNeg()),this.point(fe,ge)};ShortCurve.prototype.validate=function(fe){if(fe.inf)return!0;var le=fe.x,pe=fe.y,ge=this.a.redMul(le),ye=le.redSqr().redMul(le).redIAdd(ge).redIAdd(this.b);return pe.redSqr().redISub(ye).cmpn(0)===0};ShortCurve.prototype._endoWnafMulAdd=function(fe,le,pe){for(var ge=this._endoWnafT1,ye=this._endoWnafT2,xe=0;xe<fe.length;xe++){var me=this._endoSplit(le[xe]),we=fe[xe],Ee=we._getBeta();me.k1.negative&&(me.k1.ineg(),we=we.neg(!0)),me.k2.negative&&(me.k2.ineg(),Ee=Ee.neg(!0)),ge[xe*2]=we,ge[xe*2+1]=Ee,ye[xe*2]=me.k1,ye[xe*2+1]=me.k2}for(var Ae=this._wnafMulAdd(1,ge,ye,xe*2,pe),Se=0;Se<xe*2;Se++)ge[Se]=null,ye[Se]=null;return Ae};function Point$1(he,fe,le,pe){base$1.BasePoint.call(this,he,"affine"),fe===null&&le===null?(this.x=null,this.y=null,this.inf=!0):(this.x=new BN$2(fe,16),this.y=new BN$2(le,16),pe&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}inherits_browser(Point$1,base$1.BasePoint);ShortCurve.prototype.point=function(fe,le,pe){return new Point$1(this,fe,le,pe)};ShortCurve.prototype.pointFromJSON=function(fe,le){return Point$1.fromJSON(this,fe,le)};Point$1.prototype._getBeta=function(){if(this.curve.endo){var fe=this.precomputed;if(fe&&fe.beta)return fe.beta;var le=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(fe){var pe=this.curve,ge=function(ye){return pe.point(ye.x.redMul(pe.endo.beta),ye.y)};fe.beta=le,le.precomputed={beta:null,naf:fe.naf&&{wnd:fe.naf.wnd,points:fe.naf.points.map(ge)},doubles:fe.doubles&&{step:fe.doubles.step,points:fe.doubles.points.map(ge)}}}return le}};Point$1.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]};Point$1.fromJSON=function(fe,le,pe){typeof le=="string"&&(le=JSON.parse(le));var ge=fe.point(le[0],le[1],pe);if(!le[2])return ge;function ye(me){return fe.point(me[0],me[1],pe)}var xe=le[2];return ge.precomputed={beta:null,doubles:xe.doubles&&{step:xe.doubles.step,points:[ge].concat(xe.doubles.points.map(ye))},naf:xe.naf&&{wnd:xe.naf.wnd,points:[ge].concat(xe.naf.points.map(ye))}},ge};Point$1.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"};Point$1.prototype.isInfinity=function(){return this.inf};Point$1.prototype.add=function(fe){if(this.inf)return fe;if(fe.inf)return this;if(this.eq(fe))return this.dbl();if(this.neg().eq(fe))return this.curve.point(null,null);if(this.x.cmp(fe.x)===0)return this.curve.point(null,null);var le=this.y.redSub(fe.y);le.cmpn(0)!==0&&(le=le.redMul(this.x.redSub(fe.x).redInvm()));var pe=le.redSqr().redISub(this.x).redISub(fe.x),ge=le.redMul(this.x.redSub(pe)).redISub(this.y);return this.curve.point(pe,ge)};Point$1.prototype.dbl=function(){if(this.inf)return this;var fe=this.y.redAdd(this.y);if(fe.cmpn(0)===0)return this.curve.point(null,null);var le=this.curve.a,pe=this.x.redSqr(),ge=fe.redInvm(),ye=pe.redAdd(pe).redIAdd(pe).redIAdd(le).redMul(ge),xe=ye.redSqr().redISub(this.x.redAdd(this.x)),me=ye.redMul(this.x.redSub(xe)).redISub(this.y);return this.curve.point(xe,me)};Point$1.prototype.getX=function(){return this.x.fromRed()};Point$1.prototype.getY=function(){return this.y.fromRed()};Point$1.prototype.mul=function(fe){return fe=new BN$2(fe,16),this.isInfinity()?this:this._hasDoubles(fe)?this.curve._fixedNafMul(this,fe):this.curve.endo?this.curve._endoWnafMulAdd([this],[fe]):this.curve._wnafMul(this,fe)};Point$1.prototype.mulAdd=function(fe,le,pe){var ge=[this,le],ye=[fe,pe];return this.curve.endo?this.curve._endoWnafMulAdd(ge,ye):this.curve._wnafMulAdd(1,ge,ye,2)};Point$1.prototype.jmulAdd=function(fe,le,pe){var ge=[this,le],ye=[fe,pe];return this.curve.endo?this.curve._endoWnafMulAdd(ge,ye,!0):this.curve._wnafMulAdd(1,ge,ye,2,!0)};Point$1.prototype.eq=function(fe){return this===fe||this.inf===fe.inf&&(this.inf||this.x.cmp(fe.x)===0&&this.y.cmp(fe.y)===0)};Point$1.prototype.neg=function(fe){if(this.inf)return this;var le=this.curve.point(this.x,this.y.redNeg());if(fe&&this.precomputed){var pe=this.precomputed,ge=function(ye){return ye.neg()};le.precomputed={naf:pe.naf&&{wnd:pe.naf.wnd,points:pe.naf.points.map(ge)},doubles:pe.doubles&&{step:pe.doubles.step,points:pe.doubles.points.map(ge)}}}return le};Point$1.prototype.toJ=function(){if(this.inf)return this.curve.jpoint(null,null,null);var fe=this.curve.jpoint(this.x,this.y,this.curve.one);return fe};function JPoint(he,fe,le,pe){base$1.BasePoint.call(this,he,"jacobian"),fe===null&&le===null&&pe===null?(this.x=this.curve.one,this.y=this.curve.one,this.z=new BN$2(0)):(this.x=new BN$2(fe,16),this.y=new BN$2(le,16),this.z=new BN$2(pe,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}inherits_browser(JPoint,base$1.BasePoint);ShortCurve.prototype.jpoint=function(fe,le,pe){return new JPoint(this,fe,le,pe)};JPoint.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var fe=this.z.redInvm(),le=fe.redSqr(),pe=this.x.redMul(le),ge=this.y.redMul(le).redMul(fe);return this.curve.point(pe,ge)};JPoint.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};JPoint.prototype.add=function(fe){if(this.isInfinity())return fe;if(fe.isInfinity())return this;var le=fe.z.redSqr(),pe=this.z.redSqr(),ge=this.x.redMul(le),ye=fe.x.redMul(pe),xe=this.y.redMul(le.redMul(fe.z)),me=fe.y.redMul(pe.redMul(this.z)),we=ge.redSub(ye),Ee=xe.redSub(me);if(we.cmpn(0)===0)return Ee.cmpn(0)!==0?this.curve.jpoint(null,null,null):this.dbl();var Ae=we.redSqr(),Se=Ae.redMul(we),Le=ge.redMul(Ae),He=Ee.redSqr().redIAdd(Se).redISub(Le).redISub(Le),Me=Ee.redMul(Le.redISub(He)).redISub(xe.redMul(Se)),Fe=this.z.redMul(fe.z).redMul(we);return this.curve.jpoint(He,Me,Fe)};JPoint.prototype.mixedAdd=function(fe){if(this.isInfinity())return fe.toJ();if(fe.isInfinity())return this;var le=this.z.redSqr(),pe=this.x,ge=fe.x.redMul(le),ye=this.y,xe=fe.y.redMul(le).redMul(this.z),me=pe.redSub(ge),we=ye.redSub(xe);if(me.cmpn(0)===0)return we.cmpn(0)!==0?this.curve.jpoint(null,null,null):this.dbl();var Ee=me.redSqr(),Ae=Ee.redMul(me),Se=pe.redMul(Ee),Le=we.redSqr().redIAdd(Ae).redISub(Se).redISub(Se),He=we.redMul(Se.redISub(Le)).redISub(ye.redMul(Ae)),Me=this.z.redMul(me);return this.curve.jpoint(Le,He,Me)};JPoint.prototype.dblp=function(fe){if(fe===0)return this;if(this.isInfinity())return this;if(!fe)return this.dbl();var le;if(this.curve.zeroA||this.curve.threeA){var pe=this;for(le=0;le<fe;le++)pe=pe.dbl();return pe}var ge=this.curve.a,ye=this.curve.tinv,xe=this.x,me=this.y,we=this.z,Ee=we.redSqr().redSqr(),Ae=me.redAdd(me);for(le=0;le<fe;le++){var Se=xe.redSqr(),Le=Ae.redSqr(),He=Le.redSqr(),Me=Se.redAdd(Se).redIAdd(Se).redIAdd(ge.redMul(Ee)),Fe=xe.redMul(Le),Ue=Me.redSqr().redISub(Fe.redAdd(Fe)),qe=Fe.redISub(Ue),$e=Me.redMul(qe);$e=$e.redIAdd($e).redISub(He);var Qe=Ae.redMul(we);le+1<fe&&(Ee=Ee.redMul(He)),xe=Ue,we=Qe,Ae=$e}return this.curve.jpoint(xe,Ae.redMul(ye),we)};JPoint.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()};JPoint.prototype._zeroDbl=function(){var fe,le,pe;if(this.zOne){var ge=this.x.redSqr(),ye=this.y.redSqr(),xe=ye.redSqr(),me=this.x.redAdd(ye).redSqr().redISub(ge).redISub(xe);me=me.redIAdd(me);var we=ge.redAdd(ge).redIAdd(ge),Ee=we.redSqr().redISub(me).redISub(me),Ae=xe.redIAdd(xe);Ae=Ae.redIAdd(Ae),Ae=Ae.redIAdd(Ae),fe=Ee,le=we.redMul(me.redISub(Ee)).redISub(Ae),pe=this.y.redAdd(this.y)}else{var Se=this.x.redSqr(),Le=this.y.redSqr(),He=Le.redSqr(),Me=this.x.redAdd(Le).redSqr().redISub(Se).redISub(He);Me=Me.redIAdd(Me);var Fe=Se.redAdd(Se).redIAdd(Se),Ue=Fe.redSqr(),qe=He.redIAdd(He);qe=qe.redIAdd(qe),qe=qe.redIAdd(qe),fe=Ue.redISub(Me).redISub(Me),le=Fe.redMul(Me.redISub(fe)).redISub(qe),pe=this.y.redMul(this.z),pe=pe.redIAdd(pe)}return this.curve.jpoint(fe,le,pe)};JPoint.prototype._threeDbl=function(){var fe,le,pe;if(this.zOne){var ge=this.x.redSqr(),ye=this.y.redSqr(),xe=ye.redSqr(),me=this.x.redAdd(ye).redSqr().redISub(ge).redISub(xe);me=me.redIAdd(me);var we=ge.redAdd(ge).redIAdd(ge).redIAdd(this.curve.a),Ee=we.redSqr().redISub(me).redISub(me);fe=Ee;var Ae=xe.redIAdd(xe);Ae=Ae.redIAdd(Ae),Ae=Ae.redIAdd(Ae),le=we.redMul(me.redISub(Ee)).redISub(Ae),pe=this.y.redAdd(this.y)}else{var Se=this.z.redSqr(),Le=this.y.redSqr(),He=this.x.redMul(Le),Me=this.x.redSub(Se).redMul(this.x.redAdd(Se));Me=Me.redAdd(Me).redIAdd(Me);var Fe=He.redIAdd(He);Fe=Fe.redIAdd(Fe);var Ue=Fe.redAdd(Fe);fe=Me.redSqr().redISub(Ue),pe=this.y.redAdd(this.z).redSqr().redISub(Le).redISub(Se);var qe=Le.redSqr();qe=qe.redIAdd(qe),qe=qe.redIAdd(qe),qe=qe.redIAdd(qe),le=Me.redMul(Fe.redISub(fe)).redISub(qe)}return this.curve.jpoint(fe,le,pe)};JPoint.prototype._dbl=function(){var fe=this.curve.a,le=this.x,pe=this.y,ge=this.z,ye=ge.redSqr().redSqr(),xe=le.redSqr(),me=pe.redSqr(),we=xe.redAdd(xe).redIAdd(xe).redIAdd(fe.redMul(ye)),Ee=le.redAdd(le);Ee=Ee.redIAdd(Ee);var Ae=Ee.redMul(me),Se=we.redSqr().redISub(Ae.redAdd(Ae)),Le=Ae.redISub(Se),He=me.redSqr();He=He.redIAdd(He),He=He.redIAdd(He),He=He.redIAdd(He);var Me=we.redMul(Le).redISub(He),Fe=pe.redAdd(pe).redMul(ge);return this.curve.jpoint(Se,Me,Fe)};JPoint.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var fe=this.x.redSqr(),le=this.y.redSqr(),pe=this.z.redSqr(),ge=le.redSqr(),ye=fe.redAdd(fe).redIAdd(fe),xe=ye.redSqr(),me=this.x.redAdd(le).redSqr().redISub(fe).redISub(ge);me=me.redIAdd(me),me=me.redAdd(me).redIAdd(me),me=me.redISub(xe);var we=me.redSqr(),Ee=ge.redIAdd(ge);Ee=Ee.redIAdd(Ee),Ee=Ee.redIAdd(Ee),Ee=Ee.redIAdd(Ee);var Ae=ye.redIAdd(me).redSqr().redISub(xe).redISub(we).redISub(Ee),Se=le.redMul(Ae);Se=Se.redIAdd(Se),Se=Se.redIAdd(Se);var Le=this.x.redMul(we).redISub(Se);Le=Le.redIAdd(Le),Le=Le.redIAdd(Le);var He=this.y.redMul(Ae.redMul(Ee.redISub(Ae)).redISub(me.redMul(we)));He=He.redIAdd(He),He=He.redIAdd(He),He=He.redIAdd(He);var Me=this.z.redAdd(me).redSqr().redISub(pe).redISub(we);return this.curve.jpoint(Le,He,Me)};JPoint.prototype.mul=function(fe,le){return fe=new BN$2(fe,le),this.curve._wnafMul(this,fe)};JPoint.prototype.eq=function(fe){if(fe.type==="affine")return this.eq(fe.toJ());if(this===fe)return!0;var le=this.z.redSqr(),pe=fe.z.redSqr();if(this.x.redMul(pe).redISub(fe.x.redMul(le)).cmpn(0)!==0)return!1;var ge=le.redMul(this.z),ye=pe.redMul(fe.z);return this.y.redMul(ye).redISub(fe.y.redMul(ge)).cmpn(0)===0};JPoint.prototype.eqXToP=function(fe){var le=this.z.redSqr(),pe=fe.toRed(this.curve.red).redMul(le);if(this.x.cmp(pe)===0)return!0;for(var ge=fe.clone(),ye=this.curve.redN.redMul(le);;){if(ge.iadd(this.curve.n),ge.cmp(this.curve.p)>=0)return!1;if(pe.redIAdd(ye),this.x.cmp(pe)===0)return!0}};JPoint.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"};JPoint.prototype.isInfinity=function(){return this.z.cmpn(0)===0};var curve_1=createCommonjsModule(function(he,fe){var le=fe;le.base=base$1,le.short=short_1,le.mont=null,le.edwards=null}),curves_1=createCommonjsModule(function(he,fe){var le=fe,pe=utils_1$1.assert;function ge(me){me.type==="short"?this.curve=new curve_1.short(me):me.type==="edwards"?this.curve=new curve_1.edwards(me):this.curve=new curve_1.mont(me),this.g=this.curve.g,this.n=this.curve.n,this.hash=me.hash,pe(this.g.validate(),"Invalid curve"),pe(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}le.PresetCurve=ge;function ye(me,we){Object.defineProperty(le,me,{configurable:!0,enumerable:!0,get:function(){var Ee=new ge(we);return Object.defineProperty(le,me,{configurable:!0,enumerable:!0,value:Ee}),Ee}})}ye("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:hash$2.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),ye("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:hash$2.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),ye("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:hash$2.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),ye("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:hash$2.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),ye("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:hash$2.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),ye("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash$2.sha256,gRed:!1,g:["9"]}),ye("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash$2.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});var xe;try{xe=null.crash()}catch{xe=void 0}ye("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:hash$2.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",xe]})});function HmacDRBG(he){if(!(this instanceof HmacDRBG))return new HmacDRBG(he);this.hash=he.hash,this.predResist=!!he.predResist,this.outLen=this.hash.outSize,this.minEntropy=he.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var fe=utils_1.toArray(he.entropy,he.entropyEnc||"hex"),le=utils_1.toArray(he.nonce,he.nonceEnc||"hex"),pe=utils_1.toArray(he.pers,he.persEnc||"hex");minimalisticAssert(fe.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(fe,le,pe)}var hmacDrbg=HmacDRBG;HmacDRBG.prototype._init=function(fe,le,pe){var ge=fe.concat(le).concat(pe);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var ye=0;ye<this.V.length;ye++)this.K[ye]=0,this.V[ye]=1;this._update(ge),this._reseed=1,this.reseedInterval=281474976710656};HmacDRBG.prototype._hmac=function(){return new hash$2.hmac(this.hash,this.K)};HmacDRBG.prototype._update=function(fe){var le=this._hmac().update(this.V).update([0]);fe&&(le=le.update(fe)),this.K=le.digest(),this.V=this._hmac().update(this.V).digest(),fe&&(this.K=this._hmac().update(this.V).update([1]).update(fe).digest(),this.V=this._hmac().update(this.V).digest())};HmacDRBG.prototype.reseed=function(fe,le,pe,ge){typeof le!="string"&&(ge=pe,pe=le,le=null),fe=utils_1.toArray(fe,le),pe=utils_1.toArray(pe,ge),minimalisticAssert(fe.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(fe.concat(pe||[])),this._reseed=1};HmacDRBG.prototype.generate=function(fe,le,pe,ge){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");typeof le!="string"&&(ge=pe,pe=le,le=null),pe&&(pe=utils_1.toArray(pe,ge||"hex"),this._update(pe));for(var ye=[];ye.length<fe;)this.V=this._hmac().update(this.V).digest(),ye=ye.concat(this.V);var xe=ye.slice(0,fe);return this._update(pe),this._reseed++,utils_1.encode(xe,le)};var assert$3=utils_1$1.assert;function KeyPair$2(he,fe){this.ec=he,this.priv=null,this.pub=null,fe.priv&&this._importPrivate(fe.priv,fe.privEnc),fe.pub&&this._importPublic(fe.pub,fe.pubEnc)}var key=KeyPair$2;KeyPair$2.fromPublic=function(fe,le,pe){return le instanceof KeyPair$2?le:new KeyPair$2(fe,{pub:le,pubEnc:pe})};KeyPair$2.fromPrivate=function(fe,le,pe){return le instanceof KeyPair$2?le:new KeyPair$2(fe,{priv:le,privEnc:pe})};KeyPair$2.prototype.validate=function(){var fe=this.getPublic();return fe.isInfinity()?{result:!1,reason:"Invalid public key"}:fe.validate()?fe.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}};KeyPair$2.prototype.getPublic=function(fe,le){return typeof fe=="string"&&(le=fe,fe=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),le?this.pub.encode(le,fe):this.pub};KeyPair$2.prototype.getPrivate=function(fe){return fe==="hex"?this.priv.toString(16,2):this.priv};KeyPair$2.prototype._importPrivate=function(fe,le){this.priv=new BN$2(fe,le||16),this.priv=this.priv.umod(this.ec.curve.n)};KeyPair$2.prototype._importPublic=function(fe,le){if(fe.x||fe.y){this.ec.curve.type==="mont"?assert$3(fe.x,"Need x coordinate"):(this.ec.curve.type==="short"||this.ec.curve.type==="edwards")&&assert$3(fe.x&&fe.y,"Need both x and y coordinate"),this.pub=this.ec.curve.point(fe.x,fe.y);return}this.pub=this.ec.curve.decodePoint(fe,le)};KeyPair$2.prototype.derive=function(fe){return fe.validate()||assert$3(fe.validate(),"public point not validated"),fe.mul(this.priv).getX()};KeyPair$2.prototype.sign=function(fe,le,pe){return this.ec.sign(fe,this,le,pe)};KeyPair$2.prototype.verify=function(fe,le){return this.ec.verify(fe,le,this)};KeyPair$2.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var assert$4=utils_1$1.assert;function Signature$1(he,fe){if(he instanceof Signature$1)return he;this._importDER(he,fe)||(assert$4(he.r&&he.s,"Signature without r or s"),this.r=new BN$2(he.r,16),this.s=new BN$2(he.s,16),he.recoveryParam===void 0?this.recoveryParam=null:this.recoveryParam=he.recoveryParam)}var signature$1=Signature$1;function Position(){this.place=0}function getLength(he,fe){var le=he[fe.place++];if(!(le&128))return le;var pe=le&15;if(pe===0||pe>4)return!1;for(var ge=0,ye=0,xe=fe.place;ye<pe;ye++,xe++)ge<<=8,ge|=he[xe],ge>>>=0;return ge<=127?!1:(fe.place=xe,ge)}function rmPadding(he){for(var fe=0,le=he.length-1;!he[fe]&&!(he[fe+1]&128)&&fe<le;)fe++;return fe===0?he:he.slice(fe)}Signature$1.prototype._importDER=function(fe,le){fe=utils_1$1.toArray(fe,le);var pe=new Position;if(fe[pe.place++]!==48)return!1;var ge=getLength(fe,pe);if(ge===!1||ge+pe.place!==fe.length||fe[pe.place++]!==2)return!1;var ye=getLength(fe,pe);if(ye===!1)return!1;var xe=fe.slice(pe.place,ye+pe.place);if(pe.place+=ye,fe[pe.place++]!==2)return!1;var me=getLength(fe,pe);if(me===!1||fe.length!==me+pe.place)return!1;var we=fe.slice(pe.place,me+pe.place);if(xe[0]===0)if(xe[1]&128)xe=xe.slice(1);else return!1;if(we[0]===0)if(we[1]&128)we=we.slice(1);else return!1;return this.r=new BN$2(xe),this.s=new BN$2(we),this.recoveryParam=null,!0};function constructLength(he,fe){if(fe<128){he.push(fe);return}var le=1+(Math.log(fe)/Math.LN2>>>3);for(he.push(le|128);--le;)he.push(fe>>>(le<<3)&255);he.push(fe)}Signature$1.prototype.toDER=function(fe){var le=this.r.toArray(),pe=this.s.toArray();for(le[0]&128&&(le=[0].concat(le)),pe[0]&128&&(pe=[0].concat(pe)),le=rmPadding(le),pe=rmPadding(pe);!pe[0]&&!(pe[1]&128);)pe=pe.slice(1);var ge=[2];constructLength(ge,le.length),ge=ge.concat(le),ge.push(2),constructLength(ge,pe.length);var ye=ge.concat(pe),xe=[48];return constructLength(xe,ye.length),xe=xe.concat(ye),utils_1$1.encode(xe,fe)};var rand=function(){throw new Error("unsupported")},assert$5=utils_1$1.assert;function EC$1(he){if(!(this instanceof EC$1))return new EC$1(he);typeof he=="string"&&(assert$5(Object.prototype.hasOwnProperty.call(curves_1,he),"Unknown curve "+he),he=curves_1[he]),he instanceof curves_1.PresetCurve&&(he={curve:he}),this.curve=he.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=he.curve.g,this.g.precompute(he.curve.n.bitLength()+1),this.hash=he.hash||he.curve.hash}var ec$1=EC$1;EC$1.prototype.keyPair=function(fe){return new key(this,fe)};EC$1.prototype.keyFromPrivate=function(fe,le){return key.fromPrivate(this,fe,le)};EC$1.prototype.keyFromPublic=function(fe,le){return key.fromPublic(this,fe,le)};EC$1.prototype.genKeyPair=function(fe){fe||(fe={});for(var le=new hmacDrbg({hash:this.hash,pers:fe.pers,persEnc:fe.persEnc||"utf8",entropy:fe.entropy||rand(this.hash.hmacStrength),entropyEnc:fe.entropy&&fe.entropyEnc||"utf8",nonce:this.n.toArray()}),pe=this.n.byteLength(),ge=this.n.sub(new BN$2(2));;){var ye=new BN$2(le.generate(pe));if(!(ye.cmp(ge)>0))return ye.iaddn(1),this.keyFromPrivate(ye)}};EC$1.prototype._truncateToN=function(fe,le){var pe=fe.byteLength()*8-this.n.bitLength();return pe>0&&(fe=fe.ushrn(pe)),!le&&fe.cmp(this.n)>=0?fe.sub(this.n):fe};EC$1.prototype.sign=function(fe,le,pe,ge){typeof pe=="object"&&(ge=pe,pe=null),ge||(ge={}),le=this.keyFromPrivate(le,pe),fe=this._truncateToN(new BN$2(fe,16));for(var ye=this.n.byteLength(),xe=le.getPrivate().toArray("be",ye),me=fe.toArray("be",ye),we=new hmacDrbg({hash:this.hash,entropy:xe,nonce:me,pers:ge.pers,persEnc:ge.persEnc||"utf8"}),Ee=this.n.sub(new BN$2(1)),Ae=0;;Ae++){var Se=ge.k?ge.k(Ae):new BN$2(we.generate(this.n.byteLength()));if(Se=this._truncateToN(Se,!0),!(Se.cmpn(1)<=0||Se.cmp(Ee)>=0)){var Le=this.g.mul(Se);if(!Le.isInfinity()){var He=Le.getX(),Me=He.umod(this.n);if(Me.cmpn(0)!==0){var Fe=Se.invm(this.n).mul(Me.mul(le.getPrivate()).iadd(fe));if(Fe=Fe.umod(this.n),Fe.cmpn(0)!==0){var Ue=(Le.getY().isOdd()?1:0)|(He.cmp(Me)!==0?2:0);return ge.canonical&&Fe.cmp(this.nh)>0&&(Fe=this.n.sub(Fe),Ue^=1),new signature$1({r:Me,s:Fe,recoveryParam:Ue})}}}}}};EC$1.prototype.verify=function(fe,le,pe,ge){fe=this._truncateToN(new BN$2(fe,16)),pe=this.keyFromPublic(pe,ge),le=new signature$1(le,"hex");var ye=le.r,xe=le.s;if(ye.cmpn(1)<0||ye.cmp(this.n)>=0||xe.cmpn(1)<0||xe.cmp(this.n)>=0)return!1;var me=xe.invm(this.n),we=me.mul(fe).umod(this.n),Ee=me.mul(ye).umod(this.n),Ae;return this.curve._maxwellTrick?(Ae=this.g.jmulAdd(we,pe.getPublic(),Ee),Ae.isInfinity()?!1:Ae.eqXToP(ye)):(Ae=this.g.mulAdd(we,pe.getPublic(),Ee),Ae.isInfinity()?!1:Ae.getX().umod(this.n).cmp(ye)===0)};EC$1.prototype.recoverPubKey=function(he,fe,le,pe){assert$5((3&le)===le,"The recovery param is more than two bits"),fe=new signature$1(fe,pe);var ge=this.n,ye=new BN$2(he),xe=fe.r,me=fe.s,we=le&1,Ee=le>>1;if(xe.cmp(this.curve.p.umod(this.curve.n))>=0&&Ee)throw new Error("Unable to find sencond key candinate");Ee?xe=this.curve.pointFromX(xe.add(this.curve.n),we):xe=this.curve.pointFromX(xe,we);var Ae=fe.r.invm(ge),Se=ge.sub(ye).mul(Ae).umod(ge),Le=me.mul(Ae).umod(ge);return this.g.mulAdd(Se,xe,Le)};EC$1.prototype.getKeyRecoveryParam=function(he,fe,le,pe){if(fe=new signature$1(fe,pe),fe.recoveryParam!==null)return fe.recoveryParam;for(var ge=0;ge<4;ge++){var ye;try{ye=this.recoverPubKey(he,fe,ge)}catch{continue}if(ye.eq(le))return ge}throw new Error("Unable to find valid recovery factor")};var elliptic_1=createCommonjsModule(function(he,fe){var le=fe;le.version="6.5.4",le.utils=utils_1$1,le.rand=function(){throw new Error("unsupported")},le.curve=curve_1,le.curves=curves_1,le.ec=ec$1,le.eddsa=null}),EC$1$1=elliptic_1.ec;const version$b="signing-key/5.7.0",logger$g=new Logger(version$b);let _curve=null;function getCurve(){return _curve||(_curve=new EC$1$1("secp256k1")),_curve}class SigningKey{constructor(fe){defineReadOnly(this,"curve","secp256k1"),defineReadOnly(this,"privateKey",hexlify(fe)),hexDataLength(this.privateKey)!==32&&logger$g.throwArgumentError("invalid private key","privateKey","[[ REDACTED ]]");const le=getCurve().keyFromPrivate(arrayify(this.privateKey));defineReadOnly(this,"publicKey","0x"+le.getPublic(!1,"hex")),defineReadOnly(this,"compressedPublicKey","0x"+le.getPublic(!0,"hex")),defineReadOnly(this,"_isSigningKey",!0)}_addPoint(fe){const le=getCurve().keyFromPublic(arrayify(this.publicKey)),pe=getCurve().keyFromPublic(arrayify(fe));return"0x"+le.pub.add(pe.pub).encodeCompressed("hex")}signDigest(fe){const le=getCurve().keyFromPrivate(arrayify(this.privateKey)),pe=arrayify(fe);pe.length!==32&&logger$g.throwArgumentError("bad digest length","digest",fe);const ge=le.sign(pe,{canonical:!0});return splitSignature({recoveryParam:ge.recoveryParam,r:hexZeroPad("0x"+ge.r.toString(16),32),s:hexZeroPad("0x"+ge.s.toString(16),32)})}computeSharedSecret(fe){const le=getCurve().keyFromPrivate(arrayify(this.privateKey)),pe=getCurve().keyFromPublic(arrayify(computePublicKey(fe)));return hexZeroPad("0x"+le.derive(pe.getPublic()).toString(16),32)}static isSigningKey(fe){return!!(fe&&fe._isSigningKey)}}function recoverPublicKey(he,fe){const le=splitSignature(fe),pe={r:arrayify(le.r),s:arrayify(le.s)};return"0x"+getCurve().recoverPubKey(arrayify(he),pe,le.recoveryParam).encode("hex",!1)}function computePublicKey(he,fe){const le=arrayify(he);return le.length===32?new SigningKey(le).publicKey:le.length===33?"0x"+getCurve().keyFromPublic(le).getPublic(!1,"hex"):le.length===65?hexlify(le):logger$g.throwArgumentError("invalid public or private key","key","[REDACTED]")}const version$a="transactions/5.7.0",logger$f=new Logger(version$a);var TransactionTypes;(function(he){he[he.legacy=0]="legacy",he[he.eip2930=1]="eip2930",he[he.eip1559=2]="eip1559"})(TransactionTypes||(TransactionTypes={}));const transactionFields=[{name:"nonce",maxLength:32,numeric:!0},{name:"gasPrice",maxLength:32,numeric:!0},{name:"gasLimit",maxLength:32,numeric:!0},{name:"to",length:20},{name:"value",maxLength:32,numeric:!0},{name:"data"}],allowedTransactionKeys$1={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,type:!0,value:!0};function computeAddress(he){const fe=computePublicKey(he);return getAddress(hexDataSlice(keccak256$1(hexDataSlice(fe,1)),12))}function recoverAddress(he,fe){return computeAddress(recoverPublicKey(arrayify(he),fe))}function formatNumber(he,fe){const le=stripZeros(BigNumber.from(he).toHexString());return le.length>32&&logger$f.throwArgumentError("invalid length for "+fe,"transaction:"+fe,he),le}function accessSetify(he,fe){return{address:getAddress(he),storageKeys:(fe||[]).map((le,pe)=>(hexDataLength(le)!==32&&logger$f.throwArgumentError("invalid access list storageKey",`accessList[${he}:${pe}]`,le),le.toLowerCase()))}}function accessListify(he){if(Array.isArray(he))return he.map((le,pe)=>Array.isArray(le)?(le.length>2&&logger$f.throwArgumentError("access list expected to be [ address, storageKeys[] ]",`value[${pe}]`,le),accessSetify(le[0],le[1])):accessSetify(le.address,le.storageKeys));const fe=Object.keys(he).map(le=>{const pe=he[le].reduce((ge,ye)=>(ge[ye]=!0,ge),{});return accessSetify(le,Object.keys(pe).sort())});return fe.sort((le,pe)=>le.address.localeCompare(pe.address)),fe}function formatAccessList(he){return accessListify(he).map(fe=>[fe.address,fe.storageKeys])}function _serializeEip1559(he,fe){if(he.gasPrice!=null){const pe=BigNumber.from(he.gasPrice),ge=BigNumber.from(he.maxFeePerGas||0);pe.eq(ge)||logger$f.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas","tx",{gasPrice:pe,maxFeePerGas:ge})}const le=[formatNumber(he.chainId||0,"chainId"),formatNumber(he.nonce||0,"nonce"),formatNumber(he.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),formatNumber(he.maxFeePerGas||0,"maxFeePerGas"),formatNumber(he.gasLimit||0,"gasLimit"),he.to!=null?getAddress(he.to):"0x",formatNumber(he.value||0,"value"),he.data||"0x",formatAccessList(he.accessList||[])];if(fe){const pe=splitSignature(fe);le.push(formatNumber(pe.recoveryParam,"recoveryParam")),le.push(stripZeros(pe.r)),le.push(stripZeros(pe.s))}return hexConcat(["0x02",encode$2(le)])}function _serializeEip2930(he,fe){const le=[formatNumber(he.chainId||0,"chainId"),formatNumber(he.nonce||0,"nonce"),formatNumber(he.gasPrice||0,"gasPrice"),formatNumber(he.gasLimit||0,"gasLimit"),he.to!=null?getAddress(he.to):"0x",formatNumber(he.value||0,"value"),he.data||"0x",formatAccessList(he.accessList||[])];if(fe){const pe=splitSignature(fe);le.push(formatNumber(pe.recoveryParam,"recoveryParam")),le.push(stripZeros(pe.r)),le.push(stripZeros(pe.s))}return hexConcat(["0x01",encode$2(le)])}function _serialize(he,fe){checkProperties(he,allowedTransactionKeys$1);const le=[];transactionFields.forEach(function(xe){let me=he[xe.name]||[];const we={};xe.numeric&&(we.hexPad="left"),me=arrayify(hexlify(me,we)),xe.length&&me.length!==xe.length&&me.length>0&&logger$f.throwArgumentError("invalid length for "+xe.name,"transaction:"+xe.name,me),xe.maxLength&&(me=stripZeros(me),me.length>xe.maxLength&&logger$f.throwArgumentError("invalid length for "+xe.name,"transaction:"+xe.name,me)),le.push(hexlify(me))});let pe=0;if(he.chainId!=null?(pe=he.chainId,typeof pe!="number"&&logger$f.throwArgumentError("invalid transaction.chainId","transaction",he)):fe&&!isBytesLike(fe)&&fe.v>28&&(pe=Math.floor((fe.v-35)/2)),pe!==0&&(le.push(hexlify(pe)),le.push("0x"),le.push("0x")),!fe)return encode$2(le);const ge=splitSignature(fe);let ye=27+ge.recoveryParam;return pe!==0?(le.pop(),le.pop(),le.pop(),ye+=pe*2+8,ge.v>28&&ge.v!==ye&&logger$f.throwArgumentError("transaction.chainId/signature.v mismatch","signature",fe)):ge.v!==ye&&logger$f.throwArgumentError("transaction.chainId/signature.v mismatch","signature",fe),le.push(hexlify(ye)),le.push(stripZeros(arrayify(ge.r))),le.push(stripZeros(arrayify(ge.s))),encode$2(le)}function serialize(he,fe){if(he.type==null||he.type===0)return he.accessList!=null&&logger$f.throwArgumentError("untyped transactions do not support accessList; include type: 1","transaction",he),_serialize(he,fe);switch(he.type){case 1:return _serializeEip2930(he,fe);case 2:return _serializeEip1559(he,fe)}return logger$f.throwError(`unsupported transaction type: ${he.type}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:"serializeTransaction",transactionType:he.type})}const version$9="abstract-provider/5.7.0";var __awaiter$8=function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})};const logger$e=new Logger(version$9);class Provider{constructor(){logger$e.checkAbstract(new.target,Provider),defineReadOnly(this,"_isProvider",!0)}getFeeData(){return __awaiter$8(this,void 0,void 0,function*(){const{block:fe,gasPrice:le}=yield resolveProperties({block:this.getBlock("latest"),gasPrice:this.getGasPrice().catch(xe=>null)});let pe=null,ge=null,ye=null;return fe&&fe.baseFeePerGas&&(pe=fe.baseFeePerGas,ye=BigNumber.from("1500000000"),ge=fe.baseFeePerGas.mul(2).add(ye)),{lastBaseFeePerGas:pe,maxFeePerGas:ge,maxPriorityFeePerGas:ye,gasPrice:le}})}addListener(fe,le){return this.on(fe,le)}removeListener(fe,le){return this.off(fe,le)}static isProvider(fe){return!!(fe&&fe._isProvider)}}const version$8="abstract-signer/5.7.0";var __awaiter$7=function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})};const logger$d=new Logger(version$8),allowedTransactionKeys=["accessList","ccipReadEnabled","chainId","customData","data","from","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","type","value"],forwardErrors=[Logger.errors.INSUFFICIENT_FUNDS,Logger.errors.NONCE_EXPIRED,Logger.errors.REPLACEMENT_UNDERPRICED];class Signer{constructor(){logger$d.checkAbstract(new.target,Signer),defineReadOnly(this,"_isSigner",!0)}getBalance(fe){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("getBalance"),yield this.provider.getBalance(this.getAddress(),fe)})}getTransactionCount(fe){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("getTransactionCount"),yield this.provider.getTransactionCount(this.getAddress(),fe)})}estimateGas(fe){return __awaiter$7(this,void 0,void 0,function*(){this._checkProvider("estimateGas");const le=yield resolveProperties(this.checkTransaction(fe));return yield this.provider.estimateGas(le)})}call(fe,le){return __awaiter$7(this,void 0,void 0,function*(){this._checkProvider("call");const pe=yield resolveProperties(this.checkTransaction(fe));return yield this.provider.call(pe,le)})}sendTransaction(fe){return __awaiter$7(this,void 0,void 0,function*(){this._checkProvider("sendTransaction");const le=yield this.populateTransaction(fe),pe=yield this.signTransaction(le);return yield this.provider.sendTransaction(pe)})}getChainId(){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("getChainId"),(yield this.provider.getNetwork()).chainId})}getGasPrice(){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("getGasPrice"),yield this.provider.getGasPrice()})}getFeeData(){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("getFeeData"),yield this.provider.getFeeData()})}resolveName(fe){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("resolveName"),yield this.provider.resolveName(fe)})}checkTransaction(fe){for(const pe in fe)allowedTransactionKeys.indexOf(pe)===-1&&logger$d.throwArgumentError("invalid transaction key: "+pe,"transaction",fe);const le=shallowCopy(fe);return le.from==null?le.from=this.getAddress():le.from=Promise.all([Promise.resolve(le.from),this.getAddress()]).then(pe=>(pe[0].toLowerCase()!==pe[1].toLowerCase()&&logger$d.throwArgumentError("from address mismatch","transaction",fe),pe[0])),le}populateTransaction(fe){return __awaiter$7(this,void 0,void 0,function*(){const le=yield resolveProperties(this.checkTransaction(fe));le.to!=null&&(le.to=Promise.resolve(le.to).then(ge=>__awaiter$7(this,void 0,void 0,function*(){if(ge==null)return null;const ye=yield this.resolveName(ge);return ye==null&&logger$d.throwArgumentError("provided ENS name resolves to null","tx.to",ge),ye})),le.to.catch(ge=>{}));const pe=le.maxFeePerGas!=null||le.maxPriorityFeePerGas!=null;if(le.gasPrice!=null&&(le.type===2||pe)?logger$d.throwArgumentError("eip-1559 transaction do not support gasPrice","transaction",fe):(le.type===0||le.type===1)&&pe&&logger$d.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","transaction",fe),(le.type===2||le.type==null)&&le.maxFeePerGas!=null&&le.maxPriorityFeePerGas!=null)le.type=2;else if(le.type===0||le.type===1)le.gasPrice==null&&(le.gasPrice=this.getGasPrice());else{const ge=yield this.getFeeData();if(le.type==null)if(ge.maxFeePerGas!=null&&ge.maxPriorityFeePerGas!=null)if(le.type=2,le.gasPrice!=null){const ye=le.gasPrice;delete le.gasPrice,le.maxFeePerGas=ye,le.maxPriorityFeePerGas=ye}else le.maxFeePerGas==null&&(le.maxFeePerGas=ge.maxFeePerGas),le.maxPriorityFeePerGas==null&&(le.maxPriorityFeePerGas=ge.maxPriorityFeePerGas);else ge.gasPrice!=null?(pe&&logger$d.throwError("network does not support EIP-1559",Logger.errors.UNSUPPORTED_OPERATION,{operation:"populateTransaction"}),le.gasPrice==null&&(le.gasPrice=ge.gasPrice),le.type=0):logger$d.throwError("failed to get consistent fee data",Logger.errors.UNSUPPORTED_OPERATION,{operation:"signer.getFeeData"});else le.type===2&&(le.maxFeePerGas==null&&(le.maxFeePerGas=ge.maxFeePerGas),le.maxPriorityFeePerGas==null&&(le.maxPriorityFeePerGas=ge.maxPriorityFeePerGas))}return le.nonce==null&&(le.nonce=this.getTransactionCount("pending")),le.gasLimit==null&&(le.gasLimit=this.estimateGas(le).catch(ge=>{if(forwardErrors.indexOf(ge.code)>=0)throw ge;return logger$d.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error:ge,tx:le})})),le.chainId==null?le.chainId=this.getChainId():le.chainId=Promise.all([Promise.resolve(le.chainId),this.getChainId()]).then(ge=>(ge[1]!==0&&ge[0]!==ge[1]&&logger$d.throwArgumentError("chainId address mismatch","transaction",fe),ge[0])),yield resolveProperties(le)})}_checkProvider(fe){this.provider||logger$d.throwError("missing provider",Logger.errors.UNSUPPORTED_OPERATION,{operation:fe||"_checkProvider"})}static isSigner(fe){return!!(fe&&fe._isSigner)}}class VoidSigner extends Signer{constructor(fe,le){super(),defineReadOnly(this,"address",fe),defineReadOnly(this,"provider",le||null)}getAddress(){return Promise.resolve(this.address)}_fail(fe,le){return Promise.resolve().then(()=>{logger$d.throwError(fe,Logger.errors.UNSUPPORTED_OPERATION,{operation:le})})}signMessage(fe){return this._fail("VoidSigner cannot sign messages","signMessage")}signTransaction(fe){return this._fail("VoidSigner cannot sign transactions","signTransaction")}_signTypedData(fe,le,pe){return this._fail("VoidSigner cannot sign typed data","signTypedData")}connect(fe){return new VoidSigner(this.address,fe)}}class BaseX{constructor(fe){defineReadOnly(this,"alphabet",fe),defineReadOnly(this,"base",fe.length),defineReadOnly(this,"_alphabetMap",{}),defineReadOnly(this,"_leader",fe.charAt(0));for(let le=0;le<fe.length;le++)this._alphabetMap[fe.charAt(le)]=le}encode(fe){let le=arrayify(fe);if(le.length===0)return"";let pe=[0];for(let ye=0;ye<le.length;++ye){let xe=le[ye];for(let me=0;me<pe.length;++me)xe+=pe[me]<<8,pe[me]=xe%this.base,xe=xe/this.base|0;for(;xe>0;)pe.push(xe%this.base),xe=xe/this.base|0}let ge="";for(let ye=0;le[ye]===0&&ye<le.length-1;++ye)ge+=this._leader;for(let ye=pe.length-1;ye>=0;--ye)ge+=this.alphabet[pe[ye]];return ge}decode(fe){if(typeof fe!="string")throw new TypeError("Expected String");let le=[];if(fe.length===0)return new Uint8Array(le);le.push(0);for(let pe=0;pe<fe.length;pe++){let ge=this._alphabetMap[fe[pe]];if(ge===void 0)throw new Error("Non-base"+this.base+" character");let ye=ge;for(let xe=0;xe<le.length;++xe)ye+=le[xe]*this.base,le[xe]=ye&255,ye>>=8;for(;ye>0;)le.push(ye&255),ye>>=8}for(let pe=0;fe[pe]===this._leader&&pe<fe.length-1;++pe)le.push(0);return arrayify(new Uint8Array(le.reverse()))}}new BaseX("abcdefghijklmnopqrstuvwxyz234567");const Base58=new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");var SupportedAlgorithm;(function(he){he.sha256="sha256",he.sha512="sha512"})(SupportedAlgorithm||(SupportedAlgorithm={}));const version$7="sha2/5.7.0",logger$c=new Logger(version$7);function ripemd160$1(he){return"0x"+hash$2.ripemd160().update(arrayify(he)).digest("hex")}function sha256$2(he){return"0x"+hash$2.sha256().update(arrayify(he)).digest("hex")}function computeHmac(he,fe,le){return SupportedAlgorithm[he]||logger$c.throwError("unsupported algorithm "+he,Logger.errors.UNSUPPORTED_OPERATION,{operation:"hmac",algorithm:he}),"0x"+hash$2.hmac(hash$2[he],arrayify(fe)).update(arrayify(le)).digest("hex")}function pbkdf2$2(he,fe,le,pe,ge){he=arrayify(he),fe=arrayify(fe);let ye,xe=1;const me=new Uint8Array(pe),we=new Uint8Array(fe.length+4);we.set(fe);let Ee,Ae;for(let Se=1;Se<=xe;Se++){we[fe.length]=Se>>24&255,we[fe.length+1]=Se>>16&255,we[fe.length+2]=Se>>8&255,we[fe.length+3]=Se&255;let Le=arrayify(computeHmac(ge,he,we));ye||(ye=Le.length,Ae=new Uint8Array(ye),xe=Math.ceil(pe/ye),Ee=pe-(xe-1)*ye),Ae.set(Le);for(let Fe=1;Fe<le;Fe++){Le=arrayify(computeHmac(ge,he,Le));for(let Ue=0;Ue<ye;Ue++)Ae[Ue]^=Le[Ue]}const He=(Se-1)*ye,Me=Se===xe?Ee:ye;me.set(arrayify(Ae).slice(0,Me),He)}return hexlify(me)}const version$6="wordlists/5.7.0",logger$b=new Logger(version$6);class Wordlist{constructor(fe){logger$b.checkAbstract(new.target,Wordlist),defineReadOnly(this,"locale",fe)}split(fe){return fe.toLowerCase().split(/ +/g)}join(fe){return fe.join(" ")}static check(fe){const le=[];for(let pe=0;pe<2048;pe++){const ge=fe.getWord(pe);if(pe!==fe.getWordIndex(ge))return"0x";le.push(ge)}return id(le.join(`
`)+`
`)}static register(fe,le){le||(le=fe.locale)}}const words="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";let wordlist=null;function loadWords(he){if(wordlist==null&&(wordlist=words.replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),Wordlist.check(he)!=="0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"))throw wordlist=null,new Error("BIP39 Wordlist for en (English) FAILED")}class LangEn extends Wordlist{constructor(){super("en")}getWord(fe){return loadWords(this),wordlist[fe]}getWordIndex(fe){return loadWords(this),wordlist.indexOf(fe)}}const langEn=new LangEn;Wordlist.register(langEn);const wordlists={en:langEn},version$5="hdnode/5.7.0",logger$a=new Logger(version$5),N$4=BigNumber.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),MasterSecret=toUtf8Bytes("Bitcoin seed"),HardenedBit=2147483648;function getUpperMask(he){return(1<<he)-1<<8-he}function getLowerMask(he){return(1<<he)-1}function bytes32(he){return hexZeroPad(hexlify(he),32)}function base58check$1(he){return Base58.encode(concat([he,hexDataSlice(sha256$2(sha256$2(he)),0,4)]))}function getWordlist(he){if(he==null)return wordlists.en;if(typeof he=="string"){const fe=wordlists[he];return fe==null&&logger$a.throwArgumentError("unknown locale","wordlist",he),fe}return he}const _constructorGuard$1={},defaultPath="m/44'/60'/0'/0/0";class HDNode{constructor(fe,le,pe,ge,ye,xe,me,we){if(fe!==_constructorGuard$1)throw new Error("HDNode constructor cannot be called directly");if(le){const Ee=new SigningKey(le);defineReadOnly(this,"privateKey",Ee.privateKey),defineReadOnly(this,"publicKey",Ee.compressedPublicKey)}else defineReadOnly(this,"privateKey",null),defineReadOnly(this,"publicKey",hexlify(pe));defineReadOnly(this,"parentFingerprint",ge),defineReadOnly(this,"fingerprint",hexDataSlice(ripemd160$1(sha256$2(this.publicKey)),0,4)),defineReadOnly(this,"address",computeAddress(this.publicKey)),defineReadOnly(this,"chainCode",ye),defineReadOnly(this,"index",xe),defineReadOnly(this,"depth",me),we==null?(defineReadOnly(this,"mnemonic",null),defineReadOnly(this,"path",null)):typeof we=="string"?(defineReadOnly(this,"mnemonic",null),defineReadOnly(this,"path",we)):(defineReadOnly(this,"mnemonic",we),defineReadOnly(this,"path",we.path))}get extendedKey(){if(this.depth>=256)throw new Error("Depth too large!");return base58check$1(concat([this.privateKey!=null?"0x0488ADE4":"0x0488B21E",hexlify(this.depth),this.parentFingerprint,hexZeroPad(hexlify(this.index),4),this.chainCode,this.privateKey!=null?concat(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new HDNode(_constructorGuard$1,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(fe){if(fe>4294967295)throw new Error("invalid index - "+String(fe));let le=this.path;le&&(le+="/"+(fe&~HardenedBit));const pe=new Uint8Array(37);if(fe&HardenedBit){if(!this.privateKey)throw new Error("cannot derive child of neutered node");pe.set(arrayify(this.privateKey),1),le&&(le+="'")}else pe.set(arrayify(this.publicKey));for(let Se=24;Se>=0;Se-=8)pe[33+(Se>>3)]=fe>>24-Se&255;const ge=arrayify(computeHmac(SupportedAlgorithm.sha512,this.chainCode,pe)),ye=ge.slice(0,32),xe=ge.slice(32);let me=null,we=null;this.privateKey?me=bytes32(BigNumber.from(ye).add(this.privateKey).mod(N$4)):we=new SigningKey(hexlify(ye))._addPoint(this.publicKey);let Ee=le;const Ae=this.mnemonic;return Ae&&(Ee=Object.freeze({phrase:Ae.phrase,path:le,locale:Ae.locale||"en"})),new HDNode(_constructorGuard$1,me,we,this.fingerprint,bytes32(xe),fe,this.depth+1,Ee)}derivePath(fe){const le=fe.split("/");if(le.length===0||le[0]==="m"&&this.depth!==0)throw new Error("invalid path - "+fe);le[0]==="m"&&le.shift();let pe=this;for(let ge=0;ge<le.length;ge++){const ye=le[ge];if(ye.match(/^[0-9]+'$/)){const xe=parseInt(ye.substring(0,ye.length-1));if(xe>=HardenedBit)throw new Error("invalid path index - "+ye);pe=pe._derive(HardenedBit+xe)}else if(ye.match(/^[0-9]+$/)){const xe=parseInt(ye);if(xe>=HardenedBit)throw new Error("invalid path index - "+ye);pe=pe._derive(xe)}else throw new Error("invalid path component - "+ye)}return pe}static _fromSeed(fe,le){const pe=arrayify(fe);if(pe.length<16||pe.length>64)throw new Error("invalid seed");const ge=arrayify(computeHmac(SupportedAlgorithm.sha512,MasterSecret,pe));return new HDNode(_constructorGuard$1,bytes32(ge.slice(0,32)),null,"0x00000000",bytes32(ge.slice(32)),0,0,le)}static fromMnemonic(fe,le,pe){return pe=getWordlist(pe),fe=entropyToMnemonic(mnemonicToEntropy(fe,pe),pe),HDNode._fromSeed(mnemonicToSeed(fe,le),{phrase:fe,path:"m",locale:pe.locale})}static fromSeed(fe){return HDNode._fromSeed(fe,null)}static fromExtendedKey(fe){const le=Base58.decode(fe);(le.length!==82||base58check$1(le.slice(0,78))!==fe)&&logger$a.throwArgumentError("invalid extended key","extendedKey","[REDACTED]");const pe=le[4],ge=hexlify(le.slice(5,9)),ye=parseInt(hexlify(le.slice(9,13)).substring(2),16),xe=hexlify(le.slice(13,45)),me=le.slice(45,78);switch(hexlify(le.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new HDNode(_constructorGuard$1,null,hexlify(me),ge,xe,ye,pe,null);case"0x0488ade4":case"0x04358394 ":if(me[0]!==0)break;return new HDNode(_constructorGuard$1,hexlify(me.slice(1)),null,ge,xe,ye,pe,null)}return logger$a.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function mnemonicToSeed(he,fe){fe||(fe="");const le=toUtf8Bytes("mnemonic"+fe,UnicodeNormalizationForm.NFKD);return pbkdf2$2(toUtf8Bytes(he,UnicodeNormalizationForm.NFKD),le,2048,64,"sha512")}function mnemonicToEntropy(he,fe){fe=getWordlist(fe),logger$a.checkNormalize();const le=fe.split(he);if(le.length%3!==0)throw new Error("invalid mnemonic");const pe=arrayify(new Uint8Array(Math.ceil(11*le.length/8)));let ge=0;for(let Ee=0;Ee<le.length;Ee++){let Ae=fe.getWordIndex(le[Ee].normalize("NFKD"));if(Ae===-1)throw new Error("invalid mnemonic");for(let Se=0;Se<11;Se++)Ae&1<<10-Se&&(pe[ge>>3]|=1<<7-ge%8),ge++}const ye=32*le.length/3,xe=le.length/3,me=getUpperMask(xe);if((arrayify(sha256$2(pe.slice(0,ye/8)))[0]&me)!==(pe[pe.length-1]&me))throw new Error("invalid checksum");return hexlify(pe.slice(0,ye/8))}function entropyToMnemonic(he,fe){if(fe=getWordlist(fe),he=arrayify(he),he.length%4!==0||he.length<16||he.length>32)throw new Error("invalid entropy");const le=[0];let pe=11;for(let xe=0;xe<he.length;xe++)pe>8?(le[le.length-1]<<=8,le[le.length-1]|=he[xe],pe-=8):(le[le.length-1]<<=pe,le[le.length-1]|=he[xe]>>8-pe,le.push(he[xe]&getLowerMask(8-pe)),pe+=3);const ge=he.length/4,ye=arrayify(sha256$2(he))[0]&getUpperMask(ge);return le[le.length-1]<<=ge,le[le.length-1]|=ye>>8-ge,fe.join(le.map(xe=>fe.getWord(xe)))}const version$4="random/5.7.0",logger$9=new Logger(version$4);function getGlobal(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")}const anyGlobal=getGlobal();let crypto$2=anyGlobal.crypto||anyGlobal.msCrypto;(!crypto$2||!crypto$2.getRandomValues)&&(logger$9.warn("WARNING: Missing strong random number source"),crypto$2={getRandomValues:function(he){return logger$9.throwError("no secure random source avaialble",Logger.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}});function randomBytes$1(he){(he<=0||he>1024||he%1||he!=he)&&logger$9.throwArgumentError("invalid length","length",he);const fe=new Uint8Array(he);return crypto$2.getRandomValues(fe),arrayify(fe)}var aesJs={exports:{}};(function(he,fe){(function(le){function pe(De){return parseInt(De)===De}function ge(De){if(!pe(De.length))return!1;for(var We=0;We<De.length;We++)if(!pe(De[We])||De[We]<0||De[We]>255)return!1;return!0}function ye(De,We){if(De.buffer&&ArrayBuffer.isView(De)&&De.name==="Uint8Array")return We&&(De.slice?De=De.slice():De=Array.prototype.slice.call(De)),De;if(Array.isArray(De)){if(!ge(De))throw new Error("Array contains invalid value: "+De);return new Uint8Array(De)}if(pe(De.length)&&ge(De))return new Uint8Array(De);throw new Error("unsupported array-like object")}function xe(De){return new Uint8Array(De)}function me(De,We,it,Ze,Ce){(Ze!=null||Ce!=null)&&(De.slice?De=De.slice(Ze,Ce):De=Array.prototype.slice.call(De,Ze,Ce)),We.set(De,it)}var we=function(){function De(it){var Ze=[],Ce=0;for(it=encodeURI(it);Ce<it.length;){var _e=it.charCodeAt(Ce++);_e===37?(Ze.push(parseInt(it.substr(Ce,2),16)),Ce+=2):Ze.push(_e)}return ye(Ze)}function We(it){for(var Ze=[],Ce=0;Ce<it.length;){var _e=it[Ce];_e<128?(Ze.push(String.fromCharCode(_e)),Ce++):_e>191&&_e<224?(Ze.push(String.fromCharCode((_e&31)<<6|it[Ce+1]&63)),Ce+=2):(Ze.push(String.fromCharCode((_e&15)<<12|(it[Ce+1]&63)<<6|it[Ce+2]&63)),Ce+=3)}return Ze.join("")}return{toBytes:De,fromBytes:We}}(),Ee=function(){function De(Ze){for(var Ce=[],_e=0;_e<Ze.length;_e+=2)Ce.push(parseInt(Ze.substr(_e,2),16));return Ce}var We="0123456789abcdef";function it(Ze){for(var Ce=[],_e=0;_e<Ze.length;_e++){var at=Ze[_e];Ce.push(We[(at&240)>>4]+We[at&15])}return Ce.join("")}return{toBytes:De,fromBytes:it}}(),Ae={16:10,24:12,32:14},Se=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],Le=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],He=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],Me=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],Fe=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],Ue=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],qe=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],$e=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],Qe=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],ot=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],nt=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],ct=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],mt=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],gt=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],Ht=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function jt(De){for(var We=[],it=0;it<De.length;it+=4)We.push(De[it]<<24|De[it+1]<<16|De[it+2]<<8|De[it+3]);return We}var ze=function(De){if(!(this instanceof ze))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:ye(De,!0)}),this._prepare()};ze.prototype._prepare=function(){var De=Ae[this.key.length];if(De==null)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var We=0;We<=De;We++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);for(var it=(De+1)*4,Ze=this.key.length/4,Ce=jt(this.key),_e,We=0;We<Ze;We++)_e=We>>2,this._Ke[_e][We%4]=Ce[We],this._Kd[De-_e][We%4]=Ce[We];for(var at=0,yt=Ze,pt;yt<it;){if(pt=Ce[Ze-1],Ce[0]^=Le[pt>>16&255]<<24^Le[pt>>8&255]<<16^Le[pt&255]<<8^Le[pt>>24&255]^Se[at]<<24,at+=1,Ze!=8)for(var We=1;We<Ze;We++)Ce[We]^=Ce[We-1];else{for(var We=1;We<Ze/2;We++)Ce[We]^=Ce[We-1];pt=Ce[Ze/2-1],Ce[Ze/2]^=Le[pt&255]^Le[pt>>8&255]<<8^Le[pt>>16&255]<<16^Le[pt>>24&255]<<24;for(var We=Ze/2+1;We<Ze;We++)Ce[We]^=Ce[We-1]}for(var We=0,kt,er;We<Ze&&yt<it;)kt=yt>>2,er=yt%4,this._Ke[kt][er]=Ce[We],this._Kd[De-kt][er]=Ce[We++],yt++}for(var kt=1;kt<De;kt++)for(var er=0;er<4;er++)pt=this._Kd[kt][er],this._Kd[kt][er]=ct[pt>>24&255]^mt[pt>>16&255]^gt[pt>>8&255]^Ht[pt&255]},ze.prototype.encrypt=function(De){if(De.length!=16)throw new Error("invalid plaintext size (must be 16 bytes)");for(var We=this._Ke.length-1,it=[0,0,0,0],Ze=jt(De),Ce=0;Ce<4;Ce++)Ze[Ce]^=this._Ke[0][Ce];for(var _e=1;_e<We;_e++){for(var Ce=0;Ce<4;Ce++)it[Ce]=Me[Ze[Ce]>>24&255]^Fe[Ze[(Ce+1)%4]>>16&255]^Ue[Ze[(Ce+2)%4]>>8&255]^qe[Ze[(Ce+3)%4]&255]^this._Ke[_e][Ce];Ze=it.slice()}for(var at=xe(16),yt,Ce=0;Ce<4;Ce++)yt=this._Ke[We][Ce],at[4*Ce]=(Le[Ze[Ce]>>24&255]^yt>>24)&255,at[4*Ce+1]=(Le[Ze[(Ce+1)%4]>>16&255]^yt>>16)&255,at[4*Ce+2]=(Le[Ze[(Ce+2)%4]>>8&255]^yt>>8)&255,at[4*Ce+3]=(Le[Ze[(Ce+3)%4]&255]^yt)&255;return at},ze.prototype.decrypt=function(De){if(De.length!=16)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var We=this._Kd.length-1,it=[0,0,0,0],Ze=jt(De),Ce=0;Ce<4;Ce++)Ze[Ce]^=this._Kd[0][Ce];for(var _e=1;_e<We;_e++){for(var Ce=0;Ce<4;Ce++)it[Ce]=$e[Ze[Ce]>>24&255]^Qe[Ze[(Ce+3)%4]>>16&255]^ot[Ze[(Ce+2)%4]>>8&255]^nt[Ze[(Ce+1)%4]&255]^this._Kd[_e][Ce];Ze=it.slice()}for(var at=xe(16),yt,Ce=0;Ce<4;Ce++)yt=this._Kd[We][Ce],at[4*Ce]=(He[Ze[Ce]>>24&255]^yt>>24)&255,at[4*Ce+1]=(He[Ze[(Ce+3)%4]>>16&255]^yt>>16)&255,at[4*Ce+2]=(He[Ze[(Ce+2)%4]>>8&255]^yt>>8)&255,at[4*Ce+3]=(He[Ze[(Ce+1)%4]&255]^yt)&255;return at};var ve=function(De){if(!(this instanceof ve))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new ze(De)};ve.prototype.encrypt=function(De){if(De=ye(De),De.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var We=xe(De.length),it=xe(16),Ze=0;Ze<De.length;Ze+=16)me(De,it,0,Ze,Ze+16),it=this._aes.encrypt(it),me(it,We,Ze);return We},ve.prototype.decrypt=function(De){if(De=ye(De),De.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var We=xe(De.length),it=xe(16),Ze=0;Ze<De.length;Ze+=16)me(De,it,0,Ze,Ze+16),it=this._aes.decrypt(it),me(it,We,Ze);return We};var ke=function(De,We){if(!(this instanceof ke))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",!We)We=xe(16);else if(We.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastCipherblock=ye(We,!0),this._aes=new ze(De)};ke.prototype.encrypt=function(De){if(De=ye(De),De.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var We=xe(De.length),it=xe(16),Ze=0;Ze<De.length;Ze+=16){me(De,it,0,Ze,Ze+16);for(var Ce=0;Ce<16;Ce++)it[Ce]^=this._lastCipherblock[Ce];this._lastCipherblock=this._aes.encrypt(it),me(this._lastCipherblock,We,Ze)}return We},ke.prototype.decrypt=function(De){if(De=ye(De),De.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var We=xe(De.length),it=xe(16),Ze=0;Ze<De.length;Ze+=16){me(De,it,0,Ze,Ze+16),it=this._aes.decrypt(it);for(var Ce=0;Ce<16;Ce++)We[Ze+Ce]=it[Ce]^this._lastCipherblock[Ce];me(De,this._lastCipherblock,0,Ze,Ze+16)}return We};var Oe=function(De,We,it){if(!(this instanceof Oe))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",!We)We=xe(16);else if(We.length!=16)throw new Error("invalid initialation vector size (must be 16 size)");it||(it=1),this.segmentSize=it,this._shiftRegister=ye(We,!0),this._aes=new ze(De)};Oe.prototype.encrypt=function(De){if(De.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var We=ye(De,!0),it,Ze=0;Ze<We.length;Ze+=this.segmentSize){it=this._aes.encrypt(this._shiftRegister);for(var Ce=0;Ce<this.segmentSize;Ce++)We[Ze+Ce]^=it[Ce];me(this._shiftRegister,this._shiftRegister,0,this.segmentSize),me(We,this._shiftRegister,16-this.segmentSize,Ze,Ze+this.segmentSize)}return We},Oe.prototype.decrypt=function(De){if(De.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var We=ye(De,!0),it,Ze=0;Ze<We.length;Ze+=this.segmentSize){it=this._aes.encrypt(this._shiftRegister);for(var Ce=0;Ce<this.segmentSize;Ce++)We[Ze+Ce]^=it[Ce];me(this._shiftRegister,this._shiftRegister,0,this.segmentSize),me(De,this._shiftRegister,16-this.segmentSize,Ze,Ze+this.segmentSize)}return We};var Pe=function(De,We){if(!(this instanceof Pe))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",!We)We=xe(16);else if(We.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastPrecipher=ye(We,!0),this._lastPrecipherIndex=16,this._aes=new ze(De)};Pe.prototype.encrypt=function(De){for(var We=ye(De,!0),it=0;it<We.length;it++)this._lastPrecipherIndex===16&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),We[it]^=this._lastPrecipher[this._lastPrecipherIndex++];return We},Pe.prototype.decrypt=Pe.prototype.encrypt;var Re=function(De){if(!(this instanceof Re))throw Error("Counter must be instanitated with `new`");De!==0&&!De&&(De=1),typeof De=="number"?(this._counter=xe(16),this.setValue(De)):this.setBytes(De)};Re.prototype.setValue=function(De){if(typeof De!="number"||parseInt(De)!=De)throw new Error("invalid counter value (must be an integer)");for(var We=15;We>=0;--We)this._counter[We]=De%256,De=De>>8},Re.prototype.setBytes=function(De){if(De=ye(De,!0),De.length!=16)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=De},Re.prototype.increment=function(){for(var De=15;De>=0;De--)if(this._counter[De]===255)this._counter[De]=0;else{this._counter[De]++;break}};var Ye=function(De,We){if(!(this instanceof Ye))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",We instanceof Re||(We=new Re(We)),this._counter=We,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new ze(De)};Ye.prototype.encrypt=function(De){for(var We=ye(De,!0),it=0;it<We.length;it++)this._remainingCounterIndex===16&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),We[it]^=this._remainingCounter[this._remainingCounterIndex++];return We},Ye.prototype.decrypt=Ye.prototype.encrypt;function Xe(De){De=ye(De,!0);var We=16-De.length%16,it=xe(De.length+We);me(De,it);for(var Ze=De.length;Ze<it.length;Ze++)it[Ze]=We;return it}function Je(De){if(De=ye(De,!0),De.length<16)throw new Error("PKCS#7 invalid length");var We=De[De.length-1];if(We>16)throw new Error("PKCS#7 padding byte out of range");for(var it=De.length-We,Ze=0;Ze<We;Ze++)if(De[it+Ze]!==We)throw new Error("PKCS#7 invalid padding byte");var Ce=xe(it);return me(De,Ce,0,0,it),Ce}var Ie={AES:ze,Counter:Re,ModeOfOperation:{ecb:ve,cbc:ke,cfb:Oe,ofb:Pe,ctr:Ye},utils:{hex:Ee,utf8:we},padding:{pkcs7:{pad:Xe,strip:Je}},_arrayTest:{coerceArray:ye,createArray:xe,copyArray:me}};he.exports=Ie})()})(aesJs);var aesJsExports=aesJs.exports;const aes=getDefaultExportFromCjs(aesJsExports),version$3="json-wallets/5.7.0";function looseArrayify(he){return typeof he=="string"&&he.substring(0,2)!=="0x"&&(he="0x"+he),arrayify(he)}function zpad(he,fe){for(he=String(he);he.length<fe;)he="0"+he;return he}function getPassword(he){return typeof he=="string"?toUtf8Bytes(he,UnicodeNormalizationForm.NFKC):arrayify(he)}function searchPath(he,fe){let le=he;const pe=fe.toLowerCase().split("/");for(let ge=0;ge<pe.length;ge++){let ye=null;for(const xe in le)if(xe.toLowerCase()===pe[ge]){ye=le[xe];break}if(ye===null)return null;le=ye}return le}function uuidV4(he){const fe=arrayify(he);fe[6]=fe[6]&15|64,fe[8]=fe[8]&63|128;const le=hexlify(fe);return[le.substring(2,10),le.substring(10,14),le.substring(14,18),le.substring(18,22),le.substring(22,34)].join("-")}const logger$8=new Logger(version$3);class CrowdsaleAccount extends Description{isCrowdsaleAccount(fe){return!!(fe&&fe._isCrowdsaleAccount)}}function decrypt$1(he,fe){const le=JSON.parse(he);fe=getPassword(fe);const pe=getAddress(searchPath(le,"ethaddr")),ge=looseArrayify(searchPath(le,"encseed"));(!ge||ge.length%16!==0)&&logger$8.throwArgumentError("invalid encseed","json",he);const ye=arrayify(pbkdf2$2(fe,fe,2e3,32,"sha256")).slice(0,16),xe=ge.slice(0,16),me=ge.slice(16),we=new aes.ModeOfOperation.cbc(ye,xe),Ee=aes.padding.pkcs7.strip(arrayify(we.decrypt(me)));let Ae="";for(let He=0;He<Ee.length;He++)Ae+=String.fromCharCode(Ee[He]);const Se=toUtf8Bytes(Ae),Le=keccak256$1(Se);return new CrowdsaleAccount({_isCrowdsaleAccount:!0,address:pe,privateKey:Le})}function isCrowdsaleWallet(he){let fe=null;try{fe=JSON.parse(he)}catch{return!1}return fe.encseed&&fe.ethaddr}function isKeystoreWallet(he){let fe=null;try{fe=JSON.parse(he)}catch{return!1}return!(!fe.version||parseInt(fe.version)!==fe.version||parseInt(fe.version)!==3)}var scrypt$1={exports:{}};(function(he,fe){(function(le){function ge(Fe){const Ue=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let qe=1779033703,$e=3144134277,Qe=1013904242,ot=2773480762,nt=1359893119,ct=2600822924,mt=528734635,gt=1541459225;const Ht=new Uint32Array(64);function jt(Ye){let Xe=0,Je=Ye.length;for(;Je>=64;){let Ie=qe,De=$e,We=Qe,it=ot,Ze=nt,Ce=ct,_e=mt,at=gt,yt,pt,kt,er,zt;for(pt=0;pt<16;pt++)kt=Xe+pt*4,Ht[pt]=(Ye[kt]&255)<<24|(Ye[kt+1]&255)<<16|(Ye[kt+2]&255)<<8|Ye[kt+3]&255;for(pt=16;pt<64;pt++)yt=Ht[pt-2],er=(yt>>>17|yt<<15)^(yt>>>19|yt<<13)^yt>>>10,yt=Ht[pt-15],zt=(yt>>>7|yt<<25)^(yt>>>18|yt<<14)^yt>>>3,Ht[pt]=(er+Ht[pt-7]|0)+(zt+Ht[pt-16]|0)|0;for(pt=0;pt<64;pt++)er=(((Ze>>>6|Ze<<26)^(Ze>>>11|Ze<<21)^(Ze>>>25|Ze<<7))+(Ze&Ce^~Ze&_e)|0)+(at+(Ue[pt]+Ht[pt]|0)|0)|0,zt=((Ie>>>2|Ie<<30)^(Ie>>>13|Ie<<19)^(Ie>>>22|Ie<<10))+(Ie&De^Ie&We^De&We)|0,at=_e,_e=Ce,Ce=Ze,Ze=it+er|0,it=We,We=De,De=Ie,Ie=er+zt|0;qe=qe+Ie|0,$e=$e+De|0,Qe=Qe+We|0,ot=ot+it|0,nt=nt+Ze|0,ct=ct+Ce|0,mt=mt+_e|0,gt=gt+at|0,Xe+=64,Je-=64}}jt(Fe);let ze,ve=Fe.length%64,ke=Fe.length/536870912|0,Oe=Fe.length<<3,Pe=ve<56?56:120,Re=Fe.slice(Fe.length-ve,Fe.length);for(Re.push(128),ze=ve+1;ze<Pe;ze++)Re.push(0);return Re.push(ke>>>24&255),Re.push(ke>>>16&255),Re.push(ke>>>8&255),Re.push(ke>>>0&255),Re.push(Oe>>>24&255),Re.push(Oe>>>16&255),Re.push(Oe>>>8&255),Re.push(Oe>>>0&255),jt(Re),[qe>>>24&255,qe>>>16&255,qe>>>8&255,qe>>>0&255,$e>>>24&255,$e>>>16&255,$e>>>8&255,$e>>>0&255,Qe>>>24&255,Qe>>>16&255,Qe>>>8&255,Qe>>>0&255,ot>>>24&255,ot>>>16&255,ot>>>8&255,ot>>>0&255,nt>>>24&255,nt>>>16&255,nt>>>8&255,nt>>>0&255,ct>>>24&255,ct>>>16&255,ct>>>8&255,ct>>>0&255,mt>>>24&255,mt>>>16&255,mt>>>8&255,mt>>>0&255,gt>>>24&255,gt>>>16&255,gt>>>8&255,gt>>>0&255]}function ye(Fe,Ue,qe){Fe=Fe.length<=64?Fe:ge(Fe);const $e=64+Ue.length+4,Qe=new Array($e),ot=new Array(64);let nt,ct=[];for(nt=0;nt<64;nt++)Qe[nt]=54;for(nt=0;nt<Fe.length;nt++)Qe[nt]^=Fe[nt];for(nt=0;nt<Ue.length;nt++)Qe[64+nt]=Ue[nt];for(nt=$e-4;nt<$e;nt++)Qe[nt]=0;for(nt=0;nt<64;nt++)ot[nt]=92;for(nt=0;nt<Fe.length;nt++)ot[nt]^=Fe[nt];function mt(){for(let gt=$e-1;gt>=$e-4;gt--){if(Qe[gt]++,Qe[gt]<=255)return;Qe[gt]=0}}for(;qe>=32;)mt(),ct=ct.concat(ge(ot.concat(ge(Qe)))),qe-=32;return qe>0&&(mt(),ct=ct.concat(ge(ot.concat(ge(Qe))).slice(0,qe))),ct}function xe(Fe,Ue,qe,$e,Qe){let ot;for(Ae(Fe,(2*qe-1)*16,Qe,0,16),ot=0;ot<2*qe;ot++)Ee(Fe,ot*16,Qe,16),we(Qe,$e),Ae(Qe,0,Fe,Ue+ot*16,16);for(ot=0;ot<qe;ot++)Ae(Fe,Ue+ot*2*16,Fe,ot*16,16);for(ot=0;ot<qe;ot++)Ae(Fe,Ue+(ot*2+1)*16,Fe,(ot+qe)*16,16)}function me(Fe,Ue){return Fe<<Ue|Fe>>>32-Ue}function we(Fe,Ue){Ae(Fe,0,Ue,0,16);for(let qe=8;qe>0;qe-=2)Ue[4]^=me(Ue[0]+Ue[12],7),Ue[8]^=me(Ue[4]+Ue[0],9),Ue[12]^=me(Ue[8]+Ue[4],13),Ue[0]^=me(Ue[12]+Ue[8],18),Ue[9]^=me(Ue[5]+Ue[1],7),Ue[13]^=me(Ue[9]+Ue[5],9),Ue[1]^=me(Ue[13]+Ue[9],13),Ue[5]^=me(Ue[1]+Ue[13],18),Ue[14]^=me(Ue[10]+Ue[6],7),Ue[2]^=me(Ue[14]+Ue[10],9),Ue[6]^=me(Ue[2]+Ue[14],13),Ue[10]^=me(Ue[6]+Ue[2],18),Ue[3]^=me(Ue[15]+Ue[11],7),Ue[7]^=me(Ue[3]+Ue[15],9),Ue[11]^=me(Ue[7]+Ue[3],13),Ue[15]^=me(Ue[11]+Ue[7],18),Ue[1]^=me(Ue[0]+Ue[3],7),Ue[2]^=me(Ue[1]+Ue[0],9),Ue[3]^=me(Ue[2]+Ue[1],13),Ue[0]^=me(Ue[3]+Ue[2],18),Ue[6]^=me(Ue[5]+Ue[4],7),Ue[7]^=me(Ue[6]+Ue[5],9),Ue[4]^=me(Ue[7]+Ue[6],13),Ue[5]^=me(Ue[4]+Ue[7],18),Ue[11]^=me(Ue[10]+Ue[9],7),Ue[8]^=me(Ue[11]+Ue[10],9),Ue[9]^=me(Ue[8]+Ue[11],13),Ue[10]^=me(Ue[9]+Ue[8],18),Ue[12]^=me(Ue[15]+Ue[14],7),Ue[13]^=me(Ue[12]+Ue[15],9),Ue[14]^=me(Ue[13]+Ue[12],13),Ue[15]^=me(Ue[14]+Ue[13],18);for(let qe=0;qe<16;++qe)Fe[qe]+=Ue[qe]}function Ee(Fe,Ue,qe,$e){for(let Qe=0;Qe<$e;Qe++)qe[Qe]^=Fe[Ue+Qe]}function Ae(Fe,Ue,qe,$e,Qe){for(;Qe--;)qe[$e++]=Fe[Ue++]}function Se(Fe){if(!Fe||typeof Fe.length!="number")return!1;for(let Ue=0;Ue<Fe.length;Ue++){const qe=Fe[Ue];if(typeof qe!="number"||qe%1||qe<0||qe>=256)return!1}return!0}function Le(Fe,Ue){if(typeof Fe!="number"||Fe%1)throw new Error("invalid "+Ue);return Fe}function He(Fe,Ue,qe,$e,Qe,ot,nt){if(qe=Le(qe,"N"),$e=Le($e,"r"),Qe=Le(Qe,"p"),ot=Le(ot,"dkLen"),qe===0||qe&qe-1)throw new Error("N must be power of 2");if(qe>2147483647/128/$e)throw new Error("N too large");if($e>2147483647/128/Qe)throw new Error("r too large");if(!Se(Fe))throw new Error("password must be an array or buffer");if(Fe=Array.prototype.slice.call(Fe),!Se(Ue))throw new Error("salt must be an array or buffer");Ue=Array.prototype.slice.call(Ue);let ct=ye(Fe,Ue,Qe*128*$e);const mt=new Uint32Array(Qe*32*$e);for(let Ze=0;Ze<mt.length;Ze++){const Ce=Ze*4;mt[Ze]=(ct[Ce+3]&255)<<24|(ct[Ce+2]&255)<<16|(ct[Ce+1]&255)<<8|(ct[Ce+0]&255)<<0}const gt=new Uint32Array(64*$e),Ht=new Uint32Array(32*$e*qe),jt=32*$e,ze=new Uint32Array(16),ve=new Uint32Array(16),ke=Qe*qe*2;let Oe=0,Pe=null,Re=!1,Ye=0,Xe=0,Je,Ie;const De=nt?parseInt(1e3/$e):4294967295,We=typeof setImmediate<"u"?setImmediate:setTimeout,it=function(){if(Re)return nt(new Error("cancelled"),Oe/ke);let Ze;switch(Ye){case 0:Ie=Xe*32*$e,Ae(mt,Ie,gt,0,jt),Ye=1,Je=0;case 1:Ze=qe-Je,Ze>De&&(Ze=De);for(let _e=0;_e<Ze;_e++)Ae(gt,0,Ht,(Je+_e)*jt,jt),xe(gt,jt,$e,ze,ve);if(Je+=Ze,Oe+=Ze,nt){const _e=parseInt(1e3*Oe/ke);if(_e!==Pe){if(Re=nt(null,Oe/ke),Re)break;Pe=_e}}if(Je<qe)break;Je=0,Ye=2;case 2:Ze=qe-Je,Ze>De&&(Ze=De);for(let _e=0;_e<Ze;_e++){const at=(2*$e-1)*16,yt=gt[at]&qe-1;Ee(Ht,yt*jt,gt,jt),xe(gt,jt,$e,ze,ve)}if(Je+=Ze,Oe+=Ze,nt){const _e=parseInt(1e3*Oe/ke);if(_e!==Pe){if(Re=nt(null,Oe/ke),Re)break;Pe=_e}}if(Je<qe)break;if(Ae(gt,0,mt,Ie,jt),Xe++,Xe<Qe){Ye=0;break}ct=[];for(let _e=0;_e<mt.length;_e++)ct.push(mt[_e]>>0&255),ct.push(mt[_e]>>8&255),ct.push(mt[_e]>>16&255),ct.push(mt[_e]>>24&255);const Ce=ye(Fe,ct,ot);return nt&&nt(null,1,Ce),Ce}nt&&We(it)};if(!nt)for(;;){const Ze=it();if(Ze!=null)return Ze}it()}const Me={scrypt:function(Fe,Ue,qe,$e,Qe,ot,nt){return new Promise(function(ct,mt){let gt=0;nt&&nt(0),He(Fe,Ue,qe,$e,Qe,ot,function(Ht,jt,ze){if(Ht)mt(Ht);else if(ze)nt&&gt!==1&&nt(1),ct(new Uint8Array(ze));else if(nt&&jt!==gt)return gt=jt,nt(jt)})})},syncScrypt:function(Fe,Ue,qe,$e,Qe,ot){return new Uint8Array(He(Fe,Ue,qe,$e,Qe,ot))}};he.exports=Me})()})(scrypt$1);var scryptExports=scrypt$1.exports;const scrypt=getDefaultExportFromCjs(scryptExports);var __awaiter$6=function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})};const logger$7=new Logger(version$3);function hasMnemonic$1(he){return he!=null&&he.mnemonic&&he.mnemonic.phrase}class KeystoreAccount extends Description{isKeystoreAccount(fe){return!!(fe&&fe._isKeystoreAccount)}}function _decrypt(he,fe,le){if(searchPath(he,"crypto/cipher")==="aes-128-ctr"){const ge=looseArrayify(searchPath(he,"crypto/cipherparams/iv")),ye=new aes.Counter(ge),xe=new aes.ModeOfOperation.ctr(fe,ye);return arrayify(xe.decrypt(le))}return null}function _getAccount(he,fe){const le=looseArrayify(searchPath(he,"crypto/ciphertext"));if(hexlify(keccak256$1(concat([fe.slice(16,32),le]))).substring(2)!==searchPath(he,"crypto/mac").toLowerCase())throw new Error("invalid password");const ge=_decrypt(he,fe.slice(0,16),le);ge||logger$7.throwError("unsupported cipher",Logger.errors.UNSUPPORTED_OPERATION,{operation:"decrypt"});const ye=fe.slice(32,64),xe=computeAddress(ge);if(he.address){let we=he.address.toLowerCase();if(we.substring(0,2)!=="0x"&&(we="0x"+we),getAddress(we)!==xe)throw new Error("address mismatch")}const me={_isKeystoreAccount:!0,address:xe,privateKey:hexlify(ge)};if(searchPath(he,"x-ethers/version")==="0.1"){const we=looseArrayify(searchPath(he,"x-ethers/mnemonicCiphertext")),Ee=looseArrayify(searchPath(he,"x-ethers/mnemonicCounter")),Ae=new aes.Counter(Ee),Se=new aes.ModeOfOperation.ctr(ye,Ae),Le=searchPath(he,"x-ethers/path")||defaultPath,He=searchPath(he,"x-ethers/locale")||"en",Me=arrayify(Se.decrypt(we));try{const Fe=entropyToMnemonic(Me,He),Ue=HDNode.fromMnemonic(Fe,null,He).derivePath(Le);if(Ue.privateKey!=me.privateKey)throw new Error("mnemonic mismatch");me.mnemonic=Ue.mnemonic}catch(Fe){if(Fe.code!==Logger.errors.INVALID_ARGUMENT||Fe.argument!=="wordlist")throw Fe}}return new KeystoreAccount(me)}function pbkdf2Sync(he,fe,le,pe,ge){return arrayify(pbkdf2$2(he,fe,le,pe,ge))}function pbkdf2$1(he,fe,le,pe,ge){return Promise.resolve(pbkdf2Sync(he,fe,le,pe,ge))}function _computeKdfKey(he,fe,le,pe,ge){const ye=getPassword(fe),xe=searchPath(he,"crypto/kdf");if(xe&&typeof xe=="string"){const me=function(we,Ee){return logger$7.throwArgumentError("invalid key-derivation function parameters",we,Ee)};if(xe.toLowerCase()==="scrypt"){const we=looseArrayify(searchPath(he,"crypto/kdfparams/salt")),Ee=parseInt(searchPath(he,"crypto/kdfparams/n")),Ae=parseInt(searchPath(he,"crypto/kdfparams/r")),Se=parseInt(searchPath(he,"crypto/kdfparams/p"));(!Ee||!Ae||!Se)&&me("kdf",xe),Ee&Ee-1&&me("N",Ee);const Le=parseInt(searchPath(he,"crypto/kdfparams/dklen"));return Le!==32&&me("dklen",Le),pe(ye,we,Ee,Ae,Se,64,ge)}else if(xe.toLowerCase()==="pbkdf2"){const we=looseArrayify(searchPath(he,"crypto/kdfparams/salt"));let Ee=null;const Ae=searchPath(he,"crypto/kdfparams/prf");Ae==="hmac-sha256"?Ee="sha256":Ae==="hmac-sha512"?Ee="sha512":me("prf",Ae);const Se=parseInt(searchPath(he,"crypto/kdfparams/c")),Le=parseInt(searchPath(he,"crypto/kdfparams/dklen"));return Le!==32&&me("dklen",Le),le(ye,we,Se,Le,Ee)}}return logger$7.throwArgumentError("unsupported key-derivation function","kdf",xe)}function decryptSync(he,fe){const le=JSON.parse(he),pe=_computeKdfKey(le,fe,pbkdf2Sync,scrypt.syncScrypt);return _getAccount(le,pe)}function decrypt(he,fe,le){return __awaiter$6(this,void 0,void 0,function*(){const pe=JSON.parse(he),ge=yield _computeKdfKey(pe,fe,pbkdf2$1,scrypt.scrypt,le);return _getAccount(pe,ge)})}function encrypt(he,fe,le,pe){try{if(getAddress(he.address)!==computeAddress(he.privateKey))throw new Error("address/privateKey mismatch");if(hasMnemonic$1(he)){const Ue=he.mnemonic;if(HDNode.fromMnemonic(Ue.phrase,null,Ue.locale).derivePath(Ue.path||defaultPath).privateKey!=he.privateKey)throw new Error("mnemonic mismatch")}}catch(Ue){return Promise.reject(Ue)}typeof le=="function"&&!pe&&(pe=le,le={}),le||(le={});const ge=arrayify(he.privateKey),ye=getPassword(fe);let xe=null,me=null,we=null;if(hasMnemonic$1(he)){const Ue=he.mnemonic;xe=arrayify(mnemonicToEntropy(Ue.phrase,Ue.locale||"en")),me=Ue.path||defaultPath,we=Ue.locale||"en"}let Ee=le.client;Ee||(Ee="ethers.js");let Ae=null;le.salt?Ae=arrayify(le.salt):Ae=randomBytes$1(32);let Se=null;if(le.iv){if(Se=arrayify(le.iv),Se.length!==16)throw new Error("invalid iv")}else Se=randomBytes$1(16);let Le=null;if(le.uuid){if(Le=arrayify(le.uuid),Le.length!==16)throw new Error("invalid uuid")}else Le=randomBytes$1(16);let He=1<<17,Me=8,Fe=1;return le.scrypt&&(le.scrypt.N&&(He=le.scrypt.N),le.scrypt.r&&(Me=le.scrypt.r),le.scrypt.p&&(Fe=le.scrypt.p)),scrypt.scrypt(ye,Ae,He,Me,Fe,64,pe).then(Ue=>{Ue=arrayify(Ue);const qe=Ue.slice(0,16),$e=Ue.slice(16,32),Qe=Ue.slice(32,64),ot=new aes.Counter(Se),nt=new aes.ModeOfOperation.ctr(qe,ot),ct=arrayify(nt.encrypt(ge)),mt=keccak256$1(concat([$e,ct])),gt={address:he.address.substring(2).toLowerCase(),id:uuidV4(Le),version:3,crypto:{cipher:"aes-128-ctr",cipherparams:{iv:hexlify(Se).substring(2)},ciphertext:hexlify(ct).substring(2),kdf:"scrypt",kdfparams:{salt:hexlify(Ae).substring(2),n:He,dklen:32,p:Fe,r:Me},mac:mt.substring(2)}};if(xe){const Ht=randomBytes$1(16),jt=new aes.Counter(Ht),ze=new aes.ModeOfOperation.ctr(Qe,jt),ve=arrayify(ze.encrypt(xe)),ke=new Date,Oe=ke.getUTCFullYear()+"-"+zpad(ke.getUTCMonth()+1,2)+"-"+zpad(ke.getUTCDate(),2)+"T"+zpad(ke.getUTCHours(),2)+"-"+zpad(ke.getUTCMinutes(),2)+"-"+zpad(ke.getUTCSeconds(),2)+".0Z";gt["x-ethers"]={client:Ee,gethFilename:"UTC--"+Oe+"--"+gt.address,mnemonicCounter:hexlify(Ht).substring(2),mnemonicCiphertext:hexlify(ve).substring(2),path:me,locale:we,version:"0.1"}}return JSON.stringify(gt)})}function decryptJsonWallet(he,fe,le){if(isCrowdsaleWallet(he)){le&&le(0);const pe=decrypt$1(he,fe);return le&&le(1),Promise.resolve(pe)}return isKeystoreWallet(he)?decrypt(he,fe,le):Promise.reject(new Error("invalid JSON wallet"))}function decryptJsonWalletSync(he,fe){if(isCrowdsaleWallet(he))return decrypt$1(he,fe);if(isKeystoreWallet(he))return decryptSync(he,fe);throw new Error("invalid JSON wallet")}const version$2="wallet/5.7.0";var __awaiter$5=function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})};const logger$6=new Logger(version$2);function isAccount(he){return he!=null&&isHexString$1(he.privateKey,32)&&he.address!=null}function hasMnemonic(he){const fe=he.mnemonic;return fe&&fe.phrase}class Wallet extends Signer{constructor(fe,le){if(super(),isAccount(fe)){const pe=new SigningKey(fe.privateKey);if(defineReadOnly(this,"_signingKey",()=>pe),defineReadOnly(this,"address",computeAddress(this.publicKey)),this.address!==getAddress(fe.address)&&logger$6.throwArgumentError("privateKey/address mismatch","privateKey","[REDACTED]"),hasMnemonic(fe)){const ge=fe.mnemonic;defineReadOnly(this,"_mnemonic",()=>({phrase:ge.phrase,path:ge.path||defaultPath,locale:ge.locale||"en"}));const ye=this.mnemonic,xe=HDNode.fromMnemonic(ye.phrase,null,ye.locale).derivePath(ye.path);computeAddress(xe.privateKey)!==this.address&&logger$6.throwArgumentError("mnemonic/address mismatch","privateKey","[REDACTED]")}else defineReadOnly(this,"_mnemonic",()=>null)}else{if(SigningKey.isSigningKey(fe))fe.curve!=="secp256k1"&&logger$6.throwArgumentError("unsupported curve; must be secp256k1","privateKey","[REDACTED]"),defineReadOnly(this,"_signingKey",()=>fe);else{typeof fe=="string"&&fe.match(/^[0-9a-f]*$/i)&&fe.length===64&&(fe="0x"+fe);const pe=new SigningKey(fe);defineReadOnly(this,"_signingKey",()=>pe)}defineReadOnly(this,"_mnemonic",()=>null),defineReadOnly(this,"address",computeAddress(this.publicKey))}le&&!Provider.isProvider(le)&&logger$6.throwArgumentError("invalid provider","provider",le),defineReadOnly(this,"provider",le||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(fe){return new Wallet(this,fe)}signTransaction(fe){return resolveProperties(fe).then(le=>{le.from!=null&&(getAddress(le.from)!==this.address&&logger$6.throwArgumentError("transaction from address mismatch","transaction.from",fe.from),delete le.from);const pe=this._signingKey().signDigest(keccak256$1(serialize(le)));return serialize(le,pe)})}signMessage(fe){return __awaiter$5(this,void 0,void 0,function*(){return joinSignature(this._signingKey().signDigest(hashMessage(fe)))})}_signTypedData(fe,le,pe){return __awaiter$5(this,void 0,void 0,function*(){const ge=yield TypedDataEncoder.resolveNames(fe,le,pe,ye=>(this.provider==null&&logger$6.throwError("cannot resolve ENS names without a provider",Logger.errors.UNSUPPORTED_OPERATION,{operation:"resolveName",value:ye}),this.provider.resolveName(ye)));return joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(ge.domain,le,ge.value)))})}encrypt(fe,le,pe){if(typeof le=="function"&&!pe&&(pe=le,le={}),pe&&typeof pe!="function")throw new Error("invalid callback");return le||(le={}),encrypt(this,fe,le,pe)}static createRandom(fe){let le=randomBytes$1(16);fe||(fe={}),fe.extraEntropy&&(le=arrayify(hexDataSlice(keccak256$1(concat([le,fe.extraEntropy])),0,16)));const pe=entropyToMnemonic(le,fe.locale);return Wallet.fromMnemonic(pe,fe.path,fe.locale)}static fromEncryptedJson(fe,le,pe){return decryptJsonWallet(fe,le,pe).then(ge=>new Wallet(ge))}static fromEncryptedJsonSync(fe,le){return new Wallet(decryptJsonWalletSync(fe,le))}static fromMnemonic(fe,le,pe){return le||(le=defaultPath),new Wallet(HDNode.fromMnemonic(fe,null,pe).derivePath(le))}}function verifyMessage(he,fe){return recoverAddress(hashMessage(he),fe)}function verifyTypedData(he,fe,le,pe){return recoverAddress(TypedDataEncoder.hash(he,fe,le),pe)}class InjectedEthereumSigner{constructor(fe){je(this,"signer");je(this,"publicKey");je(this,"ownerLength",SIG_CONFIG[SignatureConfig.ETHEREUM].pubLength);je(this,"signatureLength",SIG_CONFIG[SignatureConfig.ETHEREUM].sigLength);je(this,"signatureType",SignatureConfig.ETHEREUM);this.signer=fe.getSigner()}async setPublicKey(){const fe="sign this message to connect to Bundlr.Network",le=await this.signer.signMessage(fe),pe=await hashMessage(fe),ge=recoverPublicKey(arrayify(pe),le);this.publicKey=Buffer$4.from(arrayify(ge))}async sign(fe){this.publicKey||await this.setPublicKey();const le=await this.signer.signMessage(fe);return Buffer$4.from(le.slice(2),"hex")}static verify(fe,le,pe){const ge=computeAddress(fe);return verifyMessage(le,pe)===ge}}var _Buffer=safeBufferExports.Buffer;function base(he){if(he.length>=255)throw new TypeError("Alphabet too long");for(var fe=new Uint8Array(256),le=0;le<fe.length;le++)fe[le]=255;for(var pe=0;pe<he.length;pe++){var ge=he.charAt(pe),ye=ge.charCodeAt(0);if(fe[ye]!==255)throw new TypeError(ge+" is ambiguous");fe[ye]=pe}var xe=he.length,me=he.charAt(0),we=Math.log(xe)/Math.log(256),Ee=Math.log(256)/Math.log(xe);function Ae(He){if((Array.isArray(He)||He instanceof Uint8Array)&&(He=_Buffer.from(He)),!_Buffer.isBuffer(He))throw new TypeError("Expected Buffer");if(He.length===0)return"";for(var Me=0,Fe=0,Ue=0,qe=He.length;Ue!==qe&&He[Ue]===0;)Ue++,Me++;for(var $e=(qe-Ue)*Ee+1>>>0,Qe=new Uint8Array($e);Ue!==qe;){for(var ot=He[Ue],nt=0,ct=$e-1;(ot!==0||nt<Fe)&&ct!==-1;ct--,nt++)ot+=256*Qe[ct]>>>0,Qe[ct]=ot%xe>>>0,ot=ot/xe>>>0;if(ot!==0)throw new Error("Non-zero carry");Fe=nt,Ue++}for(var mt=$e-Fe;mt!==$e&&Qe[mt]===0;)mt++;for(var gt=me.repeat(Me);mt<$e;++mt)gt+=he.charAt(Qe[mt]);return gt}function Se(He){if(typeof He!="string")throw new TypeError("Expected String");if(He.length===0)return _Buffer.alloc(0);for(var Me=0,Fe=0,Ue=0;He[Me]===me;)Fe++,Me++;for(var qe=(He.length-Me)*we+1>>>0,$e=new Uint8Array(qe);Me<He.length;){var Qe=fe[He.charCodeAt(Me)];if(Qe===255)return;for(var ot=0,nt=qe-1;(Qe!==0||ot<Ue)&&nt!==-1;nt--,ot++)Qe+=xe*$e[nt]>>>0,$e[nt]=Qe%256>>>0,Qe=Qe/256>>>0;if(Qe!==0)throw new Error("Non-zero carry");Ue=ot,Me++}for(var ct=qe-Ue;ct!==qe&&$e[ct]===0;)ct++;var mt=_Buffer.allocUnsafe(Fe+(qe-ct));mt.fill(0,0,Fe);for(var gt=Fe;ct!==qe;)mt[gt++]=$e[ct++];return mt}function Le(He){var Me=Se(He);if(Me)return Me;throw new Error("Non-base"+xe+" character")}return{encode:Ae,decodeUnsafe:Se,decode:Le}}var src=base,basex=src,ALPHABET$1="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",bs58=basex(ALPHABET$1);const bs58$1=getDefaultExportFromCjs(bs58);class SolanaSigner extends Curve25519{get publicKey(){return bs58$1.decode(this.pk)}get key(){return bs58$1.decode(this._key)}constructor(fe){const le=bs58$1.decode(fe);super(bs58$1.encode(le.subarray(0,32)),bs58$1.encode(le.subarray(32,64)))}}const errors$2={IMPOSSIBLE_CASE:"Impossible case. Please create issue.",TWEAK_ADD:"The tweak was out of range or the resulted private key is invalid",TWEAK_MUL:"The tweak was out of range or equal to zero",CONTEXT_RANDOMIZE_UNKNOW:"Unknow error on context randomization",SECKEY_INVALID:"Private Key is invalid",PUBKEY_PARSE:"Public Key could not be parsed",PUBKEY_SERIALIZE:"Public Key serialization error",PUBKEY_COMBINE:"The sum of the public keys is not valid",SIG_PARSE:"Signature could not be parsed",SIGN:"The nonce generation function failed, or the private key was invalid",RECOVER:"Public key could not be recover",ECDH:"Scalar was invalid (zero or overflow)"};function assert(he,fe){if(!he)throw new Error(fe)}function isUint8Array(he,fe,le){if(assert(fe instanceof Uint8Array,`Expected ${he} to be an Uint8Array`),le!==void 0)if(Array.isArray(le)){const pe=le.join(", "),ge=`Expected ${he} to be an Uint8Array with length [${pe}]`;assert(le.includes(fe.length),ge)}else{const pe=`Expected ${he} to be an Uint8Array with length ${le}`;assert(fe.length===le,pe)}}function isCompressed(he){assert(toTypeString(he)==="Boolean","Expected compressed to be a Boolean")}function getAssertedOutput(he=le=>new Uint8Array(le),fe){return typeof he=="function"&&(he=he(fe)),isUint8Array("output",he,fe),he}function toTypeString(he){return Object.prototype.toString.call(he).slice(8,-1)}var lib$7=he=>({contextRandomize(fe){switch(assert(fe===null||fe instanceof Uint8Array,"Expected seed to be an Uint8Array or null"),fe!==null&&isUint8Array("seed",fe,32),he.contextRandomize(fe)){case 1:throw new Error(errors$2.CONTEXT_RANDOMIZE_UNKNOW)}},privateKeyVerify(fe){return isUint8Array("private key",fe,32),he.privateKeyVerify(fe)===0},privateKeyNegate(fe){switch(isUint8Array("private key",fe,32),he.privateKeyNegate(fe)){case 0:return fe;case 1:throw new Error(errors$2.IMPOSSIBLE_CASE)}},privateKeyTweakAdd(fe,le){switch(isUint8Array("private key",fe,32),isUint8Array("tweak",le,32),he.privateKeyTweakAdd(fe,le)){case 0:return fe;case 1:throw new Error(errors$2.TWEAK_ADD)}},privateKeyTweakMul(fe,le){switch(isUint8Array("private key",fe,32),isUint8Array("tweak",le,32),he.privateKeyTweakMul(fe,le)){case 0:return fe;case 1:throw new Error(errors$2.TWEAK_MUL)}},publicKeyVerify(fe){return isUint8Array("public key",fe,[33,65]),he.publicKeyVerify(fe)===0},publicKeyCreate(fe,le=!0,pe){switch(isUint8Array("private key",fe,32),isCompressed(le),pe=getAssertedOutput(pe,le?33:65),he.publicKeyCreate(pe,fe)){case 0:return pe;case 1:throw new Error(errors$2.SECKEY_INVALID);case 2:throw new Error(errors$2.PUBKEY_SERIALIZE)}},publicKeyConvert(fe,le=!0,pe){switch(isUint8Array("public key",fe,[33,65]),isCompressed(le),pe=getAssertedOutput(pe,le?33:65),he.publicKeyConvert(pe,fe)){case 0:return pe;case 1:throw new Error(errors$2.PUBKEY_PARSE);case 2:throw new Error(errors$2.PUBKEY_SERIALIZE)}},publicKeyNegate(fe,le=!0,pe){switch(isUint8Array("public key",fe,[33,65]),isCompressed(le),pe=getAssertedOutput(pe,le?33:65),he.publicKeyNegate(pe,fe)){case 0:return pe;case 1:throw new Error(errors$2.PUBKEY_PARSE);case 2:throw new Error(errors$2.IMPOSSIBLE_CASE);case 3:throw new Error(errors$2.PUBKEY_SERIALIZE)}},publicKeyCombine(fe,le=!0,pe){assert(Array.isArray(fe),"Expected public keys to be an Array"),assert(fe.length>0,"Expected public keys array will have more than zero items");for(const ge of fe)isUint8Array("public key",ge,[33,65]);switch(isCompressed(le),pe=getAssertedOutput(pe,le?33:65),he.publicKeyCombine(pe,fe)){case 0:return pe;case 1:throw new Error(errors$2.PUBKEY_PARSE);case 2:throw new Error(errors$2.PUBKEY_COMBINE);case 3:throw new Error(errors$2.PUBKEY_SERIALIZE)}},publicKeyTweakAdd(fe,le,pe=!0,ge){switch(isUint8Array("public key",fe,[33,65]),isUint8Array("tweak",le,32),isCompressed(pe),ge=getAssertedOutput(ge,pe?33:65),he.publicKeyTweakAdd(ge,fe,le)){case 0:return ge;case 1:throw new Error(errors$2.PUBKEY_PARSE);case 2:throw new Error(errors$2.TWEAK_ADD)}},publicKeyTweakMul(fe,le,pe=!0,ge){switch(isUint8Array("public key",fe,[33,65]),isUint8Array("tweak",le,32),isCompressed(pe),ge=getAssertedOutput(ge,pe?33:65),he.publicKeyTweakMul(ge,fe,le)){case 0:return ge;case 1:throw new Error(errors$2.PUBKEY_PARSE);case 2:throw new Error(errors$2.TWEAK_MUL)}},signatureNormalize(fe){switch(isUint8Array("signature",fe,64),he.signatureNormalize(fe)){case 0:return fe;case 1:throw new Error(errors$2.SIG_PARSE)}},signatureExport(fe,le){isUint8Array("signature",fe,64),le=getAssertedOutput(le,72);const pe={output:le,outputlen:72};switch(he.signatureExport(pe,fe)){case 0:return le.slice(0,pe.outputlen);case 1:throw new Error(errors$2.SIG_PARSE);case 2:throw new Error(errors$2.IMPOSSIBLE_CASE)}},signatureImport(fe,le){switch(isUint8Array("signature",fe),le=getAssertedOutput(le,64),he.signatureImport(le,fe)){case 0:return le;case 1:throw new Error(errors$2.SIG_PARSE);case 2:throw new Error(errors$2.IMPOSSIBLE_CASE)}},ecdsaSign(fe,le,pe={},ge){isUint8Array("message",fe,32),isUint8Array("private key",le,32),assert(toTypeString(pe)==="Object","Expected options to be an Object"),pe.data!==void 0&&isUint8Array("options.data",pe.data),pe.noncefn!==void 0&&assert(toTypeString(pe.noncefn)==="Function","Expected options.noncefn to be a Function"),ge=getAssertedOutput(ge,64);const ye={signature:ge,recid:null};switch(he.ecdsaSign(ye,fe,le,pe.data,pe.noncefn)){case 0:return ye;case 1:throw new Error(errors$2.SIGN);case 2:throw new Error(errors$2.IMPOSSIBLE_CASE)}},ecdsaVerify(fe,le,pe){switch(isUint8Array("signature",fe,64),isUint8Array("message",le,32),isUint8Array("public key",pe,[33,65]),he.ecdsaVerify(fe,le,pe)){case 0:return!0;case 3:return!1;case 1:throw new Error(errors$2.SIG_PARSE);case 2:throw new Error(errors$2.PUBKEY_PARSE)}},ecdsaRecover(fe,le,pe,ge=!0,ye){switch(isUint8Array("signature",fe,64),assert(toTypeString(le)==="Number"&&le>=0&&le<=3,"Expected recovery id to be a Number within interval [0, 3]"),isUint8Array("message",pe,32),isCompressed(ge),ye=getAssertedOutput(ye,ge?33:65),he.ecdsaRecover(ye,fe,le,pe)){case 0:return ye;case 1:throw new Error(errors$2.SIG_PARSE);case 2:throw new Error(errors$2.RECOVER);case 3:throw new Error(errors$2.IMPOSSIBLE_CASE)}},ecdh(fe,le,pe={},ge){switch(isUint8Array("public key",fe,[33,65]),isUint8Array("private key",le,32),assert(toTypeString(pe)==="Object","Expected options to be an Object"),pe.data!==void 0&&isUint8Array("options.data",pe.data),pe.hashfn!==void 0?(assert(toTypeString(pe.hashfn)==="Function","Expected options.hashfn to be a Function"),pe.xbuf!==void 0&&isUint8Array("options.xbuf",pe.xbuf,32),pe.ybuf!==void 0&&isUint8Array("options.ybuf",pe.ybuf,32),isUint8Array("output",ge)):ge=getAssertedOutput(ge,32),he.ecdh(ge,fe,le,pe.data,pe.hashfn,pe.xbuf,pe.ybuf)){case 0:return ge;case 1:throw new Error(errors$2.PUBKEY_PARSE);case 2:throw new Error(errors$2.ECDH)}}});const EC=requireElliptic().ec,ec=new EC("secp256k1"),ecparams=ec.curve,BN=ecparams.n.constructor;function loadCompressedPublicKey(he,fe){let le=new BN(fe);if(le.cmp(ecparams.p)>=0)return null;le=le.toRed(ecparams.red);let pe=le.redSqr().redIMul(le).redIAdd(ecparams.b).redSqrt();return he===3!==pe.isOdd()&&(pe=pe.redNeg()),ec.keyPair({pub:{x:le,y:pe}})}function loadUncompressedPublicKey(he,fe,le){let pe=new BN(fe),ge=new BN(le);if(pe.cmp(ecparams.p)>=0||ge.cmp(ecparams.p)>=0||(pe=pe.toRed(ecparams.red),ge=ge.toRed(ecparams.red),(he===6||he===7)&&ge.isOdd()!==(he===7)))return null;const ye=pe.redSqr().redIMul(pe);return ge.redSqr().redISub(ye.redIAdd(ecparams.b)).isZero()?ec.keyPair({pub:{x:pe,y:ge}}):null}function loadPublicKey(he){const fe=he[0];switch(fe){case 2:case 3:return he.length!==33?null:loadCompressedPublicKey(fe,he.subarray(1,33));case 4:case 6:case 7:return he.length!==65?null:loadUncompressedPublicKey(fe,he.subarray(1,33),he.subarray(33,65));default:return null}}function savePublicKey(he,fe){const le=fe.encode(null,he.length===33);for(let pe=0;pe<he.length;++pe)he[pe]=le[pe]}var elliptic$1={contextRandomize(){return 0},privateKeyVerify(he){const fe=new BN(he);return fe.cmp(ecparams.n)<0&&!fe.isZero()?0:1},privateKeyNegate(he){const fe=new BN(he),le=ecparams.n.sub(fe).umod(ecparams.n).toArrayLike(Uint8Array,"be",32);return he.set(le),0},privateKeyTweakAdd(he,fe){const le=new BN(fe);if(le.cmp(ecparams.n)>=0||(le.iadd(new BN(he)),le.cmp(ecparams.n)>=0&&le.isub(ecparams.n),le.isZero()))return 1;const pe=le.toArrayLike(Uint8Array,"be",32);return he.set(pe),0},privateKeyTweakMul(he,fe){let le=new BN(fe);if(le.cmp(ecparams.n)>=0||le.isZero())return 1;le.imul(new BN(he)),le.cmp(ecparams.n)>=0&&(le=le.umod(ecparams.n));const pe=le.toArrayLike(Uint8Array,"be",32);return he.set(pe),0},publicKeyVerify(he){return loadPublicKey(he)===null?1:0},publicKeyCreate(he,fe){const le=new BN(fe);if(le.cmp(ecparams.n)>=0||le.isZero())return 1;const pe=ec.keyFromPrivate(fe).getPublic();return savePublicKey(he,pe),0},publicKeyConvert(he,fe){const le=loadPublicKey(fe);if(le===null)return 1;const pe=le.getPublic();return savePublicKey(he,pe),0},publicKeyNegate(he,fe){const le=loadPublicKey(fe);if(le===null)return 1;const pe=le.getPublic();return pe.y=pe.y.redNeg(),savePublicKey(he,pe),0},publicKeyCombine(he,fe){const le=new Array(fe.length);for(let ge=0;ge<fe.length;++ge)if(le[ge]=loadPublicKey(fe[ge]),le[ge]===null)return 1;let pe=le[0].getPublic();for(let ge=1;ge<le.length;++ge)pe=pe.add(le[ge].pub);return pe.isInfinity()?2:(savePublicKey(he,pe),0)},publicKeyTweakAdd(he,fe,le){const pe=loadPublicKey(fe);if(pe===null)return 1;if(le=new BN(le),le.cmp(ecparams.n)>=0)return 2;const ge=pe.getPublic().add(ecparams.g.mul(le));return ge.isInfinity()?2:(savePublicKey(he,ge),0)},publicKeyTweakMul(he,fe,le){const pe=loadPublicKey(fe);if(pe===null)return 1;if(le=new BN(le),le.cmp(ecparams.n)>=0||le.isZero())return 2;const ge=pe.getPublic().mul(le);return savePublicKey(he,ge),0},signatureNormalize(he){const fe=new BN(he.subarray(0,32)),le=new BN(he.subarray(32,64));return fe.cmp(ecparams.n)>=0||le.cmp(ecparams.n)>=0?1:(le.cmp(ec.nh)===1&&he.set(ecparams.n.sub(le).toArrayLike(Uint8Array,"be",32),32),0)},signatureExport(he,fe){const le=fe.subarray(0,32),pe=fe.subarray(32,64);if(new BN(le).cmp(ecparams.n)>=0||new BN(pe).cmp(ecparams.n)>=0)return 1;const{output:ge}=he;let ye=ge.subarray(4,37);ye[0]=0,ye.set(le,1);let xe=33,me=0;for(;xe>1&&ye[me]===0&&!(ye[me+1]&128);--xe,++me);if(ye=ye.subarray(me),ye[0]&128||xe>1&&ye[0]===0&&!(ye[1]&128))return 1;let we=ge.subarray(39,72);we[0]=0,we.set(pe,1);let Ee=33,Ae=0;for(;Ee>1&&we[Ae]===0&&!(we[Ae+1]&128);--Ee,++Ae);return we=we.subarray(Ae),we[0]&128||Ee>1&&we[0]===0&&!(we[1]&128)?1:(he.outputlen=6+xe+Ee,ge[0]=48,ge[1]=he.outputlen-2,ge[2]=2,ge[3]=ye.length,ge.set(ye,4),ge[4+xe]=2,ge[5+xe]=we.length,ge.set(we,6+xe),0)},signatureImport(he,fe){if(fe.length<8||fe.length>72||fe[0]!==48||fe[1]!==fe.length-2||fe[2]!==2)return 1;const le=fe[3];if(le===0||5+le>=fe.length||fe[4+le]!==2)return 1;const pe=fe[5+le];if(pe===0||6+le+pe!==fe.length||fe[4]&128||le>1&&fe[4]===0&&!(fe[5]&128)||fe[le+6]&128||pe>1&&fe[le+6]===0&&!(fe[le+7]&128))return 1;let ge=fe.subarray(4,4+le);if(ge.length===33&&ge[0]===0&&(ge=ge.subarray(1)),ge.length>32)return 1;let ye=fe.subarray(6+le);if(ye.length===33&&ye[0]===0&&(ye=ye.slice(1)),ye.length>32)throw new Error("S length is too long");let xe=new BN(ge);xe.cmp(ecparams.n)>=0&&(xe=new BN(0));let me=new BN(fe.subarray(6+le));return me.cmp(ecparams.n)>=0&&(me=new BN(0)),he.set(xe.toArrayLike(Uint8Array,"be",32),0),he.set(me.toArrayLike(Uint8Array,"be",32),32),0},ecdsaSign(he,fe,le,pe,ge){if(ge){const me=ge;ge=we=>{const Ee=me(fe,le,null,pe,we);if(!(Ee instanceof Uint8Array&&Ee.length===32))throw new Error("This is the way");return new BN(Ee)}}const ye=new BN(le);if(ye.cmp(ecparams.n)>=0||ye.isZero())return 1;let xe;try{xe=ec.sign(fe,le,{canonical:!0,k:ge,pers:pe})}catch{return 1}return he.signature.set(xe.r.toArrayLike(Uint8Array,"be",32),0),he.signature.set(xe.s.toArrayLike(Uint8Array,"be",32),32),he.recid=xe.recoveryParam,0},ecdsaVerify(he,fe,le){const pe={r:he.subarray(0,32),s:he.subarray(32,64)},ge=new BN(pe.r),ye=new BN(pe.s);if(ge.cmp(ecparams.n)>=0||ye.cmp(ecparams.n)>=0)return 1;if(ye.cmp(ec.nh)===1||ge.isZero()||ye.isZero())return 3;const xe=loadPublicKey(le);if(xe===null)return 2;const me=xe.getPublic();return ec.verify(fe,pe,me)?0:3},ecdsaRecover(he,fe,le,pe){const ge={r:fe.slice(0,32),s:fe.slice(32,64)},ye=new BN(ge.r),xe=new BN(ge.s);if(ye.cmp(ecparams.n)>=0||xe.cmp(ecparams.n)>=0)return 1;if(ye.isZero()||xe.isZero())return 2;let me;try{me=ec.recoverPubKey(pe,ge,le)}catch{return 2}return savePublicKey(he,me),0},ecdh(he,fe,le,pe,ge,ye,xe){const me=loadPublicKey(fe);if(me===null)return 1;const we=new BN(le);if(we.cmp(ecparams.n)>=0||we.isZero())return 2;const Ee=me.getPublic().mul(we);if(ge===void 0){const Ae=Ee.encode(null,!0),Se=ec.hash().update(Ae).digest();for(let Le=0;Le<32;++Le)he[Le]=Se[Le]}else{ye||(ye=new Uint8Array(32));const Ae=Ee.getX().toArray("be",32);for(let Me=0;Me<32;++Me)ye[Me]=Ae[Me];xe||(xe=new Uint8Array(32));const Se=Ee.getY().toArray("be",32);for(let Me=0;Me<32;++Me)xe[Me]=Se[Me];const Le=ge(ye,xe,pe);if(!(Le instanceof Uint8Array&&Le.length===he.length))return 2;he.set(Le)}return 0}},elliptic=lib$7(elliptic$1);const secp256k1$1=getDefaultExportFromCjs(elliptic),{Transform:Transform$1}=readableBrowserExports;var keccak$1=he=>class Ei extends Transform$1{constructor(le,pe,ge,ye,xe){super(xe),this._rate=le,this._capacity=pe,this._delimitedSuffix=ge,this._hashBitLength=ye,this._options=xe,this._state=new he,this._state.initialize(le,pe),this._finalized=!1}_transform(le,pe,ge){let ye=null;try{this.update(le,pe)}catch(xe){ye=xe}ge(ye)}_flush(le){let pe=null;try{this.push(this.digest())}catch(ge){pe=ge}le(pe)}update(le,pe){if(!Buffer$4.isBuffer(le)&&typeof le!="string")throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Digest already called");return Buffer$4.isBuffer(le)||(le=Buffer$4.from(le,pe)),this._state.absorb(le),this}digest(le){if(this._finalized)throw new Error("Digest already called");this._finalized=!0,this._delimitedSuffix&&this._state.absorbLastFewBits(this._delimitedSuffix);let pe=this._state.squeeze(this._hashBitLength/8);return le!==void 0&&(pe=pe.toString(le)),this._resetState(),pe}_resetState(){return this._state.initialize(this._rate,this._capacity),this}_clone(){const le=new Ei(this._rate,this._capacity,this._delimitedSuffix,this._hashBitLength,this._options);return this._state.copy(le._state),le._finalized=this._finalized,le}};const{Transform}=readableBrowserExports;var shake=he=>class Ai extends Transform{constructor(le,pe,ge,ye){super(ye),this._rate=le,this._capacity=pe,this._delimitedSuffix=ge,this._options=ye,this._state=new he,this._state.initialize(le,pe),this._finalized=!1}_transform(le,pe,ge){let ye=null;try{this.update(le,pe)}catch(xe){ye=xe}ge(ye)}_flush(){}_read(le){this.push(this.squeeze(le))}update(le,pe){if(!Buffer$4.isBuffer(le)&&typeof le!="string")throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Squeeze already called");return Buffer$4.isBuffer(le)||(le=Buffer$4.from(le,pe)),this._state.absorb(le),this}squeeze(le,pe){this._finalized||(this._finalized=!0,this._state.absorbLastFewBits(this._delimitedSuffix));let ge=this._state.squeeze(le);return pe!==void 0&&(ge=ge.toString(pe)),ge}_resetState(){return this._state.initialize(this._rate,this._capacity),this}_clone(){const le=new Ai(this._rate,this._capacity,this._delimitedSuffix,this._options);return this._state.copy(le._state),le._finalized=this._finalized,le}};const createKeccak=keccak$1,createShake=shake;var api=function(he){const fe=createKeccak(he),le=createShake(he);return function(pe,ge){switch(typeof pe=="string"?pe.toLowerCase():pe){case"keccak224":return new fe(1152,448,null,224,ge);case"keccak256":return new fe(1088,512,null,256,ge);case"keccak384":return new fe(832,768,null,384,ge);case"keccak512":return new fe(576,1024,null,512,ge);case"sha3-224":return new fe(1152,448,6,224,ge);case"sha3-256":return new fe(1088,512,6,256,ge);case"sha3-384":return new fe(832,768,6,384,ge);case"sha3-512":return new fe(576,1024,6,512,ge);case"shake128":return new le(1344,256,31,ge);case"shake256":return new le(1088,512,31,ge);default:throw new Error("Invald algorithm: "+pe)}}},keccakStateUnroll={};const P1600_ROUND_CONSTANTS=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648];keccakStateUnroll.p1600=function(he){for(let fe=0;fe<24;++fe){const le=he[0]^he[10]^he[20]^he[30]^he[40],pe=he[1]^he[11]^he[21]^he[31]^he[41],ge=he[2]^he[12]^he[22]^he[32]^he[42],ye=he[3]^he[13]^he[23]^he[33]^he[43],xe=he[4]^he[14]^he[24]^he[34]^he[44],me=he[5]^he[15]^he[25]^he[35]^he[45],we=he[6]^he[16]^he[26]^he[36]^he[46],Ee=he[7]^he[17]^he[27]^he[37]^he[47],Ae=he[8]^he[18]^he[28]^he[38]^he[48],Se=he[9]^he[19]^he[29]^he[39]^he[49];let Le=Ae^(ge<<1|ye>>>31),He=Se^(ye<<1|ge>>>31);const Me=he[0]^Le,Fe=he[1]^He,Ue=he[10]^Le,qe=he[11]^He,$e=he[20]^Le,Qe=he[21]^He,ot=he[30]^Le,nt=he[31]^He,ct=he[40]^Le,mt=he[41]^He;Le=le^(xe<<1|me>>>31),He=pe^(me<<1|xe>>>31);const gt=he[2]^Le,Ht=he[3]^He,jt=he[12]^Le,ze=he[13]^He,ve=he[22]^Le,ke=he[23]^He,Oe=he[32]^Le,Pe=he[33]^He,Re=he[42]^Le,Ye=he[43]^He;Le=ge^(we<<1|Ee>>>31),He=ye^(Ee<<1|we>>>31);const Xe=he[4]^Le,Je=he[5]^He,Ie=he[14]^Le,De=he[15]^He,We=he[24]^Le,it=he[25]^He,Ze=he[34]^Le,Ce=he[35]^He,_e=he[44]^Le,at=he[45]^He;Le=xe^(Ae<<1|Se>>>31),He=me^(Se<<1|Ae>>>31);const yt=he[6]^Le,pt=he[7]^He,kt=he[16]^Le,er=he[17]^He,zt=he[26]^Le,or=he[27]^He,ar=he[36]^Le,pr=he[37]^He,Mr=he[46]^Le,Ln=he[47]^He;Le=we^(le<<1|pe>>>31),He=Ee^(pe<<1|le>>>31);const jr=he[8]^Le,Br=he[9]^He,Bn=he[18]^Le,Vr=he[19]^He,Jr=he[28]^Le,kn=he[29]^He,Fr=he[38]^Le,zr=he[39]^He,Sn=he[48]^Le,Yr=he[49]^He,Hr=Me,Un=Fe,Wr=qe<<4|Ue>>>28,Pr=Ue<<4|qe>>>28,In=$e<<3|Qe>>>29,Ur=Qe<<3|$e>>>29,Ir=nt<<9|ot>>>23,hn=ot<<9|nt>>>23,Cr=ct<<18|mt>>>14,Tr=mt<<18|ct>>>14,pn=gt<<1|Ht>>>31,kr=Ht<<1|gt>>>31,Rr=ze<<12|jt>>>20,Tn=jt<<12|ze>>>20,Xr=ve<<10|ke>>>22,Zr=ke<<10|ve>>>22,un=Pe<<13|Oe>>>19,vr=Oe<<13|Pe>>>19,Sr=Re<<2|Ye>>>30,Cn=Ye<<2|Re>>>30,Nr=Je<<30|Xe>>>2,qr=Xe<<30|Je>>>2,Dn=Ie<<6|De>>>26,xr=De<<6|Ie>>>26,Qr=it<<11|We>>>21,Te=We<<11|it>>>21,Ne=Ze<<15|Ce>>>17,Ke=Ce<<15|Ze>>>17,Be=at<<29|_e>>>3,Ge=_e<<29|at>>>3,rt=yt<<28|pt>>>4,st=pt<<28|yt>>>4,dt=er<<23|kt>>>9,wt=kt<<23|er>>>9,_t=zt<<25|or>>>7,Wt=or<<25|zt>>>7,yr=ar<<21|pr>>>11,Xt=pr<<21|ar>>>11,sr=Ln<<24|Mr>>>8,cr=Mr<<24|Ln>>>8,fr=jr<<27|Br>>>5,gr=Br<<27|jr>>>5,ur=Bn<<20|Vr>>>12,dr=Vr<<20|Bn>>>12,lr=kn<<7|Jr>>>25,tr=Jr<<7|kn>>>25,ir=Fr<<8|zr>>>24,Zt=zr<<8|Fr>>>24,rr=Sn<<14|Yr>>>18,nr=Yr<<14|Sn>>>18;he[0]=Hr^~Rr&Qr,he[1]=Un^~Tn&Te,he[10]=rt^~ur&In,he[11]=st^~dr&Ur,he[20]=pn^~Dn&_t,he[21]=kr^~xr&Wt,he[30]=fr^~Wr&Xr,he[31]=gr^~Pr&Zr,he[40]=Nr^~dt&lr,he[41]=qr^~wt&tr,he[2]=Rr^~Qr&yr,he[3]=Tn^~Te&Xt,he[12]=ur^~In&un,he[13]=dr^~Ur&vr,he[22]=Dn^~_t&ir,he[23]=xr^~Wt&Zt,he[32]=Wr^~Xr&Ne,he[33]=Pr^~Zr&Ke,he[42]=dt^~lr&Ir,he[43]=wt^~tr&hn,he[4]=Qr^~yr&rr,he[5]=Te^~Xt&nr,he[14]=In^~un&Be,he[15]=Ur^~vr&Ge,he[24]=_t^~ir&Cr,he[25]=Wt^~Zt&Tr,he[34]=Xr^~Ne&sr,he[35]=Zr^~Ke&cr,he[44]=lr^~Ir&Sr,he[45]=tr^~hn&Cn,he[6]=yr^~rr&Hr,he[7]=Xt^~nr&Un,he[16]=un^~Be&rt,he[17]=vr^~Ge&st,he[26]=ir^~Cr&pn,he[27]=Zt^~Tr&kr,he[36]=Ne^~sr&fr,he[37]=Ke^~cr&gr,he[46]=Ir^~Sr&Nr,he[47]=hn^~Cn&qr,he[8]=rr^~Hr&Rr,he[9]=nr^~Un&Tn,he[18]=Be^~rt&ur,he[19]=Ge^~st&dr,he[28]=Cr^~pn&Dn,he[29]=Tr^~kr&xr,he[38]=sr^~fr&Wr,he[39]=cr^~gr&Pr,he[48]=Sr^~Nr&dt,he[49]=Cn^~qr&wt,he[0]^=P1600_ROUND_CONSTANTS[fe*2],he[1]^=P1600_ROUND_CONSTANTS[fe*2+1]}};const keccakState=keccakStateUnroll;function Keccak(){this.state=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.blockSize=null,this.count=0,this.squeezing=!1}Keccak.prototype.initialize=function(he,fe){for(let le=0;le<50;++le)this.state[le]=0;this.blockSize=he/8,this.count=0,this.squeezing=!1};Keccak.prototype.absorb=function(he){for(let fe=0;fe<he.length;++fe)this.state[~~(this.count/4)]^=he[fe]<<8*(this.count%4),this.count+=1,this.count===this.blockSize&&(keccakState.p1600(this.state),this.count=0)};Keccak.prototype.absorbLastFewBits=function(he){this.state[~~(this.count/4)]^=he<<8*(this.count%4),he&128&&this.count===this.blockSize-1&&keccakState.p1600(this.state),this.state[~~((this.blockSize-1)/4)]^=128<<8*((this.blockSize-1)%4),keccakState.p1600(this.state),this.count=0,this.squeezing=!0};Keccak.prototype.squeeze=function(he){this.squeezing||this.absorbLastFewBits(1);const fe=Buffer$4.alloc(he);for(let le=0;le<he;++le)fe[le]=this.state[~~(this.count/4)]>>>8*(this.count%4)&255,this.count+=1,this.count===this.blockSize&&(keccakState.p1600(this.state),this.count=0);return fe};Keccak.prototype.copy=function(he){for(let fe=0;fe<50;++fe)he.state[fe]=this.state[fe];he.blockSize=this.blockSize,he.count=this.count,he.squeezing=this.squeezing};var keccak=Keccak,js=api(keccak);const createKeccakHash=getDefaultExportFromCjs(js);function keccak256(he){return he=toBuffer(he),createKeccakHash("keccak256").update(he).digest()}function toBuffer(he){if(!Buffer$1$1.isBuffer(he))if(Array.isArray(he))he=Buffer$1$1.from(he);else if(typeof he=="string")isHexString(he)?he=Buffer$1$1.from(padToEven(stripHexPrefix(he)),"hex"):he=Buffer$1$1.from(he);else if(typeof he=="number")he=intToBuffer(he);else if(he==null)he=Buffer$1$1.allocUnsafe(0);else if(BN$2.isBN(he))he=he.toArrayLike(Buffer$1$1);else if(he.toArray)he=Buffer$1$1.from(he.toArray());else throw new Error("invalid type");return he}function isHexString(he,fe){return!(typeof he!="string"||!he.match(/^0x[0-9A-Fa-f]*$/)||fe&&he.length!==2+2*fe)}function padToEven(he){if(typeof he!="string")throw new Error(`while padding to even, value must be string, is currently ${typeof he}, while padToEven.`);return he.length%2&&(he=`0${he}`),he}function stripHexPrefix(he){return typeof he!="string"?he:isHexPrefixed(he)?he.slice(2):he}function isHexPrefixed(he){if(typeof he!="string")throw new Error("value must be type 'string', is currently type "+typeof he+", while checking isHexPrefixed.");return he.startsWith("0x")}function intToBuffer(he){const fe=intToHex(he);return Buffer$1$1.from(padToEven(fe.slice(2)),"hex")}function intToHex(he){return`0x${he.toString(16)}`}typeof window<"u"&&(window.keccak256=keccak256);const exportForTesting={intToBuffer,intToHex,isHexPrefixed,stripHexPrefix,padToEven,isHexString,toBuffer};class Secp256k1{constructor(fe,le){je(this,"_key");je(this,"ownerLength",SIG_CONFIG[SignatureConfig.ETHEREUM].pubLength);je(this,"signatureLength",SIG_CONFIG[SignatureConfig.ETHEREUM].sigLength);je(this,"signatureType",SignatureConfig.ETHEREUM);je(this,"pk");this._key=fe,this.pk=le.toString("hex")}get publicKey(){throw new Error("You must implement `publicKey`")}get key(){return Buffer$4.from(this._key,"hex")}static async verify(fe,le,pe){let ge=fe;typeof fe=="string"&&(ge=base64url.toBuffer(fe));let ye=!1;try{ye=secp256k1$1.ecdsaVerify(pe,keccak256(Buffer$4.from(le)),ge)}catch{}return ye}async sign(fe){return secp256k1$1.ecdsaSign(keccak256(Buffer$4.from(fe)),Buffer$4.from(this.key)).signature}}class EthereumSigner extends Secp256k1{get publicKey(){return Buffer$4.from(this.pk,"hex")}constructor(fe){fe.startsWith("0x")&&(fe=fe.slice(2));const le=Buffer$4.from(fe,"hex"),pe=secp256k1$1.publicKeyCreate(le,!1);super(fe,Buffer$4.from(pe))}async sign(fe){return new Wallet(this._key).signMessage(fe).then(pe=>Buffer$4.from(pe.slice(2),"hex"))}static async verify(fe,le,pe){return secp256k1$1.ecdsaVerify(pe.length===65?pe.slice(0,-1):pe,arrayify(hashMessage(le)),typeof fe=="string"?base64url.toBuffer(fe):fe)}}class PolygonSigner extends EthereumSigner{}class NearSigner extends SolanaSigner{constructor(fe){super(fe.replace("ed25519:",""))}}class AlgorandSigner extends Curve25519{get publicKey(){return Buffer$4.from(this.pk)}get key(){return Buffer$4.from(this._key)}constructor(fe,le){super(fe.subarray(0,32),le)}}let HexSolanaSigner$1=class extends InjectedSolanaSigner{constructor(le){super(le);je(this,"signatureType",4)}async sign(le){return super.sign(Buffer$4.from(Buffer$4.from(le).toString("hex")))}static async verify(le,pe,ge){return super.verify(le,Buffer$4.from(Buffer$4.from(pe).toString("hex")),ge)}};class HexSolanaSigner extends SolanaSigner{constructor(le){super(le);je(this,"signatureType",4)}async sign(le){return super.sign(Buffer$4.from(Buffer$4.from(le).toString("hex")))}static async verify(le,pe,ge){return super.verify(le,Buffer$4.from(Buffer$4.from(pe).toString("hex")),ge)}}class AptosSigner extends Curve25519{constructor(fe,le){super(fe,le)}get publicKey(){return Buffer$4.from(this.pk.slice(2),"hex")}get key(){return Buffer$4.from(this._key.slice(2),"hex")}}class InjectedAptosSigner{constructor(fe,le){je(this,"_publicKey");je(this,"ownerLength",SIG_CONFIG[SignatureConfig.INJECTEDAPTOS].pubLength);je(this,"signatureLength",SIG_CONFIG[SignatureConfig.INJECTEDAPTOS].sigLength);je(this,"signatureType",SignatureConfig.INJECTEDAPTOS);je(this,"pem");je(this,"provider");this.provider=fe,this._publicKey=le}get publicKey(){return this._publicKey}async sign(fe){if(!this.provider.signMessage)throw new Error("Selected Wallet does not support message signing");const pe=(await this.provider.signMessage({message:Buffer$4.from(fe).toString("hex"),nonce:"bundlr"})).signature;return typeof pe=="string"?Buffer$4.from(pe,"hex"):pe.data.toUint8Array()}static async verify(fe,le,pe){const ge=fe;return verify(Buffer$4.from(pe),Buffer$4.from(`APTOS
message: ${Buffer$4.from(le).toString("hex")}
nonce: bundlr`),Buffer$4.from(ge))}}class MultiSignatureAptosSigner{constructor(fe,le){je(this,"_publicKey");je(this,"ownerLength",SIG_CONFIG[SignatureConfig.MULTIAPTOS].pubLength);je(this,"signatureLength",SIG_CONFIG[SignatureConfig.MULTIAPTOS].sigLength);je(this,"signatureType",SignatureConfig.MULTIAPTOS);je(this,"collectSignatures");je(this,"provider");this._publicKey=fe,this.collectSignatures=le}get publicKey(){return this._publicKey}async sign(fe){const{signatures:le,bitmap:pe}=await this.collectSignatures(fe),ge=128,ye=new Uint8Array([0,0,0,0]),xe=new Set;pe.forEach(Ee=>{if(Ee>=32)throw new Error(`Invalid bit value ${Ee}.`);if(xe.has(Ee))throw new Error("Duplicated bits detected.");xe.add(Ee);const Ae=Math.floor(Ee/8);let Se=ye[Ae];Se|=ge>>Ee%8,ye[Ae]=Se});const me=Buffer$4.alloc(this.signatureLength);let we=0;for(let Ee=0;Ee<32;Ee++)pe.includes(Ee)&&me.set(le[we++],Ee*64);return me.set(ye,this.signatureLength-4),me}static async verify(fe,le,pe){const ye=SIG_CONFIG[SignatureConfig.MULTIAPTOS].sigLength-4,xe=pe.slice(0,ye),me=pe.slice(ye);let we=!1;for(let Ee=0;Ee<32;Ee++){const Ae=Math.floor(Ee/8),Se=Ee-Ae*8;if((me[Ae]&128>>Se)!==0){const He=xe.slice(Ee*64,(Ee+1)*64),Me=fe.slice(Ee*32,(Ee+1)*32);await verify(Buffer$4.from(He),Buffer$4.from(le),Buffer$4.from(Me))||(we=!0)}}return!we}}class TypedEthereumSigner extends EthereumSigner{constructor(le){super(le);je(this,"ownerLength",SIG_CONFIG[SignatureConfig.TYPEDETHEREUM].pubLength);je(this,"signatureLength",SIG_CONFIG[SignatureConfig.TYPEDETHEREUM].sigLength);je(this,"signatureType",SignatureConfig.TYPEDETHEREUM);je(this,"address");je(this,"signer");this.address="0x"+keccak256(super.publicKey.slice(1)).slice(-20).toString("hex"),this.signer=new Wallet(le)}get publicKey(){return Buffer$4.from(this.address)}async sign(le){const pe=await this.signer._signTypedData(domain,types,{address:this.address,"Transaction hash":le});return Buffer$4.from(pe.slice(2),"hex")}static async verify(le,pe,ge){const ye=le.toString(),xe=verifyTypedData(domain,types,{address:ye,"Transaction hash":pe},ge);return ye.toLowerCase()===xe.toLowerCase()}}const domain={name:"Bundlr",version:"1"},types={Bundlr:[{name:"Transaction hash",type:"bytes"},{name:"address",type:"address"}]};class InjectedTypedEthereumSigner{constructor(fe){je(this,"ownerLength",SIG_CONFIG[SignatureConfig.TYPEDETHEREUM].pubLength);je(this,"signatureLength",SIG_CONFIG[SignatureConfig.TYPEDETHEREUM].sigLength);je(this,"signatureType",SignatureConfig.TYPEDETHEREUM);je(this,"address");je(this,"signer");je(this,"publicKey");this.signer=fe.getSigner()}async ready(){this.address=(await this.signer.getAddress()).toString().toLowerCase(),this.publicKey=Buffer$4.from(this.address)}async sign(fe){const le=await this.signer._signTypedData(domain,types,{address:this.address,"Transaction hash":fe});return Buffer$4.from(le.slice(2),"hex")}static verify(fe,le,pe){const ge=fe.toString(),ye=verifyTypedData(domain,types,{address:ge,"Transaction hash":le},pe);return ge.toLowerCase()===ye.toLowerCase()}}class InjectedArweaveSigner{constructor(fe,le){je(this,"signer");je(this,"publicKey");je(this,"ownerLength",SIG_CONFIG[SignatureConfig.ARWEAVE].pubLength);je(this,"signatureLength",SIG_CONFIG[SignatureConfig.ARWEAVE].sigLength);je(this,"signatureType",SignatureConfig.ARWEAVE);je(this,"arweave");this.signer=fe,this.arweave=le}async setPublicKey(){const fe=await this.signer.getActivePublicKey();this.publicKey=base64url.toBuffer(fe)}async sign(fe){this.publicKey||await this.setPublicKey();const le={name:"RSA-PSS",saltLength:32},pe=await this.signer.signature(fe,le);return new Uint8Array(Object.values(pe).map(ye=>+ye))}static async verify(fe,le,pe){return await getCryptoDriver().verify(fe,le,pe)}}const indexToType={1:ArweaveSigner,2:Curve25519,3:EthereumSigner,4:HexSolanaSigner$1,5:InjectedAptosSigner,6:MultiSignatureAptosSigner,7:TypedEthereumSigner};async function getSignatureData(he){return deepHash([stringToBuffer("dataitem"),stringToBuffer("1"),stringToBuffer(he.signatureType.toString()),he.rawOwner,he.rawTarget,he.rawAnchor,he.rawTags,he.rawData])}function longToNByteArray(he,fe){const le=new Uint8Array(he);if(fe<0)throw new Error("Array is unsigned, cannot represent -ve numbers");if(fe>2**(he*8)-1)throw new Error(`Number ${fe} is too large for an array of ${he} bytes`);for(let pe=0;pe<le.length;pe++){const ge=fe&255;le[pe]=ge,fe=(fe-ge)/256}return le}function longTo8ByteArray(he){return longToNByteArray(8,he)}function shortTo2ByteArray(he){return longToNByteArray(2,he)}function longTo16ByteArray(he){return longToNByteArray(16,he)}function longTo32ByteArray(he){return longToNByteArray(32,he)}function byteArrayToLong(he){let fe=0;for(let le=he.length-1;le>=0;le--)fe=fe*256+he[le];return fe}class AVSCTap{constructor(fe=Buffer$4.alloc(MAX_TAG_BYTES),le=0){je(this,"buf");je(this,"pos");this.buf=fe,this.pos=le}writeTags(fe){if(!Array.isArray(fe))throw new Error("input must be array");const le=fe.length;let pe;if(le)for(this.writeLong(le),pe=0;pe<le;pe++){const ge=fe[pe];if(typeof(ge==null?void 0:ge.name)!="string"||typeof(ge==null?void 0:ge.value)!="string")throw new Error(`Invalid tag format for ${ge}, expected {name:string, value: string}`);this.writeString(ge.name),this.writeString(ge.value)}this.writeLong(0)}toBuffer(){const fe=Buffer$4.alloc(this.pos);if(this.pos>this.buf.length)throw new Error(`Too many tag bytes (${this.pos} > ${this.buf.length})`);return this.buf.copy(fe,0,0,this.pos),fe}writeLong(fe){const le=this.buf;let pe,ge;if(fe>=-1073741824&&fe<1073741824){ge=fe>=0?fe<<1:~fe<<1|1;do le[this.pos]=ge&127,ge>>=7;while(ge&&(le[this.pos++]|=128))}else{pe=fe>=0?fe*2:-fe*2-1;do le[this.pos]=pe&127,pe/=128;while(pe>=1&&(le[this.pos++]|=128))}this.pos++,this.buf=le}writeString(fe){const le=Buffer$4.byteLength(fe),pe=this.buf;this.writeLong(le);let ge=this.pos;if(this.pos+=le,!(this.pos>pe.length)){if(le>64)this.buf.write(fe,this.pos-le,le,"utf8");else{let ye,xe,me,we;for(ye=0,xe=le;ye<xe;ye++)me=fe.charCodeAt(ye),me<128?pe[ge++]=me:me<2048?(pe[ge++]=me>>6|192,pe[ge++]=me&63|128):(me&64512)===55296&&((we=fe.charCodeAt(ye+1))&64512)===56320?(me=65536+((me&1023)<<10)+(we&1023),ye++,pe[ge++]=me>>18|240,pe[ge++]=me>>12&63|128,pe[ge++]=me>>6&63|128,pe[ge++]=me&63|128):(pe[ge++]=me>>12|224,pe[ge++]=me>>6&63|128,pe[ge++]=me&63|128)}this.buf=pe}}readLong(){let fe=0,le=0;const pe=this.buf;let ge,ye,xe,me;do ge=pe[this.pos++],ye=ge&128,fe|=(ge&127)<<le,le+=7;while(ye&&le<28);if(ye){xe=fe,me=268435456;do ge=pe[this.pos++],xe+=(ge&127)*me,me*=128;while(ge&128);return(xe%2?-(xe+1):xe)/2}return fe>>1^-(fe&1)}skipLong(){const fe=this.buf;for(;fe[this.pos++]&128;);}readTags(){const fe=[];let le;for(;le=this.readLong();)for(le<0&&(le=-le,this.skipLong());le--;){const pe=this.readString(),ge=this.readString();fe.push({name:pe,value:ge})}return fe}readString(){const fe=this.readLong(),le=this.pos,pe=this.buf;if(this.pos+=fe,this.pos>pe.length)throw new Error("TAP Position out of range");return this.buf.slice(le,le+fe).toString()}}function serializeTags(he){if((he==null?void 0:he.length)===0)return Buffer$4.allocUnsafe(0);const fe=new AVSCTap;return fe.writeTags(he),fe.toBuffer()}function deserializeTags(he){return new AVSCTap(he).readTags()}const MIN_BINARY_SIZE=80,MAX_TAG_BYTES=4096;class DataItem{constructor(fe){je(this,"binary");je(this,"_id");this.binary=fe}static isDataItem(fe){return fe.binary!==void 0}get signatureType(){const fe=byteArrayToLong(this.binary.subarray(0,2));if((SignatureConfig==null?void 0:SignatureConfig[fe])!==void 0)return fe;throw new Error("Unknown signature type: "+fe)}async isValid(){return DataItem.verify(this.binary)}get id(){return base64url.encode(this.rawId)}set id(fe){this._id=base64url.toBuffer(fe)}get rawId(){return cryptoBrowserifyExports.createHash("sha256").update(this.rawSignature).digest()}set rawId(fe){this._id=fe}get rawSignature(){return this.binary.subarray(2,2+this.signatureLength)}get signature(){return base64url.encode(this.rawSignature)}set rawOwner(fe){if(fe.byteLength!=this.ownerLength)throw new Error(`Expected raw owner (pubkey) to be ${this.ownerLength} bytes, got ${fe.byteLength} bytes.`);this.binary.set(fe,2+this.signatureLength)}get rawOwner(){return this.binary.subarray(2+this.signatureLength,2+this.signatureLength+this.ownerLength)}get signatureLength(){return SIG_CONFIG[this.signatureType].sigLength}get owner(){return base64url.encode(this.rawOwner)}get ownerLength(){return SIG_CONFIG[this.signatureType].pubLength}get rawTarget(){const fe=this.getTargetStart();return this.binary[fe]==1?this.binary.subarray(fe+1,fe+33):Buffer$1$1.alloc(0)}get target(){return base64url.encode(this.rawTarget)}get rawAnchor(){const fe=this.getAnchorStart();return this.binary[fe]==1?this.binary.subarray(fe+1,fe+33):Buffer$1$1.alloc(0)}get anchor(){return base64url.encode(this.rawAnchor)}get rawTags(){const fe=this.getTagsStart(),le=byteArrayToLong(this.binary.subarray(fe+8,fe+16));return this.binary.subarray(fe+16,fe+16+le)}get tags(){const fe=this.getTagsStart();if(byteArrayToLong(this.binary.subarray(fe,fe+8))==0)return[];const pe=byteArrayToLong(this.binary.subarray(fe+8,fe+16));return deserializeTags(Buffer$1$1.from(this.binary.subarray(fe+16,fe+16+pe)))}get tagsB64Url(){return this.tags.map(le=>({name:base64url.encode(le.name),value:base64url.encode(le.value)}))}getStartOfData(){const fe=this.getTagsStart(),le=this.binary.subarray(fe+8,fe+16),pe=byteArrayToLong(le);return fe+16+pe}get rawData(){const fe=this.getTagsStart(),le=this.binary.subarray(fe+8,fe+16),pe=byteArrayToLong(le),ge=fe+16+pe;return this.binary.subarray(ge,this.binary.length)}get data(){return base64url.encode(this.rawData)}getRaw(){return this.binary}async sign(fe){return this._id=await sign$1(this,fe),this.rawId}async setSignature(fe){this.binary.set(fe,2),this._id=Buffer$1$1.from(await getCryptoDriver().hash(fe))}isSigned(){var fe;return(((fe=this._id)==null?void 0:fe.length)??0)>0}toJSON(){return{signature:this.signature,owner:this.owner,target:this.target,tags:this.tags.map(fe=>({name:base64url.encode(fe.name),value:base64url.encode(fe.value)})),data:this.data}}static async verify(fe){if(fe.byteLength<MIN_BINARY_SIZE)return!1;const le=new DataItem(fe),pe=le.signatureType,ge=le.getTagsStart(),ye=byteArrayToLong(fe.subarray(ge,ge+8)),xe=fe.subarray(ge+8,ge+16),me=byteArrayToLong(xe);if(me>MAX_TAG_BYTES)return!1;if(ye>0)try{if(deserializeTags(Buffer$1$1.from(fe.subarray(ge+16,ge+16+me))).length!==ye)return!1}catch{return!1}const we=indexToType[pe],Ee=await getSignatureData(le);return await we.verify(le.rawOwner,Ee,le.rawSignature)}async getSignatureData(){return getSignatureData(this)}getTagsStart(){const fe=this.getTargetStart(),le=this.binary[fe]==1;let pe=fe+(le?33:1);const ge=this.binary[pe]==1;return pe+=ge?33:1,pe}getTargetStart(){return 2+this.signatureLength+this.ownerLength}getAnchorStart(){let fe=this.getTargetStart()+1;const le=this.binary[this.getTargetStart()]==1;return fe+=le?32:0,fe}}const HEADER_START=32;class Bundle{constructor(fe){je(this,"length");je(this,"items");je(this,"binary");this.binary=fe,this.length=this.getDataItemCount(),this.items=this.getItems()}getRaw(){return this.binary}get(fe){if(typeof fe=="number"){if(fe>=this.length)throw new RangeError("Index out of range");return this.getByIndex(fe)}else return this.getById(fe)}getSizes(){const fe=[];for(let le=HEADER_START;le<HEADER_START+64*this.length;le+=64)fe.push(byteArrayToLong(this.binary.subarray(le,le+32)));return fe}getIds(){const fe=[];for(let le=HEADER_START;le<HEADER_START+64*this.length;le+=64){const pe=this.binary.subarray(le+32,le+64);if(pe.length===0)throw new Error("Invalid bundle, id specified in headers doesn't exist");fe.push(base64url.encode(pe))}return fe}getIdBy(fe){if(fe>this.length-1)throw new RangeError("Index of bundle out of range");const le=64+64*fe;return base64url.encode(this.binary.subarray(le,le+32))}async toTransaction(fe,le,pe){const ge=await le.createTransaction({data:this.binary,...fe},pe);return ge.addTag("Bundle-Format","binary"),ge.addTag("Bundle-Version","2.0.0"),ge}async verify(){for(const fe of this.items){const le=await fe.isValid(),pe=base64url(cryptoBrowserifyExports.createHash("sha256").update(fe.rawSignature).digest());if(!(le&&fe.id===pe))return!1}return!0}getOffset(fe){let le=0;for(let pe=HEADER_START;pe<HEADER_START+64*this.length;pe+=64){const ge=byteArrayToLong(this.binary.subarray(pe,pe+32));le+=ge;const ye=this.binary.subarray(pe+32,pe+64);if(Buffer$4.compare(ye,fe)===0)return{startOffset:le,size:ge}}return{startOffset:-1,size:-1}}getByIndex(fe){let le=0;const pe=this.getBundleStart();let ge=0,ye,xe;for(let Ae=HEADER_START;Ae<HEADER_START+64*this.length;Ae+=64){if(ye=byteArrayToLong(this.binary.subarray(Ae,Ae+32)),ge++===fe){xe=this.binary.subarray(Ae+32,Ae+64);break}le+=ye}const me=pe+le,we=this.binary.subarray(me,me+ye),Ee=new DataItem(we);return Ee.rawId=xe,Ee}getById(fe){const le=base64url.toBuffer(fe),pe=this.getOffset(le);if(pe.startOffset===-1)throw new Error("Transaction not found");const ye=this.getBundleStart()+pe.startOffset;return new DataItem(this.binary.subarray(ye,ye+pe.size))}getDataItemCount(){return byteArrayToLong(this.binary.subarray(0,32))}getBundleStart(){return 32+64*this.length}getItems(){const fe=new Array(this.length);let le=0;const pe=this.getBundleStart();let ge=0;for(let ye=HEADER_START;ye<HEADER_START+64*this.length;ye+=64){const xe=byteArrayToLong(this.binary.subarray(ye,ye+32)),me=this.binary.subarray(ye+32,ye+64);if(me.length===0)throw new Error("Invalid bundle, id specified in headers doesn't exist");const we=pe+le,Ee=this.binary.subarray(we,we+xe);le+=xe;const Ae=new DataItem(Ee);Ae.rawId=me,fe[ge]=Ae,ge++}return fe}}function unbundleData(he){return new Bundle(he)}async function bundleAndSignData(he,fe){const le=new Uint8Array(64*he.length),pe=await Promise.all(he.map(async(ye,xe)=>{const me=ye.isSigned()?ye.rawId:await sign$1(ye,fe),we=new Uint8Array(64);return we.set(longTo32ByteArray(ye.getRaw().byteLength),0),we.set(me,32),le.set(we,64*xe),ye.getRaw()})).then(ye=>Buffer$4.concat(ye)),ge=Buffer$4.concat([Buffer$4.from(longTo32ByteArray(he.length)),Buffer$4.from(le),pe]);return new Bundle(ge)}async function getSignatureAndId(he,fe){const le=await getSignatureData(he),pe=await fe.sign(le),ge=await getCryptoDriver().hash(pe);return{signature:Buffer$4.from(pe),id:Buffer$4.from(ge)}}async function sign$1(he,fe){const{signature:le,id:pe}=await getSignatureAndId(he,fe);return he.getRaw().set(le,2),pe}function createData(he,fe,le){var Qe,ot;const pe=fe.publicKey,ge=le!=null&&le.target?base64url.toBuffer(le.target):null,ye=1+((ge==null?void 0:ge.byteLength)??0),xe=le!=null&&le.anchor?Buffer$4.from(le.anchor):null,me=1+((xe==null?void 0:xe.byteLength)??0),we=(((Qe=le==null?void 0:le.tags)==null?void 0:Qe.length)??0)>0?serializeTags(le==null?void 0:le.tags):null,Ee=16+(we?we.byteLength:0),Ae=typeof he=="string"?Buffer$4.from(he):Buffer$4.from(he),Se=Ae.byteLength,Le=2+fe.signatureLength+fe.ownerLength+ye+me+Ee+Se,He=Buffer$4.alloc(Le);if(He.set(shortTo2ByteArray(fe.signatureType),0),He.set(new Uint8Array(fe.signatureLength).fill(0),2),pe.byteLength!==fe.ownerLength)throw new Error(`Owner must be ${fe.ownerLength} bytes, but was incorrectly ${pe.byteLength}`);He.set(pe,2+fe.signatureLength);const Me=2+fe.signatureLength+fe.ownerLength;if(He[Me]=ge?1:0,ge){if(ge.byteLength!==32)throw new Error(`Target must be 32 bytes but was incorrectly ${ge.byteLength}`);He.set(ge,Me+1)}const Fe=Me+ye;let Ue=Fe+1;if(He[Fe]=xe?1:0,xe){if(Ue+=xe.byteLength,xe.byteLength!==32)throw new Error("Anchor must be 32 bytes");He.set(xe,Fe+1)}He.set(longTo8ByteArray(((ot=le==null?void 0:le.tags)==null?void 0:ot.length)??0),Ue);const qe=longTo8ByteArray((we==null?void 0:we.byteLength)??0);He.set(qe,Ue+8),we&&He.set(we,Ue+16);const $e=Ue+Ee;return He.set(Ae,$e),new DataItem(He)}class BundleItem{constructor(){je(this,"signatureType");je(this,"rawSignature");je(this,"signature");je(this,"signatureLength");je(this,"rawOwner");je(this,"owner");je(this,"ownerLength");je(this,"rawTarget");je(this,"target");je(this,"rawAnchor");je(this,"anchor");je(this,"rawTags");je(this,"tags");je(this,"rawData");je(this,"data")}static async verify(...fe){throw new Error("You must implement `verify`")}}const arbundlesSrc=Object.freeze(Object.defineProperty({__proto__:null,AVSCTap,AlgorandSigner,AptosSigner,ArconnectSigner:InjectedArweaveSigner,Arweave,ArweaveSigner,Bundle,BundleItem,CryptoDriver,Curve25519,DataItem,EthereumSigner,HexInjectedSolanaSigner:HexSolanaSigner$1,HexSolanaSigner,InjectedAptosSigner,InjectedEthereumSigner,InjectedSolanaSigner,InjectedTypedEthereumSigner,MAX_TAG_BYTES,MIN_BINARY_SIZE,MultiSignatureAptosSigner,NearSigner,PolygonSigner,Rsa4096:Rsa4096Pss,SIG_CONFIG,get SignatureConfig(){return SignatureConfig},Signer:Signer$1,SolanaSigner,TypedEthereumSigner,bundleAndSignData,byteArrayToLong,concatBuffers,createData,deepHash,deserializeTags,exportForTesting,getCryptoDriver,getSignatureAndId,indexToType,keccak256,longTo16ByteArray,longTo32ByteArray,longTo8ByteArray,longToNByteArray,secp256k1:Secp256k1,serializeTags,shortTo2ByteArray,sign:sign$1,stringToBuffer,unbundleData},Symbol.toStringTag,{value:"Module"}));async function processStream(he){const fe=getReader(he);let le=(await fe.next()).value;le=await readBytes$1(fe,le,32);const pe=byteArrayToLong(le.subarray(0,32));le=le.subarray(32);const ge=64*pe;le=await readBytes$1(fe,le,ge);const ye=new Array(pe);for(let we=0;we<ge;we+=64)ye[we/64]=[byteArrayToLong(le.subarray(we,we+32)),base64url(Buffer$4.from(le.subarray(we+32,we+64)))];le=le.subarray(ge);let xe=32+ge;const me=[];for(const[we,Ee]of ye){le=await readBytes$1(fe,le,MIN_BINARY_SIZE),le=await readBytes$1(fe,le,2);const Ae=byteArrayToLong(le.subarray(0,2));le=le.subarray(2);const{sigLength:Se,pubLength:Le,sigName:He}=SIG_CONFIG[Ae];le=await readBytes$1(fe,le,Se);const Me=le.subarray(0,Se);le=le.subarray(Se),le=await readBytes$1(fe,le,Le);const Fe=le.subarray(0,Le);le=le.subarray(Le),le=await readBytes$1(fe,le,1);const Ue=le[0]===1;Ue&&(le=await readBytes$1(fe,le,33));const qe=Ue?le.subarray(1,33):Buffer$4.allocUnsafe(0);le=le.subarray(Ue?33:1),le=await readBytes$1(fe,le,1);const $e=le[0]===1;$e&&(le=await readBytes$1(fe,le,33));const Qe=$e?le.subarray(1,33):Buffer$4.allocUnsafe(0);le=le.subarray($e?33:1),le=await readBytes$1(fe,le,8);const ot=byteArrayToLong(le.subarray(0,8));le=le.subarray(8),le=await readBytes$1(fe,le,8);const nt=byteArrayToLong(le.subarray(0,8));le=le.subarray(8),le=await readBytes$1(fe,le,nt);const ct=le.subarray(0,nt),mt=ot!==0&&nt!==0?deserializeTags(Buffer$4.from(ct)):[];if(mt.length!==ot)throw new Error("Tags lengths don't match");le=le.subarray(nt);const gt=new streamBrowserify.Transform;gt._transform=function(ke,Oe,Pe){this.push(ke),Pe()};const Ht=deepHash([stringToBuffer("dataitem"),stringToBuffer("1"),stringToBuffer(Ae.toString()),Fe,qe,Qe,ct,gt]),jt=2+Se+Le+(Ue?33:1)+($e?33:1)+16+nt,ze=we-jt;if(le.byteLength>ze)gt.write(le.subarray(0,ze)),le=le.subarray(ze);else{let ke=le.byteLength;for(gt.write(le);ze>ke;){if(le=(await fe.next()).value,!le)throw new Error(`Not enough data bytes  expected: ${ze} received: ${ke}`);ke+=le.byteLength,ke>ze?gt.write(le.subarray(0,le.byteLength-(ke-ze))):gt.write(le)}le=le.subarray(le.byteLength-(ke-ze))}if(gt.end(),Ee!==base64url(cryptoBrowserifyExports.createHash("sha256").update(Me).digest()))throw new Error("ID doesn't match signature");if(!await indexToType[Ae].verify(Fe,await Ht,Me))throw new Error("Invalid signature");me.push({id:Ee,sigName:He,signature:base64url(Buffer$4.from(Me)),target:base64url(Buffer$4.from(qe)),anchor:base64url(Buffer$4.from(Qe)),owner:base64url(Buffer$4.from(Fe)),tags:mt,dataOffset:xe+jt,dataSize:ze}),xe+=jt+ze}return me}async function streamSigner(he,fe,le,pe){const ge=createData("",le,pe),ye=new streamBrowserify.PassThrough,xe=[stringToBuffer("dataitem"),stringToBuffer("1"),stringToBuffer(ge.signatureType.toString()),ge.rawOwner,ge.rawTarget,ge.rawAnchor,ge.rawTags,he],me=await deepHash(xe),we=Buffer$4.from(await le.sign(me));return ge.setSignature(we),ye.write(ge.getRaw()),fe.pipe(ye)}async function readBytes$1(he,fe,le){if(fe.byteLength>=le)return fe;const{done:pe,value:ge}=await he.next();if(pe&&!ge)throw new Error("Invalid buffer");return readBytes$1(he,Buffer$4.concat([Buffer$4.from(fe),Buffer$4.from(ge)]),le)}async function*getReader(he){for await(const fe of he)yield fe}const streamExportForTesting={readBytes:readBytes$1,getReader},stream=Object.freeze(Object.defineProperty({__proto__:null,default:processStream,processStream,streamExportForTesting,streamSigner},Symbol.toStringTag,{value:"Module"})),expObj={...arbundlesSrc,stream};globalThis.arbundles??(globalThis.arbundles=expObj);const arbundles=Object.freeze(Object.defineProperty({__proto__:null,Arweave,DataItem,bundleAndSignData,createData,deepHash,getCryptoDriver,stringToBuffer},Symbol.toStringTag,{value:"Module"}));var dist={},promisePool={},promisePoolExecutor={},validationError={};Object.defineProperty(validationError,"__esModule",{value:!0});validationError.ValidationError=void 0;class ValidationError extends Error{constructor(fe){super(fe),Error.captureStackTrace&&typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,this.constructor)}static createFrom(fe){return new this(fe)}}validationError.ValidationError=ValidationError;var promisePoolError={};Object.defineProperty(promisePoolError,"__esModule",{value:!0});promisePoolError.PromisePoolError=void 0;class PromisePoolError extends Error{constructor(fe,le){super(),this.raw=fe,this.item=le,this.name=this.constructor.name,this.message=this.messageFrom(fe),Error.captureStackTrace&&typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,this.constructor)}static createFrom(fe,le){return new this(fe,le)}messageFrom(fe){return fe instanceof Error||typeof fe=="object"?fe.message:typeof fe=="string"||typeof fe=="number"?fe.toString():""}}promisePoolError.PromisePoolError=PromisePoolError;var stopThePromisePoolError={};Object.defineProperty(stopThePromisePoolError,"__esModule",{value:!0});stopThePromisePoolError.StopThePromisePoolError=void 0;class StopThePromisePoolError extends Error{}stopThePromisePoolError.StopThePromisePoolError=StopThePromisePoolError;var hasRequiredPromisePoolExecutor;function requirePromisePoolExecutor(){if(hasRequiredPromisePoolExecutor)return promisePoolExecutor;hasRequiredPromisePoolExecutor=1,Object.defineProperty(promisePoolExecutor,"__esModule",{value:!0}),promisePoolExecutor.PromisePoolExecutor=void 0;const he=requirePromisePool(),fe=validationError,le=promisePoolError,pe=stopThePromisePoolError;class ge{constructor(){this.meta={tasks:[],items:[],errors:[],results:[],stopped:!1,concurrency:10,shouldResultsCorrespond:!1,processedItems:[],taskTimeout:0},this.handler=xe=>xe,this.errorHandler=void 0,this.onTaskStartedHandlers=[],this.onTaskFinishedHandlers=[]}useConcurrency(xe){if(!this.isValidConcurrency(xe))throw fe.ValidationError.createFrom(`"concurrency" must be a number, 1 or up. Received "${xe}" (${typeof xe})`);return this.meta.concurrency=xe,this}isValidConcurrency(xe){return typeof xe=="number"&&xe>=1}withTaskTimeout(xe){return this.meta.taskTimeout=xe,this}concurrency(){return this.meta.concurrency}useCorrespondingResults(xe){return this.meta.shouldResultsCorrespond=xe,this}shouldUseCorrespondingResults(){return this.meta.shouldResultsCorrespond}taskTimeout(){return this.meta.taskTimeout}for(xe){return this.meta.items=xe,this}items(){return this.meta.items}itemsCount(){const xe=this.items();return Array.isArray(xe)?xe.length:NaN}tasks(){return this.meta.tasks}activeTaskCount(){return this.activeTasksCount()}activeTasksCount(){return this.tasks().length}processedItems(){return this.meta.processedItems}processedCount(){return this.processedItems().length}processedPercentage(){return this.processedCount()/this.itemsCount()*100}results(){return this.meta.results}errors(){return this.meta.errors}withHandler(xe){return this.handler=xe,this}hasErrorHandler(){return!!this.errorHandler}handleError(xe){return this.errorHandler=xe,this}onTaskStarted(xe){return this.onTaskStartedHandlers=xe,this}onTaskFinished(xe){return this.onTaskFinishedHandlers=xe,this}hasReachedConcurrencyLimit(){return this.activeTasksCount()>=this.concurrency()}stop(){throw this.markAsStopped(),new pe.StopThePromisePoolError}markAsStopped(){return this.meta.stopped=!0,this}isStopped(){return this.meta.stopped}async start(){return await this.validateInputs().prepareResultsArray().process()}validateInputs(){if(typeof this.handler!="function")throw fe.ValidationError.createFrom("The first parameter for the .process(fn) method must be a function");const xe=this.taskTimeout();if(!(xe==null||typeof xe=="number"&&xe>=0))throw fe.ValidationError.createFrom(`"timeout" must be undefined or a number. A number must be 0 or up. Received "${String(xe)}" (${typeof xe})`);if(!this.areItemsValid())throw fe.ValidationError.createFrom(`"items" must be an array, an iterable or an async iterable. Received "${typeof this.items()}"`);if(this.errorHandler&&typeof this.errorHandler!="function")throw fe.ValidationError.createFrom(`The error handler must be a function. Received "${typeof this.errorHandler}"`);return this.onTaskStartedHandlers.forEach(me=>{if(me&&typeof me!="function")throw fe.ValidationError.createFrom(`The onTaskStarted handler must be a function. Received "${typeof me}"`)}),this.onTaskFinishedHandlers.forEach(me=>{if(me&&typeof me!="function")throw fe.ValidationError.createFrom(`The error handler must be a function. Received "${typeof me}"`)}),this}areItemsValid(){const xe=this.items();return!!(Array.isArray(xe)||typeof xe[Symbol.iterator]=="function"||typeof xe[Symbol.asyncIterator]=="function")}prepareResultsArray(){const xe=this.items();return Array.isArray(xe)?this.shouldUseCorrespondingResults()?(this.meta.results=Array(xe.length).fill(he.PromisePool.notRun),this):this:this}async process(){let xe=0;for await(const me of this.items()){if(this.isStopped())break;this.shouldUseCorrespondingResults()&&(this.results()[xe]=he.PromisePool.notRun),this.startProcessing(me,xe),xe+=1,await this.waitForProcessingSlot()}return await this.drained()}async waitForProcessingSlot(){for(;this.hasReachedConcurrencyLimit();)await this.waitForActiveTaskToFinish()}async waitForActiveTaskToFinish(){await Promise.race(this.tasks())}startProcessing(xe,me){const we=this.createTaskFor(xe,me).then(Ee=>{this.save(Ee,me).removeActive(we)}).catch(async Ee=>{await this.handleErrorFor(Ee,xe,me),this.removeActive(we)}).finally(()=>{this.processedItems().push(xe),this.runOnTaskFinishedHandlers(xe)});this.tasks().push(we),this.runOnTaskStartedHandlers(xe)}async createTaskFor(xe,me){if(this.taskTimeout()===void 0)return this.handler(xe,me,this);const[we,Ee]=this.createTaskTimeout(xe);return Promise.race([this.handler(xe,me,this),we()]).finally(Ee)}createTaskTimeout(xe){let me;return[async()=>new Promise((Ae,Se)=>{me=setTimeout(()=>{Se(new le.PromisePoolError(`Task in promise pool timed out after ${this.taskTimeout()}ms`,xe))},this.taskTimeout())}),()=>clearTimeout(me)]}save(xe,me){return this.shouldUseCorrespondingResults()?this.results()[me]=xe:this.results().push(xe),this}removeActive(xe){return this.tasks().splice(this.tasks().indexOf(xe),1),this}async handleErrorFor(xe,me,we){if(this.shouldUseCorrespondingResults()&&(this.results()[we]=he.PromisePool.failed),!this.isStoppingThePoolError(xe)){if(this.isValidationError(xe))throw this.markAsStopped(),xe;this.hasErrorHandler()?await this.runErrorHandlerFor(xe,me):this.saveErrorFor(xe,me)}}isStoppingThePoolError(xe){return xe instanceof pe.StopThePromisePoolError}isValidationError(xe){return xe instanceof fe.ValidationError}async runErrorHandlerFor(xe,me){var we;try{await((we=this.errorHandler)==null?void 0:we.call(this,xe,me,this))}catch(Ee){this.rethrowIfNotStoppingThePool(Ee)}}runOnTaskStartedHandlers(xe){this.onTaskStartedHandlers.forEach(me=>{me(xe,this)})}runOnTaskFinishedHandlers(xe){this.onTaskFinishedHandlers.forEach(me=>{me(xe,this)})}rethrowIfNotStoppingThePool(xe){if(!this.isStoppingThePoolError(xe))throw xe}saveErrorFor(xe,me){this.errors().push(le.PromisePoolError.createFrom(xe,me))}async drained(){return await this.drainActiveTasks(),{errors:this.errors(),results:this.results()}}async drainActiveTasks(){await Promise.all(this.tasks())}}return promisePoolExecutor.PromisePoolExecutor=ge,promisePoolExecutor}var hasRequiredPromisePool;function requirePromisePool(){if(hasRequiredPromisePool)return promisePool;hasRequiredPromisePool=1,Object.defineProperty(promisePool,"__esModule",{value:!0}),promisePool.PromisePool=void 0;const he=requirePromisePoolExecutor();class fe{constructor(pe){this.timeout=void 0,this.concurrency=10,this.items=pe??[],this.errorHandler=void 0,this.onTaskStartedHandlers=[],this.onTaskFinishedHandlers=[],this.shouldResultsCorrespond=!1}withConcurrency(pe){return this.concurrency=pe,this}static withConcurrency(pe){return new this().withConcurrency(pe)}withTaskTimeout(pe){return this.timeout=pe,this}static withTaskTimeout(pe){return new this().withTaskTimeout(pe)}for(pe){const ge=new fe(pe).withConcurrency(this.concurrency);return typeof this.errorHandler=="function"&&ge.handleError(this.errorHandler),typeof this.timeout=="number"?ge.withTaskTimeout(this.timeout):ge}static for(pe){return new this().for(pe)}handleError(pe){return this.errorHandler=pe,this}onTaskStarted(pe){return this.onTaskStartedHandlers.push(pe),this}onTaskFinished(pe){return this.onTaskFinishedHandlers.push(pe),this}useCorrespondingResults(){return this.shouldResultsCorrespond=!0,this}async process(pe){return new he.PromisePoolExecutor().useConcurrency(this.concurrency).useCorrespondingResults(this.shouldResultsCorrespond).withTaskTimeout(this.timeout).withHandler(pe).handleError(this.errorHandler).onTaskStarted(this.onTaskStartedHandlers).onTaskFinished(this.onTaskFinishedHandlers).for(this.items).start()}}return promisePool.PromisePool=fe,fe.notRun=Symbol("notRun"),fe.failed=Symbol("failed"),promisePool}var contracts={};Object.defineProperty(contracts,"__esModule",{value:!0});var returnValue={};Object.defineProperty(returnValue,"__esModule",{value:!0});(function(he){var fe=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(ge,ye,xe,me){me===void 0&&(me=xe);var we=Object.getOwnPropertyDescriptor(ye,xe);(!we||("get"in we?!ye.__esModule:we.writable||we.configurable))&&(we={enumerable:!0,get:function(){return ye[xe]}}),Object.defineProperty(ge,me,we)}:function(ge,ye,xe,me){me===void 0&&(me=xe),ge[me]=ye[xe]}),le=commonjsGlobal&&commonjsGlobal.__exportStar||function(ge,ye){for(var xe in ge)xe!=="default"&&!Object.prototype.hasOwnProperty.call(ye,xe)&&fe(ye,ge,xe)};Object.defineProperty(he,"__esModule",{value:!0});const pe=requirePromisePool();he.default=pe.PromisePool,le(contracts,he),le(requirePromisePool(),he),le(promisePoolError,he),le(returnValue,he),le(stopThePromisePoolError,he),le(validationError,he)})(dist);var UploadHeaders;(function(he){he.PAID_BY="x-irys-paid-by"})(UploadHeaders||(UploadHeaders={}));const NOT_READABLE=Symbol("not readable"),READABLE=Symbol("readable"),ENDED=Symbol("ended"),ERRORED=Symbol("errored"),STATES={notReadable:NOT_READABLE,readable:READABLE,ended:ENDED,errored:ERRORED};class StreamToAsyncIterator{constructor(fe,{size:le}={}){je(this,"_stream");je(this,"_error");je(this,"_state",STATES.notReadable);je(this,"_size");je(this,"_rejections",new Set);this._stream=fe,this._size=le;const pe=["_handleStreamEnd","_handleStreamError"];for(const ge of pe)Object.defineProperty(this,ge,{configurable:!0,writable:!0,value:this[ge].bind(this)});fe.once("error",this._handleStreamError),fe.once("end",this._handleStreamEnd),fe.on("readable",()=>{this._state=STATES.readable})}get closed(){return this._state===STATES.ended}[Symbol.asyncIterator](){return this}async next(){switch(this._state){case STATES.notReadable:{let fe,le;try{fe=this._untilReadable(),le=this._untilEnd(),await Promise.race([fe.promise,le.promise])}finally{fe!=null&&fe.close(),le!=null&&le.close()}return this.next()}case STATES.ended:return this.close(),{done:!0,value:void 0};case STATES.errored:throw this.close(),this._error;case STATES.readable:{const fe=this._size?this._stream.read(this._size):this._stream.read();return fe!==null?{done:!1,value:fe}:(this._state=STATES.notReadable,await new Promise(le=>setTimeout(pe=>pe(!0),0,le)),this.next())}}}_untilReadable(){let fe;const le=new Promise((ge,ye)=>{fe=()=>{this._state=STATES.readable,this._rejections.delete(ye),ge()},this._state,STATES.readable,this._stream.once("readable",fe),this._rejections.add(ye)});return{close:()=>{fe!=null&&this._stream.removeListener("readable",fe)},promise:le}}_untilEnd(){let fe;const le=new Promise((ge,ye)=>{fe=()=>{this._state=STATES.ended,this._rejections.delete(ye),ge()},this._stream.once("end",fe),this._rejections.add(ye)});return{close:()=>{fe!=null&&this._stream.removeListener("end",fe)},promise:le}}return(){return this._state=STATES.ended,this.next()}throw(fe){return this._error=fe,this._state=STATES.errored,this.next()}close(fe){this._stream.removeListener("end",this._handleStreamEnd),this._stream.removeListener("error",this._handleStreamError),this._state=STATES.ended,this._stream.destroy(fe)}_handleStreamError(fe){this._error=fe,this._state=STATES.errored;for(const le of this._rejections)le(fe)}_handleStreamEnd(){this._state=STATES.ended}get state(){return this._state}}class ChunkingUploader extends eventsExports.EventEmitter{constructor(le,pe){super({captureRejections:!0});je(this,"tokenConfig");je(this,"api");je(this,"uploadID");je(this,"token");je(this,"chunkSize");je(this,"batchSize");je(this,"paused",!1);je(this,"isResume",!1);je(this,"uploadOptions");je(this,"arbundles");this.tokenConfig=le,this.arbundles=this.tokenConfig.irys.arbundles,this.api=pe,this.token=this.tokenConfig.name,this.chunkSize=25e6,this.batchSize=5,this.uploadID=""}setResumeData(le){return le&&(this.uploadID=le,this.isResume=!0),this}getResumeData(){return this.uploadID}setChunkSize(le){if(le<1)throw new Error("Invalid chunk size (must be >=1)");return this.chunkSize=le,this}setBatchSize(le){if(le<1)throw new Error("Invalid batch size (must be >=1)");return this.batchSize=le,this}pause(){this.emit("pause"),this.paused=!0}resume(){this.paused=!1,this.emit("resume")}async uploadTransaction(le,pe){return this.uploadOptions=pe,this.arbundles.DataItem.isDataItem(le)?this.runUpload(le.getRaw()):this.runUpload(le)}async uploadData(le,pe){return this.uploadOptions=pe==null?void 0:pe.upload,this.runUpload(le,{...pe})}async runUpload(le,pe){var ke,Oe,Pe;let ge=this.uploadID;const ye=pe===void 0,xe={"x-chunking-version":"2"};let me;if(!ge)me=await this.api.get(`/chunks/${this.token}/-1/-1`,{headers:xe}),utils$3.checkAndThrow(me,"Getting upload token"),this.uploadID=ge=me.data.id;else{if(me=await this.api.get(`/chunks/${this.token}/${ge}/-1`,{headers:xe}),me.status===404)throw new Error("Upload ID not found - your upload has probably expired.");if(utils$3.checkAndThrow(me,"Getting upload info"),this.chunkSize!=+me.data.size)throw new Error(`Chunk size not equal to that of a previous upload (${+me.data.size}).`)}const{max:we,min:Ee}=me.data;if(this.chunkSize<+Ee||this.chunkSize>+we)throw new Error(`Chunk size out of allowed range: ${Ee} - ${we}`);let Ae=0;const Se=(Re,Ye,Xe)=>new Promise(Je=>{retry$1(async Ie=>{await this.api.post(`/chunks/${this.token}/${ge}/${Ye}`,Re,{headers:{"Content-Type":"application/octet-stream",...xe},maxBodyLength:1/0,maxContentLength:1/0}).then(De=>{var We;if((De==null?void 0:De.status)>=300){const it={res:De,id:Xe,offset:Ye,size:Re.length};if(this.emit("chunkError",it),(De==null?void 0:De.status)===402){const Ze=(We=ve==null?void 0:ve.headers)==null?void 0:We["retry-after"],Ce="402 error: "+ve.data+(Ze?` - retry after ${Ze}s`:"");Ie(new Error(Ce))}throw it}this.emit("chunkUpload",{id:Xe,offset:Ye,size:Re.length,totalUploaded:Ae+=Re.length}),Je({o:Ye,d:De})})})}),Le=me.data.chunks??[],He=new streamBrowserify.PassThrough;let Me=Buffer$4.alloc(0),Fe=!1,Ue=!0;He.on("end",()=>Fe=!0),He.on("error",Re=>{throw new Error(`Error processing readable: ${Re}`)});const qe=async Re=>{for(;!Fe;){if(Me.length>=Re)return Ye=Buffer$4.from(Me.slice(0,Re)),Me=Me.slice(Re),Ye;var Ye=He.read(Re);if(Ye===null){await new Promise(Xe=>setTimeout(Je=>Je(!0),0,Xe));continue}if(Ye.length===Re)return Ye;Me=Buffer$4.concat([Me,Ye])}for(;Me.length>=Re;)return Ye=Buffer$4.from(Me.slice(0,Re)),Me=Me.slice(Re),Ye;return Ue=!1,Me};let $e,Qe;if(!ye){$e=this.arbundles.createData("",this.tokenConfig.getSigner(),{...pe,anchor:(pe==null?void 0:pe.anchor)??crypto$4.randomBytes(32).toString("base64").slice(0,32)});const Re=$e.getRaw();Qe=Re.length,He.write(Re),Ae-=Re.length}if(Buffer$4.isBuffer(le))He.write(le),He.end();else if("pipe"in le)le.pipe(He);else throw new Error("Input data is not a buffer or a compatible stream (no .pipe method)");let ot=0;const nt=new Set;let ct=0,mt,gt,Ht;if(!ye){gt=new streamBrowserify.PassThrough;const Re=$e.getRaw().length;if(this.chunkSize<Qe)throw new Error(`Configured chunk size is too small for transaction header! (${this.chunkSize} < ${Qe})`);mt=await qe(this.chunkSize),ct++,ot+=mt.length,gt.write(mt.slice(Re));const Ye=[this.arbundles.stringToBuffer("dataitem"),this.arbundles.stringToBuffer("1"),this.arbundles.stringToBuffer($e.signatureType.toString()),$e.rawOwner,$e.rawTarget,$e.rawAnchor,$e.rawTags,new StreamToAsyncIterator(gt)];Ht=this.arbundles.deepHash(Ye)}let jt=Le.pop();for(;Ue;){if(this.paused&&await new Promise(Xe=>this.on("resume",()=>Xe(void 0))),jt&&+jt[0]-ot<=this.chunkSize){const Je=jt[1],Ie=await qe(Je);ye||gt.write(Ie),ot+=Je,jt=Le.pop(),ct++,Ae+=Je;continue}const Re=await qe(this.chunkSize);for(ye||gt.write(Re);nt.size>=this.batchSize;){const[Xe]=await Promise.race(nt);nt.delete(Xe)}const Ye=(async()=>await Se(Re,ot,++ct))().then(Xe=>[Ye,Xe]);nt.add(Ye),ot+=Re.length}if(gt&&gt.end(),await Promise.all(nt),!ye){const Re=await Ht,Ye=Buffer$4.from(await this.tokenConfig.getSigner().sign(Re));mt.set(Ye,2),await Se(mt,0,0)}const ze={"Content-Type":"application/octet-stream",...xe};(ke=pe==null?void 0:pe.upload)!=null&&ke.paidBy&&(ze[UploadHeaders.PAID_BY]=pe.upload.paidBy);const ve=await this.api.post(`/chunks/${this.token}/${ge}/-1`,null,{headers:ze,timeout:((Oe=this.api.config)==null?void 0:Oe.timeout)??4e4*10});if(ve.status===402){const Re=(Pe=ve==null?void 0:ve.headers)==null?void 0:Pe["retry-after"],Ye="402 error: "+ve.data+(Re?` - retry after ${Re}s`:"");throw new Error(Ye)}if(utils$3.checkAndThrow(ve,"Finalising upload",[201]),ve.status===201)throw new Error(ve.data);return ve.data.verify=utils$3.verifyReceipt.bind({},this.arbundles,ve.data.data),this.emit("done",ve),ve}get completionPromise(){return new Promise(le=>this.on("done",le))}}const CHUNKING_THRESHOLD=5e7;class Uploader{constructor(fe,le,pe,ge,ye){je(this,"api");je(this,"token");je(this,"tokenConfig");je(this,"utils");je(this,"contentTypeOverride");je(this,"forceUseChunking");je(this,"arbundles");je(this,"irysTransaction");this.api=fe,this.token=pe,this.tokenConfig=ge,this.arbundles=this.tokenConfig.irys.arbundles,this.utils=le,this.irysTransaction=ye}async uploadTransaction(fe,le){var ye;let pe;const ge=this.arbundles.DataItem.isDataItem(fe);if(this.forceUseChunking||ge&&fe.getRaw().length>=CHUNKING_THRESHOLD||!ge)pe=await this.chunkedUploader.uploadTransaction(ge?fe.getRaw():fe,le);else{const{url:xe,timeout:me,headers:we}=this.api.getConfig(),Ee={"Content-Type":"application/octet-stream",...we};if(le!=null&&le.paidBy&&(Ee[UploadHeaders.PAID_BY]=le.paidBy),pe=await this.api.post(new URL(`/tx/${this.token}`,xe).toString(),fe.getRaw(),{headers:Ee,timeout:me,maxBodyLength:1/0}),pe.status===201)throw new Error(pe.data)}switch(pe.status){case 402:const xe=(ye=pe==null?void 0:pe.headers)==null?void 0:ye["retry-after"],me="402 error: "+pe.data+(xe?` - retry after ${xe}s`:"");throw new Error(me);default:if(pe.status>=400)throw new Error(`whilst uploading Irys transaction: ${pe.status} ${httpErrData(pe)}`)}return pe.data.verify=async()=>this.utils.verifyReceipt(pe.data),pe}async uploadData(fe,le){if(typeof fe=="string"&&(fe=Buffer$4.from(fe)),Buffer$4.isBuffer(fe)&&fe.length<=CHUNKING_THRESHOLD){const pe=this.arbundles.createData(fe,this.tokenConfig.getSigner(),{...le,anchor:(le==null?void 0:le.anchor)??cryptoBrowserifyExports.randomBytes(32).toString("base64").slice(0,32)});return await pe.sign(this.tokenConfig.getSigner()),(await this.uploadTransaction(pe,{...le==null?void 0:le.upload})).data}return(await this.chunkedUploader.uploadData(fe,le)).data}async concurrentUploader(fe,le){const pe=[],ge=le!=null&&le.logFunction?le==null?void 0:le.logFunction:async me=>{},ye=(le==null?void 0:le.concurrency)??5,xe=await dist.PromisePool.for(fe).withConcurrency(ye>=1?ye:5).handleError(async(me,we,Ee)=>{if(pe.push(me),me.message.includes("402 error"))throw Ee.stop(),me}).process(async(me,we)=>{await retry$1(async Ee=>{try{const Ae=await this.processItem(me,le==null?void 0:le.itemOptions);return we%ye==0&&await ge(`Processed ${we} Items`),le!=null&&le.resultProcessor?await le.resultProcessor({item:me,res:Ae,i:we}):{item:me,res:Ae,i:we}}catch(Ae){throw Ae!=null&&Ae.message.includes("402 error")&&Ee(Ae),Ae}},{retries:3,minTimeout:1e3,maxTimeout:1e4})});return{errors:pe,results:xe.results}}async processItem(fe,le){return this.arbundles.DataItem.isDataItem(fe)?this.uploadTransaction(fe,{...le==null?void 0:le.upload}):this.uploadData(fe,le)}async generateManifest(fe){const{items:le,indexFile:pe}=fe,ge={manifest:"arweave/paths",version:"0.1.0",paths:{}};if(pe){if(!le.has(pe))throw new Error(`Unable to access item: ${pe}`);ge.index={path:pe}}for(const[ye,xe]of le.entries())ge.paths[ye]={id:xe};return ge}get chunkedUploader(){return new ChunkingUploader(this.tokenConfig,this.api)}set useChunking(fe){typeof fe=="boolean"&&(this.forceUseChunking=fe)}set contentType(fe){this.contentTypeOverride=fe}async uploadBundle(fe,le){const pe=(le==null?void 0:le.throwawayKey)??await this.arbundles.getCryptoDriver().generateJWK(),ge=new ArweaveSigner(pe),ye=fe.map(Ae=>this.arbundles.DataItem.isDataItem(Ae)?Ae:this.arbundles.createData(Ae,ge)),xe=await this.arbundles.bundleAndSignData(ye,ge),me=this.arbundles.createData(xe.getRaw(),this.tokenConfig.getSigner(),{tags:[{name:"Bundle-Format",value:"binary"},{name:"Bundle-Version",value:"2.0.0"}]});await me.sign(this.tokenConfig.getSigner());const we=await this.uploadTransaction(me,le),Ee=base64url(Buffer$4.from(await this.arbundles.getCryptoDriver().hash(base64url.toBuffer(base64url(ge.publicKey)))));return{...we,txs:ye,throwawayKey:pe,throwawayKeyAddress:Ee}}}class WebUploader extends Uploader{constructor(le){super(le.api,le.utils,le.token,le.tokenConfig,le.IrysTransaction);je(this,"irys");this.irys=le}async uploadFile(le,pe){const ye=(pe!=null&&pe.tags?pe.tags.some(({name:xe})=>xe.toLowerCase()==="content-type"):!1)?pe==null?void 0:pe.tags:[...(pe==null?void 0:pe.tags)??[],{name:"Content-Type",value:le.type}];return this.uploadData(Buffer$4.from(await le.arrayBuffer()),{tags:ye,...pe})}async uploadFolder(le,pe){const ge=[],ye=new Map,xe=(pe==null?void 0:pe.throwawayKey)??await this.irys.arbundles.getCryptoDriver().generateJWK(),me=new ArweaveSigner(xe);for(const Se of le){const Le=Se.name??Se.webkitRelativePath,Me=(Se.tags?Se.tags.some(({name:Ue})=>Ue.toLowerCase()==="content-type"):!1)?Se.tags:[...Se.tags??[],{name:"Content-Type",value:Se.type}],Fe=this.irys.arbundles.createData(Buffer$4.from(await Se.arrayBuffer()),me,{tags:Me});await Fe.sign(me),ge.push(Fe),ye.set(Le,Fe.id)}const we=await this.generateManifest({items:ye,indexFile:pe==null?void 0:pe.indexFileRelPath}),Ee=this.irys.arbundles.createData(JSON.stringify(we),pe!=null&&pe.separateManifestTx?this.irys.tokenConfig.getSigner():me,{tags:[{name:"Type",value:"manifest"},{name:"Content-Type",value:"application/x.arweave-manifest+json"},...(pe==null?void 0:pe.manifestTags)??[]]});(pe==null?void 0:pe.separateManifestTx)===!0?(await Ee.sign(this.irys.tokenConfig.getSigner()),await this.uploadTransaction(Ee,{...pe})):(await Ee.sign(me),ge.push(Ee));const Ae=await this.uploadBundle(ge,{...pe});return{...Ae.data,manifestId:Ee.id,manifest:we,throwawayKey:Ae.throwawayKey,throwawayKeyAddress:Ae.throwawayKeyAddress,txs:Ae.txs}}}class Approval{constructor(fe){je(this,"irys");this.irys=fe}async getApprovals({payingAddresses:fe,tokens:le=[this.irys.token],approvedAddresses:pe=[this.irys.address]}){return this.queryApproval.payingAddresses(fe).tokens(le).approvedAddresses(pe)}async getCreatedApprovals({payingAddresses:fe=[this.irys.address],tokens:le=[this.irys.token],approvedAddresses:pe}){return this.queryApproval.payingAddresses(fe).tokens(le).approvedAddresses(pe)}get queryApproval(){return this.irys.query().search("irys:paymentApprovals")}async getApproval({payingAddress:fe=this.irys.address,token:le=this.irys.token,approvedAddress:pe}){const ge=await this.irys.api.get("/account/approval",{params:{payingAddress:fe,token:le,approvedAddress:pe}});return ge.status===404?{amount:"0"}:(utils$3.checkAndThrow(ge),ge.data)}async getApprovedBalanceFrom(fe){if(!fe)throw new Error("Paying address is required");return await this.getApproval({payingAddress:fe,approvedAddress:this.irys.address,token:this.irys.token})}async createApproval({approvedAddress:fe,amount:le,expiresInSeconds:pe}){const ge=[{name:UploadApprovalTags.APPROVE_PAYMENT,value:fe},{name:UploadApprovalMetaTags.AMOUNT,value:le.toString()}];return pe&&ge.push({name:UploadApprovalMetaTags.EXPIRE_SECONDS,value:pe.toString()}),await this.irys.upload("",{tags:ge})}async revokeApproval({approvedAddress:fe}){const le=[{name:UploadApprovalTags.DELETE_APPROVAL,value:fe}];return await this.irys.upload("",{tags:le})}}var UploadApprovalTags;(function(he){he.APPROVE_PAYMENT="x-irys-approve-payment",he.DELETE_APPROVAL="x-irys-delete-payment-approval"})(UploadApprovalTags||(UploadApprovalTags={}));var UploadApprovalMetaTags;(function(he){he.AMOUNT="x-amount",he.EXPIRE_SECONDS="x-expire-seconds"})(UploadApprovalMetaTags||(UploadApprovalMetaTags={}));class BaseWebIrys extends Irys{constructor({url:le,network:pe,wallet:ge,config:ye,getTokenConfig:xe}){var me;super({url:le,network:pe,arbundles});je(this,"tokenConfig");je(this,"uploader");je(this,"uploadFolder");je(this,"uploadFile");if(this.debug=(ye==null?void 0:ye.debug)??!1,this.api=new Api$1({url:this.url,timeout:(ye==null?void 0:ye.timeout)??1e5,headers:ye==null?void 0:ye.headers}),this.tokenConfig=xe(this),this.url.host.includes("devnet.irys.xyz")&&!(ye!=null&&ye.providerUrl||ge!=null&&ge.rpcUrl||(me=this==null?void 0:this.tokenConfig)!=null&&me.inheritsRPC))throw new Error(`Using ${this.url.host} requires a dev/testnet RPC to be configured! see https://docs.irys.xyz/developer-docs/using-devnet`);this.token=this.tokenConfig.name,this.utils=new utils$3(this.api,this.token,this.tokenConfig),this.uploader=new WebUploader(this),this.funder=new Fund(this.utils),this.uploader=new WebUploader(this),this.provenance=new Provenance(this),this.transactions=new Transaction$1(this),this.approval=new Approval(this),this.address="Please run `await Irys.ready()`",this.uploadFolder=this.uploader.uploadFolder.bind(this.uploader),this.uploadFile=this.uploader.uploadFile.bind(this.uploader)}}class BaseWebToken{constructor(fe){je(this,"base");je(this,"wallet");je(this,"_address");je(this,"providerUrl");je(this,"providerInstance");je(this,"ticker");je(this,"name");je(this,"irys");je(this,"config");je(this,"opts");je(this,"minConfirm",5);je(this,"isSlow",!1);je(this,"needsFee",!0);je(this,"inheritsRPC",!1);Object.assign(this,fe),this.config=fe}get address(){return this._address}async ready(){this._address=this.wallet?this.ownerToAddress(await this.getPublicKey()):void 0}async getId(fe){return base64url.encode(Buffer$4.from(await getCryptoDriver().hash(await fe.rawSignature())))}async price(){return getRedstonePrice(this.ticker)}}async function getRedstonePrice(he){const fe=await axios$1.get(`https://api.redstone.finance/prices?symbol=${he}&provider=redstone&limit=1`);return await utils$3.checkAndThrow(fe,"Getting price data"),fe.data[0].value}const ethereumSigner=InjectedTypedEthereumSigner;class EthereumConfig extends BaseWebToken{constructor(le){super(le);je(this,"signer");je(this,"w3signer");je(this,"inheritsRPC",!0);this.base=["wei",1e18]}async getTx(le){const ge=await this.providerInstance.getTransaction(le);if(!ge)throw new Error("Tx doesn't exist");if(!ge.to)throw new Error(`Unable to resolve transactions ${le} receiver`);return{from:ge.from,to:ge.to,blockHeight:ge.blockNumber?new BigNumber$1(ge.blockNumber):void 0,amount:new BigNumber$1(ge.value.toHexString(),16),pending:!ge.blockNumber,confirmed:ge.confirmations>=this.minConfirm}}ownerToAddress(le){return le.toString().toLowerCase()}async sign(le){return(await this.getSigner()).sign(le)}getSigner(){return this.signer||(this.signer=new InjectedTypedEthereumSigner(this.wallet)),this.signer}async verify(le,pe,ge){return ethereumSigner.verify(le,pe,ge)}async getCurrentHeight(){const pe=await this.providerInstance.send("eth_blockNumber",[]);return new BigNumber$1(pe,16)}async getFee(le,pe){const ge=this.providerInstance,ye={to:pe,from:this.address,value:"0x"+new BigNumber$1(le).toString(16)},xe=await ge.estimateGas(ye),me=await ge.getGasPrice();return new BigNumber$1(xe.mul(me).toString())}async sendTx(le){const ge=await this.w3signer.sendTransaction(le);return ge?ge.hash:void 0}async createTx(le,pe,ge){const ye=BigNumber.from(new BigNumber$1(le).toFixed()),xe=this.w3signer,me=await xe.estimateGas({to:pe,from:this.address,value:ye.toHexString()});let we=await xe.getGasPrice();return this.name==="matic"&&(we=BigNumber.from(new BigNumber$1(we.toString()).multipliedBy(10).decimalPlaces(0).toString())),{txId:void 0,tx:await xe.populateTransaction({to:pe,from:this.address,value:ye.toHexString(),gasPrice:we,gasLimit:me})}}async getPublicKey(){return this.address}async ready(){var le,pe;this.w3signer=await this.wallet.getSigner(),this._address=(await this.w3signer.getAddress()).toString().toLowerCase(),await this.getSigner().ready(),this.providerInstance=this.wallet,await((pe=(le=this.providerInstance)==null?void 0:le._ready)==null?void 0:pe.call(le))}}var lib$6={},constants$1={};(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.KeyType=void 0,function(fe){fe[fe.ED25519=0]="ED25519"}(he.KeyType||(he.KeyType={}))})(constants$1);var key_pair$1={},key_pair_base$1={};Object.defineProperty(key_pair_base$1,"__esModule",{value:!0});key_pair_base$1.KeyPairBase=void 0;let KeyPairBase$1=class{};key_pair_base$1.KeyPairBase=KeyPairBase$1;var key_pair_ed25519$1={},naclFast={exports:{}};(function(he){(function(fe){var le=function(Te){var Ne,Ke=new Float64Array(16);if(Te)for(Ne=0;Ne<Te.length;Ne++)Ke[Ne]=Te[Ne];return Ke},pe=function(){throw new Error("no PRNG")},ge=new Uint8Array(16),ye=new Uint8Array(32);ye[0]=9;var xe=le(),me=le([1]),we=le([56129,1]),Ee=le([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),Ae=le([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),Se=le([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),Le=le([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),He=le([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function Me(Te,Ne,Ke,Be){Te[Ne]=Ke>>24&255,Te[Ne+1]=Ke>>16&255,Te[Ne+2]=Ke>>8&255,Te[Ne+3]=Ke&255,Te[Ne+4]=Be>>24&255,Te[Ne+5]=Be>>16&255,Te[Ne+6]=Be>>8&255,Te[Ne+7]=Be&255}function Fe(Te,Ne,Ke,Be,Ge){var rt,st=0;for(rt=0;rt<Ge;rt++)st|=Te[Ne+rt]^Ke[Be+rt];return(1&st-1>>>8)-1}function Ue(Te,Ne,Ke,Be){return Fe(Te,Ne,Ke,Be,16)}function qe(Te,Ne,Ke,Be){return Fe(Te,Ne,Ke,Be,32)}function $e(Te,Ne,Ke,Be){for(var Ge=Be[0]&255|(Be[1]&255)<<8|(Be[2]&255)<<16|(Be[3]&255)<<24,rt=Ke[0]&255|(Ke[1]&255)<<8|(Ke[2]&255)<<16|(Ke[3]&255)<<24,st=Ke[4]&255|(Ke[5]&255)<<8|(Ke[6]&255)<<16|(Ke[7]&255)<<24,dt=Ke[8]&255|(Ke[9]&255)<<8|(Ke[10]&255)<<16|(Ke[11]&255)<<24,wt=Ke[12]&255|(Ke[13]&255)<<8|(Ke[14]&255)<<16|(Ke[15]&255)<<24,_t=Be[4]&255|(Be[5]&255)<<8|(Be[6]&255)<<16|(Be[7]&255)<<24,Wt=Ne[0]&255|(Ne[1]&255)<<8|(Ne[2]&255)<<16|(Ne[3]&255)<<24,yr=Ne[4]&255|(Ne[5]&255)<<8|(Ne[6]&255)<<16|(Ne[7]&255)<<24,Xt=Ne[8]&255|(Ne[9]&255)<<8|(Ne[10]&255)<<16|(Ne[11]&255)<<24,sr=Ne[12]&255|(Ne[13]&255)<<8|(Ne[14]&255)<<16|(Ne[15]&255)<<24,cr=Be[8]&255|(Be[9]&255)<<8|(Be[10]&255)<<16|(Be[11]&255)<<24,fr=Ke[16]&255|(Ke[17]&255)<<8|(Ke[18]&255)<<16|(Ke[19]&255)<<24,gr=Ke[20]&255|(Ke[21]&255)<<8|(Ke[22]&255)<<16|(Ke[23]&255)<<24,ur=Ke[24]&255|(Ke[25]&255)<<8|(Ke[26]&255)<<16|(Ke[27]&255)<<24,dr=Ke[28]&255|(Ke[29]&255)<<8|(Ke[30]&255)<<16|(Ke[31]&255)<<24,lr=Be[12]&255|(Be[13]&255)<<8|(Be[14]&255)<<16|(Be[15]&255)<<24,tr=Ge,ir=rt,Zt=st,rr=dt,nr=wt,$t=_t,ft=Wt,lt=yr,Tt=Xt,At=sr,Ct=cr,Jt=fr,hr=gr,mr=ur,wr=dr,br=lr,Ve,Ar=0;Ar<20;Ar+=2)Ve=tr+hr|0,nr^=Ve<<7|Ve>>>25,Ve=nr+tr|0,Tt^=Ve<<9|Ve>>>23,Ve=Tt+nr|0,hr^=Ve<<13|Ve>>>19,Ve=hr+Tt|0,tr^=Ve<<18|Ve>>>14,Ve=$t+ir|0,At^=Ve<<7|Ve>>>25,Ve=At+$t|0,mr^=Ve<<9|Ve>>>23,Ve=mr+At|0,ir^=Ve<<13|Ve>>>19,Ve=ir+mr|0,$t^=Ve<<18|Ve>>>14,Ve=Ct+ft|0,wr^=Ve<<7|Ve>>>25,Ve=wr+Ct|0,Zt^=Ve<<9|Ve>>>23,Ve=Zt+wr|0,ft^=Ve<<13|Ve>>>19,Ve=ft+Zt|0,Ct^=Ve<<18|Ve>>>14,Ve=br+Jt|0,rr^=Ve<<7|Ve>>>25,Ve=rr+br|0,lt^=Ve<<9|Ve>>>23,Ve=lt+rr|0,Jt^=Ve<<13|Ve>>>19,Ve=Jt+lt|0,br^=Ve<<18|Ve>>>14,Ve=tr+rr|0,ir^=Ve<<7|Ve>>>25,Ve=ir+tr|0,Zt^=Ve<<9|Ve>>>23,Ve=Zt+ir|0,rr^=Ve<<13|Ve>>>19,Ve=rr+Zt|0,tr^=Ve<<18|Ve>>>14,Ve=$t+nr|0,ft^=Ve<<7|Ve>>>25,Ve=ft+$t|0,lt^=Ve<<9|Ve>>>23,Ve=lt+ft|0,nr^=Ve<<13|Ve>>>19,Ve=nr+lt|0,$t^=Ve<<18|Ve>>>14,Ve=Ct+At|0,Jt^=Ve<<7|Ve>>>25,Ve=Jt+Ct|0,Tt^=Ve<<9|Ve>>>23,Ve=Tt+Jt|0,At^=Ve<<13|Ve>>>19,Ve=At+Tt|0,Ct^=Ve<<18|Ve>>>14,Ve=br+wr|0,hr^=Ve<<7|Ve>>>25,Ve=hr+br|0,mr^=Ve<<9|Ve>>>23,Ve=mr+hr|0,wr^=Ve<<13|Ve>>>19,Ve=wr+mr|0,br^=Ve<<18|Ve>>>14;tr=tr+Ge|0,ir=ir+rt|0,Zt=Zt+st|0,rr=rr+dt|0,nr=nr+wt|0,$t=$t+_t|0,ft=ft+Wt|0,lt=lt+yr|0,Tt=Tt+Xt|0,At=At+sr|0,Ct=Ct+cr|0,Jt=Jt+fr|0,hr=hr+gr|0,mr=mr+ur|0,wr=wr+dr|0,br=br+lr|0,Te[0]=tr>>>0&255,Te[1]=tr>>>8&255,Te[2]=tr>>>16&255,Te[3]=tr>>>24&255,Te[4]=ir>>>0&255,Te[5]=ir>>>8&255,Te[6]=ir>>>16&255,Te[7]=ir>>>24&255,Te[8]=Zt>>>0&255,Te[9]=Zt>>>8&255,Te[10]=Zt>>>16&255,Te[11]=Zt>>>24&255,Te[12]=rr>>>0&255,Te[13]=rr>>>8&255,Te[14]=rr>>>16&255,Te[15]=rr>>>24&255,Te[16]=nr>>>0&255,Te[17]=nr>>>8&255,Te[18]=nr>>>16&255,Te[19]=nr>>>24&255,Te[20]=$t>>>0&255,Te[21]=$t>>>8&255,Te[22]=$t>>>16&255,Te[23]=$t>>>24&255,Te[24]=ft>>>0&255,Te[25]=ft>>>8&255,Te[26]=ft>>>16&255,Te[27]=ft>>>24&255,Te[28]=lt>>>0&255,Te[29]=lt>>>8&255,Te[30]=lt>>>16&255,Te[31]=lt>>>24&255,Te[32]=Tt>>>0&255,Te[33]=Tt>>>8&255,Te[34]=Tt>>>16&255,Te[35]=Tt>>>24&255,Te[36]=At>>>0&255,Te[37]=At>>>8&255,Te[38]=At>>>16&255,Te[39]=At>>>24&255,Te[40]=Ct>>>0&255,Te[41]=Ct>>>8&255,Te[42]=Ct>>>16&255,Te[43]=Ct>>>24&255,Te[44]=Jt>>>0&255,Te[45]=Jt>>>8&255,Te[46]=Jt>>>16&255,Te[47]=Jt>>>24&255,Te[48]=hr>>>0&255,Te[49]=hr>>>8&255,Te[50]=hr>>>16&255,Te[51]=hr>>>24&255,Te[52]=mr>>>0&255,Te[53]=mr>>>8&255,Te[54]=mr>>>16&255,Te[55]=mr>>>24&255,Te[56]=wr>>>0&255,Te[57]=wr>>>8&255,Te[58]=wr>>>16&255,Te[59]=wr>>>24&255,Te[60]=br>>>0&255,Te[61]=br>>>8&255,Te[62]=br>>>16&255,Te[63]=br>>>24&255}function Qe(Te,Ne,Ke,Be){for(var Ge=Be[0]&255|(Be[1]&255)<<8|(Be[2]&255)<<16|(Be[3]&255)<<24,rt=Ke[0]&255|(Ke[1]&255)<<8|(Ke[2]&255)<<16|(Ke[3]&255)<<24,st=Ke[4]&255|(Ke[5]&255)<<8|(Ke[6]&255)<<16|(Ke[7]&255)<<24,dt=Ke[8]&255|(Ke[9]&255)<<8|(Ke[10]&255)<<16|(Ke[11]&255)<<24,wt=Ke[12]&255|(Ke[13]&255)<<8|(Ke[14]&255)<<16|(Ke[15]&255)<<24,_t=Be[4]&255|(Be[5]&255)<<8|(Be[6]&255)<<16|(Be[7]&255)<<24,Wt=Ne[0]&255|(Ne[1]&255)<<8|(Ne[2]&255)<<16|(Ne[3]&255)<<24,yr=Ne[4]&255|(Ne[5]&255)<<8|(Ne[6]&255)<<16|(Ne[7]&255)<<24,Xt=Ne[8]&255|(Ne[9]&255)<<8|(Ne[10]&255)<<16|(Ne[11]&255)<<24,sr=Ne[12]&255|(Ne[13]&255)<<8|(Ne[14]&255)<<16|(Ne[15]&255)<<24,cr=Be[8]&255|(Be[9]&255)<<8|(Be[10]&255)<<16|(Be[11]&255)<<24,fr=Ke[16]&255|(Ke[17]&255)<<8|(Ke[18]&255)<<16|(Ke[19]&255)<<24,gr=Ke[20]&255|(Ke[21]&255)<<8|(Ke[22]&255)<<16|(Ke[23]&255)<<24,ur=Ke[24]&255|(Ke[25]&255)<<8|(Ke[26]&255)<<16|(Ke[27]&255)<<24,dr=Ke[28]&255|(Ke[29]&255)<<8|(Ke[30]&255)<<16|(Ke[31]&255)<<24,lr=Be[12]&255|(Be[13]&255)<<8|(Be[14]&255)<<16|(Be[15]&255)<<24,tr=Ge,ir=rt,Zt=st,rr=dt,nr=wt,$t=_t,ft=Wt,lt=yr,Tt=Xt,At=sr,Ct=cr,Jt=fr,hr=gr,mr=ur,wr=dr,br=lr,Ve,Ar=0;Ar<20;Ar+=2)Ve=tr+hr|0,nr^=Ve<<7|Ve>>>25,Ve=nr+tr|0,Tt^=Ve<<9|Ve>>>23,Ve=Tt+nr|0,hr^=Ve<<13|Ve>>>19,Ve=hr+Tt|0,tr^=Ve<<18|Ve>>>14,Ve=$t+ir|0,At^=Ve<<7|Ve>>>25,Ve=At+$t|0,mr^=Ve<<9|Ve>>>23,Ve=mr+At|0,ir^=Ve<<13|Ve>>>19,Ve=ir+mr|0,$t^=Ve<<18|Ve>>>14,Ve=Ct+ft|0,wr^=Ve<<7|Ve>>>25,Ve=wr+Ct|0,Zt^=Ve<<9|Ve>>>23,Ve=Zt+wr|0,ft^=Ve<<13|Ve>>>19,Ve=ft+Zt|0,Ct^=Ve<<18|Ve>>>14,Ve=br+Jt|0,rr^=Ve<<7|Ve>>>25,Ve=rr+br|0,lt^=Ve<<9|Ve>>>23,Ve=lt+rr|0,Jt^=Ve<<13|Ve>>>19,Ve=Jt+lt|0,br^=Ve<<18|Ve>>>14,Ve=tr+rr|0,ir^=Ve<<7|Ve>>>25,Ve=ir+tr|0,Zt^=Ve<<9|Ve>>>23,Ve=Zt+ir|0,rr^=Ve<<13|Ve>>>19,Ve=rr+Zt|0,tr^=Ve<<18|Ve>>>14,Ve=$t+nr|0,ft^=Ve<<7|Ve>>>25,Ve=ft+$t|0,lt^=Ve<<9|Ve>>>23,Ve=lt+ft|0,nr^=Ve<<13|Ve>>>19,Ve=nr+lt|0,$t^=Ve<<18|Ve>>>14,Ve=Ct+At|0,Jt^=Ve<<7|Ve>>>25,Ve=Jt+Ct|0,Tt^=Ve<<9|Ve>>>23,Ve=Tt+Jt|0,At^=Ve<<13|Ve>>>19,Ve=At+Tt|0,Ct^=Ve<<18|Ve>>>14,Ve=br+wr|0,hr^=Ve<<7|Ve>>>25,Ve=hr+br|0,mr^=Ve<<9|Ve>>>23,Ve=mr+hr|0,wr^=Ve<<13|Ve>>>19,Ve=wr+mr|0,br^=Ve<<18|Ve>>>14;Te[0]=tr>>>0&255,Te[1]=tr>>>8&255,Te[2]=tr>>>16&255,Te[3]=tr>>>24&255,Te[4]=$t>>>0&255,Te[5]=$t>>>8&255,Te[6]=$t>>>16&255,Te[7]=$t>>>24&255,Te[8]=Ct>>>0&255,Te[9]=Ct>>>8&255,Te[10]=Ct>>>16&255,Te[11]=Ct>>>24&255,Te[12]=br>>>0&255,Te[13]=br>>>8&255,Te[14]=br>>>16&255,Te[15]=br>>>24&255,Te[16]=ft>>>0&255,Te[17]=ft>>>8&255,Te[18]=ft>>>16&255,Te[19]=ft>>>24&255,Te[20]=lt>>>0&255,Te[21]=lt>>>8&255,Te[22]=lt>>>16&255,Te[23]=lt>>>24&255,Te[24]=Tt>>>0&255,Te[25]=Tt>>>8&255,Te[26]=Tt>>>16&255,Te[27]=Tt>>>24&255,Te[28]=At>>>0&255,Te[29]=At>>>8&255,Te[30]=At>>>16&255,Te[31]=At>>>24&255}function ot(Te,Ne,Ke,Be){$e(Te,Ne,Ke,Be)}function nt(Te,Ne,Ke,Be){Qe(Te,Ne,Ke,Be)}var ct=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function mt(Te,Ne,Ke,Be,Ge,rt,st){var dt=new Uint8Array(16),wt=new Uint8Array(64),_t,Wt;for(Wt=0;Wt<16;Wt++)dt[Wt]=0;for(Wt=0;Wt<8;Wt++)dt[Wt]=rt[Wt];for(;Ge>=64;){for(ot(wt,dt,st,ct),Wt=0;Wt<64;Wt++)Te[Ne+Wt]=Ke[Be+Wt]^wt[Wt];for(_t=1,Wt=8;Wt<16;Wt++)_t=_t+(dt[Wt]&255)|0,dt[Wt]=_t&255,_t>>>=8;Ge-=64,Ne+=64,Be+=64}if(Ge>0)for(ot(wt,dt,st,ct),Wt=0;Wt<Ge;Wt++)Te[Ne+Wt]=Ke[Be+Wt]^wt[Wt];return 0}function gt(Te,Ne,Ke,Be,Ge){var rt=new Uint8Array(16),st=new Uint8Array(64),dt,wt;for(wt=0;wt<16;wt++)rt[wt]=0;for(wt=0;wt<8;wt++)rt[wt]=Be[wt];for(;Ke>=64;){for(ot(st,rt,Ge,ct),wt=0;wt<64;wt++)Te[Ne+wt]=st[wt];for(dt=1,wt=8;wt<16;wt++)dt=dt+(rt[wt]&255)|0,rt[wt]=dt&255,dt>>>=8;Ke-=64,Ne+=64}if(Ke>0)for(ot(st,rt,Ge,ct),wt=0;wt<Ke;wt++)Te[Ne+wt]=st[wt];return 0}function Ht(Te,Ne,Ke,Be,Ge){var rt=new Uint8Array(32);nt(rt,Be,Ge,ct);for(var st=new Uint8Array(8),dt=0;dt<8;dt++)st[dt]=Be[dt+16];return gt(Te,Ne,Ke,st,rt)}function jt(Te,Ne,Ke,Be,Ge,rt,st){var dt=new Uint8Array(32);nt(dt,rt,st,ct);for(var wt=new Uint8Array(8),_t=0;_t<8;_t++)wt[_t]=rt[_t+16];return mt(Te,Ne,Ke,Be,Ge,wt,dt)}var ze=function(Te){this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0;var Ne,Ke,Be,Ge,rt,st,dt,wt;Ne=Te[0]&255|(Te[1]&255)<<8,this.r[0]=Ne&8191,Ke=Te[2]&255|(Te[3]&255)<<8,this.r[1]=(Ne>>>13|Ke<<3)&8191,Be=Te[4]&255|(Te[5]&255)<<8,this.r[2]=(Ke>>>10|Be<<6)&7939,Ge=Te[6]&255|(Te[7]&255)<<8,this.r[3]=(Be>>>7|Ge<<9)&8191,rt=Te[8]&255|(Te[9]&255)<<8,this.r[4]=(Ge>>>4|rt<<12)&255,this.r[5]=rt>>>1&8190,st=Te[10]&255|(Te[11]&255)<<8,this.r[6]=(rt>>>14|st<<2)&8191,dt=Te[12]&255|(Te[13]&255)<<8,this.r[7]=(st>>>11|dt<<5)&8065,wt=Te[14]&255|(Te[15]&255)<<8,this.r[8]=(dt>>>8|wt<<8)&8191,this.r[9]=wt>>>5&127,this.pad[0]=Te[16]&255|(Te[17]&255)<<8,this.pad[1]=Te[18]&255|(Te[19]&255)<<8,this.pad[2]=Te[20]&255|(Te[21]&255)<<8,this.pad[3]=Te[22]&255|(Te[23]&255)<<8,this.pad[4]=Te[24]&255|(Te[25]&255)<<8,this.pad[5]=Te[26]&255|(Te[27]&255)<<8,this.pad[6]=Te[28]&255|(Te[29]&255)<<8,this.pad[7]=Te[30]&255|(Te[31]&255)<<8};ze.prototype.blocks=function(Te,Ne,Ke){for(var Be=this.fin?0:2048,Ge,rt,st,dt,wt,_t,Wt,yr,Xt,sr,cr,fr,gr,ur,dr,lr,tr,ir,Zt,rr=this.h[0],nr=this.h[1],$t=this.h[2],ft=this.h[3],lt=this.h[4],Tt=this.h[5],At=this.h[6],Ct=this.h[7],Jt=this.h[8],hr=this.h[9],mr=this.r[0],wr=this.r[1],br=this.r[2],Ve=this.r[3],Ar=this.r[4],Or=this.r[5],Gr=this.r[6],Er=this.r[7],Lr=this.r[8],Dr=this.r[9];Ke>=16;)Ge=Te[Ne+0]&255|(Te[Ne+1]&255)<<8,rr+=Ge&8191,rt=Te[Ne+2]&255|(Te[Ne+3]&255)<<8,nr+=(Ge>>>13|rt<<3)&8191,st=Te[Ne+4]&255|(Te[Ne+5]&255)<<8,$t+=(rt>>>10|st<<6)&8191,dt=Te[Ne+6]&255|(Te[Ne+7]&255)<<8,ft+=(st>>>7|dt<<9)&8191,wt=Te[Ne+8]&255|(Te[Ne+9]&255)<<8,lt+=(dt>>>4|wt<<12)&8191,Tt+=wt>>>1&8191,_t=Te[Ne+10]&255|(Te[Ne+11]&255)<<8,At+=(wt>>>14|_t<<2)&8191,Wt=Te[Ne+12]&255|(Te[Ne+13]&255)<<8,Ct+=(_t>>>11|Wt<<5)&8191,yr=Te[Ne+14]&255|(Te[Ne+15]&255)<<8,Jt+=(Wt>>>8|yr<<8)&8191,hr+=yr>>>5|Be,Xt=0,sr=Xt,sr+=rr*mr,sr+=nr*(5*Dr),sr+=$t*(5*Lr),sr+=ft*(5*Er),sr+=lt*(5*Gr),Xt=sr>>>13,sr&=8191,sr+=Tt*(5*Or),sr+=At*(5*Ar),sr+=Ct*(5*Ve),sr+=Jt*(5*br),sr+=hr*(5*wr),Xt+=sr>>>13,sr&=8191,cr=Xt,cr+=rr*wr,cr+=nr*mr,cr+=$t*(5*Dr),cr+=ft*(5*Lr),cr+=lt*(5*Er),Xt=cr>>>13,cr&=8191,cr+=Tt*(5*Gr),cr+=At*(5*Or),cr+=Ct*(5*Ar),cr+=Jt*(5*Ve),cr+=hr*(5*br),Xt+=cr>>>13,cr&=8191,fr=Xt,fr+=rr*br,fr+=nr*wr,fr+=$t*mr,fr+=ft*(5*Dr),fr+=lt*(5*Lr),Xt=fr>>>13,fr&=8191,fr+=Tt*(5*Er),fr+=At*(5*Gr),fr+=Ct*(5*Or),fr+=Jt*(5*Ar),fr+=hr*(5*Ve),Xt+=fr>>>13,fr&=8191,gr=Xt,gr+=rr*Ve,gr+=nr*br,gr+=$t*wr,gr+=ft*mr,gr+=lt*(5*Dr),Xt=gr>>>13,gr&=8191,gr+=Tt*(5*Lr),gr+=At*(5*Er),gr+=Ct*(5*Gr),gr+=Jt*(5*Or),gr+=hr*(5*Ar),Xt+=gr>>>13,gr&=8191,ur=Xt,ur+=rr*Ar,ur+=nr*Ve,ur+=$t*br,ur+=ft*wr,ur+=lt*mr,Xt=ur>>>13,ur&=8191,ur+=Tt*(5*Dr),ur+=At*(5*Lr),ur+=Ct*(5*Er),ur+=Jt*(5*Gr),ur+=hr*(5*Or),Xt+=ur>>>13,ur&=8191,dr=Xt,dr+=rr*Or,dr+=nr*Ar,dr+=$t*Ve,dr+=ft*br,dr+=lt*wr,Xt=dr>>>13,dr&=8191,dr+=Tt*mr,dr+=At*(5*Dr),dr+=Ct*(5*Lr),dr+=Jt*(5*Er),dr+=hr*(5*Gr),Xt+=dr>>>13,dr&=8191,lr=Xt,lr+=rr*Gr,lr+=nr*Or,lr+=$t*Ar,lr+=ft*Ve,lr+=lt*br,Xt=lr>>>13,lr&=8191,lr+=Tt*wr,lr+=At*mr,lr+=Ct*(5*Dr),lr+=Jt*(5*Lr),lr+=hr*(5*Er),Xt+=lr>>>13,lr&=8191,tr=Xt,tr+=rr*Er,tr+=nr*Gr,tr+=$t*Or,tr+=ft*Ar,tr+=lt*Ve,Xt=tr>>>13,tr&=8191,tr+=Tt*br,tr+=At*wr,tr+=Ct*mr,tr+=Jt*(5*Dr),tr+=hr*(5*Lr),Xt+=tr>>>13,tr&=8191,ir=Xt,ir+=rr*Lr,ir+=nr*Er,ir+=$t*Gr,ir+=ft*Or,ir+=lt*Ar,Xt=ir>>>13,ir&=8191,ir+=Tt*Ve,ir+=At*br,ir+=Ct*wr,ir+=Jt*mr,ir+=hr*(5*Dr),Xt+=ir>>>13,ir&=8191,Zt=Xt,Zt+=rr*Dr,Zt+=nr*Lr,Zt+=$t*Er,Zt+=ft*Gr,Zt+=lt*Or,Xt=Zt>>>13,Zt&=8191,Zt+=Tt*Ar,Zt+=At*Ve,Zt+=Ct*br,Zt+=Jt*wr,Zt+=hr*mr,Xt+=Zt>>>13,Zt&=8191,Xt=(Xt<<2)+Xt|0,Xt=Xt+sr|0,sr=Xt&8191,Xt=Xt>>>13,cr+=Xt,rr=sr,nr=cr,$t=fr,ft=gr,lt=ur,Tt=dr,At=lr,Ct=tr,Jt=ir,hr=Zt,Ne+=16,Ke-=16;this.h[0]=rr,this.h[1]=nr,this.h[2]=$t,this.h[3]=ft,this.h[4]=lt,this.h[5]=Tt,this.h[6]=At,this.h[7]=Ct,this.h[8]=Jt,this.h[9]=hr},ze.prototype.finish=function(Te,Ne){var Ke=new Uint16Array(10),Be,Ge,rt,st;if(this.leftover){for(st=this.leftover,this.buffer[st++]=1;st<16;st++)this.buffer[st]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(Be=this.h[1]>>>13,this.h[1]&=8191,st=2;st<10;st++)this.h[st]+=Be,Be=this.h[st]>>>13,this.h[st]&=8191;for(this.h[0]+=Be*5,Be=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=Be,Be=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=Be,Ke[0]=this.h[0]+5,Be=Ke[0]>>>13,Ke[0]&=8191,st=1;st<10;st++)Ke[st]=this.h[st]+Be,Be=Ke[st]>>>13,Ke[st]&=8191;for(Ke[9]-=8192,Ge=(Be^1)-1,st=0;st<10;st++)Ke[st]&=Ge;for(Ge=~Ge,st=0;st<10;st++)this.h[st]=this.h[st]&Ge|Ke[st];for(this.h[0]=(this.h[0]|this.h[1]<<13)&65535,this.h[1]=(this.h[1]>>>3|this.h[2]<<10)&65535,this.h[2]=(this.h[2]>>>6|this.h[3]<<7)&65535,this.h[3]=(this.h[3]>>>9|this.h[4]<<4)&65535,this.h[4]=(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14)&65535,this.h[5]=(this.h[6]>>>2|this.h[7]<<11)&65535,this.h[6]=(this.h[7]>>>5|this.h[8]<<8)&65535,this.h[7]=(this.h[8]>>>8|this.h[9]<<5)&65535,rt=this.h[0]+this.pad[0],this.h[0]=rt&65535,st=1;st<8;st++)rt=(this.h[st]+this.pad[st]|0)+(rt>>>16)|0,this.h[st]=rt&65535;Te[Ne+0]=this.h[0]>>>0&255,Te[Ne+1]=this.h[0]>>>8&255,Te[Ne+2]=this.h[1]>>>0&255,Te[Ne+3]=this.h[1]>>>8&255,Te[Ne+4]=this.h[2]>>>0&255,Te[Ne+5]=this.h[2]>>>8&255,Te[Ne+6]=this.h[3]>>>0&255,Te[Ne+7]=this.h[3]>>>8&255,Te[Ne+8]=this.h[4]>>>0&255,Te[Ne+9]=this.h[4]>>>8&255,Te[Ne+10]=this.h[5]>>>0&255,Te[Ne+11]=this.h[5]>>>8&255,Te[Ne+12]=this.h[6]>>>0&255,Te[Ne+13]=this.h[6]>>>8&255,Te[Ne+14]=this.h[7]>>>0&255,Te[Ne+15]=this.h[7]>>>8&255},ze.prototype.update=function(Te,Ne,Ke){var Be,Ge;if(this.leftover){for(Ge=16-this.leftover,Ge>Ke&&(Ge=Ke),Be=0;Be<Ge;Be++)this.buffer[this.leftover+Be]=Te[Ne+Be];if(Ke-=Ge,Ne+=Ge,this.leftover+=Ge,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(Ke>=16&&(Ge=Ke-Ke%16,this.blocks(Te,Ne,Ge),Ne+=Ge,Ke-=Ge),Ke){for(Be=0;Be<Ke;Be++)this.buffer[this.leftover+Be]=Te[Ne+Be];this.leftover+=Ke}};function ve(Te,Ne,Ke,Be,Ge,rt){var st=new ze(rt);return st.update(Ke,Be,Ge),st.finish(Te,Ne),0}function ke(Te,Ne,Ke,Be,Ge,rt){var st=new Uint8Array(16);return ve(st,0,Ke,Be,Ge,rt),Ue(Te,Ne,st,0)}function Oe(Te,Ne,Ke,Be,Ge){var rt;if(Ke<32)return-1;for(jt(Te,0,Ne,0,Ke,Be,Ge),ve(Te,16,Te,32,Ke-32,Te),rt=0;rt<16;rt++)Te[rt]=0;return 0}function Pe(Te,Ne,Ke,Be,Ge){var rt,st=new Uint8Array(32);if(Ke<32||(Ht(st,0,32,Be,Ge),ke(Ne,16,Ne,32,Ke-32,st)!==0))return-1;for(jt(Te,0,Ne,0,Ke,Be,Ge),rt=0;rt<32;rt++)Te[rt]=0;return 0}function Re(Te,Ne){var Ke;for(Ke=0;Ke<16;Ke++)Te[Ke]=Ne[Ke]|0}function Ye(Te){var Ne,Ke,Be=1;for(Ne=0;Ne<16;Ne++)Ke=Te[Ne]+Be+65535,Be=Math.floor(Ke/65536),Te[Ne]=Ke-Be*65536;Te[0]+=Be-1+37*(Be-1)}function Xe(Te,Ne,Ke){for(var Be,Ge=~(Ke-1),rt=0;rt<16;rt++)Be=Ge&(Te[rt]^Ne[rt]),Te[rt]^=Be,Ne[rt]^=Be}function Je(Te,Ne){var Ke,Be,Ge,rt=le(),st=le();for(Ke=0;Ke<16;Ke++)st[Ke]=Ne[Ke];for(Ye(st),Ye(st),Ye(st),Be=0;Be<2;Be++){for(rt[0]=st[0]-65517,Ke=1;Ke<15;Ke++)rt[Ke]=st[Ke]-65535-(rt[Ke-1]>>16&1),rt[Ke-1]&=65535;rt[15]=st[15]-32767-(rt[14]>>16&1),Ge=rt[15]>>16&1,rt[14]&=65535,Xe(st,rt,1-Ge)}for(Ke=0;Ke<16;Ke++)Te[2*Ke]=st[Ke]&255,Te[2*Ke+1]=st[Ke]>>8}function Ie(Te,Ne){var Ke=new Uint8Array(32),Be=new Uint8Array(32);return Je(Ke,Te),Je(Be,Ne),qe(Ke,0,Be,0)}function De(Te){var Ne=new Uint8Array(32);return Je(Ne,Te),Ne[0]&1}function We(Te,Ne){var Ke;for(Ke=0;Ke<16;Ke++)Te[Ke]=Ne[2*Ke]+(Ne[2*Ke+1]<<8);Te[15]&=32767}function it(Te,Ne,Ke){for(var Be=0;Be<16;Be++)Te[Be]=Ne[Be]+Ke[Be]}function Ze(Te,Ne,Ke){for(var Be=0;Be<16;Be++)Te[Be]=Ne[Be]-Ke[Be]}function Ce(Te,Ne,Ke){var Be,Ge,rt=0,st=0,dt=0,wt=0,_t=0,Wt=0,yr=0,Xt=0,sr=0,cr=0,fr=0,gr=0,ur=0,dr=0,lr=0,tr=0,ir=0,Zt=0,rr=0,nr=0,$t=0,ft=0,lt=0,Tt=0,At=0,Ct=0,Jt=0,hr=0,mr=0,wr=0,br=0,Ve=Ke[0],Ar=Ke[1],Or=Ke[2],Gr=Ke[3],Er=Ke[4],Lr=Ke[5],Dr=Ke[6],ln=Ke[7],$r=Ke[8],_r=Ke[9],en=Ke[10],an=Ke[11],dn=Ke[12],xn=Ke[13],wn=Ke[14],En=Ke[15];Be=Ne[0],rt+=Be*Ve,st+=Be*Ar,dt+=Be*Or,wt+=Be*Gr,_t+=Be*Er,Wt+=Be*Lr,yr+=Be*Dr,Xt+=Be*ln,sr+=Be*$r,cr+=Be*_r,fr+=Be*en,gr+=Be*an,ur+=Be*dn,dr+=Be*xn,lr+=Be*wn,tr+=Be*En,Be=Ne[1],st+=Be*Ve,dt+=Be*Ar,wt+=Be*Or,_t+=Be*Gr,Wt+=Be*Er,yr+=Be*Lr,Xt+=Be*Dr,sr+=Be*ln,cr+=Be*$r,fr+=Be*_r,gr+=Be*en,ur+=Be*an,dr+=Be*dn,lr+=Be*xn,tr+=Be*wn,ir+=Be*En,Be=Ne[2],dt+=Be*Ve,wt+=Be*Ar,_t+=Be*Or,Wt+=Be*Gr,yr+=Be*Er,Xt+=Be*Lr,sr+=Be*Dr,cr+=Be*ln,fr+=Be*$r,gr+=Be*_r,ur+=Be*en,dr+=Be*an,lr+=Be*dn,tr+=Be*xn,ir+=Be*wn,Zt+=Be*En,Be=Ne[3],wt+=Be*Ve,_t+=Be*Ar,Wt+=Be*Or,yr+=Be*Gr,Xt+=Be*Er,sr+=Be*Lr,cr+=Be*Dr,fr+=Be*ln,gr+=Be*$r,ur+=Be*_r,dr+=Be*en,lr+=Be*an,tr+=Be*dn,ir+=Be*xn,Zt+=Be*wn,rr+=Be*En,Be=Ne[4],_t+=Be*Ve,Wt+=Be*Ar,yr+=Be*Or,Xt+=Be*Gr,sr+=Be*Er,cr+=Be*Lr,fr+=Be*Dr,gr+=Be*ln,ur+=Be*$r,dr+=Be*_r,lr+=Be*en,tr+=Be*an,ir+=Be*dn,Zt+=Be*xn,rr+=Be*wn,nr+=Be*En,Be=Ne[5],Wt+=Be*Ve,yr+=Be*Ar,Xt+=Be*Or,sr+=Be*Gr,cr+=Be*Er,fr+=Be*Lr,gr+=Be*Dr,ur+=Be*ln,dr+=Be*$r,lr+=Be*_r,tr+=Be*en,ir+=Be*an,Zt+=Be*dn,rr+=Be*xn,nr+=Be*wn,$t+=Be*En,Be=Ne[6],yr+=Be*Ve,Xt+=Be*Ar,sr+=Be*Or,cr+=Be*Gr,fr+=Be*Er,gr+=Be*Lr,ur+=Be*Dr,dr+=Be*ln,lr+=Be*$r,tr+=Be*_r,ir+=Be*en,Zt+=Be*an,rr+=Be*dn,nr+=Be*xn,$t+=Be*wn,ft+=Be*En,Be=Ne[7],Xt+=Be*Ve,sr+=Be*Ar,cr+=Be*Or,fr+=Be*Gr,gr+=Be*Er,ur+=Be*Lr,dr+=Be*Dr,lr+=Be*ln,tr+=Be*$r,ir+=Be*_r,Zt+=Be*en,rr+=Be*an,nr+=Be*dn,$t+=Be*xn,ft+=Be*wn,lt+=Be*En,Be=Ne[8],sr+=Be*Ve,cr+=Be*Ar,fr+=Be*Or,gr+=Be*Gr,ur+=Be*Er,dr+=Be*Lr,lr+=Be*Dr,tr+=Be*ln,ir+=Be*$r,Zt+=Be*_r,rr+=Be*en,nr+=Be*an,$t+=Be*dn,ft+=Be*xn,lt+=Be*wn,Tt+=Be*En,Be=Ne[9],cr+=Be*Ve,fr+=Be*Ar,gr+=Be*Or,ur+=Be*Gr,dr+=Be*Er,lr+=Be*Lr,tr+=Be*Dr,ir+=Be*ln,Zt+=Be*$r,rr+=Be*_r,nr+=Be*en,$t+=Be*an,ft+=Be*dn,lt+=Be*xn,Tt+=Be*wn,At+=Be*En,Be=Ne[10],fr+=Be*Ve,gr+=Be*Ar,ur+=Be*Or,dr+=Be*Gr,lr+=Be*Er,tr+=Be*Lr,ir+=Be*Dr,Zt+=Be*ln,rr+=Be*$r,nr+=Be*_r,$t+=Be*en,ft+=Be*an,lt+=Be*dn,Tt+=Be*xn,At+=Be*wn,Ct+=Be*En,Be=Ne[11],gr+=Be*Ve,ur+=Be*Ar,dr+=Be*Or,lr+=Be*Gr,tr+=Be*Er,ir+=Be*Lr,Zt+=Be*Dr,rr+=Be*ln,nr+=Be*$r,$t+=Be*_r,ft+=Be*en,lt+=Be*an,Tt+=Be*dn,At+=Be*xn,Ct+=Be*wn,Jt+=Be*En,Be=Ne[12],ur+=Be*Ve,dr+=Be*Ar,lr+=Be*Or,tr+=Be*Gr,ir+=Be*Er,Zt+=Be*Lr,rr+=Be*Dr,nr+=Be*ln,$t+=Be*$r,ft+=Be*_r,lt+=Be*en,Tt+=Be*an,At+=Be*dn,Ct+=Be*xn,Jt+=Be*wn,hr+=Be*En,Be=Ne[13],dr+=Be*Ve,lr+=Be*Ar,tr+=Be*Or,ir+=Be*Gr,Zt+=Be*Er,rr+=Be*Lr,nr+=Be*Dr,$t+=Be*ln,ft+=Be*$r,lt+=Be*_r,Tt+=Be*en,At+=Be*an,Ct+=Be*dn,Jt+=Be*xn,hr+=Be*wn,mr+=Be*En,Be=Ne[14],lr+=Be*Ve,tr+=Be*Ar,ir+=Be*Or,Zt+=Be*Gr,rr+=Be*Er,nr+=Be*Lr,$t+=Be*Dr,ft+=Be*ln,lt+=Be*$r,Tt+=Be*_r,At+=Be*en,Ct+=Be*an,Jt+=Be*dn,hr+=Be*xn,mr+=Be*wn,wr+=Be*En,Be=Ne[15],tr+=Be*Ve,ir+=Be*Ar,Zt+=Be*Or,rr+=Be*Gr,nr+=Be*Er,$t+=Be*Lr,ft+=Be*Dr,lt+=Be*ln,Tt+=Be*$r,At+=Be*_r,Ct+=Be*en,Jt+=Be*an,hr+=Be*dn,mr+=Be*xn,wr+=Be*wn,br+=Be*En,rt+=38*ir,st+=38*Zt,dt+=38*rr,wt+=38*nr,_t+=38*$t,Wt+=38*ft,yr+=38*lt,Xt+=38*Tt,sr+=38*At,cr+=38*Ct,fr+=38*Jt,gr+=38*hr,ur+=38*mr,dr+=38*wr,lr+=38*br,Ge=1,Be=rt+Ge+65535,Ge=Math.floor(Be/65536),rt=Be-Ge*65536,Be=st+Ge+65535,Ge=Math.floor(Be/65536),st=Be-Ge*65536,Be=dt+Ge+65535,Ge=Math.floor(Be/65536),dt=Be-Ge*65536,Be=wt+Ge+65535,Ge=Math.floor(Be/65536),wt=Be-Ge*65536,Be=_t+Ge+65535,Ge=Math.floor(Be/65536),_t=Be-Ge*65536,Be=Wt+Ge+65535,Ge=Math.floor(Be/65536),Wt=Be-Ge*65536,Be=yr+Ge+65535,Ge=Math.floor(Be/65536),yr=Be-Ge*65536,Be=Xt+Ge+65535,Ge=Math.floor(Be/65536),Xt=Be-Ge*65536,Be=sr+Ge+65535,Ge=Math.floor(Be/65536),sr=Be-Ge*65536,Be=cr+Ge+65535,Ge=Math.floor(Be/65536),cr=Be-Ge*65536,Be=fr+Ge+65535,Ge=Math.floor(Be/65536),fr=Be-Ge*65536,Be=gr+Ge+65535,Ge=Math.floor(Be/65536),gr=Be-Ge*65536,Be=ur+Ge+65535,Ge=Math.floor(Be/65536),ur=Be-Ge*65536,Be=dr+Ge+65535,Ge=Math.floor(Be/65536),dr=Be-Ge*65536,Be=lr+Ge+65535,Ge=Math.floor(Be/65536),lr=Be-Ge*65536,Be=tr+Ge+65535,Ge=Math.floor(Be/65536),tr=Be-Ge*65536,rt+=Ge-1+37*(Ge-1),Ge=1,Be=rt+Ge+65535,Ge=Math.floor(Be/65536),rt=Be-Ge*65536,Be=st+Ge+65535,Ge=Math.floor(Be/65536),st=Be-Ge*65536,Be=dt+Ge+65535,Ge=Math.floor(Be/65536),dt=Be-Ge*65536,Be=wt+Ge+65535,Ge=Math.floor(Be/65536),wt=Be-Ge*65536,Be=_t+Ge+65535,Ge=Math.floor(Be/65536),_t=Be-Ge*65536,Be=Wt+Ge+65535,Ge=Math.floor(Be/65536),Wt=Be-Ge*65536,Be=yr+Ge+65535,Ge=Math.floor(Be/65536),yr=Be-Ge*65536,Be=Xt+Ge+65535,Ge=Math.floor(Be/65536),Xt=Be-Ge*65536,Be=sr+Ge+65535,Ge=Math.floor(Be/65536),sr=Be-Ge*65536,Be=cr+Ge+65535,Ge=Math.floor(Be/65536),cr=Be-Ge*65536,Be=fr+Ge+65535,Ge=Math.floor(Be/65536),fr=Be-Ge*65536,Be=gr+Ge+65535,Ge=Math.floor(Be/65536),gr=Be-Ge*65536,Be=ur+Ge+65535,Ge=Math.floor(Be/65536),ur=Be-Ge*65536,Be=dr+Ge+65535,Ge=Math.floor(Be/65536),dr=Be-Ge*65536,Be=lr+Ge+65535,Ge=Math.floor(Be/65536),lr=Be-Ge*65536,Be=tr+Ge+65535,Ge=Math.floor(Be/65536),tr=Be-Ge*65536,rt+=Ge-1+37*(Ge-1),Te[0]=rt,Te[1]=st,Te[2]=dt,Te[3]=wt,Te[4]=_t,Te[5]=Wt,Te[6]=yr,Te[7]=Xt,Te[8]=sr,Te[9]=cr,Te[10]=fr,Te[11]=gr,Te[12]=ur,Te[13]=dr,Te[14]=lr,Te[15]=tr}function _e(Te,Ne){Ce(Te,Ne,Ne)}function at(Te,Ne){var Ke=le(),Be;for(Be=0;Be<16;Be++)Ke[Be]=Ne[Be];for(Be=253;Be>=0;Be--)_e(Ke,Ke),Be!==2&&Be!==4&&Ce(Ke,Ke,Ne);for(Be=0;Be<16;Be++)Te[Be]=Ke[Be]}function yt(Te,Ne){var Ke=le(),Be;for(Be=0;Be<16;Be++)Ke[Be]=Ne[Be];for(Be=250;Be>=0;Be--)_e(Ke,Ke),Be!==1&&Ce(Ke,Ke,Ne);for(Be=0;Be<16;Be++)Te[Be]=Ke[Be]}function pt(Te,Ne,Ke){var Be=new Uint8Array(32),Ge=new Float64Array(80),rt,st,dt=le(),wt=le(),_t=le(),Wt=le(),yr=le(),Xt=le();for(st=0;st<31;st++)Be[st]=Ne[st];for(Be[31]=Ne[31]&127|64,Be[0]&=248,We(Ge,Ke),st=0;st<16;st++)wt[st]=Ge[st],Wt[st]=dt[st]=_t[st]=0;for(dt[0]=Wt[0]=1,st=254;st>=0;--st)rt=Be[st>>>3]>>>(st&7)&1,Xe(dt,wt,rt),Xe(_t,Wt,rt),it(yr,dt,_t),Ze(dt,dt,_t),it(_t,wt,Wt),Ze(wt,wt,Wt),_e(Wt,yr),_e(Xt,dt),Ce(dt,_t,dt),Ce(_t,wt,yr),it(yr,dt,_t),Ze(dt,dt,_t),_e(wt,dt),Ze(_t,Wt,Xt),Ce(dt,_t,we),it(dt,dt,Wt),Ce(_t,_t,dt),Ce(dt,Wt,Xt),Ce(Wt,wt,Ge),_e(wt,yr),Xe(dt,wt,rt),Xe(_t,Wt,rt);for(st=0;st<16;st++)Ge[st+16]=dt[st],Ge[st+32]=_t[st],Ge[st+48]=wt[st],Ge[st+64]=Wt[st];var sr=Ge.subarray(32),cr=Ge.subarray(16);return at(sr,sr),Ce(cr,cr,sr),Je(Te,cr),0}function kt(Te,Ne){return pt(Te,Ne,ye)}function er(Te,Ne){return pe(Ne,32),kt(Te,Ne)}function zt(Te,Ne,Ke){var Be=new Uint8Array(32);return pt(Be,Ke,Ne),nt(Te,ge,Be,ct)}var or=Oe,ar=Pe;function pr(Te,Ne,Ke,Be,Ge,rt){var st=new Uint8Array(32);return zt(st,Ge,rt),or(Te,Ne,Ke,Be,st)}function Mr(Te,Ne,Ke,Be,Ge,rt){var st=new Uint8Array(32);return zt(st,Ge,rt),ar(Te,Ne,Ke,Be,st)}var Ln=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function jr(Te,Ne,Ke,Be){for(var Ge=new Int32Array(16),rt=new Int32Array(16),st,dt,wt,_t,Wt,yr,Xt,sr,cr,fr,gr,ur,dr,lr,tr,ir,Zt,rr,nr,$t,ft,lt,Tt,At,Ct,Jt,hr=Te[0],mr=Te[1],wr=Te[2],br=Te[3],Ve=Te[4],Ar=Te[5],Or=Te[6],Gr=Te[7],Er=Ne[0],Lr=Ne[1],Dr=Ne[2],ln=Ne[3],$r=Ne[4],_r=Ne[5],en=Ne[6],an=Ne[7],dn=0;Be>=128;){for(nr=0;nr<16;nr++)$t=8*nr+dn,Ge[nr]=Ke[$t+0]<<24|Ke[$t+1]<<16|Ke[$t+2]<<8|Ke[$t+3],rt[nr]=Ke[$t+4]<<24|Ke[$t+5]<<16|Ke[$t+6]<<8|Ke[$t+7];for(nr=0;nr<80;nr++)if(st=hr,dt=mr,wt=wr,_t=br,Wt=Ve,yr=Ar,Xt=Or,sr=Gr,cr=Er,fr=Lr,gr=Dr,ur=ln,dr=$r,lr=_r,tr=en,ir=an,ft=Gr,lt=an,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=(Ve>>>14|$r<<18)^(Ve>>>18|$r<<14)^($r>>>9|Ve<<23),lt=($r>>>14|Ve<<18)^($r>>>18|Ve<<14)^(Ve>>>9|$r<<23),Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,ft=Ve&Ar^~Ve&Or,lt=$r&_r^~$r&en,Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,ft=Ln[nr*2],lt=Ln[nr*2+1],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,ft=Ge[nr%16],lt=rt[nr%16],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,Zt=Ct&65535|Jt<<16,rr=Tt&65535|At<<16,ft=Zt,lt=rr,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=(hr>>>28|Er<<4)^(Er>>>2|hr<<30)^(Er>>>7|hr<<25),lt=(Er>>>28|hr<<4)^(hr>>>2|Er<<30)^(hr>>>7|Er<<25),Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,ft=hr&mr^hr&wr^mr&wr,lt=Er&Lr^Er&Dr^Lr&Dr,Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,sr=Ct&65535|Jt<<16,ir=Tt&65535|At<<16,ft=_t,lt=ur,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=Zt,lt=rr,Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,_t=Ct&65535|Jt<<16,ur=Tt&65535|At<<16,mr=st,wr=dt,br=wt,Ve=_t,Ar=Wt,Or=yr,Gr=Xt,hr=sr,Lr=cr,Dr=fr,ln=gr,$r=ur,_r=dr,en=lr,an=tr,Er=ir,nr%16===15)for($t=0;$t<16;$t++)ft=Ge[$t],lt=rt[$t],Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=Ge[($t+9)%16],lt=rt[($t+9)%16],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,Zt=Ge[($t+1)%16],rr=rt[($t+1)%16],ft=(Zt>>>1|rr<<31)^(Zt>>>8|rr<<24)^Zt>>>7,lt=(rr>>>1|Zt<<31)^(rr>>>8|Zt<<24)^(rr>>>7|Zt<<25),Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,Zt=Ge[($t+14)%16],rr=rt[($t+14)%16],ft=(Zt>>>19|rr<<13)^(rr>>>29|Zt<<3)^Zt>>>6,lt=(rr>>>19|Zt<<13)^(Zt>>>29|rr<<3)^(rr>>>6|Zt<<26),Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,Ge[$t]=Ct&65535|Jt<<16,rt[$t]=Tt&65535|At<<16;ft=hr,lt=Er,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=Te[0],lt=Ne[0],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,Te[0]=hr=Ct&65535|Jt<<16,Ne[0]=Er=Tt&65535|At<<16,ft=mr,lt=Lr,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=Te[1],lt=Ne[1],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,Te[1]=mr=Ct&65535|Jt<<16,Ne[1]=Lr=Tt&65535|At<<16,ft=wr,lt=Dr,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=Te[2],lt=Ne[2],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,Te[2]=wr=Ct&65535|Jt<<16,Ne[2]=Dr=Tt&65535|At<<16,ft=br,lt=ln,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=Te[3],lt=Ne[3],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,Te[3]=br=Ct&65535|Jt<<16,Ne[3]=ln=Tt&65535|At<<16,ft=Ve,lt=$r,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=Te[4],lt=Ne[4],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,Te[4]=Ve=Ct&65535|Jt<<16,Ne[4]=$r=Tt&65535|At<<16,ft=Ar,lt=_r,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=Te[5],lt=Ne[5],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,Te[5]=Ar=Ct&65535|Jt<<16,Ne[5]=_r=Tt&65535|At<<16,ft=Or,lt=en,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=Te[6],lt=Ne[6],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,Te[6]=Or=Ct&65535|Jt<<16,Ne[6]=en=Tt&65535|At<<16,ft=Gr,lt=an,Tt=lt&65535,At=lt>>>16,Ct=ft&65535,Jt=ft>>>16,ft=Te[7],lt=Ne[7],Tt+=lt&65535,At+=lt>>>16,Ct+=ft&65535,Jt+=ft>>>16,At+=Tt>>>16,Ct+=At>>>16,Jt+=Ct>>>16,Te[7]=Gr=Ct&65535|Jt<<16,Ne[7]=an=Tt&65535|At<<16,dn+=128,Be-=128}return Be}function Br(Te,Ne,Ke){var Be=new Int32Array(8),Ge=new Int32Array(8),rt=new Uint8Array(256),st,dt=Ke;for(Be[0]=1779033703,Be[1]=3144134277,Be[2]=1013904242,Be[3]=2773480762,Be[4]=1359893119,Be[5]=2600822924,Be[6]=528734635,Be[7]=1541459225,Ge[0]=4089235720,Ge[1]=2227873595,Ge[2]=4271175723,Ge[3]=1595750129,Ge[4]=2917565137,Ge[5]=725511199,Ge[6]=4215389547,Ge[7]=327033209,jr(Be,Ge,Ne,Ke),Ke%=128,st=0;st<Ke;st++)rt[st]=Ne[dt-Ke+st];for(rt[Ke]=128,Ke=256-128*(Ke<112?1:0),rt[Ke-9]=0,Me(rt,Ke-8,dt/536870912|0,dt<<3),jr(Be,Ge,rt,Ke),st=0;st<8;st++)Me(Te,8*st,Be[st],Ge[st]);return 0}function Bn(Te,Ne){var Ke=le(),Be=le(),Ge=le(),rt=le(),st=le(),dt=le(),wt=le(),_t=le(),Wt=le();Ze(Ke,Te[1],Te[0]),Ze(Wt,Ne[1],Ne[0]),Ce(Ke,Ke,Wt),it(Be,Te[0],Te[1]),it(Wt,Ne[0],Ne[1]),Ce(Be,Be,Wt),Ce(Ge,Te[3],Ne[3]),Ce(Ge,Ge,Ae),Ce(rt,Te[2],Ne[2]),it(rt,rt,rt),Ze(st,Be,Ke),Ze(dt,rt,Ge),it(wt,rt,Ge),it(_t,Be,Ke),Ce(Te[0],st,dt),Ce(Te[1],_t,wt),Ce(Te[2],wt,dt),Ce(Te[3],st,_t)}function Vr(Te,Ne,Ke){var Be;for(Be=0;Be<4;Be++)Xe(Te[Be],Ne[Be],Ke)}function Jr(Te,Ne){var Ke=le(),Be=le(),Ge=le();at(Ge,Ne[2]),Ce(Ke,Ne[0],Ge),Ce(Be,Ne[1],Ge),Je(Te,Be),Te[31]^=De(Ke)<<7}function kn(Te,Ne,Ke){var Be,Ge;for(Re(Te[0],xe),Re(Te[1],me),Re(Te[2],me),Re(Te[3],xe),Ge=255;Ge>=0;--Ge)Be=Ke[Ge/8|0]>>(Ge&7)&1,Vr(Te,Ne,Be),Bn(Ne,Te),Bn(Te,Te),Vr(Te,Ne,Be)}function Fr(Te,Ne){var Ke=[le(),le(),le(),le()];Re(Ke[0],Se),Re(Ke[1],Le),Re(Ke[2],me),Ce(Ke[3],Se,Le),kn(Te,Ke,Ne)}function zr(Te,Ne,Ke){var Be=new Uint8Array(64),Ge=[le(),le(),le(),le()],rt;for(Ke||pe(Ne,32),Br(Be,Ne,32),Be[0]&=248,Be[31]&=127,Be[31]|=64,Fr(Ge,Be),Jr(Te,Ge),rt=0;rt<32;rt++)Ne[rt+32]=Te[rt];return 0}var Sn=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function Yr(Te,Ne){var Ke,Be,Ge,rt;for(Be=63;Be>=32;--Be){for(Ke=0,Ge=Be-32,rt=Be-12;Ge<rt;++Ge)Ne[Ge]+=Ke-16*Ne[Be]*Sn[Ge-(Be-32)],Ke=Math.floor((Ne[Ge]+128)/256),Ne[Ge]-=Ke*256;Ne[Ge]+=Ke,Ne[Be]=0}for(Ke=0,Ge=0;Ge<32;Ge++)Ne[Ge]+=Ke-(Ne[31]>>4)*Sn[Ge],Ke=Ne[Ge]>>8,Ne[Ge]&=255;for(Ge=0;Ge<32;Ge++)Ne[Ge]-=Ke*Sn[Ge];for(Be=0;Be<32;Be++)Ne[Be+1]+=Ne[Be]>>8,Te[Be]=Ne[Be]&255}function Hr(Te){var Ne=new Float64Array(64),Ke;for(Ke=0;Ke<64;Ke++)Ne[Ke]=Te[Ke];for(Ke=0;Ke<64;Ke++)Te[Ke]=0;Yr(Te,Ne)}function Un(Te,Ne,Ke,Be){var Ge=new Uint8Array(64),rt=new Uint8Array(64),st=new Uint8Array(64),dt,wt,_t=new Float64Array(64),Wt=[le(),le(),le(),le()];Br(Ge,Be,32),Ge[0]&=248,Ge[31]&=127,Ge[31]|=64;var yr=Ke+64;for(dt=0;dt<Ke;dt++)Te[64+dt]=Ne[dt];for(dt=0;dt<32;dt++)Te[32+dt]=Ge[32+dt];for(Br(st,Te.subarray(32),Ke+32),Hr(st),Fr(Wt,st),Jr(Te,Wt),dt=32;dt<64;dt++)Te[dt]=Be[dt];for(Br(rt,Te,Ke+64),Hr(rt),dt=0;dt<64;dt++)_t[dt]=0;for(dt=0;dt<32;dt++)_t[dt]=st[dt];for(dt=0;dt<32;dt++)for(wt=0;wt<32;wt++)_t[dt+wt]+=rt[dt]*Ge[wt];return Yr(Te.subarray(32),_t),yr}function Wr(Te,Ne){var Ke=le(),Be=le(),Ge=le(),rt=le(),st=le(),dt=le(),wt=le();return Re(Te[2],me),We(Te[1],Ne),_e(Ge,Te[1]),Ce(rt,Ge,Ee),Ze(Ge,Ge,Te[2]),it(rt,Te[2],rt),_e(st,rt),_e(dt,st),Ce(wt,dt,st),Ce(Ke,wt,Ge),Ce(Ke,Ke,rt),yt(Ke,Ke),Ce(Ke,Ke,Ge),Ce(Ke,Ke,rt),Ce(Ke,Ke,rt),Ce(Te[0],Ke,rt),_e(Be,Te[0]),Ce(Be,Be,rt),Ie(Be,Ge)&&Ce(Te[0],Te[0],He),_e(Be,Te[0]),Ce(Be,Be,rt),Ie(Be,Ge)?-1:(De(Te[0])===Ne[31]>>7&&Ze(Te[0],xe,Te[0]),Ce(Te[3],Te[0],Te[1]),0)}function Pr(Te,Ne,Ke,Be){var Ge,rt=new Uint8Array(32),st=new Uint8Array(64),dt=[le(),le(),le(),le()],wt=[le(),le(),le(),le()];if(Ke<64||Wr(wt,Be))return-1;for(Ge=0;Ge<Ke;Ge++)Te[Ge]=Ne[Ge];for(Ge=0;Ge<32;Ge++)Te[Ge+32]=Be[Ge];if(Br(st,Te,Ke),Hr(st),kn(dt,wt,st),Fr(wt,Ne.subarray(32)),Bn(dt,wt),Jr(rt,dt),Ke-=64,qe(Ne,0,rt,0)){for(Ge=0;Ge<Ke;Ge++)Te[Ge]=0;return-1}for(Ge=0;Ge<Ke;Ge++)Te[Ge]=Ne[Ge+64];return Ke}var In=32,Ur=24,Ir=32,hn=16,Cr=32,Tr=32,pn=32,kr=32,Rr=32,Tn=Ur,Xr=Ir,Zr=hn,un=64,vr=32,Sr=64,Cn=32,Nr=64;fe.lowlevel={crypto_core_hsalsa20:nt,crypto_stream_xor:jt,crypto_stream:Ht,crypto_stream_salsa20_xor:mt,crypto_stream_salsa20:gt,crypto_onetimeauth:ve,crypto_onetimeauth_verify:ke,crypto_verify_16:Ue,crypto_verify_32:qe,crypto_secretbox:Oe,crypto_secretbox_open:Pe,crypto_scalarmult:pt,crypto_scalarmult_base:kt,crypto_box_beforenm:zt,crypto_box_afternm:or,crypto_box:pr,crypto_box_open:Mr,crypto_box_keypair:er,crypto_hash:Br,crypto_sign:Un,crypto_sign_keypair:zr,crypto_sign_open:Pr,crypto_secretbox_KEYBYTES:In,crypto_secretbox_NONCEBYTES:Ur,crypto_secretbox_ZEROBYTES:Ir,crypto_secretbox_BOXZEROBYTES:hn,crypto_scalarmult_BYTES:Cr,crypto_scalarmult_SCALARBYTES:Tr,crypto_box_PUBLICKEYBYTES:pn,crypto_box_SECRETKEYBYTES:kr,crypto_box_BEFORENMBYTES:Rr,crypto_box_NONCEBYTES:Tn,crypto_box_ZEROBYTES:Xr,crypto_box_BOXZEROBYTES:Zr,crypto_sign_BYTES:un,crypto_sign_PUBLICKEYBYTES:vr,crypto_sign_SECRETKEYBYTES:Sr,crypto_sign_SEEDBYTES:Cn,crypto_hash_BYTES:Nr,gf:le,D:Ee,L:Sn,pack25519:Je,unpack25519:We,M:Ce,A:it,S:_e,Z:Ze,pow2523:yt,add:Bn,set25519:Re,modL:Yr,scalarmult:kn,scalarbase:Fr};function qr(Te,Ne){if(Te.length!==In)throw new Error("bad key size");if(Ne.length!==Ur)throw new Error("bad nonce size")}function Dn(Te,Ne){if(Te.length!==pn)throw new Error("bad public key size");if(Ne.length!==kr)throw new Error("bad secret key size")}function xr(){for(var Te=0;Te<arguments.length;Te++)if(!(arguments[Te]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function Qr(Te){for(var Ne=0;Ne<Te.length;Ne++)Te[Ne]=0}fe.randomBytes=function(Te){var Ne=new Uint8Array(Te);return pe(Ne,Te),Ne},fe.secretbox=function(Te,Ne,Ke){xr(Te,Ne,Ke),qr(Ke,Ne);for(var Be=new Uint8Array(Ir+Te.length),Ge=new Uint8Array(Be.length),rt=0;rt<Te.length;rt++)Be[rt+Ir]=Te[rt];return Oe(Ge,Be,Be.length,Ne,Ke),Ge.subarray(hn)},fe.secretbox.open=function(Te,Ne,Ke){xr(Te,Ne,Ke),qr(Ke,Ne);for(var Be=new Uint8Array(hn+Te.length),Ge=new Uint8Array(Be.length),rt=0;rt<Te.length;rt++)Be[rt+hn]=Te[rt];return Be.length<32||Pe(Ge,Be,Be.length,Ne,Ke)!==0?null:Ge.subarray(Ir)},fe.secretbox.keyLength=In,fe.secretbox.nonceLength=Ur,fe.secretbox.overheadLength=hn,fe.scalarMult=function(Te,Ne){if(xr(Te,Ne),Te.length!==Tr)throw new Error("bad n size");if(Ne.length!==Cr)throw new Error("bad p size");var Ke=new Uint8Array(Cr);return pt(Ke,Te,Ne),Ke},fe.scalarMult.base=function(Te){if(xr(Te),Te.length!==Tr)throw new Error("bad n size");var Ne=new Uint8Array(Cr);return kt(Ne,Te),Ne},fe.scalarMult.scalarLength=Tr,fe.scalarMult.groupElementLength=Cr,fe.box=function(Te,Ne,Ke,Be){var Ge=fe.box.before(Ke,Be);return fe.secretbox(Te,Ne,Ge)},fe.box.before=function(Te,Ne){xr(Te,Ne),Dn(Te,Ne);var Ke=new Uint8Array(Rr);return zt(Ke,Te,Ne),Ke},fe.box.after=fe.secretbox,fe.box.open=function(Te,Ne,Ke,Be){var Ge=fe.box.before(Ke,Be);return fe.secretbox.open(Te,Ne,Ge)},fe.box.open.after=fe.secretbox.open,fe.box.keyPair=function(){var Te=new Uint8Array(pn),Ne=new Uint8Array(kr);return er(Te,Ne),{publicKey:Te,secretKey:Ne}},fe.box.keyPair.fromSecretKey=function(Te){if(xr(Te),Te.length!==kr)throw new Error("bad secret key size");var Ne=new Uint8Array(pn);return kt(Ne,Te),{publicKey:Ne,secretKey:new Uint8Array(Te)}},fe.box.publicKeyLength=pn,fe.box.secretKeyLength=kr,fe.box.sharedKeyLength=Rr,fe.box.nonceLength=Tn,fe.box.overheadLength=fe.secretbox.overheadLength,fe.sign=function(Te,Ne){if(xr(Te,Ne),Ne.length!==Sr)throw new Error("bad secret key size");var Ke=new Uint8Array(un+Te.length);return Un(Ke,Te,Te.length,Ne),Ke},fe.sign.open=function(Te,Ne){if(xr(Te,Ne),Ne.length!==vr)throw new Error("bad public key size");var Ke=new Uint8Array(Te.length),Be=Pr(Ke,Te,Te.length,Ne);if(Be<0)return null;for(var Ge=new Uint8Array(Be),rt=0;rt<Ge.length;rt++)Ge[rt]=Ke[rt];return Ge},fe.sign.detached=function(Te,Ne){for(var Ke=fe.sign(Te,Ne),Be=new Uint8Array(un),Ge=0;Ge<Be.length;Ge++)Be[Ge]=Ke[Ge];return Be},fe.sign.detached.verify=function(Te,Ne,Ke){if(xr(Te,Ne,Ke),Ne.length!==un)throw new Error("bad signature size");if(Ke.length!==vr)throw new Error("bad public key size");var Be=new Uint8Array(un+Te.length),Ge=new Uint8Array(un+Te.length),rt;for(rt=0;rt<un;rt++)Be[rt]=Ne[rt];for(rt=0;rt<Te.length;rt++)Be[rt+un]=Te[rt];return Pr(Ge,Be,Be.length,Ke)>=0},fe.sign.keyPair=function(){var Te=new Uint8Array(vr),Ne=new Uint8Array(Sr);return zr(Te,Ne),{publicKey:Te,secretKey:Ne}},fe.sign.keyPair.fromSecretKey=function(Te){if(xr(Te),Te.length!==Sr)throw new Error("bad secret key size");for(var Ne=new Uint8Array(vr),Ke=0;Ke<Ne.length;Ke++)Ne[Ke]=Te[32+Ke];return{publicKey:Ne,secretKey:new Uint8Array(Te)}},fe.sign.keyPair.fromSeed=function(Te){if(xr(Te),Te.length!==Cn)throw new Error("bad seed size");for(var Ne=new Uint8Array(vr),Ke=new Uint8Array(Sr),Be=0;Be<32;Be++)Ke[Be]=Te[Be];return zr(Ne,Ke,!0),{publicKey:Ne,secretKey:Ke}},fe.sign.publicKeyLength=vr,fe.sign.secretKeyLength=Sr,fe.sign.seedLength=Cn,fe.sign.signatureLength=un,fe.hash=function(Te){xr(Te);var Ne=new Uint8Array(Nr);return Br(Ne,Te,Te.length),Ne},fe.hash.hashLength=Nr,fe.verify=function(Te,Ne){return xr(Te,Ne),Te.length===0||Ne.length===0||Te.length!==Ne.length?!1:Fe(Te,0,Ne,0,Te.length)===0},fe.setPRNG=function(Te){pe=Te},function(){var Te=typeof self<"u"?self.crypto||self.msCrypto:null;if(Te&&Te.getRandomValues){var Ne=65536;fe.setPRNG(function(Ke,Be){var Ge,rt=new Uint8Array(Be);for(Ge=0;Ge<Be;Ge+=Ne)Te.getRandomValues(rt.subarray(Ge,Ge+Math.min(Be-Ge,Ne)));for(Ge=0;Ge<Be;Ge++)Ke[Ge]=rt[Ge];Qr(rt)})}else typeof commonjsRequire$1<"u"&&(Te=requireCryptoBrowserify(),Te&&Te.randomBytes&&fe.setPRNG(function(Ke,Be){var Ge,rt=Te.randomBytes(Be);for(Ge=0;Ge<Be;Ge++)Ke[Ge]=rt[Ge];Qr(rt)}))}()})(he.exports?he.exports:self.nacl=self.nacl||{})})(naclFast);var naclFastExports=naclFast.exports,public_key$1={},lib$5={},assignable$1={};Object.defineProperty(assignable$1,"__esModule",{value:!0});assignable$1.Assignable=void 0;let Assignable$1=class{constructor(fe){Object.keys(fe).map(le=>{this[le]=fe[le]})}};assignable$1.Assignable=Assignable$1;var errors$1={};Object.defineProperty(errors$1,"__esModule",{value:!0});errors$1.ErrorContext=errors$1.TypedError=errors$1.ArgumentTypeError=errors$1.PositionalArgsError=void 0;let PositionalArgsError$1=class extends Error{constructor(){super("Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }")}};errors$1.PositionalArgsError=PositionalArgsError$1;let ArgumentTypeError$1=class extends Error{constructor(fe,le,pe){super(`Expected ${le} for '${fe}' argument, but got '${JSON.stringify(pe)}'`)}};errors$1.ArgumentTypeError=ArgumentTypeError$1;let TypedError$1=class extends Error{constructor(fe,le,pe){super(fe),this.type=le||"UntypedError",this.context=pe}};errors$1.TypedError=TypedError$1;let ErrorContext$1=class{constructor(fe){this.transactionHash=fe}};errors$1.ErrorContext=ErrorContext$1;var provider$1={},light_client$1={};(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.IdType=void 0,function(fe){fe.Transaction="transaction",fe.Receipt="receipt"}(he.IdType||(he.IdType={}))})(light_client$1);var response$1={};(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.FinalExecutionStatusBasic=he.ExecutionStatusBasic=void 0,function(fe){fe.Unknown="Unknown",fe.Pending="Pending",fe.Failure="Failure"}(he.ExecutionStatusBasic||(he.ExecutionStatusBasic={})),function(fe){fe.NotStarted="NotStarted",fe.Started="Started",fe.Failure="Failure"}(he.FinalExecutionStatusBasic||(he.FinalExecutionStatusBasic={}))})(response$1);(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.FinalExecutionStatusBasic=he.ExecutionStatusBasic=he.IdType=void 0;var fe=light_client$1;Object.defineProperty(he,"IdType",{enumerable:!0,get:function(){return fe.IdType}});var le=response$1;Object.defineProperty(he,"ExecutionStatusBasic",{enumerable:!0,get:function(){return le.ExecutionStatusBasic}}),Object.defineProperty(he,"FinalExecutionStatusBasic",{enumerable:!0,get:function(){return le.FinalExecutionStatusBasic}})})(provider$1);(function(he){var fe=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(pe,ge,ye,xe){xe===void 0&&(xe=ye);var me=Object.getOwnPropertyDescriptor(ge,ye);(!me||("get"in me?!ge.__esModule:me.writable||me.configurable))&&(me={enumerable:!0,get:function(){return ge[ye]}}),Object.defineProperty(pe,xe,me)}:function(pe,ge,ye,xe){xe===void 0&&(xe=ye),pe[xe]=ge[ye]}),le=commonjsGlobal&&commonjsGlobal.__exportStar||function(pe,ge){for(var ye in pe)ye!=="default"&&!Object.prototype.hasOwnProperty.call(ge,ye)&&fe(ge,pe,ye)};Object.defineProperty(he,"__esModule",{value:!0}),le(assignable$1,he),le(errors$1,he),le(provider$1,he)})(lib$5);var __importDefault$4=commonjsGlobal&&commonjsGlobal.__importDefault||function(he){return he&&he.__esModule?he:{default:he}};Object.defineProperty(public_key$1,"__esModule",{value:!0});public_key$1.PublicKey=void 0;const types_1$5=lib$5,borsh_1$3=lib$9,tweetnacl_1$3=__importDefault$4(naclFastExports),constants_1$3=constants$1;function key_type_to_str$1(he){switch(he){case constants_1$3.KeyType.ED25519:return"ed25519";default:throw new Error(`Unknown key type ${he}`)}}function str_to_key_type$1(he){switch(he.toLowerCase()){case"ed25519":return constants_1$3.KeyType.ED25519;default:throw new Error(`Unknown key type ${he}`)}}let PublicKey$1=class Zn extends types_1$5.Assignable{static from(fe){return typeof fe=="string"?Zn.fromString(fe):fe}static fromString(fe){const le=fe.split(":");if(le.length===1)return new Zn({keyType:constants_1$3.KeyType.ED25519,data:(0,borsh_1$3.baseDecode)(le[0])});if(le.length===2)return new Zn({keyType:str_to_key_type$1(le[0]),data:(0,borsh_1$3.baseDecode)(le[1])});throw new Error("Invalid encoded key format, must be <curve>:<encoded key>")}toString(){return`${key_type_to_str$1(this.keyType)}:${(0,borsh_1$3.baseEncode)(this.data)}`}verify(fe,le){switch(this.keyType){case constants_1$3.KeyType.ED25519:return tweetnacl_1$3.default.sign.detached.verify(fe,le,this.data);default:throw new Error(`Unknown key type ${this.keyType}`)}}};public_key$1.PublicKey=PublicKey$1;var __importDefault$3=commonjsGlobal&&commonjsGlobal.__importDefault||function(he){return he&&he.__esModule?he:{default:he}};Object.defineProperty(key_pair_ed25519$1,"__esModule",{value:!0});key_pair_ed25519$1.KeyPairEd25519=void 0;const borsh_1$2=lib$9,tweetnacl_1$2=__importDefault$3(naclFastExports),constants_1$2=constants$1,key_pair_base_1$3=key_pair_base$1,public_key_1$1=public_key$1;let KeyPairEd25519$1=class vi extends key_pair_base_1$3.KeyPairBase{constructor(fe){super();const le=tweetnacl_1$2.default.sign.keyPair.fromSecretKey((0,borsh_1$2.baseDecode)(fe));this.publicKey=new public_key_1$1.PublicKey({keyType:constants_1$2.KeyType.ED25519,data:le.publicKey}),this.secretKey=fe}static fromRandom(){const fe=tweetnacl_1$2.default.sign.keyPair();return new vi((0,borsh_1$2.baseEncode)(fe.secretKey))}sign(fe){return{signature:tweetnacl_1$2.default.sign.detached(fe,(0,borsh_1$2.baseDecode)(this.secretKey)),publicKey:this.publicKey}}verify(fe,le){return this.publicKey.verify(fe,le)}toString(){return`ed25519:${this.secretKey}`}getPublicKey(){return this.publicKey}};key_pair_ed25519$1.KeyPairEd25519=KeyPairEd25519$1;Object.defineProperty(key_pair$1,"__esModule",{value:!0});key_pair$1.KeyPair=void 0;const key_pair_base_1$2=key_pair_base$1,key_pair_ed25519_1$1=key_pair_ed25519$1;let KeyPair$1=class extends key_pair_base_1$2.KeyPairBase{static fromRandom(fe){switch(fe.toUpperCase()){case"ED25519":return key_pair_ed25519_1$1.KeyPairEd25519.fromRandom();default:throw new Error(`Unknown curve ${fe}`)}}static fromString(fe){const le=fe.split(":");if(le.length===1)return new key_pair_ed25519_1$1.KeyPairEd25519(le[0]);if(le.length===2)switch(le[0].toUpperCase()){case"ED25519":return new key_pair_ed25519_1$1.KeyPairEd25519(le[1]);default:throw new Error(`Unknown curve: ${le[0]}`)}else throw new Error("Invalid encoded key format, must be <curve>:<encoded key>")}};key_pair$1.KeyPair=KeyPair$1;(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.PublicKey=he.KeyPairEd25519=he.KeyPair=he.KeyType=void 0;var fe=constants$1;Object.defineProperty(he,"KeyType",{enumerable:!0,get:function(){return fe.KeyType}});var le=key_pair$1;Object.defineProperty(he,"KeyPair",{enumerable:!0,get:function(){return le.KeyPair}});var pe=key_pair_ed25519$1;Object.defineProperty(he,"KeyPairEd25519",{enumerable:!0,get:function(){return pe.KeyPairEd25519}});var ge=public_key$1;Object.defineProperty(he,"PublicKey",{enumerable:!0,get:function(){return ge.PublicKey}})})(lib$6);var lib$4={},browser_local_storage_key_store={},lib$3={},in_memory_key_store={},keystore={};Object.defineProperty(keystore,"__esModule",{value:!0});keystore.KeyStore=void 0;class KeyStore{}keystore.KeyStore=KeyStore;var __awaiter$4=commonjsGlobal&&commonjsGlobal.__awaiter||function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})};Object.defineProperty(in_memory_key_store,"__esModule",{value:!0});in_memory_key_store.InMemoryKeyStore=void 0;const crypto_1$1=lib$6,keystore_1$1=keystore;class InMemoryKeyStore extends keystore_1$1.KeyStore{constructor(){super(),this.keys={}}setKey(fe,le,pe){return __awaiter$4(this,void 0,void 0,function*(){this.keys[`${le}:${fe}`]=pe.toString()})}getKey(fe,le){return __awaiter$4(this,void 0,void 0,function*(){const pe=this.keys[`${le}:${fe}`];return pe?crypto_1$1.KeyPair.fromString(pe):null})}removeKey(fe,le){return __awaiter$4(this,void 0,void 0,function*(){delete this.keys[`${le}:${fe}`]})}clear(){return __awaiter$4(this,void 0,void 0,function*(){this.keys={}})}getNetworks(){return __awaiter$4(this,void 0,void 0,function*(){const fe=new Set;return Object.keys(this.keys).forEach(le=>{const pe=le.split(":");fe.add(pe[1])}),Array.from(fe.values())})}getAccounts(fe){return __awaiter$4(this,void 0,void 0,function*(){const le=new Array;return Object.keys(this.keys).forEach(pe=>{const ge=pe.split(":");ge[ge.length-1]===fe&&le.push(ge.slice(0,ge.length-1).join(":"))}),le})}toString(){return"InMemoryKeyStore"}}in_memory_key_store.InMemoryKeyStore=InMemoryKeyStore;var merge_key_store={},__awaiter$3=commonjsGlobal&&commonjsGlobal.__awaiter||function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})};Object.defineProperty(merge_key_store,"__esModule",{value:!0});merge_key_store.MergeKeyStore=void 0;const keystore_1=keystore;class MergeKeyStore extends keystore_1.KeyStore{constructor(fe,le={writeKeyStoreIndex:0}){super(),this.options=le,this.keyStores=fe}setKey(fe,le,pe){return __awaiter$3(this,void 0,void 0,function*(){yield this.keyStores[this.options.writeKeyStoreIndex].setKey(fe,le,pe)})}getKey(fe,le){return __awaiter$3(this,void 0,void 0,function*(){for(const pe of this.keyStores){const ge=yield pe.getKey(fe,le);if(ge)return ge}return null})}removeKey(fe,le){return __awaiter$3(this,void 0,void 0,function*(){for(const pe of this.keyStores)yield pe.removeKey(fe,le)})}clear(){return __awaiter$3(this,void 0,void 0,function*(){for(const fe of this.keyStores)yield fe.clear()})}getNetworks(){return __awaiter$3(this,void 0,void 0,function*(){const fe=new Set;for(const le of this.keyStores)for(const pe of yield le.getNetworks())fe.add(pe);return Array.from(fe)})}getAccounts(fe){return __awaiter$3(this,void 0,void 0,function*(){const le=new Set;for(const pe of this.keyStores)for(const ge of yield pe.getAccounts(fe))le.add(ge);return Array.from(le)})}toString(){return`MergeKeyStore(${this.keyStores.join(", ")})`}}merge_key_store.MergeKeyStore=MergeKeyStore;(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.MergeKeyStore=he.KeyStore=he.InMemoryKeyStore=void 0;var fe=in_memory_key_store;Object.defineProperty(he,"InMemoryKeyStore",{enumerable:!0,get:function(){return fe.InMemoryKeyStore}});var le=keystore;Object.defineProperty(he,"KeyStore",{enumerable:!0,get:function(){return le.KeyStore}});var pe=merge_key_store;Object.defineProperty(he,"MergeKeyStore",{enumerable:!0,get:function(){return pe.MergeKeyStore}})})(lib$3);var __awaiter$2=commonjsGlobal&&commonjsGlobal.__awaiter||function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})};Object.defineProperty(browser_local_storage_key_store,"__esModule",{value:!0});browser_local_storage_key_store.BrowserLocalStorageKeyStore=void 0;const crypto_1=lib$6,keystores_1=lib$3,LOCAL_STORAGE_KEY_PREFIX="near-api-js:keystore:";class BrowserLocalStorageKeyStore extends keystores_1.KeyStore{constructor(fe=window.localStorage,le=LOCAL_STORAGE_KEY_PREFIX){super(),this.localStorage=fe,this.prefix=le}setKey(fe,le,pe){return __awaiter$2(this,void 0,void 0,function*(){this.localStorage.setItem(this.storageKeyForSecretKey(fe,le),pe.toString())})}getKey(fe,le){return __awaiter$2(this,void 0,void 0,function*(){const pe=this.localStorage.getItem(this.storageKeyForSecretKey(fe,le));return pe?crypto_1.KeyPair.fromString(pe):null})}removeKey(fe,le){return __awaiter$2(this,void 0,void 0,function*(){this.localStorage.removeItem(this.storageKeyForSecretKey(fe,le))})}clear(){return __awaiter$2(this,void 0,void 0,function*(){for(const fe of this.storageKeys())fe.startsWith(this.prefix)&&this.localStorage.removeItem(fe)})}getNetworks(){return __awaiter$2(this,void 0,void 0,function*(){const fe=new Set;for(const le of this.storageKeys())if(le.startsWith(this.prefix)){const pe=le.substring(this.prefix.length).split(":");fe.add(pe[1])}return Array.from(fe.values())})}getAccounts(fe){return __awaiter$2(this,void 0,void 0,function*(){const le=new Array;for(const pe of this.storageKeys())if(pe.startsWith(this.prefix)){const ge=pe.substring(this.prefix.length).split(":");ge[1]===fe&&le.push(ge[0])}return le})}storageKeyForSecretKey(fe,le){return`${this.prefix}${le}:${fe}`}*storageKeys(){for(let fe=0;fe<this.localStorage.length;fe++)yield this.localStorage.key(fe)}}browser_local_storage_key_store.BrowserLocalStorageKeyStore=BrowserLocalStorageKeyStore;(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.BrowserLocalStorageKeyStore=void 0;var fe=browser_local_storage_key_store;Object.defineProperty(he,"BrowserLocalStorageKeyStore",{enumerable:!0,get:function(){return fe.BrowserLocalStorageKeyStore}})})(lib$4);var lib$2={},action_creators={},actions={},lib$1={},assignable={};Object.defineProperty(assignable,"__esModule",{value:!0});assignable.Assignable=void 0;class Assignable{constructor(fe){Object.keys(fe).map(le=>{this[le]=fe[le]})}}assignable.Assignable=Assignable;var errors={};Object.defineProperty(errors,"__esModule",{value:!0});errors.ErrorContext=errors.TypedError=errors.ArgumentTypeError=errors.PositionalArgsError=void 0;class PositionalArgsError extends Error{constructor(){super("Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }")}}errors.PositionalArgsError=PositionalArgsError;class ArgumentTypeError extends Error{constructor(fe,le,pe){super(`Expected ${le} for '${fe}' argument, but got '${JSON.stringify(pe)}'`)}}errors.ArgumentTypeError=ArgumentTypeError;class TypedError extends Error{constructor(fe,le,pe){super(fe),this.type=le||"UntypedError",this.context=pe}}errors.TypedError=TypedError;class ErrorContext{constructor(fe){this.transactionHash=fe}}errors.ErrorContext=ErrorContext;var provider={},light_client={};(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.IdType=void 0,function(fe){fe.Transaction="transaction",fe.Receipt="receipt"}(he.IdType||(he.IdType={}))})(light_client);var response={};(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.FinalExecutionStatusBasic=he.ExecutionStatusBasic=void 0,function(fe){fe.Unknown="Unknown",fe.Pending="Pending",fe.Failure="Failure"}(he.ExecutionStatusBasic||(he.ExecutionStatusBasic={})),function(fe){fe.NotStarted="NotStarted",fe.Started="Started",fe.Failure="Failure"}(he.FinalExecutionStatusBasic||(he.FinalExecutionStatusBasic={}))})(response);(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.FinalExecutionStatusBasic=he.ExecutionStatusBasic=he.IdType=void 0;var fe=light_client;Object.defineProperty(he,"IdType",{enumerable:!0,get:function(){return fe.IdType}});var le=response;Object.defineProperty(he,"ExecutionStatusBasic",{enumerable:!0,get:function(){return le.ExecutionStatusBasic}}),Object.defineProperty(he,"FinalExecutionStatusBasic",{enumerable:!0,get:function(){return le.FinalExecutionStatusBasic}})})(provider);(function(he){var fe=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(pe,ge,ye,xe){xe===void 0&&(xe=ye);var me=Object.getOwnPropertyDescriptor(ge,ye);(!me||("get"in me?!ge.__esModule:me.writable||me.configurable))&&(me={enumerable:!0,get:function(){return ge[ye]}}),Object.defineProperty(pe,xe,me)}:function(pe,ge,ye,xe){xe===void 0&&(xe=ye),pe[xe]=ge[ye]}),le=commonjsGlobal&&commonjsGlobal.__exportStar||function(pe,ge){for(var ye in pe)ye!=="default"&&!Object.prototype.hasOwnProperty.call(ge,ye)&&fe(ge,pe,ye)};Object.defineProperty(he,"__esModule",{value:!0}),le(assignable,he),le(errors,he),le(provider,he)})(lib$1);Object.defineProperty(actions,"__esModule",{value:!0});actions.Action=actions.SignedDelegate=actions.DeleteAccount=actions.DeleteKey=actions.AddKey=actions.Stake=actions.Transfer=actions.FunctionCall=actions.DeployContract=actions.CreateAccount=actions.IAction=actions.AccessKey=actions.AccessKeyPermission=actions.FullAccessPermission=actions.FunctionCallPermission=void 0;const types_1$4=lib$1;class Enum{constructor(fe){if(Object.keys(fe).length!==1)throw new Error("Enum can only take single value");Object.keys(fe).map(le=>{this[le]=fe[le],this.enum=le})}}class FunctionCallPermission extends types_1$4.Assignable{}actions.FunctionCallPermission=FunctionCallPermission;class FullAccessPermission extends types_1$4.Assignable{}actions.FullAccessPermission=FullAccessPermission;class AccessKeyPermission extends Enum{}actions.AccessKeyPermission=AccessKeyPermission;class AccessKey extends types_1$4.Assignable{}actions.AccessKey=AccessKey;class IAction extends types_1$4.Assignable{}actions.IAction=IAction;class CreateAccount extends IAction{}actions.CreateAccount=CreateAccount;class DeployContract extends IAction{}actions.DeployContract=DeployContract;class FunctionCall extends IAction{}actions.FunctionCall=FunctionCall;class Transfer extends IAction{}actions.Transfer=Transfer;class Stake extends IAction{}actions.Stake=Stake;class AddKey extends IAction{}actions.AddKey=AddKey;class DeleteKey extends IAction{}actions.DeleteKey=DeleteKey;class DeleteAccount extends IAction{}actions.DeleteAccount=DeleteAccount;class SignedDelegate extends IAction{}actions.SignedDelegate=SignedDelegate;class Action extends Enum{}actions.Action=Action;Object.defineProperty(action_creators,"__esModule",{value:!0});action_creators.actionCreators=action_creators.stringifyJsonOrBytes=void 0;const actions_1$1=actions;function fullAccessKey(){return new actions_1$1.AccessKey({permission:new actions_1$1.AccessKeyPermission({fullAccess:new actions_1$1.FullAccessPermission({})})})}function functionCallAccessKey(he,fe,le){return new actions_1$1.AccessKey({permission:new actions_1$1.AccessKeyPermission({functionCall:new actions_1$1.FunctionCallPermission({receiverId:he,allowance:le,methodNames:fe})})})}function createAccount(){return new actions_1$1.Action({createAccount:new actions_1$1.CreateAccount({})})}function deployContract(he){return new actions_1$1.Action({deployContract:new actions_1$1.DeployContract({code:he})})}function stringifyJsonOrBytes(he){return he.byteLength!==void 0&&he.byteLength===he.length?he:Buffer$4.from(JSON.stringify(he))}action_creators.stringifyJsonOrBytes=stringifyJsonOrBytes;function functionCall(he,fe,le,pe,ge=stringifyJsonOrBytes,ye=!1){return ye?new actions_1$1.Action({functionCall:new actions_1$1.FunctionCall({methodName:he,args:fe,gas:le,deposit:pe})}):new actions_1$1.Action({functionCall:new actions_1$1.FunctionCall({methodName:he,args:ge(fe),gas:le,deposit:pe})})}function transfer(he){return new actions_1$1.Action({transfer:new actions_1$1.Transfer({deposit:he})})}function stake(he,fe){return new actions_1$1.Action({stake:new actions_1$1.Stake({stake:he,publicKey:fe})})}function addKey(he,fe){return new actions_1$1.Action({addKey:new actions_1$1.AddKey({publicKey:he,accessKey:fe})})}function deleteKey(he){return new actions_1$1.Action({deleteKey:new actions_1$1.DeleteKey({publicKey:he})})}function deleteAccount(he){return new actions_1$1.Action({deleteAccount:new actions_1$1.DeleteAccount({beneficiaryId:he})})}function signedDelegate({delegateAction:he,signature:fe}){return new actions_1$1.Action({signedDelegate:new actions_1$1.SignedDelegate({delegateAction:he,signature:fe})})}action_creators.actionCreators={addKey,createAccount,deleteAccount,deleteKey,deployContract,fullAccessKey,functionCall,functionCallAccessKey,signedDelegate,stake,transfer};var create_transaction={},schema={},lib={},constants={};(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.KeyType=void 0,function(fe){fe[fe.ED25519=0]="ED25519"}(he.KeyType||(he.KeyType={}))})(constants);var key_pair={},key_pair_base={};Object.defineProperty(key_pair_base,"__esModule",{value:!0});key_pair_base.KeyPairBase=void 0;class KeyPairBase{}key_pair_base.KeyPairBase=KeyPairBase;var key_pair_ed25519={},public_key={},__importDefault$2=commonjsGlobal&&commonjsGlobal.__importDefault||function(he){return he&&he.__esModule?he:{default:he}};Object.defineProperty(public_key,"__esModule",{value:!0});public_key.PublicKey=void 0;const types_1$3=lib$1,borsh_1$1=lib$9,tweetnacl_1$1=__importDefault$2(naclFastExports),constants_1$1=constants;function key_type_to_str(he){switch(he){case constants_1$1.KeyType.ED25519:return"ed25519";default:throw new Error(`Unknown key type ${he}`)}}function str_to_key_type(he){switch(he.toLowerCase()){case"ed25519":return constants_1$1.KeyType.ED25519;default:throw new Error(`Unknown key type ${he}`)}}class PublicKey extends types_1$3.Assignable{static from(fe){return typeof fe=="string"?PublicKey.fromString(fe):fe}static fromString(fe){const le=fe.split(":");if(le.length===1)return new PublicKey({keyType:constants_1$1.KeyType.ED25519,data:(0,borsh_1$1.baseDecode)(le[0])});if(le.length===2)return new PublicKey({keyType:str_to_key_type(le[0]),data:(0,borsh_1$1.baseDecode)(le[1])});throw new Error("Invalid encoded key format, must be <curve>:<encoded key>")}toString(){return`${key_type_to_str(this.keyType)}:${(0,borsh_1$1.baseEncode)(this.data)}`}verify(fe,le){switch(this.keyType){case constants_1$1.KeyType.ED25519:return tweetnacl_1$1.default.sign.detached.verify(fe,le,this.data);default:throw new Error(`Unknown key type ${this.keyType}`)}}}public_key.PublicKey=PublicKey;var __importDefault$1=commonjsGlobal&&commonjsGlobal.__importDefault||function(he){return he&&he.__esModule?he:{default:he}};Object.defineProperty(key_pair_ed25519,"__esModule",{value:!0});key_pair_ed25519.KeyPairEd25519=void 0;const borsh_1=lib$9,tweetnacl_1=__importDefault$1(naclFastExports),constants_1=constants,key_pair_base_1$1=key_pair_base,public_key_1=public_key;class KeyPairEd25519 extends key_pair_base_1$1.KeyPairBase{constructor(fe){super();const le=tweetnacl_1.default.sign.keyPair.fromSecretKey((0,borsh_1.baseDecode)(fe));this.publicKey=new public_key_1.PublicKey({keyType:constants_1.KeyType.ED25519,data:le.publicKey}),this.secretKey=fe}static fromRandom(){const fe=tweetnacl_1.default.sign.keyPair();return new KeyPairEd25519((0,borsh_1.baseEncode)(fe.secretKey))}sign(fe){return{signature:tweetnacl_1.default.sign.detached(fe,(0,borsh_1.baseDecode)(this.secretKey)),publicKey:this.publicKey}}verify(fe,le){return this.publicKey.verify(fe,le)}toString(){return`ed25519:${this.secretKey}`}getPublicKey(){return this.publicKey}}key_pair_ed25519.KeyPairEd25519=KeyPairEd25519;Object.defineProperty(key_pair,"__esModule",{value:!0});key_pair.KeyPair=void 0;const key_pair_base_1=key_pair_base,key_pair_ed25519_1=key_pair_ed25519;class KeyPair extends key_pair_base_1.KeyPairBase{static fromRandom(fe){switch(fe.toUpperCase()){case"ED25519":return key_pair_ed25519_1.KeyPairEd25519.fromRandom();default:throw new Error(`Unknown curve ${fe}`)}}static fromString(fe){const le=fe.split(":");if(le.length===1)return new key_pair_ed25519_1.KeyPairEd25519(le[0]);if(le.length===2)switch(le[0].toUpperCase()){case"ED25519":return new key_pair_ed25519_1.KeyPairEd25519(le[1]);default:throw new Error(`Unknown curve: ${le[0]}`)}else throw new Error("Invalid encoded key format, must be <curve>:<encoded key>")}}key_pair.KeyPair=KeyPair;(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.PublicKey=he.KeyPairEd25519=he.KeyPair=he.KeyType=void 0;var fe=constants;Object.defineProperty(he,"KeyType",{enumerable:!0,get:function(){return fe.KeyType}});var le=key_pair;Object.defineProperty(he,"KeyPair",{enumerable:!0,get:function(){return le.KeyPair}});var pe=key_pair_ed25519;Object.defineProperty(he,"KeyPairEd25519",{enumerable:!0,get:function(){return pe.KeyPairEd25519}});var ge=public_key;Object.defineProperty(he,"PublicKey",{enumerable:!0,get:function(){return ge.PublicKey}})})(lib);var delegate={};Object.defineProperty(delegate,"__esModule",{value:!0});delegate.buildDelegateAction=delegate.DelegateAction=void 0;const types_1$2=lib$1;class DelegateAction extends types_1$2.Assignable{}delegate.DelegateAction=DelegateAction;function buildDelegateAction({actions:he,maxBlockHeight:fe,nonce:le,publicKey:pe,receiverId:ge,senderId:ye}){return new DelegateAction({senderId:ye,receiverId:ge,actions:he,nonce:le,maxBlockHeight:fe,publicKey:pe})}delegate.buildDelegateAction=buildDelegateAction;var prefix={};Object.defineProperty(prefix,"__esModule",{value:!0});prefix.DelegateActionPrefix=void 0;const types_1$1=lib$1,ACTIONABLE_MESSAGE_BASE=Math.pow(2,30),NEP={MetaTransactions:366};class NEPPrefix extends types_1$1.Assignable{}class ActionableMessagePrefix extends NEPPrefix{constructor(fe){super({prefix:ACTIONABLE_MESSAGE_BASE+fe})}}class DelegateActionPrefix extends ActionableMessagePrefix{constructor(){super(NEP.MetaTransactions)}}prefix.DelegateActionPrefix=DelegateActionPrefix;var signature={};Object.defineProperty(signature,"__esModule",{value:!0});signature.Signature=void 0;const types_1=lib$1;class Signature extends types_1.Assignable{}signature.Signature=Signature;(function(he){Object.defineProperty(he,"__esModule",{value:!0}),he.SCHEMA=he.SignedTransaction=he.Transaction=he.decodeSignedTransaction=he.decodeTransaction=he.encodeTransaction=he.encodeSignedDelegate=he.encodeDelegateAction=void 0;const fe=lib,le=lib$1,pe=lib$9,ge=actions,ye=delegate,xe=prefix,me=signature;function we(Fe){return new Uint8Array([...(0,pe.serialize)(he.SCHEMA,new xe.DelegateActionPrefix),...(0,pe.serialize)(he.SCHEMA,Fe)])}he.encodeDelegateAction=we;function Ee(Fe){return(0,pe.serialize)(he.SCHEMA,Fe)}he.encodeSignedDelegate=Ee;function Ae(Fe){return(0,pe.serialize)(he.SCHEMA,Fe)}he.encodeTransaction=Ae;function Se(Fe){return(0,pe.deserialize)(he.SCHEMA,He,Fe)}he.decodeTransaction=Se;function Le(Fe){return(0,pe.deserialize)(he.SCHEMA,Me,Fe)}he.decodeSignedTransaction=Le;class He extends le.Assignable{encode(){return Ae(this)}static decode(Ue){return Se(Ue)}}he.Transaction=He;class Me extends le.Assignable{encode(){return Ae(this)}static decode(Ue){return Le(Ue)}}he.SignedTransaction=Me,he.SCHEMA=new Map([[me.Signature,{kind:"struct",fields:[["keyType","u8"],["data",[64]]]}],[Me,{kind:"struct",fields:[["transaction",He],["signature",me.Signature]]}],[He,{kind:"struct",fields:[["signerId","string"],["publicKey",fe.PublicKey],["nonce","u64"],["receiverId","string"],["blockHash",[32]],["actions",[ge.Action]]]}],[fe.PublicKey,{kind:"struct",fields:[["keyType","u8"],["data",[32]]]}],[ge.AccessKey,{kind:"struct",fields:[["nonce","u64"],["permission",ge.AccessKeyPermission]]}],[ge.AccessKeyPermission,{kind:"enum",field:"enum",values:[["functionCall",ge.FunctionCallPermission],["fullAccess",ge.FullAccessPermission]]}],[ge.FunctionCallPermission,{kind:"struct",fields:[["allowance",{kind:"option",type:"u128"}],["receiverId","string"],["methodNames",["string"]]]}],[ge.FullAccessPermission,{kind:"struct",fields:[]}],[ge.Action,{kind:"enum",field:"enum",values:[["createAccount",ge.CreateAccount],["deployContract",ge.DeployContract],["functionCall",ge.FunctionCall],["transfer",ge.Transfer],["stake",ge.Stake],["addKey",ge.AddKey],["deleteKey",ge.DeleteKey],["deleteAccount",ge.DeleteAccount],["signedDelegate",ge.SignedDelegate]]}],[ge.CreateAccount,{kind:"struct",fields:[]}],[ge.DeployContract,{kind:"struct",fields:[["code",["u8"]]]}],[ge.FunctionCall,{kind:"struct",fields:[["methodName","string"],["args",["u8"]],["gas","u64"],["deposit","u128"]]}],[ge.Transfer,{kind:"struct",fields:[["deposit","u128"]]}],[ge.Stake,{kind:"struct",fields:[["stake","u128"],["publicKey",fe.PublicKey]]}],[ge.AddKey,{kind:"struct",fields:[["publicKey",fe.PublicKey],["accessKey",ge.AccessKey]]}],[ge.DeleteKey,{kind:"struct",fields:[["publicKey",fe.PublicKey]]}],[ge.DeleteAccount,{kind:"struct",fields:[["beneficiaryId","string"]]}],[ye.DelegateAction,{kind:"struct",fields:[["senderId","string"],["receiverId","string"],["actions",[ge.Action]],["nonce","u64"],["maxBlockHeight","u64"],["publicKey",fe.PublicKey]]}],[xe.DelegateActionPrefix,{kind:"struct",fields:[["prefix","u32"]]}],[ge.SignedDelegate,{kind:"struct",fields:[["delegateAction",ye.DelegateAction],["signature",me.Signature]]}]])})(schema);Object.defineProperty(create_transaction,"__esModule",{value:!0});create_transaction.createTransaction=void 0;const schema_1$1=schema;function createTransaction(he,fe,le,pe,ge,ye){return new schema_1$1.Transaction({signerId:he,publicKey:fe,nonce:pe,receiverId:le,actions:ge,blockHash:ye})}create_transaction.createTransaction=createTransaction;var sign={},sha256$1={exports:{}};(function(module){(function(){var ERROR="input is invalid type",WINDOW=typeof window=="object",root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&typeof self=="object",NODE_JS=!root.JS_SHA256_NO_NODE_JS&&typeof process$1=="object"&&process$1.versions&&process$1.versions.node;NODE_JS?root=commonjsGlobal:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&!0&&module.exports,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&typeof ArrayBuffer<"u",HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];(root.JS_SHA256_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(he){return Object.prototype.toString.call(he)==="[object Array]"}),ARRAY_BUFFER&&(root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(he){return typeof he=="object"&&he.buffer&&he.buffer.constructor===ArrayBuffer});var createOutputMethod=function(he,fe){return function(le){return new Sha256(fe,!0).update(le)[he]()}},createMethod=function(he){var fe=createOutputMethod("hex",he);NODE_JS&&(fe=nodeWrap(fe,he)),fe.create=function(){return new Sha256(he)},fe.update=function(ge){return fe.create().update(ge)};for(var le=0;le<OUTPUT_TYPES.length;++le){var pe=OUTPUT_TYPES[le];fe[pe]=createOutputMethod(pe,he)}return fe},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(he){if(typeof he=="string")return crypto.createHash(algorithm).update(he,"utf8").digest("hex");if(he==null)throw new Error(ERROR);return he.constructor===ArrayBuffer&&(he=new Uint8Array(he)),Array.isArray(he)||ArrayBuffer.isView(he)||he.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(he)).digest("hex"):method(he)};return nodeMethod},createHmacOutputMethod=function(he,fe){return function(le,pe){return new HmacSha256(le,fe,!0).update(pe)[he]()}},createHmacMethod=function(he){var fe=createHmacOutputMethod("hex",he);fe.create=function(ge){return new HmacSha256(ge,he)},fe.update=function(ge,ye){return fe.create(ge).update(ye)};for(var le=0;le<OUTPUT_TYPES.length;++le){var pe=OUTPUT_TYPES[le];fe[pe]=createHmacOutputMethod(pe,he)}return fe};function Sha256(he,fe){fe?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],he?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=he}Sha256.prototype.update=function(he){if(!this.finalized){var fe,le=typeof he;if(le!=="string"){if(le==="object"){if(he===null)throw new Error(ERROR);if(ARRAY_BUFFER&&he.constructor===ArrayBuffer)he=new Uint8Array(he);else if(!Array.isArray(he)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(he)))throw new Error(ERROR)}else throw new Error(ERROR);fe=!0}for(var pe,ge=0,ye,xe=he.length,me=this.blocks;ge<xe;){if(this.hashed&&(this.hashed=!1,me[0]=this.block,me[16]=me[1]=me[2]=me[3]=me[4]=me[5]=me[6]=me[7]=me[8]=me[9]=me[10]=me[11]=me[12]=me[13]=me[14]=me[15]=0),fe)for(ye=this.start;ge<xe&&ye<64;++ge)me[ye>>2]|=he[ge]<<SHIFT[ye++&3];else for(ye=this.start;ge<xe&&ye<64;++ge)pe=he.charCodeAt(ge),pe<128?me[ye>>2]|=pe<<SHIFT[ye++&3]:pe<2048?(me[ye>>2]|=(192|pe>>6)<<SHIFT[ye++&3],me[ye>>2]|=(128|pe&63)<<SHIFT[ye++&3]):pe<55296||pe>=57344?(me[ye>>2]|=(224|pe>>12)<<SHIFT[ye++&3],me[ye>>2]|=(128|pe>>6&63)<<SHIFT[ye++&3],me[ye>>2]|=(128|pe&63)<<SHIFT[ye++&3]):(pe=65536+((pe&1023)<<10|he.charCodeAt(++ge)&1023),me[ye>>2]|=(240|pe>>18)<<SHIFT[ye++&3],me[ye>>2]|=(128|pe>>12&63)<<SHIFT[ye++&3],me[ye>>2]|=(128|pe>>6&63)<<SHIFT[ye++&3],me[ye>>2]|=(128|pe&63)<<SHIFT[ye++&3]);this.lastByteIndex=ye,this.bytes+=ye-this.start,ye>=64?(this.block=me[16],this.start=ye-64,this.hash(),this.hashed=!0):this.start=ye}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var he=this.blocks,fe=this.lastByteIndex;he[16]=this.block,he[fe>>2]|=EXTRA[fe&3],this.block=he[16],fe>=56&&(this.hashed||this.hash(),he[0]=this.block,he[16]=he[1]=he[2]=he[3]=he[4]=he[5]=he[6]=he[7]=he[8]=he[9]=he[10]=he[11]=he[12]=he[13]=he[14]=he[15]=0),he[14]=this.hBytes<<3|this.bytes>>>29,he[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var he=this.h0,fe=this.h1,le=this.h2,pe=this.h3,ge=this.h4,ye=this.h5,xe=this.h6,me=this.h7,we=this.blocks,Ee,Ae,Se,Le,He,Me,Fe,Ue,qe,$e,Qe;for(Ee=16;Ee<64;++Ee)He=we[Ee-15],Ae=(He>>>7|He<<25)^(He>>>18|He<<14)^He>>>3,He=we[Ee-2],Se=(He>>>17|He<<15)^(He>>>19|He<<13)^He>>>10,we[Ee]=we[Ee-16]+Ae+we[Ee-7]+Se<<0;for(Qe=fe&le,Ee=0;Ee<64;Ee+=4)this.first?(this.is224?(Ue=300032,He=we[0]-1413257819,me=He-150054599<<0,pe=He+24177077<<0):(Ue=704751109,He=we[0]-210244248,me=He-1521486534<<0,pe=He+143694565<<0),this.first=!1):(Ae=(he>>>2|he<<30)^(he>>>13|he<<19)^(he>>>22|he<<10),Se=(ge>>>6|ge<<26)^(ge>>>11|ge<<21)^(ge>>>25|ge<<7),Ue=he&fe,Le=Ue^he&le^Qe,Fe=ge&ye^~ge&xe,He=me+Se+Fe+K[Ee]+we[Ee],Me=Ae+Le,me=pe+He<<0,pe=He+Me<<0),Ae=(pe>>>2|pe<<30)^(pe>>>13|pe<<19)^(pe>>>22|pe<<10),Se=(me>>>6|me<<26)^(me>>>11|me<<21)^(me>>>25|me<<7),qe=pe&he,Le=qe^pe&fe^Ue,Fe=me&ge^~me&ye,He=xe+Se+Fe+K[Ee+1]+we[Ee+1],Me=Ae+Le,xe=le+He<<0,le=He+Me<<0,Ae=(le>>>2|le<<30)^(le>>>13|le<<19)^(le>>>22|le<<10),Se=(xe>>>6|xe<<26)^(xe>>>11|xe<<21)^(xe>>>25|xe<<7),$e=le&pe,Le=$e^le&he^qe,Fe=xe&me^~xe&ge,He=ye+Se+Fe+K[Ee+2]+we[Ee+2],Me=Ae+Le,ye=fe+He<<0,fe=He+Me<<0,Ae=(fe>>>2|fe<<30)^(fe>>>13|fe<<19)^(fe>>>22|fe<<10),Se=(ye>>>6|ye<<26)^(ye>>>11|ye<<21)^(ye>>>25|ye<<7),Qe=fe&le,Le=Qe^fe&pe^$e,Fe=ye&xe^~ye&me,He=ge+Se+Fe+K[Ee+3]+we[Ee+3],Me=Ae+Le,ge=he+He<<0,he=He+Me<<0;this.h0=this.h0+he<<0,this.h1=this.h1+fe<<0,this.h2=this.h2+le<<0,this.h3=this.h3+pe<<0,this.h4=this.h4+ge<<0,this.h5=this.h5+ye<<0,this.h6=this.h6+xe<<0,this.h7=this.h7+me<<0},Sha256.prototype.hex=function(){this.finalize();var he=this.h0,fe=this.h1,le=this.h2,pe=this.h3,ge=this.h4,ye=this.h5,xe=this.h6,me=this.h7,we=HEX_CHARS[he>>28&15]+HEX_CHARS[he>>24&15]+HEX_CHARS[he>>20&15]+HEX_CHARS[he>>16&15]+HEX_CHARS[he>>12&15]+HEX_CHARS[he>>8&15]+HEX_CHARS[he>>4&15]+HEX_CHARS[he&15]+HEX_CHARS[fe>>28&15]+HEX_CHARS[fe>>24&15]+HEX_CHARS[fe>>20&15]+HEX_CHARS[fe>>16&15]+HEX_CHARS[fe>>12&15]+HEX_CHARS[fe>>8&15]+HEX_CHARS[fe>>4&15]+HEX_CHARS[fe&15]+HEX_CHARS[le>>28&15]+HEX_CHARS[le>>24&15]+HEX_CHARS[le>>20&15]+HEX_CHARS[le>>16&15]+HEX_CHARS[le>>12&15]+HEX_CHARS[le>>8&15]+HEX_CHARS[le>>4&15]+HEX_CHARS[le&15]+HEX_CHARS[pe>>28&15]+HEX_CHARS[pe>>24&15]+HEX_CHARS[pe>>20&15]+HEX_CHARS[pe>>16&15]+HEX_CHARS[pe>>12&15]+HEX_CHARS[pe>>8&15]+HEX_CHARS[pe>>4&15]+HEX_CHARS[pe&15]+HEX_CHARS[ge>>28&15]+HEX_CHARS[ge>>24&15]+HEX_CHARS[ge>>20&15]+HEX_CHARS[ge>>16&15]+HEX_CHARS[ge>>12&15]+HEX_CHARS[ge>>8&15]+HEX_CHARS[ge>>4&15]+HEX_CHARS[ge&15]+HEX_CHARS[ye>>28&15]+HEX_CHARS[ye>>24&15]+HEX_CHARS[ye>>20&15]+HEX_CHARS[ye>>16&15]+HEX_CHARS[ye>>12&15]+HEX_CHARS[ye>>8&15]+HEX_CHARS[ye>>4&15]+HEX_CHARS[ye&15]+HEX_CHARS[xe>>28&15]+HEX_CHARS[xe>>24&15]+HEX_CHARS[xe>>20&15]+HEX_CHARS[xe>>16&15]+HEX_CHARS[xe>>12&15]+HEX_CHARS[xe>>8&15]+HEX_CHARS[xe>>4&15]+HEX_CHARS[xe&15];return this.is224||(we+=HEX_CHARS[me>>28&15]+HEX_CHARS[me>>24&15]+HEX_CHARS[me>>20&15]+HEX_CHARS[me>>16&15]+HEX_CHARS[me>>12&15]+HEX_CHARS[me>>8&15]+HEX_CHARS[me>>4&15]+HEX_CHARS[me&15]),we},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var he=this.h0,fe=this.h1,le=this.h2,pe=this.h3,ge=this.h4,ye=this.h5,xe=this.h6,me=this.h7,we=[he>>24&255,he>>16&255,he>>8&255,he&255,fe>>24&255,fe>>16&255,fe>>8&255,fe&255,le>>24&255,le>>16&255,le>>8&255,le&255,pe>>24&255,pe>>16&255,pe>>8&255,pe&255,ge>>24&255,ge>>16&255,ge>>8&255,ge&255,ye>>24&255,ye>>16&255,ye>>8&255,ye&255,xe>>24&255,xe>>16&255,xe>>8&255,xe&255];return this.is224||we.push(me>>24&255,me>>16&255,me>>8&255,me&255),we},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var he=new ArrayBuffer(this.is224?28:32),fe=new DataView(he);return fe.setUint32(0,this.h0),fe.setUint32(4,this.h1),fe.setUint32(8,this.h2),fe.setUint32(12,this.h3),fe.setUint32(16,this.h4),fe.setUint32(20,this.h5),fe.setUint32(24,this.h6),this.is224||fe.setUint32(28,this.h7),he};function HmacSha256(he,fe,le){var pe,ge=typeof he;if(ge==="string"){var ye=[],xe=he.length,me=0,we;for(pe=0;pe<xe;++pe)we=he.charCodeAt(pe),we<128?ye[me++]=we:we<2048?(ye[me++]=192|we>>6,ye[me++]=128|we&63):we<55296||we>=57344?(ye[me++]=224|we>>12,ye[me++]=128|we>>6&63,ye[me++]=128|we&63):(we=65536+((we&1023)<<10|he.charCodeAt(++pe)&1023),ye[me++]=240|we>>18,ye[me++]=128|we>>12&63,ye[me++]=128|we>>6&63,ye[me++]=128|we&63);he=ye}else if(ge==="object"){if(he===null)throw new Error(ERROR);if(ARRAY_BUFFER&&he.constructor===ArrayBuffer)he=new Uint8Array(he);else if(!Array.isArray(he)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(he)))throw new Error(ERROR)}else throw new Error(ERROR);he.length>64&&(he=new Sha256(fe,!0).update(he).array());var Ee=[],Ae=[];for(pe=0;pe<64;++pe){var Se=he[pe]||0;Ee[pe]=92^Se,Ae[pe]=54^Se}Sha256.call(this,fe,le),this.update(Ae),this.oKeyPad=Ee,this.inner=!0,this.sharedMemory=le}HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var he=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(he),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224)})()})(sha256$1);var sha256Exports=sha256$1.exports,__awaiter$1=commonjsGlobal&&commonjsGlobal.__awaiter||function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})},__importDefault=commonjsGlobal&&commonjsGlobal.__importDefault||function(he){return he&&he.__esModule?he:{default:he}};Object.defineProperty(sign,"__esModule",{value:!0});sign.signDelegateAction=sign.signTransaction=void 0;const js_sha256_1=__importDefault(sha256Exports),actions_1=actions,create_transaction_1=create_transaction,schema_1=schema,signature_1=signature;function signTransactionObject(he,fe,le,pe){return __awaiter$1(this,void 0,void 0,function*(){const ge=(0,schema_1.encodeTransaction)(he),ye=new Uint8Array(js_sha256_1.default.sha256.array(ge)),xe=yield fe.signMessage(ge,le,pe),me=new schema_1.SignedTransaction({transaction:he,signature:new signature_1.Signature({keyType:he.publicKey.keyType,data:xe.signature})});return[ye,me]})}function signTransaction(...he){return __awaiter$1(this,void 0,void 0,function*(){if(he[0].constructor===schema_1.Transaction){const[fe,le,pe,ge]=he;return signTransactionObject(fe,le,pe,ge)}else{const[fe,le,pe,ge,ye,xe,me]=he,we=yield ye.getPublicKey(xe,me),Ee=(0,create_transaction_1.createTransaction)(xe,we,fe,le,pe,ge);return signTransactionObject(Ee,ye,xe,me)}})}sign.signTransaction=signTransaction;function signDelegateAction({delegateAction:he,signer:fe}){return __awaiter$1(this,void 0,void 0,function*(){const le=(0,schema_1.encodeDelegateAction)(he),pe=yield fe.sign(le),ge=new actions_1.SignedDelegate({delegateAction:he,signature:new signature_1.Signature({keyType:he.publicKey.keyType,data:pe})});return{hash:new Uint8Array(js_sha256_1.default.sha256.array(le)),signedDelegateAction:ge}})}sign.signDelegateAction=signDelegateAction;(function(he){var fe=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(pe,ge,ye,xe){xe===void 0&&(xe=ye);var me=Object.getOwnPropertyDescriptor(ge,ye);(!me||("get"in me?!ge.__esModule:me.writable||me.configurable))&&(me={enumerable:!0,get:function(){return ge[ye]}}),Object.defineProperty(pe,xe,me)}:function(pe,ge,ye,xe){xe===void 0&&(xe=ye),pe[xe]=ge[ye]}),le=commonjsGlobal&&commonjsGlobal.__exportStar||function(pe,ge){for(var ye in pe)ye!=="default"&&!Object.prototype.hasOwnProperty.call(ge,ye)&&fe(ge,pe,ye)};Object.defineProperty(he,"__esModule",{value:!0}),le(action_creators,he),le(actions,he),le(create_transaction,he),le(delegate,he),le(schema,he),le(sign,he),le(signature,he)})(lib$2);class NearConfig extends BaseWebToken{constructor(le){super(le);je(this,"keyPair");je(this,"near");this.near=this.wallet._near,this.base=["yoctoNEAR",1e25]}async ready(){if(!this.wallet.isSignedIn())throw new Error("Wallet has not been signed in!");const le=new lib$4.BrowserLocalStorageKeyStore,pe=this.wallet.account();if(this.keyPair=await le.getKey(this.wallet._networkId,pe.accountId),!this.keyPair){this.keyPair=lib$6.KeyPair.fromRandom("ed25519");const ge=this.keyPair.getPublicKey().toString();await le.setKey(this.wallet._networkId,pe.accountId,this.keyPair),await pe.addKey(ge)}this._address=await this.wallet.getAccountId(),this.providerInstance=this.wallet._near.connection.provider}async getTx(le){const pe=await this.providerInstance,[ge,ye]=le.split(":"),xe=await pe.txStatusReceipts(bs58$2.decode(ye),ge),me=await pe.block(xe.transaction_outcome.block_hash),we=(await pe.block({finality:"final"})).header.height;if(xe.receipts_outcome[0].outcome.status.SuccessValue!=="")throw new Error("Transaction failed!");const Ee=xe.receipts[0].receipt.Action.actions[0].Transfer.deposit??0;return{from:ge,to:xe.transaction.receiver_id,amount:new BigNumber$1(Ee),blockHeight:new BigNumber$1(me.header.height),pending:!1,confirmed:we-me.header.height>=this.minConfirm}}ownerToAddress(le){const pe=typeof le=="string"?le:bs58$2.encode(le);return Buffer$4.from(bs58$2.decode(pe.replace("ed25519:",""))).toString("hex")}async sign(le){return this.getSigner().sign(le)}getSigner(){return new NearSigner(this.keyPair.secretKey)}async verify(le,pe,ge){return NearSigner.verify(le,pe,ge)}async getCurrentHeight(){const le=await this.providerInstance.status();return new BigNumber$1(le.sync_info.latest_block_height)}async getFee(le,pe){const ge=(await this.providerInstance.block({finality:"final"})).header.height,ye=await this.providerInstance.gasPrice(ge);return new BigNumber$1(ye.gas_price).multipliedBy(45e10)}async sendTx(le){const pe=await this.providerInstance.sendTransaction(le);return`${this.address}:${pe.transaction.hash}`}async createTx(le,pe,ge){if(!this.address)throw new Error("Address is undefined - you might be missing a wallet, or have not run Irys.ready()");const ye=await this.providerInstance.query({request_type:"view_access_key",finality:"final",account_id:this.address,public_key:this.keyPair.getPublicKey().toString()}),xe=++ye.nonce,me=Buffer$4.from(bs58$2.decode(ye.block_hash)),we=[lib$2.actionCreators.transfer(new BN$2(new BigNumber$1(le).toString()))],Ee=lib$2.createTransaction(this.address,this.keyPair.getPublicKey(),pe,xe,we,me),Ae=serialize_1(lib$2.SCHEMA,Ee),Se=new Uint8Array(sha256Exports.sha256.array(Ae)),Le=this.keyPair.sign(Se);return{tx:new lib$2.SignedTransaction({transaction:Ee,signature:new lib$2.Signature({keyType:Ee.publicKey.keyType,data:Le.signature})}),txId:void 0}}async getPublicKey(){return Buffer$4.from(this.keyPair.getPublicKey().data)}}class SolanaConfig extends BaseWebToken{constructor(le){var pe;super(le);je(this,"signer");je(this,"minConfirm",1);je(this,"finality","finalized");this.base=["lamports",1e9],this.finality=((pe=this==null?void 0:this.opts)==null?void 0:pe.finality)??"finalized"}async getProvider(){return this.providerInstance||(this.providerInstance=new Connection(this.providerUrl,{confirmTransactionInitialTimeout:6e4,commitment:this.finality})),this.providerInstance}async getTx(le){const pe=await this.getProvider(),ge=await pe.getTransaction(le,{commitment:this.finality,maxSupportedTransactionVersion:0});if(!ge)throw new Error("Confirmed tx not found");const ye=await pe.getSlot(this.finality);if(!ge.meta)throw new Error(`Unable to resolve transaction ${le}`);const xe=new BigNumber$1(ge.meta.postBalances[1]).minus(new BigNumber$1(ge.meta.preBalances[1])),me=ge.transaction.message.getAccountKeys().staticAccountKeys;return{from:me[0].toBase58(),to:me[1].toBase58(),amount:xe,blockHeight:new BigNumber$1(ge.slot),pending:!1,confirmed:ye-ge.slot>=1}}ownerToAddress(le){return typeof le=="string"&&(le=Buffer$4.from(le)),bs58$2.encode(le)}async sign(le){return await(await this.getSigner()).sign(le)}getSigner(){return this.signer||(this.signer=new HexSolanaSigner$1(this.wallet)),this.signer}verify(le,pe,ge){return HexSolanaSigner$1.verify(le,pe,ge)}async getCurrentHeight(){return new BigNumber$1((await(await this.getProvider()).getEpochInfo()).blockHeight??0)}async getFee(le,pe,ge){var Ae;const ye=await this.getProvider(),xe=await this._createTxUnsigned(le,pe??"DHyDV2ZjN3rB6qNGXS48dP5onfbZd3fAEz6C5HJwSqRD"),me=new BigNumber$1(await xe.getEstimatedFee(ye)??5e3),we=await((Ae=ye==null?void 0:ye.getRecentPrioritizationFees)==null?void 0:Ae.call(ye).catch(Se=>[{prioritizationFee:0}])),Ee=we.reduce((Se,Le)=>Se.plus(Le.prioritizationFee),new BigNumber$1(0)).dividedToIntegerBy(we.length??1);return{computeBudget:me,computeUnitPrice:Ee.multipliedBy(ge??1).integerValue(BigNumber$1.ROUND_CEIL)}}async sendTx(le){return await this.wallet.sendTransaction(le,await this.getProvider(),{skipPreflight:!0})}async _createTxUnsigned(le,pe,ge){var we,Ee;const ye=new PublicKey$2(await this.getPublicKey()),xe=await retry$1(async Ae=>{var Se;try{return await(await this.getProvider()).getLatestBlockhash(this.finality)}catch(Le){throw(Se=Le.message)!=null&&Se.includes("blockhash")?Le:(Ae(Le),new Error("Unreachable"))}},{retries:3,minTimeout:1e3}),me=new Transaction$2({...xe,feePayer:ye});return me.add(SystemProgram.transfer({fromPubkey:ye,toPubkey:new PublicKey$2(pe),lamports:+new BigNumber$1(le).toNumber()})),!((Ee=(we=this==null?void 0:this.config)==null?void 0:we.opts)!=null&&Ee.disablePriorityFees)&&ge&&(me.add(ComputeBudgetProgram.setComputeUnitPrice({microLamports:ge.computeUnitPrice.toNumber()})),me.add(ComputeBudgetProgram.setComputeUnitLimit({units:ge.computeBudget.toNumber()}))),me}async createTx(le,pe,ge){return{tx:await this._createTxUnsigned(le,pe,ge),txId:void 0}}async getPublicKey(){if(!this.wallet.publicKey)throw new Error("Wallet.publicKey is undefined");return this.wallet.publicKey.toBuffer()}}const version$1="abi/5.7.0",logger$5=new Logger(version$1),_constructorGuard={};let ModifiersBytes={calldata:!0,memory:!0,storage:!0},ModifiersNest={calldata:!0,memory:!0};function checkModifier(he,fe){if(he==="bytes"||he==="string"){if(ModifiersBytes[fe])return!0}else if(he==="address"){if(fe==="payable")return!0}else if((he.indexOf("[")>=0||he==="tuple")&&ModifiersNest[fe])return!0;return(ModifiersBytes[fe]||fe==="payable")&&logger$5.throwArgumentError("invalid modifier","name",fe),!1}function parseParamType(he,fe){let le=he;function pe(me){logger$5.throwArgumentError(`unexpected character at position ${me}`,"param",he)}he=he.replace(/\s/g," ");function ge(me){let we={type:"",name:"",parent:me,state:{allowType:!0}};return fe&&(we.indexed=!1),we}let ye={type:"",name:"",state:{allowType:!0}},xe=ye;for(let me=0;me<he.length;me++){let we=he[me];switch(we){case"(":xe.state.allowType&&xe.type===""?xe.type="tuple":xe.state.allowParams||pe(me),xe.state.allowType=!1,xe.type=verifyType(xe.type),xe.components=[ge(xe)],xe=xe.components[0];break;case")":delete xe.state,xe.name==="indexed"&&(fe||pe(me),xe.indexed=!0,xe.name=""),checkModifier(xe.type,xe.name)&&(xe.name=""),xe.type=verifyType(xe.type);let Ee=xe;xe=xe.parent,xe||pe(me),delete Ee.parent,xe.state.allowParams=!1,xe.state.allowName=!0,xe.state.allowArray=!0;break;case",":delete xe.state,xe.name==="indexed"&&(fe||pe(me),xe.indexed=!0,xe.name=""),checkModifier(xe.type,xe.name)&&(xe.name=""),xe.type=verifyType(xe.type);let Ae=ge(xe.parent);xe.parent.components.push(Ae),delete xe.parent,xe=Ae;break;case" ":xe.state.allowType&&xe.type!==""&&(xe.type=verifyType(xe.type),delete xe.state.allowType,xe.state.allowName=!0,xe.state.allowParams=!0),xe.state.allowName&&xe.name!==""&&(xe.name==="indexed"?(fe||pe(me),xe.indexed&&pe(me),xe.indexed=!0,xe.name=""):checkModifier(xe.type,xe.name)?xe.name="":xe.state.allowName=!1);break;case"[":xe.state.allowArray||pe(me),xe.type+=we,xe.state.allowArray=!1,xe.state.allowName=!1,xe.state.readArray=!0;break;case"]":xe.state.readArray||pe(me),xe.type+=we,xe.state.readArray=!1,xe.state.allowArray=!0,xe.state.allowName=!0;break;default:xe.state.allowType?(xe.type+=we,xe.state.allowParams=!0,xe.state.allowArray=!0):xe.state.allowName?(xe.name+=we,delete xe.state.allowArray):xe.state.readArray?xe.type+=we:pe(me)}}return xe.parent&&logger$5.throwArgumentError("unexpected eof","param",he),delete ye.state,xe.name==="indexed"?(fe||pe(le.length-7),xe.indexed&&pe(le.length-7),xe.indexed=!0,xe.name=""):checkModifier(xe.type,xe.name)&&(xe.name=""),ye.type=verifyType(ye.type),ye}function populate(he,fe){for(let le in fe)defineReadOnly(he,le,fe[le])}const FormatTypes=Object.freeze({sighash:"sighash",minimal:"minimal",full:"full",json:"json"}),paramTypeArray=new RegExp(/^(.*)\[([0-9]*)\]$/);class ParamType{constructor(fe,le){fe!==_constructorGuard&&logger$5.throwError("use fromString",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new ParamType()"}),populate(this,le);let pe=this.type.match(paramTypeArray);pe?populate(this,{arrayLength:parseInt(pe[2]||"-1"),arrayChildren:ParamType.fromObject({type:pe[1],components:this.components}),baseType:"array"}):populate(this,{arrayLength:null,arrayChildren:null,baseType:this.components!=null?"tuple":this.type}),this._isParamType=!0,Object.freeze(this)}format(fe){if(fe||(fe=FormatTypes.sighash),FormatTypes[fe]||logger$5.throwArgumentError("invalid format type","format",fe),fe===FormatTypes.json){let pe={type:this.baseType==="tuple"?"tuple":this.type,name:this.name||void 0};return typeof this.indexed=="boolean"&&(pe.indexed=this.indexed),this.components&&(pe.components=this.components.map(ge=>JSON.parse(ge.format(fe)))),JSON.stringify(pe)}let le="";return this.baseType==="array"?(le+=this.arrayChildren.format(fe),le+="["+(this.arrayLength<0?"":String(this.arrayLength))+"]"):this.baseType==="tuple"?(fe!==FormatTypes.sighash&&(le+=this.type),le+="("+this.components.map(pe=>pe.format(fe)).join(fe===FormatTypes.full?", ":",")+")"):le+=this.type,fe!==FormatTypes.sighash&&(this.indexed===!0&&(le+=" indexed"),fe===FormatTypes.full&&this.name&&(le+=" "+this.name)),le}static from(fe,le){return typeof fe=="string"?ParamType.fromString(fe,le):ParamType.fromObject(fe)}static fromObject(fe){return ParamType.isParamType(fe)?fe:new ParamType(_constructorGuard,{name:fe.name||null,type:verifyType(fe.type),indexed:fe.indexed==null?null:!!fe.indexed,components:fe.components?fe.components.map(ParamType.fromObject):null})}static fromString(fe,le){function pe(ge){return ParamType.fromObject({name:ge.name,type:ge.type,indexed:ge.indexed,components:ge.components})}return pe(parseParamType(fe,!!le))}static isParamType(fe){return!!(fe!=null&&fe._isParamType)}}function parseParams(he,fe){return splitNesting(he).map(le=>ParamType.fromString(le,fe))}class Fragment{constructor(fe,le){fe!==_constructorGuard&&logger$5.throwError("use a static from method",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new Fragment()"}),populate(this,le),this._isFragment=!0,Object.freeze(this)}static from(fe){return Fragment.isFragment(fe)?fe:typeof fe=="string"?Fragment.fromString(fe):Fragment.fromObject(fe)}static fromObject(fe){if(Fragment.isFragment(fe))return fe;switch(fe.type){case"function":return FunctionFragment.fromObject(fe);case"event":return EventFragment.fromObject(fe);case"constructor":return ConstructorFragment.fromObject(fe);case"error":return ErrorFragment.fromObject(fe);case"fallback":case"receive":return null}return logger$5.throwArgumentError("invalid fragment object","value",fe)}static fromString(fe){return fe=fe.replace(/\s/g," "),fe=fe.replace(/\(/g," (").replace(/\)/g,") ").replace(/\s+/g," "),fe=fe.trim(),fe.split(" ")[0]==="event"?EventFragment.fromString(fe.substring(5).trim()):fe.split(" ")[0]==="function"?FunctionFragment.fromString(fe.substring(8).trim()):fe.split("(")[0].trim()==="constructor"?ConstructorFragment.fromString(fe.trim()):fe.split(" ")[0]==="error"?ErrorFragment.fromString(fe.substring(5).trim()):logger$5.throwArgumentError("unsupported fragment","value",fe)}static isFragment(fe){return!!(fe&&fe._isFragment)}}class EventFragment extends Fragment{format(fe){if(fe||(fe=FormatTypes.sighash),FormatTypes[fe]||logger$5.throwArgumentError("invalid format type","format",fe),fe===FormatTypes.json)return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map(pe=>JSON.parse(pe.format(fe)))});let le="";return fe!==FormatTypes.sighash&&(le+="event "),le+=this.name+"("+this.inputs.map(pe=>pe.format(fe)).join(fe===FormatTypes.full?", ":",")+") ",fe!==FormatTypes.sighash&&this.anonymous&&(le+="anonymous "),le.trim()}static from(fe){return typeof fe=="string"?EventFragment.fromString(fe):EventFragment.fromObject(fe)}static fromObject(fe){if(EventFragment.isEventFragment(fe))return fe;fe.type!=="event"&&logger$5.throwArgumentError("invalid event object","value",fe);const le={name:verifyIdentifier(fe.name),anonymous:fe.anonymous,inputs:fe.inputs?fe.inputs.map(ParamType.fromObject):[],type:"event"};return new EventFragment(_constructorGuard,le)}static fromString(fe){let le=fe.match(regexParen);le||logger$5.throwArgumentError("invalid event string","value",fe);let pe=!1;return le[3].split(" ").forEach(ge=>{switch(ge.trim()){case"anonymous":pe=!0;break;case"":break;default:logger$5.warn("unknown modifier: "+ge)}}),EventFragment.fromObject({name:le[1].trim(),anonymous:pe,inputs:parseParams(le[2],!0),type:"event"})}static isEventFragment(fe){return fe&&fe._isFragment&&fe.type==="event"}}function parseGas(he,fe){fe.gas=null;let le=he.split("@");return le.length!==1?(le.length>2&&logger$5.throwArgumentError("invalid human-readable ABI signature","value",he),le[1].match(/^[0-9]+$/)||logger$5.throwArgumentError("invalid human-readable ABI signature gas","value",he),fe.gas=BigNumber.from(le[1]),le[0]):he}function parseModifiers(he,fe){fe.constant=!1,fe.payable=!1,fe.stateMutability="nonpayable",he.split(" ").forEach(le=>{switch(le.trim()){case"constant":fe.constant=!0;break;case"payable":fe.payable=!0,fe.stateMutability="payable";break;case"nonpayable":fe.payable=!1,fe.stateMutability="nonpayable";break;case"pure":fe.constant=!0,fe.stateMutability="pure";break;case"view":fe.constant=!0,fe.stateMutability="view";break;case"external":case"public":case"":break;default:console.log("unknown modifier: "+le)}})}function verifyState(he){let fe={constant:!1,payable:!0,stateMutability:"payable"};return he.stateMutability!=null?(fe.stateMutability=he.stateMutability,fe.constant=fe.stateMutability==="view"||fe.stateMutability==="pure",he.constant!=null&&!!he.constant!==fe.constant&&logger$5.throwArgumentError("cannot have constant function with mutability "+fe.stateMutability,"value",he),fe.payable=fe.stateMutability==="payable",he.payable!=null&&!!he.payable!==fe.payable&&logger$5.throwArgumentError("cannot have payable function with mutability "+fe.stateMutability,"value",he)):he.payable!=null?(fe.payable=!!he.payable,he.constant==null&&!fe.payable&&he.type!=="constructor"&&logger$5.throwArgumentError("unable to determine stateMutability","value",he),fe.constant=!!he.constant,fe.constant?fe.stateMutability="view":fe.stateMutability=fe.payable?"payable":"nonpayable",fe.payable&&fe.constant&&logger$5.throwArgumentError("cannot have constant payable function","value",he)):he.constant!=null?(fe.constant=!!he.constant,fe.payable=!fe.constant,fe.stateMutability=fe.constant?"view":"payable"):he.type!=="constructor"&&logger$5.throwArgumentError("unable to determine stateMutability","value",he),fe}class ConstructorFragment extends Fragment{format(fe){if(fe||(fe=FormatTypes.sighash),FormatTypes[fe]||logger$5.throwArgumentError("invalid format type","format",fe),fe===FormatTypes.json)return JSON.stringify({type:"constructor",stateMutability:this.stateMutability!=="nonpayable"?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map(pe=>JSON.parse(pe.format(fe)))});fe===FormatTypes.sighash&&logger$5.throwError("cannot format a constructor for sighash",Logger.errors.UNSUPPORTED_OPERATION,{operation:"format(sighash)"});let le="constructor("+this.inputs.map(pe=>pe.format(fe)).join(fe===FormatTypes.full?", ":",")+") ";return this.stateMutability&&this.stateMutability!=="nonpayable"&&(le+=this.stateMutability+" "),le.trim()}static from(fe){return typeof fe=="string"?ConstructorFragment.fromString(fe):ConstructorFragment.fromObject(fe)}static fromObject(fe){if(ConstructorFragment.isConstructorFragment(fe))return fe;fe.type!=="constructor"&&logger$5.throwArgumentError("invalid constructor object","value",fe);let le=verifyState(fe);le.constant&&logger$5.throwArgumentError("constructor cannot be constant","value",fe);const pe={name:null,type:fe.type,inputs:fe.inputs?fe.inputs.map(ParamType.fromObject):[],payable:le.payable,stateMutability:le.stateMutability,gas:fe.gas?BigNumber.from(fe.gas):null};return new ConstructorFragment(_constructorGuard,pe)}static fromString(fe){let le={type:"constructor"};fe=parseGas(fe,le);let pe=fe.match(regexParen);return(!pe||pe[1].trim()!=="constructor")&&logger$5.throwArgumentError("invalid constructor string","value",fe),le.inputs=parseParams(pe[2].trim(),!1),parseModifiers(pe[3].trim(),le),ConstructorFragment.fromObject(le)}static isConstructorFragment(fe){return fe&&fe._isFragment&&fe.type==="constructor"}}class FunctionFragment extends ConstructorFragment{format(fe){if(fe||(fe=FormatTypes.sighash),FormatTypes[fe]||logger$5.throwArgumentError("invalid format type","format",fe),fe===FormatTypes.json)return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:this.stateMutability!=="nonpayable"?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map(pe=>JSON.parse(pe.format(fe))),outputs:this.outputs.map(pe=>JSON.parse(pe.format(fe)))});let le="";return fe!==FormatTypes.sighash&&(le+="function "),le+=this.name+"("+this.inputs.map(pe=>pe.format(fe)).join(fe===FormatTypes.full?", ":",")+") ",fe!==FormatTypes.sighash&&(this.stateMutability?this.stateMutability!=="nonpayable"&&(le+=this.stateMutability+" "):this.constant&&(le+="view "),this.outputs&&this.outputs.length&&(le+="returns ("+this.outputs.map(pe=>pe.format(fe)).join(", ")+") "),this.gas!=null&&(le+="@"+this.gas.toString()+" ")),le.trim()}static from(fe){return typeof fe=="string"?FunctionFragment.fromString(fe):FunctionFragment.fromObject(fe)}static fromObject(fe){if(FunctionFragment.isFunctionFragment(fe))return fe;fe.type!=="function"&&logger$5.throwArgumentError("invalid function object","value",fe);let le=verifyState(fe);const pe={type:fe.type,name:verifyIdentifier(fe.name),constant:le.constant,inputs:fe.inputs?fe.inputs.map(ParamType.fromObject):[],outputs:fe.outputs?fe.outputs.map(ParamType.fromObject):[],payable:le.payable,stateMutability:le.stateMutability,gas:fe.gas?BigNumber.from(fe.gas):null};return new FunctionFragment(_constructorGuard,pe)}static fromString(fe){let le={type:"function"};fe=parseGas(fe,le);let pe=fe.split(" returns ");pe.length>2&&logger$5.throwArgumentError("invalid function string","value",fe);let ge=pe[0].match(regexParen);if(ge||logger$5.throwArgumentError("invalid function signature","value",fe),le.name=ge[1].trim(),le.name&&verifyIdentifier(le.name),le.inputs=parseParams(ge[2],!1),parseModifiers(ge[3].trim(),le),pe.length>1){let ye=pe[1].match(regexParen);(ye[1].trim()!=""||ye[3].trim()!="")&&logger$5.throwArgumentError("unexpected tokens","value",fe),le.outputs=parseParams(ye[2],!1)}else le.outputs=[];return FunctionFragment.fromObject(le)}static isFunctionFragment(fe){return fe&&fe._isFragment&&fe.type==="function"}}function checkForbidden(he){const fe=he.format();return(fe==="Error(string)"||fe==="Panic(uint256)")&&logger$5.throwArgumentError(`cannot specify user defined ${fe} error`,"fragment",he),he}class ErrorFragment extends Fragment{format(fe){if(fe||(fe=FormatTypes.sighash),FormatTypes[fe]||logger$5.throwArgumentError("invalid format type","format",fe),fe===FormatTypes.json)return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map(pe=>JSON.parse(pe.format(fe)))});let le="";return fe!==FormatTypes.sighash&&(le+="error "),le+=this.name+"("+this.inputs.map(pe=>pe.format(fe)).join(fe===FormatTypes.full?", ":",")+") ",le.trim()}static from(fe){return typeof fe=="string"?ErrorFragment.fromString(fe):ErrorFragment.fromObject(fe)}static fromObject(fe){if(ErrorFragment.isErrorFragment(fe))return fe;fe.type!=="error"&&logger$5.throwArgumentError("invalid error object","value",fe);const le={type:fe.type,name:verifyIdentifier(fe.name),inputs:fe.inputs?fe.inputs.map(ParamType.fromObject):[]};return checkForbidden(new ErrorFragment(_constructorGuard,le))}static fromString(fe){let le={type:"error"},pe=fe.match(regexParen);return pe||logger$5.throwArgumentError("invalid error signature","value",fe),le.name=pe[1].trim(),le.name&&verifyIdentifier(le.name),le.inputs=parseParams(pe[2],!1),checkForbidden(ErrorFragment.fromObject(le))}static isErrorFragment(fe){return fe&&fe._isFragment&&fe.type==="error"}}function verifyType(he){return he.match(/^uint($|[^1-9])/)?he="uint256"+he.substring(4):he.match(/^int($|[^1-9])/)&&(he="int256"+he.substring(3)),he}const regexIdentifier=new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");function verifyIdentifier(he){return(!he||!he.match(regexIdentifier))&&logger$5.throwArgumentError(`invalid identifier "${he}"`,"value",he),he}const regexParen=new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");function splitNesting(he){he=he.trim();let fe=[],le="",pe=0;for(let ge=0;ge<he.length;ge++){let ye=he[ge];ye===","&&pe===0?(fe.push(le),le=""):(le+=ye,ye==="("?pe++:ye===")"&&(pe--,pe===-1&&logger$5.throwArgumentError("unbalanced parenthesis","value",he)))}return le&&fe.push(le),fe}const logger$4=new Logger(version$1);function checkResultErrors(he){const fe=[],le=function(pe,ge){if(Array.isArray(ge))for(let ye in ge){const xe=pe.slice();xe.push(ye);try{le(xe,ge[ye])}catch(me){fe.push({path:xe,error:me})}}};return le([],he),fe}class Coder{constructor(fe,le,pe,ge){this.name=fe,this.type=le,this.localName=pe,this.dynamic=ge}_throwError(fe,le){logger$4.throwArgumentError(fe,this.localName,le)}}class Writer{constructor(fe){defineReadOnly(this,"wordSize",fe||32),this._data=[],this._dataLength=0,this._padding=new Uint8Array(fe)}get data(){return hexConcat(this._data)}get length(){return this._dataLength}_writeData(fe){return this._data.push(fe),this._dataLength+=fe.length,fe.length}appendWriter(fe){return this._writeData(concat(fe._data))}writeBytes(fe){let le=arrayify(fe);const pe=le.length%this.wordSize;return pe&&(le=concat([le,this._padding.slice(pe)])),this._writeData(le)}_getValue(fe){let le=arrayify(BigNumber.from(fe));return le.length>this.wordSize&&logger$4.throwError("value out-of-bounds",Logger.errors.BUFFER_OVERRUN,{length:this.wordSize,offset:le.length}),le.length%this.wordSize&&(le=concat([this._padding.slice(le.length%this.wordSize),le])),le}writeValue(fe){return this._writeData(this._getValue(fe))}writeUpdatableValue(){const fe=this._data.length;return this._data.push(this._padding),this._dataLength+=this.wordSize,le=>{this._data[fe]=this._getValue(le)}}}class Reader{constructor(fe,le,pe,ge){defineReadOnly(this,"_data",arrayify(fe)),defineReadOnly(this,"wordSize",le||32),defineReadOnly(this,"_coerceFunc",pe),defineReadOnly(this,"allowLoose",ge),this._offset=0}get data(){return hexlify(this._data)}get consumed(){return this._offset}static coerce(fe,le){let pe=fe.match("^u?int([0-9]+)$");return pe&&parseInt(pe[1])<=48&&(le=le.toNumber()),le}coerce(fe,le){return this._coerceFunc?this._coerceFunc(fe,le):Reader.coerce(fe,le)}_peekBytes(fe,le,pe){let ge=Math.ceil(le/this.wordSize)*this.wordSize;return this._offset+ge>this._data.length&&(this.allowLoose&&pe&&this._offset+le<=this._data.length?ge=le:logger$4.throwError("data out-of-bounds",Logger.errors.BUFFER_OVERRUN,{length:this._data.length,offset:this._offset+ge})),this._data.slice(this._offset,this._offset+ge)}subReader(fe){return new Reader(this._data.slice(this._offset+fe),this.wordSize,this._coerceFunc,this.allowLoose)}readBytes(fe,le){let pe=this._peekBytes(0,fe,!!le);return this._offset+=pe.length,pe.slice(0,fe)}readValue(){return BigNumber.from(this.readBytes(this.wordSize))}}class AddressCoder extends Coder{constructor(fe){super("address","address",fe,!1)}defaultValue(){return"0x0000000000000000000000000000000000000000"}encode(fe,le){try{le=getAddress(le)}catch(pe){this._throwError(pe.message,le)}return fe.writeValue(le)}decode(fe){return getAddress(hexZeroPad(fe.readValue().toHexString(),20))}}class AnonymousCoder extends Coder{constructor(fe){super(fe.name,fe.type,void 0,fe.dynamic),this.coder=fe}defaultValue(){return this.coder.defaultValue()}encode(fe,le){return this.coder.encode(fe,le)}decode(fe){return this.coder.decode(fe)}}const logger$3=new Logger(version$1);function pack(he,fe,le){let pe=null;if(Array.isArray(le))pe=le;else if(le&&typeof le=="object"){let we={};pe=fe.map(Ee=>{const Ae=Ee.localName;return Ae||logger$3.throwError("cannot encode object for signature with missing names",Logger.errors.INVALID_ARGUMENT,{argument:"values",coder:Ee,value:le}),we[Ae]&&logger$3.throwError("cannot encode object for signature with duplicate names",Logger.errors.INVALID_ARGUMENT,{argument:"values",coder:Ee,value:le}),we[Ae]=!0,le[Ae]})}else logger$3.throwArgumentError("invalid tuple value","tuple",le);fe.length!==pe.length&&logger$3.throwArgumentError("types/value length mismatch","tuple",le);let ge=new Writer(he.wordSize),ye=new Writer(he.wordSize),xe=[];fe.forEach((we,Ee)=>{let Ae=pe[Ee];if(we.dynamic){let Se=ye.length;we.encode(ye,Ae);let Le=ge.writeUpdatableValue();xe.push(He=>{Le(He+Se)})}else we.encode(ge,Ae)}),xe.forEach(we=>{we(ge.length)});let me=he.appendWriter(ge);return me+=he.appendWriter(ye),me}function unpack(he,fe){let le=[],pe=he.subReader(0);fe.forEach(ye=>{let xe=null;if(ye.dynamic){let me=he.readValue(),we=pe.subReader(me.toNumber());try{xe=ye.decode(we)}catch(Ee){if(Ee.code===Logger.errors.BUFFER_OVERRUN)throw Ee;xe=Ee,xe.baseType=ye.name,xe.name=ye.localName,xe.type=ye.type}}else try{xe=ye.decode(he)}catch(me){if(me.code===Logger.errors.BUFFER_OVERRUN)throw me;xe=me,xe.baseType=ye.name,xe.name=ye.localName,xe.type=ye.type}xe!=null&&le.push(xe)});const ge=fe.reduce((ye,xe)=>{const me=xe.localName;return me&&(ye[me]||(ye[me]=0),ye[me]++),ye},{});fe.forEach((ye,xe)=>{let me=ye.localName;if(!me||ge[me]!==1||(me==="length"&&(me="_length"),le[me]!=null))return;const we=le[xe];we instanceof Error?Object.defineProperty(le,me,{enumerable:!0,get:()=>{throw we}}):le[me]=we});for(let ye=0;ye<le.length;ye++){const xe=le[ye];xe instanceof Error&&Object.defineProperty(le,ye,{enumerable:!0,get:()=>{throw xe}})}return Object.freeze(le)}class ArrayCoder extends Coder{constructor(fe,le,pe){const ge=fe.type+"["+(le>=0?le:"")+"]",ye=le===-1||fe.dynamic;super("array",ge,pe,ye),this.coder=fe,this.length=le}defaultValue(){const fe=this.coder.defaultValue(),le=[];for(let pe=0;pe<this.length;pe++)le.push(fe);return le}encode(fe,le){Array.isArray(le)||this._throwError("expected array value",le);let pe=this.length;pe===-1&&(pe=le.length,fe.writeValue(le.length)),logger$3.checkArgumentCount(le.length,pe,"coder array"+(this.localName?" "+this.localName:""));let ge=[];for(let ye=0;ye<le.length;ye++)ge.push(this.coder);return pack(fe,ge,le)}decode(fe){let le=this.length;le===-1&&(le=fe.readValue().toNumber(),le*32>fe._data.length&&logger$3.throwError("insufficient data length",Logger.errors.BUFFER_OVERRUN,{length:fe._data.length,count:le}));let pe=[];for(let ge=0;ge<le;ge++)pe.push(new AnonymousCoder(this.coder));return fe.coerce(this.name,unpack(fe,pe))}}class BooleanCoder extends Coder{constructor(fe){super("bool","bool",fe,!1)}defaultValue(){return!1}encode(fe,le){return fe.writeValue(le?1:0)}decode(fe){return fe.coerce(this.type,!fe.readValue().isZero())}}class DynamicBytesCoder extends Coder{constructor(fe,le){super(fe,fe,le,!0)}defaultValue(){return"0x"}encode(fe,le){le=arrayify(le);let pe=fe.writeValue(le.length);return pe+=fe.writeBytes(le),pe}decode(fe){return fe.readBytes(fe.readValue().toNumber(),!0)}}class BytesCoder extends DynamicBytesCoder{constructor(fe){super("bytes",fe)}decode(fe){return fe.coerce(this.name,hexlify(super.decode(fe)))}}class FixedBytesCoder extends Coder{constructor(fe,le){let pe="bytes"+String(fe);super(pe,pe,le,!1),this.size=fe}defaultValue(){return"0x0000000000000000000000000000000000000000000000000000000000000000".substring(0,2+this.size*2)}encode(fe,le){let pe=arrayify(le);return pe.length!==this.size&&this._throwError("incorrect data length",le),fe.writeBytes(pe)}decode(fe){return fe.coerce(this.name,hexlify(fe.readBytes(this.size)))}}class NullCoder extends Coder{constructor(fe){super("null","",fe,!1)}defaultValue(){return null}encode(fe,le){return le!=null&&this._throwError("not null",le),fe.writeBytes([])}decode(fe){return fe.readBytes(0),fe.coerce(this.name,null)}}class NumberCoder extends Coder{constructor(fe,le,pe){const ge=(le?"int":"uint")+fe*8;super(ge,ge,pe,!1),this.size=fe,this.signed=le}defaultValue(){return 0}encode(fe,le){let pe=BigNumber.from(le),ge=MaxUint256$1.mask(fe.wordSize*8);if(this.signed){let ye=ge.mask(this.size*8-1);(pe.gt(ye)||pe.lt(ye.add(One$1).mul(NegativeOne$1)))&&this._throwError("value out-of-bounds",le)}else(pe.lt(Zero$1)||pe.gt(ge.mask(this.size*8)))&&this._throwError("value out-of-bounds",le);return pe=pe.toTwos(this.size*8).mask(this.size*8),this.signed&&(pe=pe.fromTwos(this.size*8).toTwos(8*fe.wordSize)),fe.writeValue(pe)}decode(fe){let le=fe.readValue().mask(this.size*8);return this.signed&&(le=le.fromTwos(this.size*8)),fe.coerce(this.name,le)}}class StringCoder extends DynamicBytesCoder{constructor(fe){super("string",fe)}defaultValue(){return""}encode(fe,le){return super.encode(fe,toUtf8Bytes(le))}decode(fe){return toUtf8String(super.decode(fe))}}class TupleCoder extends Coder{constructor(fe,le){let pe=!1;const ge=[];fe.forEach(xe=>{xe.dynamic&&(pe=!0),ge.push(xe.type)});const ye="tuple("+ge.join(",")+")";super("tuple",ye,le,pe),this.coders=fe}defaultValue(){const fe=[];this.coders.forEach(pe=>{fe.push(pe.defaultValue())});const le=this.coders.reduce((pe,ge)=>{const ye=ge.localName;return ye&&(pe[ye]||(pe[ye]=0),pe[ye]++),pe},{});return this.coders.forEach((pe,ge)=>{let ye=pe.localName;!ye||le[ye]!==1||(ye==="length"&&(ye="_length"),fe[ye]==null&&(fe[ye]=fe[ge]))}),Object.freeze(fe)}encode(fe,le){return pack(fe,this.coders,le)}decode(fe){return fe.coerce(this.name,unpack(fe,this.coders))}}const logger$2=new Logger(version$1),paramTypeBytes=new RegExp(/^bytes([0-9]*)$/),paramTypeNumber=new RegExp(/^(u?int)([0-9]*)$/);class AbiCoder{constructor(fe){defineReadOnly(this,"coerceFunc",fe||null)}_getCoder(fe){switch(fe.baseType){case"address":return new AddressCoder(fe.name);case"bool":return new BooleanCoder(fe.name);case"string":return new StringCoder(fe.name);case"bytes":return new BytesCoder(fe.name);case"array":return new ArrayCoder(this._getCoder(fe.arrayChildren),fe.arrayLength,fe.name);case"tuple":return new TupleCoder((fe.components||[]).map(pe=>this._getCoder(pe)),fe.name);case"":return new NullCoder(fe.name)}let le=fe.type.match(paramTypeNumber);if(le){let pe=parseInt(le[2]||"256");return(pe===0||pe>256||pe%8!==0)&&logger$2.throwArgumentError("invalid "+le[1]+" bit length","param",fe),new NumberCoder(pe/8,le[1]==="int",fe.name)}if(le=fe.type.match(paramTypeBytes),le){let pe=parseInt(le[1]);return(pe===0||pe>32)&&logger$2.throwArgumentError("invalid bytes length","param",fe),new FixedBytesCoder(pe,fe.name)}return logger$2.throwArgumentError("invalid type","type",fe.type)}_getWordSize(){return 32}_getReader(fe,le){return new Reader(fe,this._getWordSize(),this.coerceFunc,le)}_getWriter(){return new Writer(this._getWordSize())}getDefaultValue(fe){const le=fe.map(ge=>this._getCoder(ParamType.from(ge)));return new TupleCoder(le,"_").defaultValue()}encode(fe,le){fe.length!==le.length&&logger$2.throwError("types/values length mismatch",Logger.errors.INVALID_ARGUMENT,{count:{types:fe.length,values:le.length},value:{types:fe,values:le}});const pe=fe.map(xe=>this._getCoder(ParamType.from(xe))),ge=new TupleCoder(pe,"_"),ye=this._getWriter();return ge.encode(ye,le),ye.data}decode(fe,le,pe){const ge=fe.map(xe=>this._getCoder(ParamType.from(xe)));return new TupleCoder(ge,"_").decode(this._getReader(arrayify(le),pe))}}const defaultAbiCoder=new AbiCoder,logger$1=new Logger(version$1);class LogDescription extends Description{}class TransactionDescription extends Description{}class ErrorDescription extends Description{}class Indexed extends Description{static isIndexed(fe){return!!(fe&&fe._isIndexed)}}const BuiltinErrors={"0x08c379a0":{signature:"Error(string)",name:"Error",inputs:["string"],reason:!0},"0x4e487b71":{signature:"Panic(uint256)",name:"Panic",inputs:["uint256"]}};function wrapAccessError(he,fe){const le=new Error(`deferred error during ABI decoding triggered accessing ${he}`);return le.error=fe,le}class Interface{constructor(fe){let le=[];typeof fe=="string"?le=JSON.parse(fe):le=fe,defineReadOnly(this,"fragments",le.map(pe=>Fragment.from(pe)).filter(pe=>pe!=null)),defineReadOnly(this,"_abiCoder",getStatic(new.target,"getAbiCoder")()),defineReadOnly(this,"functions",{}),defineReadOnly(this,"errors",{}),defineReadOnly(this,"events",{}),defineReadOnly(this,"structs",{}),this.fragments.forEach(pe=>{let ge=null;switch(pe.type){case"constructor":if(this.deploy){logger$1.warn("duplicate definition - constructor");return}defineReadOnly(this,"deploy",pe);return;case"function":ge=this.functions;break;case"event":ge=this.events;break;case"error":ge=this.errors;break;default:return}let ye=pe.format();if(ge[ye]){logger$1.warn("duplicate definition - "+ye);return}ge[ye]=pe}),this.deploy||defineReadOnly(this,"deploy",ConstructorFragment.from({payable:!1,type:"constructor"})),defineReadOnly(this,"_isInterface",!0)}format(fe){fe||(fe=FormatTypes.full),fe===FormatTypes.sighash&&logger$1.throwArgumentError("interface does not support formatting sighash","format",fe);const le=this.fragments.map(pe=>pe.format(fe));return fe===FormatTypes.json?JSON.stringify(le.map(pe=>JSON.parse(pe))):le}static getAbiCoder(){return defaultAbiCoder}static getAddress(fe){return getAddress(fe)}static getSighash(fe){return hexDataSlice(id(fe.format()),0,4)}static getEventTopic(fe){return id(fe.format())}getFunction(fe){if(isHexString$1(fe)){for(const pe in this.functions)if(fe===this.getSighash(pe))return this.functions[pe];logger$1.throwArgumentError("no matching function","sighash",fe)}if(fe.indexOf("(")===-1){const pe=fe.trim(),ge=Object.keys(this.functions).filter(ye=>ye.split("(")[0]===pe);return ge.length===0?logger$1.throwArgumentError("no matching function","name",pe):ge.length>1&&logger$1.throwArgumentError("multiple matching functions","name",pe),this.functions[ge[0]]}const le=this.functions[FunctionFragment.fromString(fe).format()];return le||logger$1.throwArgumentError("no matching function","signature",fe),le}getEvent(fe){if(isHexString$1(fe)){const pe=fe.toLowerCase();for(const ge in this.events)if(pe===this.getEventTopic(ge))return this.events[ge];logger$1.throwArgumentError("no matching event","topichash",pe)}if(fe.indexOf("(")===-1){const pe=fe.trim(),ge=Object.keys(this.events).filter(ye=>ye.split("(")[0]===pe);return ge.length===0?logger$1.throwArgumentError("no matching event","name",pe):ge.length>1&&logger$1.throwArgumentError("multiple matching events","name",pe),this.events[ge[0]]}const le=this.events[EventFragment.fromString(fe).format()];return le||logger$1.throwArgumentError("no matching event","signature",fe),le}getError(fe){if(isHexString$1(fe)){const pe=getStatic(this.constructor,"getSighash");for(const ge in this.errors){const ye=this.errors[ge];if(fe===pe(ye))return this.errors[ge]}logger$1.throwArgumentError("no matching error","sighash",fe)}if(fe.indexOf("(")===-1){const pe=fe.trim(),ge=Object.keys(this.errors).filter(ye=>ye.split("(")[0]===pe);return ge.length===0?logger$1.throwArgumentError("no matching error","name",pe):ge.length>1&&logger$1.throwArgumentError("multiple matching errors","name",pe),this.errors[ge[0]]}const le=this.errors[FunctionFragment.fromString(fe).format()];return le||logger$1.throwArgumentError("no matching error","signature",fe),le}getSighash(fe){if(typeof fe=="string")try{fe=this.getFunction(fe)}catch(le){try{fe=this.getError(fe)}catch{throw le}}return getStatic(this.constructor,"getSighash")(fe)}getEventTopic(fe){return typeof fe=="string"&&(fe=this.getEvent(fe)),getStatic(this.constructor,"getEventTopic")(fe)}_decodeParams(fe,le){return this._abiCoder.decode(fe,le)}_encodeParams(fe,le){return this._abiCoder.encode(fe,le)}encodeDeploy(fe){return this._encodeParams(this.deploy.inputs,fe||[])}decodeErrorResult(fe,le){typeof fe=="string"&&(fe=this.getError(fe));const pe=arrayify(le);return hexlify(pe.slice(0,4))!==this.getSighash(fe)&&logger$1.throwArgumentError(`data signature does not match error ${fe.name}.`,"data",hexlify(pe)),this._decodeParams(fe.inputs,pe.slice(4))}encodeErrorResult(fe,le){return typeof fe=="string"&&(fe=this.getError(fe)),hexlify(concat([this.getSighash(fe),this._encodeParams(fe.inputs,le||[])]))}decodeFunctionData(fe,le){typeof fe=="string"&&(fe=this.getFunction(fe));const pe=arrayify(le);return hexlify(pe.slice(0,4))!==this.getSighash(fe)&&logger$1.throwArgumentError(`data signature does not match function ${fe.name}.`,"data",hexlify(pe)),this._decodeParams(fe.inputs,pe.slice(4))}encodeFunctionData(fe,le){return typeof fe=="string"&&(fe=this.getFunction(fe)),hexlify(concat([this.getSighash(fe),this._encodeParams(fe.inputs,le||[])]))}decodeFunctionResult(fe,le){typeof fe=="string"&&(fe=this.getFunction(fe));let pe=arrayify(le),ge=null,ye="",xe=null,me=null,we=null;switch(pe.length%this._abiCoder._getWordSize()){case 0:try{return this._abiCoder.decode(fe.outputs,pe)}catch{}break;case 4:{const Ee=hexlify(pe.slice(0,4)),Ae=BuiltinErrors[Ee];if(Ae)xe=this._abiCoder.decode(Ae.inputs,pe.slice(4)),me=Ae.name,we=Ae.signature,Ae.reason&&(ge=xe[0]),me==="Error"?ye=`; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(xe[0])}`:me==="Panic"&&(ye=`; VM Exception while processing transaction: reverted with panic code ${xe[0]}`);else try{const Se=this.getError(Ee);xe=this._abiCoder.decode(Se.inputs,pe.slice(4)),me=Se.name,we=Se.format()}catch{}break}}return logger$1.throwError("call revert exception"+ye,Logger.errors.CALL_EXCEPTION,{method:fe.format(),data:hexlify(le),errorArgs:xe,errorName:me,errorSignature:we,reason:ge})}encodeFunctionResult(fe,le){return typeof fe=="string"&&(fe=this.getFunction(fe)),hexlify(this._abiCoder.encode(fe.outputs,le||[]))}encodeFilterTopics(fe,le){typeof fe=="string"&&(fe=this.getEvent(fe)),le.length>fe.inputs.length&&logger$1.throwError("too many arguments for "+fe.format(),Logger.errors.UNEXPECTED_ARGUMENT,{argument:"values",value:le});let pe=[];fe.anonymous||pe.push(this.getEventTopic(fe));const ge=(ye,xe)=>ye.type==="string"?id(xe):ye.type==="bytes"?keccak256$1(hexlify(xe)):(ye.type==="bool"&&typeof xe=="boolean"&&(xe=xe?"0x01":"0x00"),ye.type.match(/^u?int/)&&(xe=BigNumber.from(xe).toHexString()),ye.type==="address"&&this._abiCoder.encode(["address"],[xe]),hexZeroPad(hexlify(xe),32));for(le.forEach((ye,xe)=>{let me=fe.inputs[xe];if(!me.indexed){ye!=null&&logger$1.throwArgumentError("cannot filter non-indexed parameters; must be null","contract."+me.name,ye);return}ye==null?pe.push(null):me.baseType==="array"||me.baseType==="tuple"?logger$1.throwArgumentError("filtering with tuples or arrays not supported","contract."+me.name,ye):Array.isArray(ye)?pe.push(ye.map(we=>ge(me,we))):pe.push(ge(me,ye))});pe.length&&pe[pe.length-1]===null;)pe.pop();return pe}encodeEventLog(fe,le){typeof fe=="string"&&(fe=this.getEvent(fe));const pe=[],ge=[],ye=[];return fe.anonymous||pe.push(this.getEventTopic(fe)),le.length!==fe.inputs.length&&logger$1.throwArgumentError("event arguments/values mismatch","values",le),fe.inputs.forEach((xe,me)=>{const we=le[me];if(xe.indexed)if(xe.type==="string")pe.push(id(we));else if(xe.type==="bytes")pe.push(keccak256$1(we));else{if(xe.baseType==="tuple"||xe.baseType==="array")throw new Error("not implemented");pe.push(this._abiCoder.encode([xe.type],[we]))}else ge.push(xe),ye.push(we)}),{data:this._abiCoder.encode(ge,ye),topics:pe}}decodeEventLog(fe,le,pe){if(typeof fe=="string"&&(fe=this.getEvent(fe)),pe!=null&&!fe.anonymous){let Le=this.getEventTopic(fe);(!isHexString$1(pe[0],32)||pe[0].toLowerCase()!==Le)&&logger$1.throwError("fragment/topic mismatch",Logger.errors.INVALID_ARGUMENT,{argument:"topics[0]",expected:Le,value:pe[0]}),pe=pe.slice(1)}let ge=[],ye=[],xe=[];fe.inputs.forEach((Le,He)=>{Le.indexed?Le.type==="string"||Le.type==="bytes"||Le.baseType==="tuple"||Le.baseType==="array"?(ge.push(ParamType.fromObject({type:"bytes32",name:Le.name})),xe.push(!0)):(ge.push(Le),xe.push(!1)):(ye.push(Le),xe.push(!1))});let me=pe!=null?this._abiCoder.decode(ge,concat(pe)):null,we=this._abiCoder.decode(ye,le,!0),Ee=[],Ae=0,Se=0;fe.inputs.forEach((Le,He)=>{if(Le.indexed)if(me==null)Ee[He]=new Indexed({_isIndexed:!0,hash:null});else if(xe[He])Ee[He]=new Indexed({_isIndexed:!0,hash:me[Se++]});else try{Ee[He]=me[Se++]}catch(Me){Ee[He]=Me}else try{Ee[He]=we[Ae++]}catch(Me){Ee[He]=Me}if(Le.name&&Ee[Le.name]==null){const Me=Ee[He];Me instanceof Error?Object.defineProperty(Ee,Le.name,{enumerable:!0,get:()=>{throw wrapAccessError(`property ${JSON.stringify(Le.name)}`,Me)}}):Ee[Le.name]=Me}});for(let Le=0;Le<Ee.length;Le++){const He=Ee[Le];He instanceof Error&&Object.defineProperty(Ee,Le,{enumerable:!0,get:()=>{throw wrapAccessError(`index ${Le}`,He)}})}return Object.freeze(Ee)}parseTransaction(fe){let le=this.getFunction(fe.data.substring(0,10).toLowerCase());return le?new TransactionDescription({args:this._abiCoder.decode(le.inputs,"0x"+fe.data.substring(10)),functionFragment:le,name:le.name,signature:le.format(),sighash:this.getSighash(le),value:BigNumber.from(fe.value||"0")}):null}parseLog(fe){let le=this.getEvent(fe.topics[0]);return!le||le.anonymous?null:new LogDescription({eventFragment:le,name:le.name,signature:le.format(),topic:this.getEventTopic(le),args:this.decodeEventLog(le,fe.data,fe.topics)})}parseError(fe){const le=hexlify(fe);let pe=this.getError(le.substring(0,10).toLowerCase());return pe?new ErrorDescription({args:this._abiCoder.decode(pe.inputs,"0x"+le.substring(10)),errorFragment:pe,name:pe.name,signature:pe.format(),sighash:this.getSighash(pe)}):null}static isInterface(fe){return!!(fe&&fe._isInterface)}}const version="contracts/5.7.0";var __awaiter=function(he,fe,le,pe){function ge(ye){return ye instanceof le?ye:new le(function(xe){xe(ye)})}return new(le||(le=Promise))(function(ye,xe){function me(Ae){try{Ee(pe.next(Ae))}catch(Se){xe(Se)}}function we(Ae){try{Ee(pe.throw(Ae))}catch(Se){xe(Se)}}function Ee(Ae){Ae.done?ye(Ae.value):ge(Ae.value).then(me,we)}Ee((pe=pe.apply(he,fe||[])).next())})};const logger=new Logger(version);function resolveName(he,fe){return __awaiter(this,void 0,void 0,function*(){const le=yield fe;typeof le!="string"&&logger.throwArgumentError("invalid address or ENS name","name",le);try{return getAddress(le)}catch{}he||logger.throwError("a provider or signer is needed to resolve ENS names",Logger.errors.UNSUPPORTED_OPERATION,{operation:"resolveName"});const pe=yield he.resolveName(le);return pe==null&&logger.throwArgumentError("resolver or addr is not configured for ENS name","name",le),pe})}function resolveAddresses(he,fe,le){return __awaiter(this,void 0,void 0,function*(){return Array.isArray(le)?yield Promise.all(le.map((pe,ge)=>resolveAddresses(he,Array.isArray(fe)?fe[ge]:fe[pe.name],pe))):le.type==="address"?yield resolveName(he,fe):le.type==="tuple"?yield resolveAddresses(he,fe,le.components):le.baseType==="array"?Array.isArray(fe)?yield Promise.all(fe.map(pe=>resolveAddresses(he,pe,le.arrayChildren))):Promise.reject(logger.makeError("invalid value for array",Logger.errors.INVALID_ARGUMENT,{argument:"value",value:fe})):fe})}function populateTransaction(he,fe,le){return __awaiter(this,void 0,void 0,function*(){let pe={};le.length===fe.inputs.length+1&&typeof le[le.length-1]=="object"&&(pe=shallowCopy(le.pop())),logger.checkArgumentCount(le.length,fe.inputs.length,"passed to contract"),he.signer?pe.from?pe.from=resolveProperties({override:resolveName(he.signer,pe.from),signer:he.signer.getAddress()}).then(Ee=>__awaiter(this,void 0,void 0,function*(){return getAddress(Ee.signer)!==Ee.override&&logger.throwError("Contract with a Signer cannot override from",Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides.from"}),Ee.override})):pe.from=he.signer.getAddress():pe.from&&(pe.from=resolveName(he.provider,pe.from));const ge=yield resolveProperties({args:resolveAddresses(he.signer||he.provider,le,fe.inputs),address:he.resolvedAddress,overrides:resolveProperties(pe)||{}}),ye=he.interface.encodeFunctionData(fe,ge.args),xe={data:ye,to:ge.address},me=ge.overrides;if(me.nonce!=null&&(xe.nonce=BigNumber.from(me.nonce).toNumber()),me.gasLimit!=null&&(xe.gasLimit=BigNumber.from(me.gasLimit)),me.gasPrice!=null&&(xe.gasPrice=BigNumber.from(me.gasPrice)),me.maxFeePerGas!=null&&(xe.maxFeePerGas=BigNumber.from(me.maxFeePerGas)),me.maxPriorityFeePerGas!=null&&(xe.maxPriorityFeePerGas=BigNumber.from(me.maxPriorityFeePerGas)),me.from!=null&&(xe.from=me.from),me.type!=null&&(xe.type=me.type),me.accessList!=null&&(xe.accessList=accessListify(me.accessList)),xe.gasLimit==null&&fe.gas!=null){let Ee=21e3;const Ae=arrayify(ye);for(let Se=0;Se<Ae.length;Se++)Ee+=4,Ae[Se]&&(Ee+=64);xe.gasLimit=BigNumber.from(fe.gas).add(Ee)}if(me.value){const Ee=BigNumber.from(me.value);!Ee.isZero()&&!fe.payable&&logger.throwError("non-payable method cannot override value",Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:pe.value}),xe.value=Ee}me.customData&&(xe.customData=shallowCopy(me.customData)),me.ccipReadEnabled&&(xe.ccipReadEnabled=!!me.ccipReadEnabled),delete pe.nonce,delete pe.gasLimit,delete pe.gasPrice,delete pe.from,delete pe.value,delete pe.type,delete pe.accessList,delete pe.maxFeePerGas,delete pe.maxPriorityFeePerGas,delete pe.customData,delete pe.ccipReadEnabled;const we=Object.keys(pe).filter(Ee=>pe[Ee]!=null);return we.length&&logger.throwError(`cannot override ${we.map(Ee=>JSON.stringify(Ee)).join(",")}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:"overrides",overrides:we}),xe})}function buildPopulate(he,fe){return function(...le){return populateTransaction(he,fe,le)}}function buildEstimate(he,fe){const le=he.signer||he.provider;return function(...pe){return __awaiter(this,void 0,void 0,function*(){le||logger.throwError("estimate require a provider or signer",Logger.errors.UNSUPPORTED_OPERATION,{operation:"estimateGas"});const ge=yield populateTransaction(he,fe,pe);return yield le.estimateGas(ge)})}}function addContractWait(he,fe){const le=fe.wait.bind(fe);fe.wait=pe=>le(pe).then(ge=>(ge.events=ge.logs.map(ye=>{let xe=deepCopy(ye),me=null;try{me=he.interface.parseLog(ye)}catch{}return me&&(xe.args=me.args,xe.decode=(we,Ee)=>he.interface.decodeEventLog(me.eventFragment,we,Ee),xe.event=me.name,xe.eventSignature=me.signature),xe.removeListener=()=>he.provider,xe.getBlock=()=>he.provider.getBlock(ge.blockHash),xe.getTransaction=()=>he.provider.getTransaction(ge.transactionHash),xe.getTransactionReceipt=()=>Promise.resolve(ge),xe}),ge))}function buildCall(he,fe,le){const pe=he.signer||he.provider;return function(...ge){return __awaiter(this,void 0,void 0,function*(){let ye;if(ge.length===fe.inputs.length+1&&typeof ge[ge.length-1]=="object"){const we=shallowCopy(ge.pop());we.blockTag!=null&&(ye=yield we.blockTag),delete we.blockTag,ge.push(we)}he.deployTransaction!=null&&(yield he._deployed(ye));const xe=yield populateTransaction(he,fe,ge),me=yield pe.call(xe,ye);try{let we=he.interface.decodeFunctionResult(fe,me);return le&&fe.outputs.length===1&&(we=we[0]),we}catch(we){throw we.code===Logger.errors.CALL_EXCEPTION&&(we.address=he.address,we.args=ge,we.transaction=xe),we}})}}function buildSend(he,fe){return function(...le){return __awaiter(this,void 0,void 0,function*(){he.signer||logger.throwError("sending a transaction requires a signer",Logger.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction"}),he.deployTransaction!=null&&(yield he._deployed());const pe=yield populateTransaction(he,fe,le),ge=yield he.signer.sendTransaction(pe);return addContractWait(he,ge),ge})}}function buildDefault(he,fe,le){return fe.constant?buildCall(he,fe,le):buildSend(he,fe)}function getEventTag(he){return he.address&&(he.topics==null||he.topics.length===0)?"*":(he.address||"*")+"@"+(he.topics?he.topics.map(fe=>Array.isArray(fe)?fe.join("|"):fe).join(":"):"")}class RunningEvent{constructor(fe,le){defineReadOnly(this,"tag",fe),defineReadOnly(this,"filter",le),this._listeners=[]}addListener(fe,le){this._listeners.push({listener:fe,once:le})}removeListener(fe){let le=!1;this._listeners=this._listeners.filter(pe=>le||pe.listener!==fe?!0:(le=!0,!1))}removeAllListeners(){this._listeners=[]}listeners(){return this._listeners.map(fe=>fe.listener)}listenerCount(){return this._listeners.length}run(fe){const le=this.listenerCount();return this._listeners=this._listeners.filter(pe=>{const ge=fe.slice();return setTimeout(()=>{pe.listener.apply(this,ge)},0),!pe.once}),le}prepareEvent(fe){}getEmit(fe){return[fe]}}class ErrorRunningEvent extends RunningEvent{constructor(){super("error",null)}}class FragmentRunningEvent extends RunningEvent{constructor(fe,le,pe,ge){const ye={address:fe};let xe=le.getEventTopic(pe);ge?(xe!==ge[0]&&logger.throwArgumentError("topic mismatch","topics",ge),ye.topics=ge.slice()):ye.topics=[xe],super(getEventTag(ye),ye),defineReadOnly(this,"address",fe),defineReadOnly(this,"interface",le),defineReadOnly(this,"fragment",pe)}prepareEvent(fe){super.prepareEvent(fe),fe.event=this.fragment.name,fe.eventSignature=this.fragment.format(),fe.decode=(le,pe)=>this.interface.decodeEventLog(this.fragment,le,pe);try{fe.args=this.interface.decodeEventLog(this.fragment,fe.data,fe.topics)}catch(le){fe.args=null,fe.decodeError=le}}getEmit(fe){const le=checkResultErrors(fe.args);if(le.length)throw le[0].error;const pe=(fe.args||[]).slice();return pe.push(fe),pe}}class WildcardRunningEvent extends RunningEvent{constructor(fe,le){super("*",{address:fe}),defineReadOnly(this,"address",fe),defineReadOnly(this,"interface",le)}prepareEvent(fe){super.prepareEvent(fe);try{const le=this.interface.parseLog(fe);fe.event=le.name,fe.eventSignature=le.signature,fe.decode=(pe,ge)=>this.interface.decodeEventLog(le.eventFragment,pe,ge),fe.args=le.args}catch{}}}class BaseContract{constructor(fe,le,pe){defineReadOnly(this,"interface",getStatic(new.target,"getInterface")(le)),pe==null?(defineReadOnly(this,"provider",null),defineReadOnly(this,"signer",null)):Signer.isSigner(pe)?(defineReadOnly(this,"provider",pe.provider||null),defineReadOnly(this,"signer",pe)):Provider.isProvider(pe)?(defineReadOnly(this,"provider",pe),defineReadOnly(this,"signer",null)):logger.throwArgumentError("invalid signer or provider","signerOrProvider",pe),defineReadOnly(this,"callStatic",{}),defineReadOnly(this,"estimateGas",{}),defineReadOnly(this,"functions",{}),defineReadOnly(this,"populateTransaction",{}),defineReadOnly(this,"filters",{});{const xe={};Object.keys(this.interface.events).forEach(me=>{const we=this.interface.events[me];defineReadOnly(this.filters,me,(...Ee)=>({address:this.address,topics:this.interface.encodeFilterTopics(we,Ee)})),xe[we.name]||(xe[we.name]=[]),xe[we.name].push(me)}),Object.keys(xe).forEach(me=>{const we=xe[me];we.length===1?defineReadOnly(this.filters,me,this.filters[we[0]]):logger.warn(`Duplicate definition of ${me} (${we.join(", ")})`)})}if(defineReadOnly(this,"_runningEvents",{}),defineReadOnly(this,"_wrappedEmits",{}),fe==null&&logger.throwArgumentError("invalid contract address or ENS name","addressOrName",fe),defineReadOnly(this,"address",fe),this.provider)defineReadOnly(this,"resolvedAddress",resolveName(this.provider,fe));else try{defineReadOnly(this,"resolvedAddress",Promise.resolve(getAddress(fe)))}catch{logger.throwError("provider is required to use ENS name as contract address",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new Contract"})}this.resolvedAddress.catch(xe=>{});const ge={},ye={};Object.keys(this.interface.functions).forEach(xe=>{const me=this.interface.functions[xe];if(ye[xe]){logger.warn(`Duplicate ABI entry for ${JSON.stringify(xe)}`);return}ye[xe]=!0;{const we=me.name;ge[`%${we}`]||(ge[`%${we}`]=[]),ge[`%${we}`].push(xe)}this[xe]==null&&defineReadOnly(this,xe,buildDefault(this,me,!0)),this.functions[xe]==null&&defineReadOnly(this.functions,xe,buildDefault(this,me,!1)),this.callStatic[xe]==null&&defineReadOnly(this.callStatic,xe,buildCall(this,me,!0)),this.populateTransaction[xe]==null&&defineReadOnly(this.populateTransaction,xe,buildPopulate(this,me)),this.estimateGas[xe]==null&&defineReadOnly(this.estimateGas,xe,buildEstimate(this,me))}),Object.keys(ge).forEach(xe=>{const me=ge[xe];if(me.length>1)return;xe=xe.substring(1);const we=me[0];try{this[xe]==null&&defineReadOnly(this,xe,this[we])}catch{}this.functions[xe]==null&&defineReadOnly(this.functions,xe,this.functions[we]),this.callStatic[xe]==null&&defineReadOnly(this.callStatic,xe,this.callStatic[we]),this.populateTransaction[xe]==null&&defineReadOnly(this.populateTransaction,xe,this.populateTransaction[we]),this.estimateGas[xe]==null&&defineReadOnly(this.estimateGas,xe,this.estimateGas[we])})}static getContractAddress(fe){return getContractAddress(fe)}static getInterface(fe){return Interface.isInterface(fe)?fe:new Interface(fe)}deployed(){return this._deployed()}_deployed(fe){return this._deployedPromise||(this.deployTransaction?this._deployedPromise=this.deployTransaction.wait().then(()=>this):this._deployedPromise=this.provider.getCode(this.address,fe).then(le=>(le==="0x"&&logger.throwError("contract not deployed",Logger.errors.UNSUPPORTED_OPERATION,{contractAddress:this.address,operation:"getDeployed"}),this))),this._deployedPromise}fallback(fe){this.signer||logger.throwError("sending a transactions require a signer",Logger.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction(fallback)"});const le=shallowCopy(fe||{});return["from","to"].forEach(function(pe){le[pe]!=null&&logger.throwError("cannot override "+pe,Logger.errors.UNSUPPORTED_OPERATION,{operation:pe})}),le.to=this.resolvedAddress,this.deployed().then(()=>this.signer.sendTransaction(le))}connect(fe){typeof fe=="string"&&(fe=new VoidSigner(fe,this.provider));const le=new this.constructor(this.address,this.interface,fe);return this.deployTransaction&&defineReadOnly(le,"deployTransaction",this.deployTransaction),le}attach(fe){return new this.constructor(fe,this.interface,this.signer||this.provider)}static isIndexed(fe){return Indexed.isIndexed(fe)}_normalizeRunningEvent(fe){return this._runningEvents[fe.tag]?this._runningEvents[fe.tag]:fe}_getRunningEvent(fe){if(typeof fe=="string"){if(fe==="error")return this._normalizeRunningEvent(new ErrorRunningEvent);if(fe==="event")return this._normalizeRunningEvent(new RunningEvent("event",null));if(fe==="*")return this._normalizeRunningEvent(new WildcardRunningEvent(this.address,this.interface));const le=this.interface.getEvent(fe);return this._normalizeRunningEvent(new FragmentRunningEvent(this.address,this.interface,le))}if(fe.topics&&fe.topics.length>0){try{const pe=fe.topics[0];if(typeof pe!="string")throw new Error("invalid topic");const ge=this.interface.getEvent(pe);return this._normalizeRunningEvent(new FragmentRunningEvent(this.address,this.interface,ge,fe.topics))}catch{}const le={address:this.address,topics:fe.topics};return this._normalizeRunningEvent(new RunningEvent(getEventTag(le),le))}return this._normalizeRunningEvent(new WildcardRunningEvent(this.address,this.interface))}_checkRunningEvents(fe){if(fe.listenerCount()===0){delete this._runningEvents[fe.tag];const le=this._wrappedEmits[fe.tag];le&&fe.filter&&(this.provider.off(fe.filter,le),delete this._wrappedEmits[fe.tag])}}_wrapEvent(fe,le,pe){const ge=deepCopy(le);return ge.removeListener=()=>{pe&&(fe.removeListener(pe),this._checkRunningEvents(fe))},ge.getBlock=()=>this.provider.getBlock(le.blockHash),ge.getTransaction=()=>this.provider.getTransaction(le.transactionHash),ge.getTransactionReceipt=()=>this.provider.getTransactionReceipt(le.transactionHash),fe.prepareEvent(ge),ge}_addEventListener(fe,le,pe){if(this.provider||logger.throwError("events require a provider or a signer with a provider",Logger.errors.UNSUPPORTED_OPERATION,{operation:"once"}),fe.addListener(le,pe),this._runningEvents[fe.tag]=fe,!this._wrappedEmits[fe.tag]){const ge=ye=>{let xe=this._wrapEvent(fe,ye,le);if(xe.decodeError==null)try{const me=fe.getEmit(xe);this.emit(fe.filter,...me)}catch(me){xe.decodeError=me.error}fe.filter!=null&&this.emit("event",xe),xe.decodeError!=null&&this.emit("error",xe.decodeError,xe)};this._wrappedEmits[fe.tag]=ge,fe.filter!=null&&this.provider.on(fe.filter,ge)}}queryFilter(fe,le,pe){const ge=this._getRunningEvent(fe),ye=shallowCopy(ge.filter);return typeof le=="string"&&isHexString$1(le,32)?(pe!=null&&logger.throwArgumentError("cannot specify toBlock with blockhash","toBlock",pe),ye.blockHash=le):(ye.fromBlock=le??0,ye.toBlock=pe??"latest"),this.provider.getLogs(ye).then(xe=>xe.map(me=>this._wrapEvent(ge,me,null)))}on(fe,le){return this._addEventListener(this._getRunningEvent(fe),le,!1),this}once(fe,le){return this._addEventListener(this._getRunningEvent(fe),le,!0),this}emit(fe,...le){if(!this.provider)return!1;const pe=this._getRunningEvent(fe),ge=pe.run(le)>0;return this._checkRunningEvents(pe),ge}listenerCount(fe){return this.provider?fe==null?Object.keys(this._runningEvents).reduce((le,pe)=>le+this._runningEvents[pe].listenerCount(),0):this._getRunningEvent(fe).listenerCount():0}listeners(fe){if(!this.provider)return[];if(fe==null){const le=[];for(let pe in this._runningEvents)this._runningEvents[pe].listeners().forEach(ge=>{le.push(ge)});return le}return this._getRunningEvent(fe).listeners()}removeAllListeners(fe){if(!this.provider)return this;if(fe==null){for(const pe in this._runningEvents){const ge=this._runningEvents[pe];ge.removeAllListeners(),this._checkRunningEvents(ge)}return this}const le=this._getRunningEvent(fe);return le.removeAllListeners(),this._checkRunningEvents(le),this}off(fe,le){if(!this.provider)return this;const pe=this._getRunningEvent(fe);return pe.removeListener(le),this._checkRunningEvents(pe),this}removeListener(fe,le){return this.off(fe,le)}}class Contract extends BaseContract{}class ERC20Config extends EthereumConfig{constructor(le){super(le);je(this,"contractInstance");je(this,"contractAddress");this.contractAddress=le.contractAddress}async getContract(){return this.contractInstance||(this.contractInstance=new Contract(this.contractAddress,erc20abi,this.w3signer),this.base=["wei",Math.pow(10,await this.contractInstance.decimals())]),this.contractInstance}async getTx(le){const pe=await this.providerInstance.getTransaction(le);if(!pe)throw new Error("Tx doesn't exist");if(pe.data.length!==138||pe.data.slice(2,10)!=="a9059cbb")throw new Error("Tx isn't a ERC20 transfer");const ge=`0x${pe.data.slice(34,74)}`,ye=new BigNumber$1(pe.data.slice(74),16);return{from:pe.from,to:ge,blockHeight:pe.blockNumber?new BigNumber$1(pe.blockNumber):void 0,amount:ye,pending:!pe.blockNumber,confirmed:pe.confirmations>=this.minConfirm}}async getFee(le,pe){const ge="0x"+new BigNumber$1(le).toString(16),ye=await this.getContract(),xe=await this.providerInstance.getGasPrice(),me=await ye.estimateGas.transfer(pe,ge);return new BigNumber$1(xe.mul(me).toString())}async createTx(le,pe,ge){const ye=await this.getContract(),xe="0x"+new BigNumber$1(le).toString(16),me=await ye.populateTransaction.transfer(pe,xe);if(me.gasPrice=await this.providerInstance.getGasPrice(),me.gasLimit=await ye.estimateGas.transfer(pe,xe),me.chainId=(await this.providerInstance.getNetwork()).chainId,!this.address)throw new Error("Address is undefined - you might be missing a wallet, or have not run Irys.ready()");return me.nonce=await this.providerInstance.getTransactionCount(this.address),{txId:void 0,tx:me}}}var a$e=`
    fragment TokenActivitiesFields on token_activities_v2 {
  after_value
  before_value
  entry_function_id_str
  event_account_address
  event_index
  from_address
  is_fungible_v2
  property_version_v1
  to_address
  token_amount
  token_data_id
  token_standard
  transaction_timestamp
  transaction_version
  type
}
    `,i$f=`
    fragment AnsTokenFragment on current_aptos_names {
  domain
  expiration_timestamp
  registered_address
  subdomain
  token_standard
  is_primary
  owner_address
  subdomain_expiration_policy
  domain_expiration_timestamp
}
    `,s$4=`
    fragment CurrentTokenOwnershipFields on current_token_ownerships_v2 {
  token_standard
  token_properties_mutated_v1
  token_data_id
  table_type_v1
  storage_id
  property_version_v1
  owner_address
  last_transaction_version
  last_transaction_timestamp
  is_soulbound_v2
  is_fungible_v2
  amount
  current_token_data {
    collection_id
    description
    is_fungible_v2
    largest_property_version_v1
    last_transaction_timestamp
    last_transaction_version
    maximum
    supply
    token_data_id
    token_name
    token_properties
    token_standard
    token_uri
    decimals
    current_collection {
      collection_id
      collection_name
      creator_address
      current_supply
      description
      last_transaction_timestamp
      last_transaction_version
      max_supply
      mutable_description
      mutable_uri
      table_handle_v1
      token_standard
      total_minted_v2
      uri
    }
  }
}
    `,_$m=`
    query getAccountCoinsCount($address: String) {
  current_fungible_asset_balances_aggregate(
    where: {owner_address: {_eq: $address}}
  ) {
    aggregate {
      count
    }
  }
}
    `,u$b=`
    query getAccountCoinsData($where_condition: current_fungible_asset_balances_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_fungible_asset_balances_order_by!]) {
  current_fungible_asset_balances(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    amount
    asset_type
    is_frozen
    is_primary
    last_transaction_timestamp
    last_transaction_version
    owner_address
    storage_id
    token_standard
    metadata {
      token_standard
      symbol
      supply_aggregator_table_key_v1
      supply_aggregator_table_handle_v1
      project_uri
      name
      last_transaction_version
      last_transaction_timestamp
      icon_uri
      decimals
      creator_address
      asset_type
    }
  }
}
    `,c$p=`
    query getAccountCollectionsWithOwnedTokens($where_condition: current_collection_ownership_v2_view_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_collection_ownership_v2_view_order_by!]) {
  current_collection_ownership_v2_view(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    current_collection {
      collection_id
      collection_name
      creator_address
      current_supply
      description
      last_transaction_timestamp
      last_transaction_version
      mutable_description
      max_supply
      mutable_uri
      table_handle_v1
      token_standard
      total_minted_v2
      uri
    }
    collection_id
    collection_name
    collection_uri
    creator_address
    distinct_tokens
    last_transaction_version
    owner_address
    single_token_uri
  }
}
    `,d$g=`
    query getAccountOwnedTokens($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {
  current_token_ownerships_v2(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    ...CurrentTokenOwnershipFields
  }
}
    ${s$4}`,y$8=`
    query getAccountOwnedTokensFromCollection($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {
  current_token_ownerships_v2(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    ...CurrentTokenOwnershipFields
  }
}
    ${s$4}`,p$a=`
    query getAccountTokensCount($where_condition: current_token_ownerships_v2_bool_exp, $offset: Int, $limit: Int) {
  current_token_ownerships_v2_aggregate(
    where: $where_condition
    offset: $offset
    limit: $limit
  ) {
    aggregate {
      count
    }
  }
}
    `,m$e=`
    query getAccountTransactionsCount($address: String) {
  account_transactions_aggregate(where: {account_address: {_eq: $address}}) {
    aggregate {
      count
    }
  }
}
    `,g$7=`
    query getChainTopUserTransactions($limit: Int) {
  user_transactions(limit: $limit, order_by: {version: desc}) {
    version
  }
}
    `,T$9=`
    query getCollectionData($where_condition: current_collections_v2_bool_exp!) {
  current_collections_v2(where: $where_condition) {
    uri
    total_minted_v2
    token_standard
    table_handle_v1
    mutable_uri
    mutable_description
    max_supply
    collection_id
    collection_name
    creator_address
    current_supply
    description
    last_transaction_timestamp
    last_transaction_version
    cdn_asset_uris {
      cdn_image_uri
      asset_uri
      animation_optimizer_retry_count
      cdn_animation_uri
      cdn_json_uri
      image_optimizer_retry_count
      json_parser_retry_count
      raw_animation_uri
      raw_image_uri
    }
  }
}
    `,b$8=`
    query getCurrentFungibleAssetBalances($where_condition: current_fungible_asset_balances_bool_exp, $offset: Int, $limit: Int) {
  current_fungible_asset_balances(
    where: $where_condition
    offset: $offset
    limit: $limit
  ) {
    amount
    asset_type
    is_frozen
    is_primary
    last_transaction_timestamp
    last_transaction_version
    owner_address
    storage_id
    token_standard
  }
}
    `,$$5=`
    query getDelegatedStakingActivities($delegatorAddress: String, $poolAddress: String) {
  delegated_staking_activities(
    where: {delegator_address: {_eq: $delegatorAddress}, pool_address: {_eq: $poolAddress}}
  ) {
    amount
    delegator_address
    event_index
    event_type
    pool_address
    transaction_version
  }
}
    `,k$4=`
    query getEvents($where_condition: events_bool_exp, $offset: Int, $limit: Int, $order_by: [events_order_by!]) {
  events(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    account_address
    creation_number
    data
    event_index
    sequence_number
    transaction_block_height
    transaction_version
    type
    indexed_type
  }
}
    `,f$c=`
    query getFungibleAssetActivities($where_condition: fungible_asset_activities_bool_exp, $offset: Int, $limit: Int) {
  fungible_asset_activities(
    where: $where_condition
    offset: $offset
    limit: $limit
  ) {
    amount
    asset_type
    block_height
    entry_function_id_str
    event_index
    gas_fee_payer_address
    is_frozen
    is_gas_fee
    is_transaction_success
    owner_address
    storage_id
    storage_refund_amount
    token_standard
    transaction_timestamp
    transaction_version
    type
  }
}
    `,h$e=`
    query getFungibleAssetMetadata($where_condition: fungible_asset_metadata_bool_exp, $offset: Int, $limit: Int) {
  fungible_asset_metadata(where: $where_condition, offset: $offset, limit: $limit) {
    icon_uri
    project_uri
    supply_aggregator_table_handle_v1
    supply_aggregator_table_key_v1
    creator_address
    asset_type
    decimals
    last_transaction_timestamp
    last_transaction_version
    name
    symbol
    token_standard
    supply_v2
    maximum_v2
  }
}
    `,G$4=`
    query getNames($offset: Int, $limit: Int, $where_condition: current_aptos_names_bool_exp, $order_by: [current_aptos_names_order_by!]) {
  current_aptos_names(
    limit: $limit
    where: $where_condition
    order_by: $order_by
    offset: $offset
  ) {
    ...AnsTokenFragment
  }
}
    ${i$f}`,w$2=`
    query getNumberOfDelegators($where_condition: num_active_delegator_per_pool_bool_exp, $order_by: [num_active_delegator_per_pool_order_by!]) {
  num_active_delegator_per_pool(where: $where_condition, order_by: $order_by) {
    num_active_delegator
    pool_address
  }
}
    `,v$6=`
    query getObjectData($where_condition: current_objects_bool_exp, $offset: Int, $limit: Int, $order_by: [current_objects_order_by!]) {
  current_objects(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    allow_ungated_transfer
    state_key_hash
    owner_address
    object_address
    last_transaction_version
    last_guid_creation_num
    is_deleted
  }
}
    `,C$6=`
    query getProcessorStatus($where_condition: processor_status_bool_exp) {
  processor_status(where: $where_condition) {
    last_success_version
    processor
    last_updated
  }
}
    `,A$b=`
    query getTableItemsData($where_condition: table_items_bool_exp!, $offset: Int, $limit: Int, $order_by: [table_items_order_by!]) {
  table_items(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    decoded_key
    decoded_value
    key
    table_handle
    transaction_version
    write_set_change_index
  }
}
    `,q$2=`
    query getTableItemsMetadata($where_condition: table_metadatas_bool_exp!, $offset: Int, $limit: Int, $order_by: [table_metadatas_order_by!]) {
  table_metadatas(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    handle
    key_type
    value_type
  }
}
    `,Q$2=`
    query getTokenActivity($where_condition: token_activities_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [token_activities_v2_order_by!]) {
  token_activities_v2(
    where: $where_condition
    order_by: $order_by
    offset: $offset
    limit: $limit
  ) {
    ...TokenActivitiesFields
  }
}
    ${a$e}`,x$8=`
    query getCurrentTokenOwnership($where_condition: current_token_ownerships_v2_bool_exp!, $offset: Int, $limit: Int, $order_by: [current_token_ownerships_v2_order_by!]) {
  current_token_ownerships_v2(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    ...CurrentTokenOwnershipFields
  }
}
    ${s$4}`,D$6=`
    query getTokenData($where_condition: current_token_datas_v2_bool_exp, $offset: Int, $limit: Int, $order_by: [current_token_datas_v2_order_by!]) {
  current_token_datas_v2(
    where: $where_condition
    offset: $offset
    limit: $limit
    order_by: $order_by
  ) {
    collection_id
    description
    is_fungible_v2
    largest_property_version_v1
    last_transaction_timestamp
    last_transaction_version
    maximum
    supply
    token_data_id
    token_name
    token_properties
    token_standard
    token_uri
    decimals
    current_collection {
      collection_id
      collection_name
      creator_address
      current_supply
      description
      last_transaction_timestamp
      last_transaction_version
      max_supply
      mutable_description
      mutable_uri
      table_handle_v1
      token_standard
      total_minted_v2
      uri
    }
  }
}
    `,n$b=class extends Error{constructor({apiType:fe,aptosRequest:le,aptosResponse:pe}){super(d$f({apiType:fe,aptosRequest:le,aptosResponse:pe})),this.name="AptosApiError",this.url=pe.url,this.status=pe.status,this.statusText=pe.statusText,this.data=pe.data,this.request=le}};function d$f({apiType:he,aptosRequest:fe,aptosResponse:le}){var xe,me,we,Ee,Ae,Se,Le;let pe=(me=(xe=le.headers)==null?void 0:xe.traceparent)==null?void 0:me.split("-")[1],ge=pe?`(trace_id:${pe}) `:"",ye=`Request to [${he}]: ${fe.method} ${le.url??fe.url} ${ge}failed with`;return he==="Indexer"&&((Ae=(Ee=(we=le.data)==null?void 0:we.errors)==null?void 0:Ee[0])==null?void 0:Ae.message)!=null?`${ye}: ${le.data.errors[0].message}`:((Se=le.data)==null?void 0:Se.message)!=null&&((Le=le.data)==null?void 0:Le.error_code)!=null?`${ye}: ${JSON.stringify(le.data)}`:`${ye} status: ${le.statusText}(code:${le.status}) and response body: ${l$d(le.data)}`}var i$e=400;function l$d(he){let fe=JSON.stringify(he);return fe.length<=i$e?fe:`truncated(original_size:${fe.length}): ${fe.slice(0,i$e/2)}...${fe.slice(-i$e/2)}`}var o$k="1.27.1";async function A$a(he,fe){let{url:le,method:pe,body:ge,contentType:ye,params:xe,overrides:me,originMethod:we}=he,Ee={...me==null?void 0:me.HEADERS,"x-aptos-client":`aptos-typescript-sdk/${o$k}`,"content-type":ye??"application/json","x-aptos-typescript-sdk-origin-method":we};return me!=null&&me.AUTH_TOKEN&&(Ee.Authorization=`Bearer ${me==null?void 0:me.AUTH_TOKEN}`),me!=null&&me.API_KEY&&(Ee.Authorization=`Bearer ${me==null?void 0:me.API_KEY}`),fe.provider({url:le,method:pe,body:ge,params:xe,headers:Ee,overrides:me})}async function y$7(he,fe,le){let{url:pe,path:ge}=he,ye=ge?`${pe}/${ge}`:pe,xe=await A$a({...he,url:ye},fe.client),me={status:xe.status,statusText:xe.statusText,data:xe.data,headers:xe.headers,config:xe.config,request:xe.request,url:ye};if(me.status===401)throw new n$b({apiType:le,aptosRequest:he,aptosResponse:me});if(le==="Indexer"){let we=me.data;if(we.errors)throw new n$b({apiType:le,aptosRequest:he,aptosResponse:me});me.data=we.data}else if((le==="Pepper"||le==="Prover")&&me.status>=400)throw new n$b({apiType:le,aptosRequest:he,aptosResponse:me});if(me.status>=200&&me.status<300)return me;throw new n$b({apiType:le,aptosRequest:he,aptosResponse:me})}async function r$9(he){let{aptosConfig:fe,overrides:le,params:pe,contentType:ge,acceptType:ye,path:xe,originMethod:me,type:we}=he,Ee=fe.getRequestUrl(we);return y$7({url:Ee,method:"GET",originMethod:me,path:xe,contentType:ge,acceptType:ye,params:pe,overrides:{...fe.clientConfig,...le}},fe,he.type)}async function m$d(he){var le,pe;let{aptosConfig:fe}=he;return r$9({...he,type:"Fullnode",overrides:{...fe.clientConfig,...fe.fullnodeConfig,...he.overrides,HEADERS:{...(le=fe.clientConfig)==null?void 0:le.HEADERS,...(pe=fe.fullnodeConfig)==null?void 0:pe.HEADERS}}})}async function A$9(he){let fe=[],le,pe=he.params;do{let ge=await r$9({type:"Fullnode",aptosConfig:he.aptosConfig,originMethod:he.originMethod,path:he.path,params:pe,overrides:he.overrides});le=ge.headers["x-aptos-cursor"],delete ge.headers,fe.push(...ge.data),pe.start=le}while(le!=null);return fe}async function o$j(he){let{type:fe,originMethod:le,path:pe,body:ge,acceptType:ye,contentType:xe,params:me,aptosConfig:we,overrides:Ee}=he,Ae=we.getRequestUrl(fe);return y$7({url:Ae,method:"POST",originMethod:le,path:pe,body:ge,contentType:xe,acceptType:ye,params:me,overrides:Ee},we,he.type)}async function q$1(he){var le,pe;let{aptosConfig:fe}=he;return o$j({...he,type:"Fullnode",overrides:{...fe.clientConfig,...fe.fullnodeConfig,...he.overrides,HEADERS:{...(le=fe.clientConfig)==null?void 0:le.HEADERS,...(pe=fe.fullnodeConfig)==null?void 0:pe.HEADERS}}})}async function C$5(he){var le,pe;let{aptosConfig:fe}=he;return o$j({...he,type:"Indexer",overrides:{...fe.clientConfig,...fe.indexerConfig,...he.overrides,HEADERS:{...(le=fe.clientConfig)==null?void 0:le.HEADERS,...(pe=fe.indexerConfig)==null?void 0:pe.HEADERS}}})}async function m$c(he){var pe,ge,ye;let{aptosConfig:fe}=he,le={...fe,clientConfig:{...fe.clientConfig}};return(pe=le==null?void 0:le.clientConfig)==null||delete pe.API_KEY,o$j({...he,type:"Faucet",overrides:{...le.clientConfig,...le.faucetConfig,...he.overrides,HEADERS:{...(ge=le.clientConfig)==null?void 0:ge.HEADERS,...(ye=le.faucetConfig)==null?void 0:ye.HEADERS}}})}async function E$7(he){return o$j({...he,type:"Pepper"})}async function a$d(he){return o$j({...he,type:"Prover"})}async function d$e(he){let{aptosConfig:fe}=he,{data:le}=await m$d({aptosConfig:fe,originMethod:"getLedgerInfo",path:""});return le}async function C$4(he){let{aptosConfig:fe,limit:le}=he;return(await a$c({aptosConfig:fe,query:{query:g$7,variables:{limit:le}},originMethod:"getChainTopUserTransactions"})).user_transactions}async function a$c(he){let{aptosConfig:fe,query:le,originMethod:pe}=he,{data:ge}=await C$5({aptosConfig:fe,originMethod:pe??"queryIndexer",path:"",body:le,overrides:{WITH_CREDENTIALS:!1}});return ge}async function u$a(he){let{aptosConfig:fe}=he;return(await a$c({aptosConfig:fe,query:{query:C$6},originMethod:"getProcessorStatuses"})).processor_status}async function h$d(he){let fe=await u$a({aptosConfig:he.aptosConfig});return BigInt(fe[0].last_success_version)}async function T$8(he){let{aptosConfig:fe,processorType:le}=he;return(await a$c({aptosConfig:fe,query:{query:C$6,variables:{where_condition:{processor:{_eq:le}}}},originMethod:"getProcessorStatus"})).processor_status[0]}var n$a=new Map;function m$b(he,fe,le){return async(...pe)=>{if(n$a.has(fe)){let{value:ye,timestamp:xe}=n$a.get(fe);if(Date.now()-xe<=le)return ye}let ge=await he(...pe);return n$a.set(fe,{value:ge,timestamp:Date.now()}),ge}}const _hasBuffer=typeof Buffer$4=="function",_TD=typeof TextDecoder=="function"?new TextDecoder:void 0;typeof TextEncoder=="function"&&new TextEncoder;const b64ch="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",b64chs=Array.prototype.slice.call(b64ch),b64tab=(he=>{let fe={};return he.forEach((le,pe)=>fe[le]=pe),fe})(b64chs),b64re=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,_fromCC=String.fromCharCode.bind(String),_U8Afrom=typeof Uint8Array.from=="function"?Uint8Array.from.bind(Uint8Array):he=>new Uint8Array(Array.prototype.slice.call(he,0)),_tidyB64=he=>he.replace(/[^A-Za-z0-9\+\/]/g,""),re_btou=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,cb_btou=he=>{switch(he.length){case 4:var fe=(7&he.charCodeAt(0))<<18|(63&he.charCodeAt(1))<<12|(63&he.charCodeAt(2))<<6|63&he.charCodeAt(3),le=fe-65536;return _fromCC((le>>>10)+55296)+_fromCC((le&1023)+56320);case 3:return _fromCC((15&he.charCodeAt(0))<<12|(63&he.charCodeAt(1))<<6|63&he.charCodeAt(2));default:return _fromCC((31&he.charCodeAt(0))<<6|63&he.charCodeAt(1))}},btou=he=>he.replace(re_btou,cb_btou),atobPolyfill=he=>{if(he=he.replace(/\s+/g,""),!b64re.test(he))throw new TypeError("malformed base64.");he+="==".slice(2-(he.length&3));let fe,le="",pe,ge;for(let ye=0;ye<he.length;)fe=b64tab[he.charAt(ye++)]<<18|b64tab[he.charAt(ye++)]<<12|(pe=b64tab[he.charAt(ye++)])<<6|(ge=b64tab[he.charAt(ye++)]),le+=pe===64?_fromCC(fe>>16&255):ge===64?_fromCC(fe>>16&255,fe>>8&255):_fromCC(fe>>16&255,fe>>8&255,fe&255);return le},_atob=typeof atob=="function"?he=>atob(_tidyB64(he)):_hasBuffer?he=>Buffer$4.from(he,"base64").toString("binary"):atobPolyfill,_toUint8Array=_hasBuffer?he=>_U8Afrom(Buffer$4.from(he,"base64")):he=>_U8Afrom(_atob(he).split("").map(fe=>fe.charCodeAt(0))),_decode=_hasBuffer?he=>Buffer$4.from(he,"base64").toString("utf8"):_TD?he=>_TD.decode(_toUint8Array(he)):he=>btou(_atob(he)),_unURI=he=>_tidyB64(he.replace(/[-_]/g,fe=>fe=="-"?"+":"/")),decode=he=>_decode(_unURI(he));async function c$o(he){return new Promise(fe=>{setTimeout(fe,he)})}var u$9=()=>Math.floor(Date.now()/1e3);function a$b(he){let fe=new Date(he*1e3);return fe.setMinutes(0),fe.setSeconds(0),fe.setMilliseconds(0),Math.floor(fe.getTime()/1e3)}function m$a(he){let fe=he.replace(/-/g,"+").replace(/_/g,"/"),le=fe+"==".substring(0,(3-fe.length%3)%3);return decode(le)}var S$6=(he=>(he.FULLNODE="Fullnode",he.INDEXER="Indexer",he.FAUCET="Faucet",he.PEPPER="Pepper",he.PROVER="Prover",he))(S$6||{}),o$i="0x1::aptos_coin::AptosCoin",T$7="APTOS::RawTransaction",A$8="APTOS::RawTransactionWithData",E$6=(he=>(he.ACCOUNT_TRANSACTION_PROCESSOR="account_transactions_processor",he.DEFAULT="default_processor",he.EVENTS_PROCESSOR="events_processor",he.FUNGIBLE_ASSET_PROCESSOR="fungible_asset_processor",he.STAKE_PROCESSOR="stake_processor",he.TOKEN_V2_PROCESSOR="token_v2_processor",he.USER_TRANSACTION_PROCESSOR="user_transaction_processor",he.OBJECT_PROCESSOR="objects_processor",he))(E$6||{});async function H$2(he){let{aptosConfig:fe,options:le}=he;return A$9({aptosConfig:fe,originMethod:"getTransactions",path:"transactions",params:{start:le==null?void 0:le.offset,limit:le==null?void 0:le.limit}})}async function G$3(he){let{aptosConfig:fe}=he;return m$b(async()=>{let{data:le}=await m$d({aptosConfig:fe,originMethod:"getGasPriceEstimation",path:"estimate_gas_price"});return le},`gas-price-${fe.network}`,1e3*60*5)()}async function W$6(he){let{aptosConfig:fe,ledgerVersion:le}=he,{data:pe}=await m$d({aptosConfig:fe,originMethod:"getTransactionByVersion",path:`transactions/by_version/${le}`});return pe}async function y$6(he){let{aptosConfig:fe,transactionHash:le}=he,{data:pe}=await m$d({aptosConfig:fe,path:`transactions/by_hash/${le}`,originMethod:"getTransactionByHash"});return pe}async function O$3(he){let{aptosConfig:fe,transactionHash:le}=he;try{return(await y$6({aptosConfig:fe,transactionHash:le})).type==="pending_transaction"}catch(pe){if((pe==null?void 0:pe.status)===404)return!0;throw pe}}async function R$4(he){let{aptosConfig:fe,transactionHash:le}=he,{data:pe}=await m$d({aptosConfig:fe,path:`transactions/wait_by_hash/${le}`,originMethod:"longWaitForTransaction"});return pe}async function q(he){let{aptosConfig:fe,transactionHash:le,options:pe}=he,ge=(pe==null?void 0:pe.timeoutSecs)??20,ye=(pe==null?void 0:pe.checkSuccess)??!0,xe=!0,me=0,we,Ee,Ae=200,Se=1.5;function Le(He){if(!(He instanceof n$b)||(Ee=He,He.status!==404&&He.status>=400&&He.status<500))throw He}try{we=await y$6({aptosConfig:fe,transactionHash:le}),xe=we.type==="pending_transaction"}catch(He){Le(He)}if(xe){let He=Date.now();try{we=await R$4({aptosConfig:fe,transactionHash:le}),xe=we.type==="pending_transaction"}catch(Me){Le(Me)}me=(Date.now()-He)/1e3}for(;xe&&!(me>=ge);){try{if(we=await y$6({aptosConfig:fe,transactionHash:le}),xe=we.type==="pending_transaction",!xe)break}catch(He){Le(He)}await c$o(Ae),me+=Ae/1e3,Ae*=Se}if(we===void 0)throw Ee||new m$9(`Fetching transaction ${le} failed and timed out after ${ge} seconds`,we);if(we.type==="pending_transaction")throw new m$9(`Transaction ${le} timed out in pending state after ${ge} seconds`,we);if(!ye)return we;if(!we.success)throw new T$6(`Transaction ${le} failed with an error: ${we.vm_status}`,we);return we}async function z$6(he){let{aptosConfig:fe,processorType:le}=he,pe=BigInt(he.minimumLedgerVersion),ge=3e3,ye=new Date().getTime(),xe=BigInt(-1);for(;xe<pe;){if(new Date().getTime()-ye>ge)throw new Error("waitForLastSuccessIndexerVersionSync timeout");if(le===void 0?xe=await h$d({aptosConfig:fe}):xe=(await T$8({aptosConfig:fe,processorType:le})).last_success_version,xe>=pe)break;await c$o(200)}}var m$9=class extends Error{constructor(fe,le){super(fe),this.lastSubmittedTransaction=le}},T$6=class extends Error{constructor(fe,le){super(fe),this.transaction=le}};async function U$9(he){let{aptosConfig:fe,ledgerVersion:le,options:pe}=he,{data:ge}=await m$d({aptosConfig:fe,originMethod:"getBlockByVersion",path:`blocks/by_version/${le}`,params:{with_transactions:pe==null?void 0:pe.withTransactions}});return P$4({block:ge,...he})}async function X$2(he){let{aptosConfig:fe,blockHeight:le,options:pe}=he,{data:ge}=await m$d({aptosConfig:fe,originMethod:"getBlockByHeight",path:`blocks/by_height/${le}`,params:{with_transactions:pe==null?void 0:pe.withTransactions}});return P$4({block:ge,...he})}async function P$4(he){let{aptosConfig:fe,block:le,options:pe}=he;if(pe!=null&&pe.withTransactions){le.transactions=le.transactions??[];let ge=le.transactions[le.transactions.length-1],ye=BigInt(le.first_version),xe=BigInt(le.last_version),me=ge==null?void 0:ge.version,we;if(me===void 0?we=ye-1n:we=BigInt(me),we===xe)return le;let Ee=[],Ae=100n;for(let Le=we+1n;Le<xe;Le+=BigInt(100))Ee.push(H$2({aptosConfig:fe,options:{offset:Le,limit:Math.min(Number(Ae),Number(xe-Le+1n))}}));let Se=await Promise.all(Ee);for(let Le of Se)le.transactions.push(...Le)}return le}async function i$d(he){he.minimumLedgerVersion!==void 0&&await z$6({aptosConfig:he.config,minimumLedgerVersion:he.minimumLedgerVersion,processorType:he.processorType})}async function b$7(he){let{aptosConfig:fe,handle:le,data:pe,options:ge}=he;return(await q$1({aptosConfig:fe,originMethod:"getTableItem",path:`tables/${le}/item`,params:{ledger_version:ge==null?void 0:ge.ledgerVersion},body:pe})).data}async function f$b(he){let{aptosConfig:fe,options:le}=he,pe={query:A$b,variables:{where_condition:le==null?void 0:le.where,offset:le==null?void 0:le.offset,limit:le==null?void 0:le.limit,order_by:le==null?void 0:le.orderBy}};return(await a$c({aptosConfig:fe,query:pe,originMethod:"getTableItemsData"})).table_items}async function T$5(he){let{aptosConfig:fe,options:le}=he,pe={query:q$2,variables:{where_condition:le==null?void 0:le.where,offset:le==null?void 0:le.offset,limit:le==null?void 0:le.limit,order_by:le==null?void 0:le.orderBy}};return(await a$c({aptosConfig:fe,query:pe,originMethod:"getTableItemsMetadata"})).table_metadatas}var a$a=class{constructor(fe){this.config=fe}async getTableItem(fe){return b$7({aptosConfig:this.config,...fe})}async getTableItemsData(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"default_processor"}),f$b({aptosConfig:this.config,...fe})}async getTableItemsMetadata(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"default_processor"}),T$5({aptosConfig:this.config,...fe})}};function o$h(he,fe,le){let pe=le.value;return le.value=async function(...ge){let[ye]=ge;if(ye.transaction.feePayerAddress&&!ye.feePayerAuthenticator)throw new Error("You are submitting a Fee Payer transaction but missing the feePayerAuthenticator");return pe.apply(this,ge)},le}function u$8(he,fe,le){let pe=le.value;return le.value=async function(...ge){let[ye]=ge;if(ye.transaction.feePayerAddress&&!ye.feePayerPublicKey)throw new Error("You are simulating a Fee Payer transaction but missing the feePayerPublicKey");return pe.apply(this,ge)},le}var s$3=class extends Error{constructor(fe,le){super(fe),this.invalidReason=le}},l$c=(he=>(he.TOO_SHORT="too_short",he.INVALID_LENGTH="invalid_length",he.INVALID_HEX_CHARS="invalid_hex_chars",he))(l$c||{}),i$c=class Xn{constructor(fe){this.data=fe}toUint8Array(){return this.data}toStringWithoutPrefix(){return bytesToHex$3(this.data)}toString(){return`0x${this.toStringWithoutPrefix()}`}static fromHexString(fe){let le=fe;if(le.startsWith("0x")&&(le=le.slice(2)),le.length===0)throw new s$3("Hex string is too short, must be at least 1 char long, excluding the optional leading 0x.","too_short");if(le.length%2!==0)throw new s$3("Hex string must be an even number of hex characters.","invalid_length");try{return new Xn(hexToBytes$3(le))}catch(pe){throw new s$3(`Hex string contains invalid hex characters: ${pe==null?void 0:pe.message}`,"invalid_hex_chars")}}static fromHexInput(fe){return fe instanceof Uint8Array?new Xn(fe):Xn.fromHexString(fe)}static isValid(fe){try{return Xn.fromHexString(fe),{valid:!0}}catch(le){return{valid:!1,invalidReason:le==null?void 0:le.invalidReason,invalidReasonMessage:le==null?void 0:le.message}}}equals(fe){return this.data.length!==fe.data.length?!1:this.data.every((le,pe)=>le===fe.data[pe])}},t$c=255,n$9=65535,U$8=4294967295,_$l=18446744073709551615n,o$g=340282366920938463463374607431768211455n,i$b=115792089237316195423570985008687907853269984665640564039457584007913129639935n,h$c=Object.defineProperty,i$a=Object.getOwnPropertyDescriptor,j$4=(he,fe,le,pe)=>{for(var ge=i$a(fe,le),ye=he.length-1,xe;ye>=0;ye--)(xe=he[ye])&&(ge=xe(fe,le,ge)||ge);return ge&&h$c(fe,le,ge),ge},B$6=class{bcsToBytes(){let fe=new n$8;return this.serialize(fe),fe.toUint8Array()}bcsToHex(){let fe=this.bcsToBytes();return i$c.fromHexInput(fe)}},n$8=class{constructor(fe=64){if(fe<=0)throw new Error("Length needs to be greater than 0");this.buffer=new ArrayBuffer(fe),this.offset=0}ensureBufferWillHandleSize(fe){for(;this.buffer.byteLength<this.offset+fe;){let le=new ArrayBuffer(this.buffer.byteLength*2);new Uint8Array(le).set(new Uint8Array(this.buffer)),this.buffer=le}}appendToBuffer(fe){this.ensureBufferWillHandleSize(fe.length),new Uint8Array(this.buffer,this.offset).set(fe),this.offset+=fe.length}serializeWithFunction(fe,le,pe){this.ensureBufferWillHandleSize(le);let ge=new DataView(this.buffer,this.offset);fe.apply(ge,[0,pe,!0]),this.offset+=le}serializeStr(fe){let le=new TextEncoder;this.serializeBytes(le.encode(fe))}serializeBytes(fe){this.serializeU32AsUleb128(fe.length),this.appendToBuffer(fe)}serializeFixedBytes(fe){this.appendToBuffer(fe)}serializeBool(fe){A$7(fe);let le=fe?1:0;this.appendToBuffer(new Uint8Array([le]))}serializeU8(fe){this.appendToBuffer(new Uint8Array([fe]))}serializeU16(fe){this.serializeWithFunction(DataView.prototype.setUint16,2,fe)}serializeU32(fe){this.serializeWithFunction(DataView.prototype.setUint32,4,fe)}serializeU64(fe){let le=BigInt(fe)&BigInt(U$8),pe=BigInt(fe)>>BigInt(32);this.serializeU32(Number(le)),this.serializeU32(Number(pe))}serializeU128(fe){let le=BigInt(fe)&_$l,pe=BigInt(fe)>>BigInt(64);this.serializeU64(le),this.serializeU64(pe)}serializeU256(fe){let le=BigInt(fe)&o$g,pe=BigInt(fe)>>BigInt(128);this.serializeU128(le),this.serializeU128(pe)}serializeU32AsUleb128(fe){let le=fe,pe=[];for(;le>>>7;)pe.push(le&127|128),le>>>=7;pe.push(le),this.appendToBuffer(new Uint8Array(pe))}toUint8Array(){return new Uint8Array(this.buffer).slice(0,this.offset)}serialize(fe){fe.serialize(this)}serializeVector(fe){this.serializeU32AsUleb128(fe.length),fe.forEach(le=>{le.serialize(this)})}serializeOption(fe){let le=fe!==void 0;this.serializeBool(le),le&&fe.serialize(this)}serializeOptionStr(fe){fe===void 0?this.serializeU32AsUleb128(0):(this.serializeU32AsUleb128(1),this.serializeStr(fe))}};j$4([o$f(0,t$c)],n$8.prototype,"serializeU8"),j$4([o$f(0,n$9)],n$8.prototype,"serializeU16"),j$4([o$f(0,U$8)],n$8.prototype,"serializeU32"),j$4([o$f(BigInt(0),_$l)],n$8.prototype,"serializeU64"),j$4([o$f(BigInt(0),o$g)],n$8.prototype,"serializeU128"),j$4([o$f(BigInt(0),i$b)],n$8.prototype,"serializeU256"),j$4([o$f(0,U$8)],n$8.prototype,"serializeU32AsUleb128");function A$7(he){if(typeof he!="boolean")throw new Error(`${he} is not a boolean value`)}var z$5=(he,fe,le)=>`${he} is out of range: [${fe}, ${le}]`;function g$6(he,fe,le){let pe=BigInt(he);if(pe>BigInt(le)||pe<BigInt(fe))throw new Error(z$5(he,fe,le))}function o$f(he,fe){return(le,pe,ge)=>{let ye=ge.value;return ge.value=function(xe){return g$6(xe,he,fe),ye.apply(this,[xe])},ge}}var r$8=class Bi extends B$6{constructor(fe){super(),this.identifier=fe}serialize(fe){fe.serializeStr(this.identifier)}static deserialize(fe){let le=fe.deserializeStr();return new Bi(le)}},g$5=(he=>(he.INCORRECT_NUMBER_OF_BYTES="incorrect_number_of_bytes",he.INVALID_HEX_CHARS="invalid_hex_chars",he.TOO_SHORT="too_short",he.TOO_LONG="too_long",he.LEADING_ZERO_X_REQUIRED="leading_zero_x_required",he.LONG_FORM_REQUIRED_UNLESS_SPECIAL="long_form_required_unless_special",he.INVALID_PADDING_ZEROES="INVALID_PADDING_ZEROES",he))(g$5||{}),r$7=class Mn extends B$6{constructor(fe){if(super(),fe.length!==Mn.LENGTH)throw new s$3("AccountAddress data should be exactly 32 bytes long","incorrect_number_of_bytes");this.data=fe}isSpecial(){return this.data.slice(0,this.data.length-1).every(fe=>fe===0)&&this.data[this.data.length-1]<16}toString(){return`0x${this.toStringWithoutPrefix()}`}toStringWithoutPrefix(){let fe=bytesToHex$3(this.data);return this.isSpecial()&&(fe=fe[fe.length-1]),fe}toStringLong(){return`0x${this.toStringLongWithoutPrefix()}`}toStringLongWithoutPrefix(){return bytesToHex$3(this.data)}toUint8Array(){return this.data}serialize(fe){fe.serializeFixedBytes(this.data)}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}serializeForScriptFunction(fe){fe.serializeU32AsUleb128(3),fe.serialize(this)}static deserialize(fe){let le=fe.deserializeFixedBytes(Mn.LENGTH);return new Mn(le)}static fromStringStrict(fe){if(!fe.startsWith("0x"))throw new s$3("Hex string must start with a leading 0x.","leading_zero_x_required");let le=Mn.fromString(fe);if(fe.length!==Mn.LONG_STRING_LENGTH+2)if(le.isSpecial()){if(fe.length!==3)throw new s$3(`The given hex string ${fe} is a special address not in LONG form, it must be 0x0 to 0xf without padding zeroes.`,"INVALID_PADDING_ZEROES")}else throw new s$3(`The given hex string ${fe} is not a special address, it must be represented as 0x + 64 chars.`,"long_form_required_unless_special");return le}static fromString(fe){let le=fe;if(fe.startsWith("0x")&&(le=fe.slice(2)),le.length===0)throw new s$3("Hex string is too short, must be 1 to 64 chars long, excluding the leading 0x.","too_short");if(le.length>64)throw new s$3("Hex string is too long, must be 1 to 64 chars long, excluding the leading 0x.","too_long");let pe;try{pe=hexToBytes$3(le.padStart(64,"0"))}catch(ge){throw new s$3(`Hex characters are invalid: ${ge==null?void 0:ge.message}`,"invalid_hex_chars")}return new Mn(pe)}static from(fe){return typeof fe=="string"?Mn.fromString(fe):fe instanceof Uint8Array?new Mn(fe):fe}static fromStrict(fe){return typeof fe=="string"?Mn.fromStringStrict(fe):fe instanceof Uint8Array?new Mn(fe):fe}static isValid(fe){try{return fe.strict?Mn.fromStrict(fe.input):Mn.from(fe.input),{valid:!0}}catch(le){return{valid:!1,invalidReason:le==null?void 0:le.invalidReason,invalidReasonMessage:le==null?void 0:le.message}}}equals(fe){return this.data.length!==fe.data.length?!1:this.data.every((le,pe)=>le===fe.data[pe])}};r$7.LENGTH=32,r$7.LONG_STRING_LENGTH=64,r$7.ZERO=r$7.from("0x0"),r$7.ONE=r$7.from("0x1"),r$7.TWO=r$7.from("0x2"),r$7.THREE=r$7.from("0x3"),r$7.FOUR=r$7.from("0x4"),r$7.A=r$7.from("0xA");var d$d=r$7,t$b=class extends B$6{static deserialize(fe){let le=fe.deserializeUleb128AsU32();switch(le){case 0:return c$n.load(fe);case 1:return u$7.load(fe);case 2:return p$9.load(fe);case 3:return z$4.load(fe);case 4:return S$5.load(fe);case 5:return U$7.load(fe);case 6:return y$5.load(fe);case 7:return b$6.load(fe);case 8:return d$c.load(fe);case 9:return g$4.load(fe);case 10:return T$4.load(fe);case 255:return h$b.load(fe);default:throw new Error(`Unknown variant index for TypeTag: ${le}`)}}isBool(){return this instanceof c$n}isAddress(){return this instanceof S$5}isGeneric(){return this instanceof h$b}isSigner(){return this instanceof U$7}isVector(){return this instanceof y$5}isStruct(){return this instanceof b$6}isU8(){return this instanceof u$7}isU16(){return this instanceof d$c}isU32(){return this instanceof g$4}isU64(){return this instanceof p$9}isU128(){return this instanceof z$4}isU256(){return this instanceof T$4}},c$n=class Si extends t$b{toString(){return"bool"}serialize(fe){fe.serializeU32AsUleb128(0)}static load(fe){return new Si}},u$7=class Ii extends t$b{toString(){return"u8"}serialize(fe){fe.serializeU32AsUleb128(1)}static load(fe){return new Ii}},d$c=class Ci extends t$b{toString(){return"u16"}serialize(fe){fe.serializeU32AsUleb128(8)}static load(fe){return new Ci}},g$4=class ki extends t$b{toString(){return"u32"}serialize(fe){fe.serializeU32AsUleb128(9)}static load(fe){return new ki}},p$9=class Ui extends t$b{toString(){return"u64"}serialize(fe){fe.serializeU32AsUleb128(2)}static load(fe){return new Ui}},z$4=class Ti extends t$b{toString(){return"u128"}serialize(fe){fe.serializeU32AsUleb128(3)}static load(fe){return new Ti}},T$4=class Li extends t$b{toString(){return"u256"}serialize(fe){fe.serializeU32AsUleb128(10)}static load(fe){return new Li}},S$5=class Di extends t$b{toString(){return"address"}serialize(fe){fe.serializeU32AsUleb128(4)}static load(fe){return new Di}},U$7=class Mi extends t$b{toString(){return"signer"}serialize(fe){fe.serializeU32AsUleb128(5)}static load(fe){return new Mi}},x$7=class Fi extends t$b{constructor(fe){super(),this.value=fe}toString(){return`&${this.value.toString()}`}serialize(fe){fe.serializeU32AsUleb128(254)}static load(fe){let le=t$b.deserialize(fe);return new Fi(le)}},h$b=class Hi extends t$b{constructor(fe){if(super(),this.value=fe,fe<0)throw new Error("Generic type parameter index cannot be negative")}toString(){return`T${this.value}`}serialize(fe){fe.serializeU32AsUleb128(255),fe.serializeU32(this.value)}static load(fe){let le=fe.deserializeU32();return new Hi(le)}},y$5=class ni extends t$b{constructor(fe){super(),this.value=fe}toString(){return`vector<${this.value.toString()}>`}static u8(){return new ni(new u$7)}serialize(fe){fe.serializeU32AsUleb128(6),this.value.serialize(fe)}static load(fe){let le=t$b.deserialize(fe);return new ni(le)}},b$6=class Ri extends t$b{constructor(fe){super(),this.value=fe}toString(){let fe="";return this.value.typeArgs.length>0&&(fe=`<${this.value.typeArgs.map(le=>le.toString()).join(", ")}>`),`${this.value.address.toString()}::${this.value.moduleName.identifier}::${this.value.name.identifier}${fe}`}serialize(fe){fe.serializeU32AsUleb128(7),this.value.serialize(fe)}static load(fe){let le=o$e.deserialize(fe);return new Ri(le)}isTypeTag(fe,le,pe){return this.value.moduleName.identifier===le&&this.value.name.identifier===pe&&this.value.address.equals(fe)}isString(){return this.isTypeTag(d$d.ONE,"string","String")}isOption(){return this.isTypeTag(d$d.ONE,"option","Option")}isObject(){return this.isTypeTag(d$d.ONE,"object","Object")}},o$e=class Ki extends B$6{constructor(fe,le,pe,ge){super(),this.address=fe,this.moduleName=le,this.name=pe,this.typeArgs=ge}serialize(fe){fe.serialize(this.address),fe.serialize(this.moduleName),fe.serialize(this.name),fe.serializeVector(this.typeArgs)}static deserialize(fe){let le=d$d.deserialize(fe),pe=r$8.deserialize(fe),ge=r$8.deserialize(fe),ye=fe.deserializeVector(t$b);return new Ki(le,pe,ge,ye)}};function E$5(){return new o$e(d$d.ONE,new r$8("string"),new r$8("String"),[])}function j$3(he){return new o$e(d$d.ONE,new r$8("object"),new r$8("Object"),[he])}function V(he){return!!he.match(/^[_a-zA-Z0-9]+$/)}function W$5(he){return!!he.match(/\s/)}function $$4(he){return!!he.match(/^T[0-9]+$/)}function F$6(he){return!!he.match(/^&.+$/)}function k$3(he){switch(he){case"signer":case"address":case"bool":case"u8":case"u16":case"u32":case"u64":case"u128":case"u256":return!0;default:return!1}}function L$6(he,fe){let le=fe;for(;le<he.length;le+=1){let pe=he[le];if(!W$5(pe))break}return le}var R$3=(he=>(he.InvalidTypeTag="unknown type",he.UnexpectedGenericType="unexpected generic type",he.UnexpectedTypeArgumentClose="unexpected '>'",he.UnexpectedWhitespaceCharacter="unexpected whitespace character",he.UnexpectedComma="unexpected ','",he.TypeArgumentCountMismatch="type argument count doesn't match expected amount",he.MissingTypeArgumentClose="no matching '>' for '<'",he.MissingTypeArgument="no type argument before ','",he.UnexpectedPrimitiveTypeArguments="primitive types not expected to have type arguments",he.UnexpectedVectorTypeArgumentCount="vector type expected to have exactly one type argument",he.UnexpectedStructFormat="unexpected struct format, must be of the form 0xaddress::module_name::struct_name",he.InvalidModuleNameCharacter="module name must only contain alphanumeric or '_' characters",he.InvalidStructNameCharacter="struct name must only contain alphanumeric or '_' characters",he.InvalidAddress="struct address must be valid",he))(R$3||{}),t$a=class extends Error{constructor(fe,le){super(`Failed to parse typeTag '${fe}', ${le}`)}};function j$2(he,fe){let le=(fe==null?void 0:fe.allowGenerics)??!1,pe=[],ge=[],ye=[],xe=0,me="",we=1;for(;xe<he.length;){let Ee=he[xe];if(Ee==="<")pe.push({savedExpectedTypes:we,savedStr:me,savedTypes:ye}),me="",ye=[],we=1;else if(Ee===">"){if(me!==""){let Me=g$3(me,ge,le);ye.push(Me)}let Ae=pe.pop();if(Ae===void 0)throw new t$a(he,"unexpected '>'");if(we!==ye.length)throw new t$a(he,"type argument count doesn't match expected amount");let{savedStr:Se,savedTypes:Le,savedExpectedTypes:He}=Ae;ge=ye,ye=Le,me=Se,we=He}else if(Ee===","){if(pe.length===0)throw new t$a(he,"unexpected ','");if(me.length===0)throw new t$a(he,"no type argument before ','");let Ae=g$3(me,ge,le);ge=[],ye.push(Ae),me="",we+=1}else if(W$5(Ee)){let Ae=!1;if(me.length!==0){let Le=g$3(me,ge,le);ge=[],ye.push(Le),me="",Ae=!0}xe=L$6(he,xe);let Se=he[xe];if(xe<he.length&&Ae&&Se!==","&&Se!==">")throw new t$a(he,"unexpected whitespace character");continue}else me+=Ee;xe+=1}if(pe.length>0)throw new t$a(he,"no matching '>' for '<'");switch(ye.length){case 0:return g$3(me,ge,le);case 1:if(me==="")return ye[0];throw new t$a(he,"unexpected ','");default:throw new t$a(he,"unexpected whitespace character")}}function g$3(he,fe,le){let pe=he.trim(),ge=pe.toLowerCase();if(k$3(ge)&&fe.length>0)throw new t$a(he,"primitive types not expected to have type arguments");switch(pe.toLowerCase()){case"signer":return new U$7;case"bool":return new c$n;case"address":return new S$5;case"u8":return new u$7;case"u16":return new d$c;case"u32":return new g$4;case"u64":return new p$9;case"u128":return new z$4;case"u256":return new T$4;case"vector":if(fe.length!==1)throw new t$a(he,"vector type expected to have exactly one type argument");return new y$5(fe[0]);default:if(F$6(pe)){let me=pe.substring(1);return new x$7(g$3(me,fe,le))}if($$4(pe)){if(le)return new h$b(Number(pe.split("T")[1]));throw new t$a(he,"unexpected generic type")}if(!pe.match(/:/))throw new t$a(he,"unknown type");let ye=pe.split("::");if(ye.length!==3)throw new t$a(he,"unexpected struct format, must be of the form 0xaddress::module_name::struct_name");let xe;try{xe=d$d.fromString(ye[0])}catch{throw new t$a(he,"struct address must be valid")}if(!V(ye[1]))throw new t$a(he,"module name must only contain alphanumeric or '_' characters");if(!V(ye[2]))throw new t$a(he,"struct name must only contain alphanumeric or '_' characters");return new b$6(new o$e(xe,new r$8(ye[1]),new r$8(ye[2]),fe))}}var t$9=class Ni extends B$6{constructor(fe){super(),this.value=i$c.fromHexInput(fe).toUint8Array()}serialize(fe){fe.serializeFixedBytes(this.value)}serializeForEntryFunction(fe){fe.serialize(this)}serializeForScriptFunction(fe){fe.serialize(this)}static deserialize(fe,le){let pe=fe.deserializeFixedBytes(le);return new Ni(pe)}},d$b=class Oi extends B$6{constructor(fe){super(),A$7(fe),this.value=fe}serialize(fe){fe.serializeBool(this.value)}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}serializeForScriptFunction(fe){fe.serializeU32AsUleb128(5),fe.serialize(this)}static deserialize(fe){return new Oi(fe.deserializeBool())}},U$6=class Gi extends B$6{constructor(fe){super(),g$6(fe,0,t$c),this.value=fe}serialize(fe){fe.serializeU8(this.value)}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}serializeForScriptFunction(fe){fe.serializeU32AsUleb128(0),fe.serialize(this)}static deserialize(fe){return new Gi(fe.deserializeU8())}},p$8=class Ji extends B$6{constructor(fe){super(),g$6(fe,0,n$9),this.value=fe}serialize(fe){fe.serializeU16(this.value)}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}serializeForScriptFunction(fe){fe.serializeU32AsUleb128(6),fe.serialize(this)}static deserialize(fe){return new Ji(fe.deserializeU16())}},b$5=class zi extends B$6{constructor(fe){super(),g$6(fe,0,U$8),this.value=fe}serialize(fe){fe.serializeU32(this.value)}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}serializeForScriptFunction(fe){fe.serializeU32AsUleb128(7),fe.serialize(this)}static deserialize(fe){return new zi(fe.deserializeU32())}},y$4=class Yi extends B$6{constructor(fe){super(),g$6(fe,BigInt(0),_$l),this.value=BigInt(fe)}serialize(fe){fe.serializeU64(this.value)}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}serializeForScriptFunction(fe){fe.serializeU32AsUleb128(1),fe.serialize(this)}static deserialize(fe){return new Yi(fe.deserializeU64())}},m$8=class qi extends B$6{constructor(fe){super(),g$6(fe,BigInt(0),o$g),this.value=BigInt(fe)}serialize(fe){fe.serializeU128(this.value)}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}serializeForScriptFunction(fe){fe.serializeU32AsUleb128(2),fe.serialize(this)}static deserialize(fe){return new qi(fe.deserializeU128())}},B$5=class Qi extends B$6{constructor(fe){super(),g$6(fe,BigInt(0),i$b),this.value=BigInt(fe)}serialize(fe){fe.serializeU256(this.value)}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}serializeForScriptFunction(fe){fe.serializeU32AsUleb128(8),fe.serialize(this)}static deserialize(fe){return new Qi(fe.deserializeU256())}},t$8=class Fn extends B$6{constructor(fe){super(),this.values=fe}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}serializeForScriptFunction(fe){if(!(this.values[0]instanceof U$6)&&this.values[0]!==void 0)throw new Error("Script function arguments only accept u8 vectors");fe.serializeU32AsUleb128(4),fe.serialize(this)}static U8(fe){let le;if(Array.isArray(fe)&&fe.length===0)le=[];else if(Array.isArray(fe)&&typeof fe[0]=="number")le=fe;else if(typeof fe=="string"){let pe=i$c.fromHexInput(fe);le=Array.from(pe.toUint8Array())}else if(fe instanceof Uint8Array)le=Array.from(fe);else throw new Error("Invalid input type, must be an number[], Uint8Array, or hex string");return new Fn(le.map(pe=>new U$6(pe)))}static U16(fe){return new Fn(fe.map(le=>new p$8(le)))}static U32(fe){return new Fn(fe.map(le=>new b$5(le)))}static U64(fe){return new Fn(fe.map(le=>new y$4(le)))}static U128(fe){return new Fn(fe.map(le=>new m$8(le)))}static U256(fe){return new Fn(fe.map(le=>new B$5(le)))}static Bool(fe){return new Fn(fe.map(le=>new d$b(le)))}static MoveString(fe){return new Fn(fe.map(le=>new a$9(le)))}serialize(fe){fe.serializeVector(this.values)}static deserialize(fe,le){let pe=fe.deserializeUleb128AsU32(),ge=new Array;for(let ye=0;ye<pe;ye+=1)ge.push(le.deserialize(fe));return new Fn(ge)}},a$9=class ji extends B$6{constructor(fe){super(),this.value=fe}serialize(fe){fe.serializeStr(this.value)}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}serializeForScriptFunction(fe){let le=this.bcsToBytes().slice(1);t$8.U8(le).serializeForScriptFunction(fe)}static deserialize(fe){return new ji(fe.deserializeStr())}},z$3=class Hn extends B$6{constructor(fe){super(),typeof fe<"u"&&fe!==null?this.vec=new t$8([fe]):this.vec=new t$8([]),[this.value]=this.vec.values}serializeForEntryFunction(fe){let le=this.bcsToBytes();fe.serializeBytes(le)}unwrap(){if(this.isSome())return this.vec.values[0];throw new Error("Called unwrap on a MoveOption with no value")}isSome(){return this.vec.values.length===1}serialize(fe){this.vec.serialize(fe)}static U8(fe){return new Hn(fe!=null?new U$6(fe):void 0)}static U16(fe){return new Hn(fe!=null?new p$8(fe):void 0)}static U32(fe){return new Hn(fe!=null?new b$5(fe):void 0)}static U64(fe){return new Hn(fe!=null?new y$4(fe):void 0)}static U128(fe){return new Hn(fe!=null?new m$8(fe):void 0)}static U256(fe){return new Hn(fe!=null?new B$5(fe):void 0)}static Bool(fe){return new Hn(fe!=null?new d$b(fe):void 0)}static MoveString(fe){return new Hn(fe!=null?new a$9(fe):void 0)}static deserialize(fe,le){let pe=t$8.deserialize(fe,le);return new Hn(pe.values[0])}};function D$5(he){return typeof he=="boolean"}function l$b(he){return typeof he=="string"}function d$a(he){return typeof he=="number"}function P$3(he){if(d$a(he))return he;if(l$b(he)&&he!=="")return Number.parseInt(he,10)}function w$1(he){return typeof he=="number"||typeof he=="bigint"||typeof he=="string"}function G$2(he){return he==null}function $$3(he){return T$3(he)||B$4(he)||U$5(he)||b$4(he)||I$2(he)||v$5(he)||h$a(he)||E$4(he)||x$6(he)||S$4(he)||he instanceof t$8||he instanceof z$3}function T$3(he){return he instanceof d$b}function E$4(he){return he instanceof d$d}function x$6(he){return he instanceof a$9}function S$4(he){return he instanceof t$9}function B$4(he){return he instanceof U$6}function U$5(he){return he instanceof p$8}function b$4(he){return he instanceof b$5}function I$2(he){return he instanceof y$4}function v$5(he){return he instanceof m$8}function h$a(he){return he instanceof B$5}function O$2(he){return"bytecode"in he}function R$2(he,fe){throw new Error(`Type mismatch for argument ${fe}, expected '${he}'`)}function W$4(he){let fe=he.params.findIndex(le=>le!=="signer"&&le!=="&signer");return fe<0?he.params.length:fe}function L$5(he){let fe=he.split("::");if(fe.length!==3)throw new Error(`Invalid function ${he}`);let le=fe[0],pe=fe[1],ge=fe[2];return{moduleAddress:le,moduleName:pe,functionName:ge}}var o$d=class ii extends B$6{constructor(fe,le){super(),this.address=fe,this.name=le}static fromStr(fe){let le=fe.split("::");if(le.length!==2)throw new Error("Invalid module id.");return new ii(d$d.fromString(le[0]),new r$8(le[1]))}serialize(fe){this.address.serialize(fe),this.name.serialize(fe)}static deserialize(fe){let le=d$d.deserialize(fe),pe=r$8.deserialize(fe);return new ii(le,pe)}},t$7=class Vi extends B$6{constructor(fe){super(),this.value=new t$9(fe)}serialize(fe){fe.serialize(this.value)}serializeForEntryFunction(fe){fe.serializeU32AsUleb128(this.value.value.length),fe.serialize(this)}static deserialize(fe,le){let pe=t$9.deserialize(fe,le);return new Vi(pe.value)}};function D$4(he){let fe=he.deserializeUleb128AsU32();switch(fe){case 0:return U$6.deserialize(he);case 1:return y$4.deserialize(he);case 2:return m$8.deserialize(he);case 3:return d$d.deserialize(he);case 4:return t$8.deserialize(he,U$6);case 5:return d$b.deserialize(he);case 6:return p$8.deserialize(he);case 7:return b$5.deserialize(he);case 8:return B$5.deserialize(he);default:throw new Error(`Unknown variant index for ScriptTransactionArgument: ${fe}`)}}var a$8=class extends B$6{static deserialize(fe){let le=fe.deserializeUleb128AsU32();switch(le){case 0:return A$6.load(fe);case 2:return z$2.load(fe);case 3:return h$9.load(fe);default:throw new Error(`Unknown variant index for TransactionPayload: ${le}`)}}},A$6=class Wi extends a$8{constructor(fe){super(),this.script=fe}serialize(fe){fe.serializeU32AsUleb128(0),this.script.serialize(fe)}static load(fe){let le=U$4.deserialize(fe);return new Wi(le)}},z$2=class Xi extends a$8{constructor(fe){super(),this.entryFunction=fe}serialize(fe){fe.serializeU32AsUleb128(2),this.entryFunction.serialize(fe)}static load(fe){let le=l$a.deserialize(fe);return new Xi(le)}},h$9=class Zi extends a$8{constructor(fe){super(),this.multiSig=fe}serialize(fe){fe.serializeU32AsUleb128(3),this.multiSig.serialize(fe)}static load(fe){let le=f$a.deserialize(fe);return new Zi(le)}},l$a=class si{constructor(fe,le,pe,ge){this.module_name=fe,this.function_name=le,this.type_args=pe,this.args=ge}static build(fe,le,pe,ge){return new si(o$d.fromStr(fe),new r$8(le),pe,ge)}serialize(fe){this.module_name.serialize(fe),this.function_name.serialize(fe),fe.serializeVector(this.type_args),fe.serializeU32AsUleb128(this.args.length),this.args.forEach(le=>{le.serializeForEntryFunction(fe)})}static deserialize(fe){let le=o$d.deserialize(fe),pe=r$8.deserialize(fe),ge=fe.deserializeVector(t$b),ye=fe.deserializeUleb128AsU32(),xe=new Array;for(let me=0;me<ye;me+=1){let we=fe.deserializeUleb128AsU32(),Ee=t$7.deserialize(fe,we);xe.push(Ee)}return new si(le,pe,ge,xe)}},U$4=class $i{constructor(fe,le,pe){this.bytecode=fe,this.type_args=le,this.args=pe}serialize(fe){fe.serializeBytes(this.bytecode),fe.serializeVector(this.type_args),fe.serializeU32AsUleb128(this.args.length),this.args.forEach(le=>{le.serializeForScriptFunction(fe)})}static deserialize(fe){let le=fe.deserializeBytes(),pe=fe.deserializeVector(t$b),ge=fe.deserializeUleb128AsU32(),ye=new Array;for(let xe=0;xe<ge;xe+=1){let me=D$4(fe);ye.push(me)}return new $i(le,pe,ye)}},f$a=class _i{constructor(fe,le){this.multisig_address=fe,this.transaction_payload=le}serialize(fe){this.multisig_address.serialize(fe),this.transaction_payload===void 0?fe.serializeBool(!1):(fe.serializeBool(!0),this.transaction_payload.serialize(fe))}static deserialize(fe){let le=d$d.deserialize(fe),pe=fe.deserializeBool(),ge;return pe&&(ge=b$3.deserialize(fe)),new _i(le,ge)}},b$3=class es extends B$6{constructor(fe){super(),this.transaction_payload=fe}serialize(fe){fe.serializeU32AsUleb128(0),this.transaction_payload.serialize(fe)}static deserialize(fe){return fe.deserializeUleb128AsU32(),new es(l$a.deserialize(fe))}},r$6=class ts extends B$6{constructor(fe){super(),this.chainId=fe}serialize(fe){fe.serializeU8(this.chainId)}static deserialize(fe){let le=fe.deserializeU8();return new ts(le)}},t$6=class rs extends B$6{constructor(fe,le,pe,ge,ye,xe,me){super(),this.sender=fe,this.sequence_number=le,this.payload=pe,this.max_gas_amount=ge,this.gas_unit_price=ye,this.expiration_timestamp_secs=xe,this.chain_id=me}serialize(fe){this.sender.serialize(fe),fe.serializeU64(this.sequence_number),this.payload.serialize(fe),fe.serializeU64(this.max_gas_amount),fe.serializeU64(this.gas_unit_price),fe.serializeU64(this.expiration_timestamp_secs),this.chain_id.serialize(fe)}static deserialize(fe){let le=d$d.deserialize(fe),pe=fe.deserializeU64(),ge=a$8.deserialize(fe),ye=fe.deserializeU64(),xe=fe.deserializeU64(),me=fe.deserializeU64(),we=r$6.deserialize(fe);return new rs(le,pe,ge,ye,xe,me,we)}},o$c=class extends B$6{static deserialize(fe){let le=fe.deserializeUleb128AsU32();switch(le){case 0:return u$6.load(fe);case 1:return p$7.load(fe);default:throw new Error(`Unknown variant index for RawTransactionWithData: ${le}`)}}},u$6=class ns extends o$c{constructor(fe,le){super(),this.raw_txn=fe,this.secondary_signer_addresses=le}serialize(fe){fe.serializeU32AsUleb128(0),this.raw_txn.serialize(fe),fe.serializeVector(this.secondary_signer_addresses)}static load(fe){let le=t$6.deserialize(fe),pe=fe.deserializeVector(d$d);return new ns(le,pe)}},p$7=class is extends o$c{constructor(fe,le,pe){super(),this.raw_txn=fe,this.secondary_signer_addresses=le,this.fee_payer_address=pe}serialize(fe){fe.serializeU32AsUleb128(1),this.raw_txn.serialize(fe),fe.serializeVector(this.secondary_signer_addresses),this.fee_payer_address.serialize(fe)}static load(fe){let le=t$6.deserialize(fe),pe=fe.deserializeVector(d$d),ge=d$d.deserialize(fe);return new is(le,pe,ge)}};function d$9(he){return he.feePayerAddress?new p$7(he.rawTransaction,he.secondarySignerAddresses??[],he.feePayerAddress):he.secondarySignerAddresses?new u$6(he.rawTransaction,he.secondarySignerAddresses):he.rawTransaction}function n$7(he,fe){let le=sha3_256.create();if(!fe.startsWith("APTOS::"))throw new Error(`Domain separator needs to start with 'APTOS::'.  Provided - ${fe}`);le.update(fe);let pe=le.digest(),ge=he,ye=new Uint8Array(pe.length+ge.length);return ye.set(pe),ye.set(ge,pe.length),ye}function S$3(he){let fe=d$9(he);return he.feePayerAddress||he.secondarySignerAddresses?n$7(fe.bcsToBytes(),A$8):n$7(fe.bcsToBytes(),T$7)}var t$5=class extends B$6{toString(){let fe=this.toUint8Array();return i$c.fromHexInput(fe).toString()}},a$7=class extends t$5{},o$b=class extends B$6{toString(){let fe=this.toUint8Array();return i$c.fromHexInput(fe).toString()}},o$a=he=>typeof he=="string"?i$c.isValid(he).valid?he:Buffer$4.from(he,"utf8"):he;function number$1(he){if(!Number.isSafeInteger(he)||he<0)throw new Error(`positive integer expected, not ${he}`)}function isBytes$3(he){return he instanceof Uint8Array||he!=null&&typeof he=="object"&&he.constructor.name==="Uint8Array"}function bytes$1(he,...fe){if(!isBytes$3(he))throw new Error("Uint8Array expected");if(fe.length>0&&!fe.includes(he.length))throw new Error(`Uint8Array expected of length ${fe}, not of length=${he.length}`)}function hash$1(he){if(typeof he!="function"||typeof he.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");number$1(he.outputLen),number$1(he.blockLen)}function exists$1(he,fe=!0){if(he.destroyed)throw new Error("Hash instance has been destroyed");if(fe&&he.finished)throw new Error("Hash#digest() has already been called")}function output$1(he,fe){bytes$1(he);const le=fe.outputLen;if(he.length<le)throw new Error(`digestInto() expects output buffer of length at least ${le}`)}/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const createView$1=he=>new DataView(he.buffer,he.byteOffset,he.byteLength);new Uint8Array(new Uint32Array([287454020]).buffer)[0];function utf8ToBytes$2(he){if(typeof he!="string")throw new Error(`utf8ToBytes expected string, got ${typeof he}`);return new Uint8Array(new TextEncoder().encode(he))}function toBytes$1(he){return typeof he=="string"&&(he=utf8ToBytes$2(he)),bytes$1(he),he}let Hash$1=class{clone(){return this._cloneInto()}};const toStr={}.toString;function checkOpts(he,fe){if(fe!==void 0&&toStr.call(fe)!=="[object Object]")throw new Error("Options should be object or undefined");return Object.assign(he,fe)}function wrapConstructor$1(he){const fe=pe=>he().update(toBytes$1(pe)).digest(),le=he();return fe.outputLen=le.outputLen,fe.blockLen=le.blockLen,fe.create=()=>he(),fe}let HMAC$1=class extends Hash$1{constructor(fe,le){super(),this.finished=!1,this.destroyed=!1,hash$1(fe);const pe=toBytes$1(le);if(this.iHash=fe.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const ge=this.blockLen,ye=new Uint8Array(ge);ye.set(pe.length>ge?fe.create().update(pe).digest():pe);for(let xe=0;xe<ye.length;xe++)ye[xe]^=54;this.iHash.update(ye),this.oHash=fe.create();for(let xe=0;xe<ye.length;xe++)ye[xe]^=106;this.oHash.update(ye),ye.fill(0)}update(fe){return exists$1(this),this.iHash.update(fe),this}digestInto(fe){exists$1(this),bytes$1(fe,this.outputLen),this.finished=!0,this.iHash.digestInto(fe),this.oHash.update(fe),this.oHash.digestInto(fe),this.destroy()}digest(){const fe=new Uint8Array(this.oHash.outputLen);return this.digestInto(fe),fe}_cloneInto(fe){fe||(fe=Object.create(Object.getPrototypeOf(this),{}));const{oHash:le,iHash:pe,finished:ge,destroyed:ye,blockLen:xe,outputLen:me}=this;return fe=fe,fe.finished=ge,fe.destroyed=ye,fe.blockLen=xe,fe.outputLen=me,fe.oHash=le._cloneInto(fe.oHash),fe.iHash=pe._cloneInto(fe.iHash),fe}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}};const hmac$1=(he,fe,le)=>new HMAC$1(he,fe).update(le).digest();hmac$1.create=(he,fe)=>new HMAC$1(he,fe);function pbkdf2Init(he,fe,le,pe){hash$1(he);const ge=checkOpts({dkLen:32,asyncTick:10},pe),{c:ye,dkLen:xe,asyncTick:me}=ge;if(number$1(ye),number$1(xe),number$1(me),ye<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const we=toBytes$1(fe),Ee=toBytes$1(le),Ae=new Uint8Array(xe),Se=hmac$1.create(he,we),Le=Se._cloneInto().update(Ee);return{c:ye,dkLen:xe,asyncTick:me,DK:Ae,PRF:Se,PRFSalt:Le}}function pbkdf2Output(he,fe,le,pe,ge){return he.destroy(),fe.destroy(),pe&&pe.destroy(),ge.fill(0),le}function pbkdf2(he,fe,le,pe){const{c:ge,dkLen:ye,DK:xe,PRF:me,PRFSalt:we}=pbkdf2Init(he,fe,le,pe);let Ee;const Ae=new Uint8Array(4),Se=createView$1(Ae),Le=new Uint8Array(me.outputLen);for(let He=1,Me=0;Me<ye;He++,Me+=me.outputLen){const Fe=xe.subarray(Me,Me+me.outputLen);Se.setInt32(0,He,!1),(Ee=we._cloneInto(Ee)).update(Ae).digestInto(Le),Fe.set(Le.subarray(0,Fe.length));for(let Ue=1;Ue<ge;Ue++){me._cloneInto(Ee).update(Le).digestInto(Le);for(let qe=0;qe<Fe.length;qe++)Fe[qe]^=Le[qe]}}return pbkdf2Output(me,we,xe,Ee,Le)}function setBigUint64$1(he,fe,le,pe){if(typeof he.setBigUint64=="function")return he.setBigUint64(fe,le,pe);const ge=BigInt(32),ye=BigInt(4294967295),xe=Number(le>>ge&ye),me=Number(le&ye),we=pe?4:0,Ee=pe?0:4;he.setUint32(fe+we,xe,pe),he.setUint32(fe+Ee,me,pe)}let HashMD$1=class extends Hash$1{constructor(fe,le,pe,ge){super(),this.blockLen=fe,this.outputLen=le,this.padOffset=pe,this.isLE=ge,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(fe),this.view=createView$1(this.buffer)}update(fe){exists$1(this);const{view:le,buffer:pe,blockLen:ge}=this;fe=toBytes$1(fe);const ye=fe.length;for(let xe=0;xe<ye;){const me=Math.min(ge-this.pos,ye-xe);if(me===ge){const we=createView$1(fe);for(;ge<=ye-xe;xe+=ge)this.process(we,xe);continue}pe.set(fe.subarray(xe,xe+me),this.pos),this.pos+=me,xe+=me,this.pos===ge&&(this.process(le,0),this.pos=0)}return this.length+=fe.length,this.roundClean(),this}digestInto(fe){exists$1(this),output$1(fe,this),this.finished=!0;const{buffer:le,view:pe,blockLen:ge,isLE:ye}=this;let{pos:xe}=this;le[xe++]=128,this.buffer.subarray(xe).fill(0),this.padOffset>ge-xe&&(this.process(pe,0),xe=0);for(let Se=xe;Se<ge;Se++)le[Se]=0;setBigUint64$1(pe,ge-8,BigInt(this.length*8),ye),this.process(pe,0);const me=createView$1(fe),we=this.outputLen;if(we%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const Ee=we/4,Ae=this.get();if(Ee>Ae.length)throw new Error("_sha2: outputLen bigger than state");for(let Se=0;Se<Ee;Se++)me.setUint32(4*Se,Ae[Se],ye)}digest(){const{buffer:fe,outputLen:le}=this;this.digestInto(fe);const pe=fe.slice(0,le);return this.destroy(),pe}_cloneInto(fe){fe||(fe=new this.constructor),fe.set(...this.get());const{blockLen:le,buffer:pe,length:ge,finished:ye,destroyed:xe,pos:me}=this;return fe.length=ge,fe.pos=me,fe.finished=ye,fe.destroyed=xe,ge%le&&fe.buffer.set(pe),fe}};const U32_MASK64$1=BigInt(2**32-1),_32n$1=BigInt(32);function fromBig$1(he,fe=!1){return fe?{h:Number(he&U32_MASK64$1),l:Number(he>>_32n$1&U32_MASK64$1)}:{h:Number(he>>_32n$1&U32_MASK64$1)|0,l:Number(he&U32_MASK64$1)|0}}function split$1(he,fe=!1){let le=new Uint32Array(he.length),pe=new Uint32Array(he.length);for(let ge=0;ge<he.length;ge++){const{h:ye,l:xe}=fromBig$1(he[ge],fe);[le[ge],pe[ge]]=[ye,xe]}return[le,pe]}const toBig$1=(he,fe)=>BigInt(he>>>0)<<_32n$1|BigInt(fe>>>0),shrSH$1=(he,fe,le)=>he>>>le,shrSL$1=(he,fe,le)=>he<<32-le|fe>>>le,rotrSH$1=(he,fe,le)=>he>>>le|fe<<32-le,rotrSL$1=(he,fe,le)=>he<<32-le|fe>>>le,rotrBH$1=(he,fe,le)=>he<<64-le|fe>>>le-32,rotrBL$1=(he,fe,le)=>he>>>le-32|fe<<64-le,rotr32H$1=(he,fe)=>fe,rotr32L$1=(he,fe)=>he,rotlSH$1=(he,fe,le)=>he<<le|fe>>>32-le,rotlSL$1=(he,fe,le)=>fe<<le|he>>>32-le,rotlBH$1=(he,fe,le)=>fe<<le-32|he>>>64-le,rotlBL$1=(he,fe,le)=>he<<le-32|fe>>>64-le;function add$1(he,fe,le,pe){const ge=(fe>>>0)+(pe>>>0);return{h:he+le+(ge/2**32|0)|0,l:ge|0}}const add3L$1=(he,fe,le)=>(he>>>0)+(fe>>>0)+(le>>>0),add3H$1=(he,fe,le,pe)=>fe+le+pe+(he/2**32|0)|0,add4L$1=(he,fe,le,pe)=>(he>>>0)+(fe>>>0)+(le>>>0)+(pe>>>0),add4H$1=(he,fe,le,pe,ge)=>fe+le+pe+ge+(he/2**32|0)|0,add5L$1=(he,fe,le,pe,ge)=>(he>>>0)+(fe>>>0)+(le>>>0)+(pe>>>0)+(ge>>>0),add5H$1=(he,fe,le,pe,ge,ye)=>fe+le+pe+ge+ye+(he/2**32|0)|0,u64$1={fromBig:fromBig$1,split:split$1,toBig:toBig$1,shrSH:shrSH$1,shrSL:shrSL$1,rotrSH:rotrSH$1,rotrSL:rotrSL$1,rotrBH:rotrBH$1,rotrBL:rotrBL$1,rotr32H:rotr32H$1,rotr32L:rotr32L$1,rotlSH:rotlSH$1,rotlSL:rotlSL$1,rotlBH:rotlBH$1,rotlBL:rotlBL$1,add:add$1,add3L:add3L$1,add3H:add3H$1,add4L:add4L$1,add4H:add4H$1,add5H:add5H$1,add5L:add5L$1},[SHA512_Kh$1,SHA512_Kl$1]=u64$1.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(he=>BigInt(he))),SHA512_W_H$1=new Uint32Array(80),SHA512_W_L$1=new Uint32Array(80);let SHA512$1=class extends HashMD$1{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:fe,Al:le,Bh:pe,Bl:ge,Ch:ye,Cl:xe,Dh:me,Dl:we,Eh:Ee,El:Ae,Fh:Se,Fl:Le,Gh:He,Gl:Me,Hh:Fe,Hl:Ue}=this;return[fe,le,pe,ge,ye,xe,me,we,Ee,Ae,Se,Le,He,Me,Fe,Ue]}set(fe,le,pe,ge,ye,xe,me,we,Ee,Ae,Se,Le,He,Me,Fe,Ue){this.Ah=fe|0,this.Al=le|0,this.Bh=pe|0,this.Bl=ge|0,this.Ch=ye|0,this.Cl=xe|0,this.Dh=me|0,this.Dl=we|0,this.Eh=Ee|0,this.El=Ae|0,this.Fh=Se|0,this.Fl=Le|0,this.Gh=He|0,this.Gl=Me|0,this.Hh=Fe|0,this.Hl=Ue|0}process(fe,le){for(let Qe=0;Qe<16;Qe++,le+=4)SHA512_W_H$1[Qe]=fe.getUint32(le),SHA512_W_L$1[Qe]=fe.getUint32(le+=4);for(let Qe=16;Qe<80;Qe++){const ot=SHA512_W_H$1[Qe-15]|0,nt=SHA512_W_L$1[Qe-15]|0,ct=u64$1.rotrSH(ot,nt,1)^u64$1.rotrSH(ot,nt,8)^u64$1.shrSH(ot,nt,7),mt=u64$1.rotrSL(ot,nt,1)^u64$1.rotrSL(ot,nt,8)^u64$1.shrSL(ot,nt,7),gt=SHA512_W_H$1[Qe-2]|0,Ht=SHA512_W_L$1[Qe-2]|0,jt=u64$1.rotrSH(gt,Ht,19)^u64$1.rotrBH(gt,Ht,61)^u64$1.shrSH(gt,Ht,6),ze=u64$1.rotrSL(gt,Ht,19)^u64$1.rotrBL(gt,Ht,61)^u64$1.shrSL(gt,Ht,6),ve=u64$1.add4L(mt,ze,SHA512_W_L$1[Qe-7],SHA512_W_L$1[Qe-16]),ke=u64$1.add4H(ve,ct,jt,SHA512_W_H$1[Qe-7],SHA512_W_H$1[Qe-16]);SHA512_W_H$1[Qe]=ke|0,SHA512_W_L$1[Qe]=ve|0}let{Ah:pe,Al:ge,Bh:ye,Bl:xe,Ch:me,Cl:we,Dh:Ee,Dl:Ae,Eh:Se,El:Le,Fh:He,Fl:Me,Gh:Fe,Gl:Ue,Hh:qe,Hl:$e}=this;for(let Qe=0;Qe<80;Qe++){const ot=u64$1.rotrSH(Se,Le,14)^u64$1.rotrSH(Se,Le,18)^u64$1.rotrBH(Se,Le,41),nt=u64$1.rotrSL(Se,Le,14)^u64$1.rotrSL(Se,Le,18)^u64$1.rotrBL(Se,Le,41),ct=Se&He^~Se&Fe,mt=Le&Me^~Le&Ue,gt=u64$1.add5L($e,nt,mt,SHA512_Kl$1[Qe],SHA512_W_L$1[Qe]),Ht=u64$1.add5H(gt,qe,ot,ct,SHA512_Kh$1[Qe],SHA512_W_H$1[Qe]),jt=gt|0,ze=u64$1.rotrSH(pe,ge,28)^u64$1.rotrBH(pe,ge,34)^u64$1.rotrBH(pe,ge,39),ve=u64$1.rotrSL(pe,ge,28)^u64$1.rotrBL(pe,ge,34)^u64$1.rotrBL(pe,ge,39),ke=pe&ye^pe&me^ye&me,Oe=ge&xe^ge&we^xe&we;qe=Fe|0,$e=Ue|0,Fe=He|0,Ue=Me|0,He=Se|0,Me=Le|0,{h:Se,l:Le}=u64$1.add(Ee|0,Ae|0,Ht|0,jt|0),Ee=me|0,Ae=we|0,me=ye|0,we=xe|0,ye=pe|0,xe=ge|0;const Pe=u64$1.add3L(jt,ve,Oe);pe=u64$1.add3H(Pe,Ht,ze,ke),ge=Pe|0}({h:pe,l:ge}=u64$1.add(this.Ah|0,this.Al|0,pe|0,ge|0)),{h:ye,l:xe}=u64$1.add(this.Bh|0,this.Bl|0,ye|0,xe|0),{h:me,l:we}=u64$1.add(this.Ch|0,this.Cl|0,me|0,we|0),{h:Ee,l:Ae}=u64$1.add(this.Dh|0,this.Dl|0,Ee|0,Ae|0),{h:Se,l:Le}=u64$1.add(this.Eh|0,this.El|0,Se|0,Le|0),{h:He,l:Me}=u64$1.add(this.Fh|0,this.Fl|0,He|0,Me|0),{h:Fe,l:Ue}=u64$1.add(this.Gh|0,this.Gl|0,Fe|0,Ue|0),{h:qe,l:$e}=u64$1.add(this.Hh|0,this.Hl|0,qe|0,$e|0),this.set(pe,ge,ye,xe,me,we,Ee,Ae,Se,Le,He,Me,Fe,Ue,qe,$e)}roundClean(){SHA512_W_H$1.fill(0),SHA512_W_L$1.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};const sha512$1=wrapConstructor$1(()=>new SHA512$1);/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */function isBytes$2(he){return he instanceof Uint8Array||he!=null&&typeof he=="object"&&he.constructor.name==="Uint8Array"}function chain(...he){const fe=ye=>ye,le=(ye,xe)=>me=>ye(xe(me)),pe=he.map(ye=>ye.encode).reduceRight(le,fe),ge=he.map(ye=>ye.decode).reduce(le,fe);return{encode:pe,decode:ge}}function alphabet(he){return{encode:fe=>{if(!Array.isArray(fe)||fe.length&&typeof fe[0]!="number")throw new Error("alphabet.encode input should be an array of numbers");return fe.map(le=>{if(le<0||le>=he.length)throw new Error(`Digit index outside alphabet: ${le} (alphabet: ${he.length})`);return he[le]})},decode:fe=>{if(!Array.isArray(fe)||fe.length&&typeof fe[0]!="string")throw new Error("alphabet.decode input should be array of strings");return fe.map(le=>{if(typeof le!="string")throw new Error(`alphabet.decode: not string element=${le}`);const pe=he.indexOf(le);if(pe===-1)throw new Error(`Unknown letter: "${le}". Allowed: ${he}`);return pe})}}}function join(he=""){if(typeof he!="string")throw new Error("join separator should be string");return{encode:fe=>{if(!Array.isArray(fe)||fe.length&&typeof fe[0]!="string")throw new Error("join.encode input should be array of strings");for(let le of fe)if(typeof le!="string")throw new Error(`join.encode: non-string input=${le}`);return fe.join(he)},decode:fe=>{if(typeof fe!="string")throw new Error("join.decode input should be string");return fe.split(he)}}}function convertRadix(he,fe,le){if(fe<2)throw new Error(`convertRadix: wrong from=${fe}, base cannot be less than 2`);if(le<2)throw new Error(`convertRadix: wrong to=${le}, base cannot be less than 2`);if(!Array.isArray(he))throw new Error("convertRadix: data should be array");if(!he.length)return[];let pe=0;const ge=[],ye=Array.from(he);for(ye.forEach(xe=>{if(xe<0||xe>=fe)throw new Error(`Wrong integer: ${xe}`)});;){let xe=0,me=!0;for(let we=pe;we<ye.length;we++){const Ee=ye[we],Ae=fe*xe+Ee;if(!Number.isSafeInteger(Ae)||fe*xe/fe!==xe||Ae-Ee!==fe*xe)throw new Error("convertRadix: carry overflow");xe=Ae%le;const Se=Math.floor(Ae/le);if(ye[we]=Se,!Number.isSafeInteger(Se)||Se*le+xe!==Ae)throw new Error("convertRadix: carry overflow");if(me)Se?me=!1:pe=we;else continue}if(ge.push(xe),me)break}for(let xe=0;xe<he.length-1&&he[xe]===0;xe++)ge.push(0);return ge.reverse()}function radix(he){return{encode:fe=>{if(!isBytes$2(fe))throw new Error("radix.encode input should be Uint8Array");return convertRadix(Array.from(fe),2**8,he)},decode:fe=>{if(!Array.isArray(fe)||fe.length&&typeof fe[0]!="number")throw new Error("radix.decode input should be array of numbers");return Uint8Array.from(convertRadix(fe,he,2**8))}}}function checksum(he,fe){if(typeof fe!="function")throw new Error("checksum fn should be function");return{encode(le){if(!isBytes$2(le))throw new Error("checksum.encode: input should be Uint8Array");const pe=fe(le).slice(0,he),ge=new Uint8Array(le.length+he);return ge.set(le),ge.set(pe,le.length),ge},decode(le){if(!isBytes$2(le))throw new Error("checksum.decode: input should be Uint8Array");const pe=le.slice(0,-he),ge=fe(pe).slice(0,he),ye=le.slice(-he);for(let xe=0;xe<he;xe++)if(ge[xe]!==ye[xe])throw new Error("Invalid checksum");return pe}}}const genBase58=he=>chain(radix(58),alphabet(he),join("")),base58=genBase58("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),createBase58check=he=>chain(checksum(4,fe=>he(he(fe))),base58);/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */function nfkd(he){if(typeof he!="string")throw new TypeError(`Invalid mnemonic type: ${typeof he}`);return he.normalize("NFKD")}function normalize(he){const fe=nfkd(he),le=fe.split(" ");if(![12,15,18,21,24].includes(le.length))throw new Error("Invalid mnemonic");return{nfkd:fe,words:le}}const salt=he=>nfkd(`mnemonic${he}`);function mnemonicToSeedSync(he,fe=""){return pbkdf2(sha512$1,normalize(he).nfkd,salt(fe),{c:2048,dkLen:64})}var d$8=/^m\/44'\/637'\/[0-9]+'\/[0-9]+'\/[0-9]+'?$/,m$7=/^m\/44'\/637'\/[0-9]+'\/[0-9]+\/[0-9]+$/,y$3=(he=>(he.ED25519="ed25519 seed",he))(y$3||{}),g$2=2147483648;function D$3(he){return m$7.test(he)}function E$3(he){return d$8.test(he)}var A$5=(he,fe)=>{let le=hmac$2.create(sha512$2,he).update(fe).digest();return{key:le.slice(0,32),chainCode:le.slice(32)}},f$9=({key:he,chainCode:fe},le)=>{let pe=new ArrayBuffer(4);new DataView(pe).setUint32(0,le);let ge=new Uint8Array(pe),ye=new Uint8Array([0]),xe=new Uint8Array([...ye,...he,...ge]);return A$5(fe,xe)},x$5=he=>he.replace("'",""),U$3=he=>he.split("/").slice(1).map(x$5),h$8=he=>{let fe=he.trim().split(/\s+/).map(le=>le.toLowerCase()).join(" ");return mnemonicToSeedSync(fe)},r$5=class qn extends B$6{constructor(fe){super();let{data:le}=fe,pe=i$c.fromHexInput(le);if(pe.toUint8Array().length!==qn.LENGTH)throw new Error(`Authentication Key length should be ${qn.LENGTH}`);this.data=pe}serialize(fe){fe.serializeFixedBytes(this.data.toUint8Array())}static deserialize(fe){let le=fe.deserializeFixedBytes(qn.LENGTH);return new qn({data:le})}toString(){return this.data.toString()}toUint8Array(){return this.data.toUint8Array()}static fromSchemeAndBytes(fe){let{scheme:le,input:pe}=fe,ge=i$c.fromHexInput(pe).toUint8Array(),ye=new Uint8Array([...ge,le]),xe=sha3_256.create();xe.update(ye);let me=xe.digest();return new qn({data:me})}static fromPublicKeyAndScheme(fe){let{publicKey:le}=fe;return le.authKey()}static fromPublicKey(fe){let{publicKey:le}=fe;return le.authKey()}derivedAddress(){return new d$d(this.data.toUint8Array())}};r$5.LENGTH=32;var c$m=r$5,d$7=[237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16];function w(he){let fe=he.toUint8Array().slice(32);for(let le=d$7.length-1;le>=0;le-=1){if(fe[le]<d$7[le])return!0;if(fe[le]>d$7[le])return!1}return!1}var i$9=class Qn extends a$7{constructor(fe){super();let le=i$c.fromHexInput(fe);if(le.toUint8Array().length!==Qn.LENGTH)throw new Error(`PublicKey length should be ${Qn.LENGTH}`);this.key=le}verifySignature(fe){let{message:le,signature:pe}=fe;if(!w(pe))return!1;let ge=o$a(le),ye=i$c.fromHexInput(ge).toUint8Array(),xe=pe.toUint8Array(),me=this.key.toUint8Array();return ed25519.verify(xe,ye,me)}authKey(){return c$m.fromSchemeAndBytes({scheme:0,input:this.toUint8Array()})}toUint8Array(){return this.key.toUint8Array()}serialize(fe){fe.serializeBytes(this.key.toUint8Array())}static deserialize(fe){let le=fe.deserializeBytes();return new Qn(le)}static isPublicKey(fe){return fe instanceof Qn}static isInstance(fe){var le,pe;return"key"in fe&&((pe=(le=fe.key)==null?void 0:le.data)==null?void 0:pe.length)===Qn.LENGTH}};i$9.LENGTH=32;var m$6=i$9,r$4=class Rn extends B$6{constructor(fe){super();let le=i$c.fromHexInput(fe);if(le.toUint8Array().length!==Rn.LENGTH)throw new Error(`PrivateKey length should be ${Rn.LENGTH}`);this.signingKey=le}static generate(){let fe=ed25519.utils.randomPrivateKey();return new Rn(fe)}static fromDerivationPath(fe,le){if(!E$3(fe))throw new Error(`Invalid derivation path ${fe}`);return Rn.fromDerivationPathInner(fe,h$8(le))}static fromDerivationPathInner(fe,le,pe=g$2){let{key:ge,chainCode:ye}=A$5(Rn.SLIP_0010_SEED,le),xe=U$3(fe).map(we=>parseInt(we,10)),{key:me}=xe.reduce((we,Ee)=>f$9(we,Ee+pe),{key:ge,chainCode:ye});return new Rn(me)}publicKey(){let fe=ed25519.getPublicKey(this.signingKey.toUint8Array());return new m$6(fe)}sign(fe){let le=o$a(fe),pe=i$c.fromHexInput(le).toUint8Array(),ge=ed25519.sign(pe,this.signingKey.toUint8Array());return new h$7(ge)}toUint8Array(){return this.signingKey.toUint8Array()}toString(){return this.signingKey.toString()}serialize(fe){fe.serializeBytes(this.toUint8Array())}static deserialize(fe){let le=fe.deserializeBytes();return new Rn(le)}static isPrivateKey(fe){return fe instanceof Rn}};r$4.LENGTH=32,r$4.SLIP_0010_SEED="ed25519 seed";var U$2=r$4,a$6=class $n extends o$b{constructor(fe){super();let le=i$c.fromHexInput(fe);if(le.toUint8Array().length!==$n.LENGTH)throw new Error(`Signature length should be ${$n.LENGTH}`);this.data=le}toUint8Array(){return this.data.toUint8Array()}serialize(fe){fe.serializeBytes(this.data.toUint8Array())}static deserialize(fe){let le=fe.deserializeBytes();return new $n(le)}};a$6.LENGTH=64;var h$7=a$6,o$9=class Jn extends a$7{constructor(fe){super();let{publicKeys:le,threshold:pe}=fe;if(le.length>Jn.MAX_KEYS||le.length<Jn.MIN_KEYS)throw new Error(`Must have between ${Jn.MIN_KEYS} and ${Jn.MAX_KEYS} public keys, inclusive`);if(pe<Jn.MIN_THRESHOLD||pe>le.length)throw new Error(`Threshold must be between ${Jn.MIN_THRESHOLD} and ${le.length}, inclusive`);this.publicKeys=le,this.threshold=pe}verifySignature(fe){let{message:le,signature:pe}=fe;if(!(pe instanceof y$2))return!1;let ge=[];for(let ye=0;ye<4;ye+=1)for(let xe=0;xe<8;xe+=1)if(pe.bitmap[ye]&1<<7-xe){let me=ye*8+xe;ge.push(me)}if(ge.length!==pe.signatures.length)throw new Error("Bitmap and signatures length mismatch");if(ge.length<this.threshold)throw new Error("Not enough signatures");for(let ye=0;ye<ge.length;ye+=1)if(!this.publicKeys[ge[ye]].verifySignature({message:le,signature:pe.signatures[ye]}))return!1;return!0}authKey(){return c$m.fromSchemeAndBytes({scheme:1,input:this.toUint8Array()})}toUint8Array(){let fe=new Uint8Array(this.publicKeys.length*m$6.LENGTH+1);return this.publicKeys.forEach((le,pe)=>{fe.set(le.toUint8Array(),pe*m$6.LENGTH)}),fe[this.publicKeys.length*m$6.LENGTH]=this.threshold,fe}serialize(fe){fe.serializeBytes(this.toUint8Array())}static deserialize(fe){let le=fe.deserializeBytes(),pe=le[le.length-1],ge=[];for(let ye=0;ye<le.length-1;ye+=m$6.LENGTH){let xe=ye;ge.push(new m$6(le.subarray(xe,xe+m$6.LENGTH)))}return new Jn({publicKeys:ge,threshold:pe})}};o$9.MAX_KEYS=32,o$9.MIN_KEYS=2,o$9.MIN_THRESHOLD=1;var d$6=o$9,a$5=class Pn extends o$b{constructor(fe){super();let{signatures:le,bitmap:pe}=fe;if(le.length>Pn.MAX_SIGNATURES_SUPPORTED)throw new Error(`The number of signatures cannot be greater than ${Pn.MAX_SIGNATURES_SUPPORTED}`);if(this.signatures=le,!(pe instanceof Uint8Array))this.bitmap=Pn.createBitmap({bits:pe});else{if(pe.length!==Pn.BITMAP_LEN)throw new Error(`"bitmap" length should be ${Pn.BITMAP_LEN}`);this.bitmap=pe}}toUint8Array(){let fe=new Uint8Array(this.signatures.length*h$7.LENGTH+Pn.BITMAP_LEN);return this.signatures.forEach((le,pe)=>{fe.set(le.toUint8Array(),pe*h$7.LENGTH)}),fe.set(this.bitmap,this.signatures.length*h$7.LENGTH),fe}serialize(fe){fe.serializeBytes(this.toUint8Array())}static deserialize(fe){let le=fe.deserializeBytes(),pe=le.subarray(le.length-4),ge=[];for(let ye=0;ye<le.length-pe.length;ye+=h$7.LENGTH){let xe=ye;ge.push(new h$7(le.subarray(xe,xe+h$7.LENGTH)))}return new Pn({signatures:ge,bitmap:pe})}static createBitmap(fe){let{bits:le}=fe,pe=128,ge=new Uint8Array([0,0,0,0]),ye=new Set;return le.forEach((xe,me)=>{if(xe>=Pn.MAX_SIGNATURES_SUPPORTED)throw new Error(`Cannot have a signature larger than ${Pn.MAX_SIGNATURES_SUPPORTED-1}.`);if(ye.has(xe))throw new Error("Duplicate bits detected.");if(me>0&&xe<=le[me-1])throw new Error("The bits need to be sorted in ascending order.");ye.add(xe);let we=Math.floor(xe/8),Ee=ge[we];Ee|=pe>>xe%8,ge[we]=Ee}),ge}};a$5.MAX_SIGNATURES_SUPPORTED=32,a$5.BITMAP_LEN=4;var y$2=a$5;function number(he){if(!Number.isSafeInteger(he)||he<0)throw new Error(`positive integer expected, not ${he}`)}function isBytes$1(he){return he instanceof Uint8Array||he!=null&&typeof he=="object"&&he.constructor.name==="Uint8Array"}function bytes(he,...fe){if(!isBytes$1(he))throw new Error("Uint8Array expected");if(fe.length>0&&!fe.includes(he.length))throw new Error(`Uint8Array expected of length ${fe}, not of length=${he.length}`)}function hash(he){if(typeof he!="function"||typeof he.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");number(he.outputLen),number(he.blockLen)}function exists(he,fe=!0){if(he.destroyed)throw new Error("Hash instance has been destroyed");if(fe&&he.finished)throw new Error("Hash#digest() has already been called")}function output(he,fe){bytes(he);const le=fe.outputLen;if(he.length<le)throw new Error(`digestInto() expects output buffer of length at least ${le}`)}const crypto$1=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const createView=he=>new DataView(he.buffer,he.byteOffset,he.byteLength),rotr=(he,fe)=>he<<32-fe|he>>>fe,rotl=(he,fe)=>he<<fe|he>>>32-fe>>>0;new Uint8Array(new Uint32Array([287454020]).buffer)[0];const hexes$1=Array.from({length:256},(he,fe)=>fe.toString(16).padStart(2,"0"));function bytesToHex$1(he){bytes(he);let fe="";for(let le=0;le<he.length;le++)fe+=hexes$1[he[le]];return fe}const asciis$1={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function asciiToBase16$1(he){if(he>=asciis$1._0&&he<=asciis$1._9)return he-asciis$1._0;if(he>=asciis$1._A&&he<=asciis$1._F)return he-(asciis$1._A-10);if(he>=asciis$1._a&&he<=asciis$1._f)return he-(asciis$1._a-10)}function hexToBytes$1(he){if(typeof he!="string")throw new Error("hex string expected, got "+typeof he);const fe=he.length,le=fe/2;if(fe%2)throw new Error("padded hex string expected, got unpadded hex of length "+fe);const pe=new Uint8Array(le);for(let ge=0,ye=0;ge<le;ge++,ye+=2){const xe=asciiToBase16$1(he.charCodeAt(ye)),me=asciiToBase16$1(he.charCodeAt(ye+1));if(xe===void 0||me===void 0){const we=he[ye]+he[ye+1];throw new Error('hex string expected, got non-hex character "'+we+'" at index '+ye)}pe[ge]=xe*16+me}return pe}function utf8ToBytes$1(he){if(typeof he!="string")throw new Error(`utf8ToBytes expected string, got ${typeof he}`);return new Uint8Array(new TextEncoder().encode(he))}function toBytes(he){return typeof he=="string"&&(he=utf8ToBytes$1(he)),bytes(he),he}function concatBytes$1(...he){let fe=0;for(let pe=0;pe<he.length;pe++){const ge=he[pe];bytes(ge),fe+=ge.length}const le=new Uint8Array(fe);for(let pe=0,ge=0;pe<he.length;pe++){const ye=he[pe];le.set(ye,ge),ge+=ye.length}return le}class Hash{clone(){return this._cloneInto()}}function wrapConstructor(he){const fe=pe=>he().update(toBytes(pe)).digest(),le=he();return fe.outputLen=le.outputLen,fe.blockLen=le.blockLen,fe.create=()=>he(),fe}function randomBytes(he=32){if(crypto$1&&typeof crypto$1.getRandomValues=="function")return crypto$1.getRandomValues(new Uint8Array(he));throw new Error("crypto.getRandomValues must be defined")}class HMAC extends Hash{constructor(fe,le){super(),this.finished=!1,this.destroyed=!1,hash(fe);const pe=toBytes(le);if(this.iHash=fe.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const ge=this.blockLen,ye=new Uint8Array(ge);ye.set(pe.length>ge?fe.create().update(pe).digest():pe);for(let xe=0;xe<ye.length;xe++)ye[xe]^=54;this.iHash.update(ye),this.oHash=fe.create();for(let xe=0;xe<ye.length;xe++)ye[xe]^=106;this.oHash.update(ye),ye.fill(0)}update(fe){return exists(this),this.iHash.update(fe),this}digestInto(fe){exists(this),bytes(fe,this.outputLen),this.finished=!0,this.iHash.digestInto(fe),this.oHash.update(fe),this.oHash.digestInto(fe),this.destroy()}digest(){const fe=new Uint8Array(this.oHash.outputLen);return this.digestInto(fe),fe}_cloneInto(fe){fe||(fe=Object.create(Object.getPrototypeOf(this),{}));const{oHash:le,iHash:pe,finished:ge,destroyed:ye,blockLen:xe,outputLen:me}=this;return fe=fe,fe.finished=ge,fe.destroyed=ye,fe.blockLen=xe,fe.outputLen=me,fe.oHash=le._cloneInto(fe.oHash),fe.iHash=pe._cloneInto(fe.iHash),fe}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const hmac=(he,fe,le)=>new HMAC(he,fe).update(le).digest();hmac.create=(he,fe)=>new HMAC(he,fe);function setBigUint64(he,fe,le,pe){if(typeof he.setBigUint64=="function")return he.setBigUint64(fe,le,pe);const ge=BigInt(32),ye=BigInt(4294967295),xe=Number(le>>ge&ye),me=Number(le&ye),we=pe?4:0,Ee=pe?0:4;he.setUint32(fe+we,xe,pe),he.setUint32(fe+Ee,me,pe)}const Chi=(he,fe,le)=>he&fe^~he&le,Maj=(he,fe,le)=>he&fe^he&le^fe&le;class HashMD extends Hash{constructor(fe,le,pe,ge){super(),this.blockLen=fe,this.outputLen=le,this.padOffset=pe,this.isLE=ge,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(fe),this.view=createView(this.buffer)}update(fe){exists(this);const{view:le,buffer:pe,blockLen:ge}=this;fe=toBytes(fe);const ye=fe.length;for(let xe=0;xe<ye;){const me=Math.min(ge-this.pos,ye-xe);if(me===ge){const we=createView(fe);for(;ge<=ye-xe;xe+=ge)this.process(we,xe);continue}pe.set(fe.subarray(xe,xe+me),this.pos),this.pos+=me,xe+=me,this.pos===ge&&(this.process(le,0),this.pos=0)}return this.length+=fe.length,this.roundClean(),this}digestInto(fe){exists(this),output(fe,this),this.finished=!0;const{buffer:le,view:pe,blockLen:ge,isLE:ye}=this;let{pos:xe}=this;le[xe++]=128,this.buffer.subarray(xe).fill(0),this.padOffset>ge-xe&&(this.process(pe,0),xe=0);for(let Se=xe;Se<ge;Se++)le[Se]=0;setBigUint64(pe,ge-8,BigInt(this.length*8),ye),this.process(pe,0);const me=createView(fe),we=this.outputLen;if(we%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const Ee=we/4,Ae=this.get();if(Ee>Ae.length)throw new Error("_sha2: outputLen bigger than state");for(let Se=0;Se<Ee;Se++)me.setUint32(4*Se,Ae[Se],ye)}digest(){const{buffer:fe,outputLen:le}=this;this.digestInto(fe);const pe=fe.slice(0,le);return this.destroy(),pe}_cloneInto(fe){fe||(fe=new this.constructor),fe.set(...this.get());const{blockLen:le,buffer:pe,length:ge,finished:ye,destroyed:xe,pos:me}=this;return fe.length=ge,fe.pos=me,fe.finished=ye,fe.destroyed=xe,ge%le&&fe.buffer.set(pe),fe}}const Rho=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),Id=new Uint8Array(new Array(16).fill(0).map((he,fe)=>fe)),Pi=Id.map(he=>(9*he+5)%16);let idxL=[Id],idxR=[Pi];for(let he=0;he<4;he++)for(let fe of[idxL,idxR])fe.push(fe[he].map(le=>Rho[le]));const shifts=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(he=>new Uint8Array(he)),shiftsL=idxL.map((he,fe)=>he.map(le=>shifts[fe][le])),shiftsR=idxR.map((he,fe)=>he.map(le=>shifts[fe][le])),Kl=new Uint32Array([0,1518500249,1859775393,2400959708,2840853838]),Kr=new Uint32Array([1352829926,1548603684,1836072691,2053994217,0]);function f$8(he,fe,le,pe){return he===0?fe^le^pe:he===1?fe&le|~fe&pe:he===2?(fe|~le)^pe:he===3?fe&pe|le&~pe:fe^(le|~pe)}const R_BUF=new Uint32Array(16);class RIPEMD160 extends HashMD{constructor(){super(64,20,8,!0),this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){const{h0:fe,h1:le,h2:pe,h3:ge,h4:ye}=this;return[fe,le,pe,ge,ye]}set(fe,le,pe,ge,ye){this.h0=fe|0,this.h1=le|0,this.h2=pe|0,this.h3=ge|0,this.h4=ye|0}process(fe,le){for(let He=0;He<16;He++,le+=4)R_BUF[He]=fe.getUint32(le,!0);let pe=this.h0|0,ge=pe,ye=this.h1|0,xe=ye,me=this.h2|0,we=me,Ee=this.h3|0,Ae=Ee,Se=this.h4|0,Le=Se;for(let He=0;He<5;He++){const Me=4-He,Fe=Kl[He],Ue=Kr[He],qe=idxL[He],$e=idxR[He],Qe=shiftsL[He],ot=shiftsR[He];for(let nt=0;nt<16;nt++){const ct=rotl(pe+f$8(He,ye,me,Ee)+R_BUF[qe[nt]]+Fe,Qe[nt])+Se|0;pe=Se,Se=Ee,Ee=rotl(me,10)|0,me=ye,ye=ct}for(let nt=0;nt<16;nt++){const ct=rotl(ge+f$8(Me,xe,we,Ae)+R_BUF[$e[nt]]+Ue,ot[nt])+Le|0;ge=Le,Le=Ae,Ae=rotl(we,10)|0,we=xe,xe=ct}}this.set(this.h1+me+Ae|0,this.h2+Ee+Le|0,this.h3+Se+ge|0,this.h4+pe+xe|0,this.h0+ye+we|0)}roundClean(){R_BUF.fill(0)}destroy(){this.destroyed=!0,this.buffer.fill(0),this.set(0,0,0,0,0)}}const ripemd160=wrapConstructor(()=>new RIPEMD160),SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),SHA256_IV=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);class SHA256 extends HashMD{constructor(){super(64,32,8,!1),this.A=SHA256_IV[0]|0,this.B=SHA256_IV[1]|0,this.C=SHA256_IV[2]|0,this.D=SHA256_IV[3]|0,this.E=SHA256_IV[4]|0,this.F=SHA256_IV[5]|0,this.G=SHA256_IV[6]|0,this.H=SHA256_IV[7]|0}get(){const{A:fe,B:le,C:pe,D:ge,E:ye,F:xe,G:me,H:we}=this;return[fe,le,pe,ge,ye,xe,me,we]}set(fe,le,pe,ge,ye,xe,me,we){this.A=fe|0,this.B=le|0,this.C=pe|0,this.D=ge|0,this.E=ye|0,this.F=xe|0,this.G=me|0,this.H=we|0}process(fe,le){for(let Se=0;Se<16;Se++,le+=4)SHA256_W[Se]=fe.getUint32(le,!1);for(let Se=16;Se<64;Se++){const Le=SHA256_W[Se-15],He=SHA256_W[Se-2],Me=rotr(Le,7)^rotr(Le,18)^Le>>>3,Fe=rotr(He,17)^rotr(He,19)^He>>>10;SHA256_W[Se]=Fe+SHA256_W[Se-7]+Me+SHA256_W[Se-16]|0}let{A:pe,B:ge,C:ye,D:xe,E:me,F:we,G:Ee,H:Ae}=this;for(let Se=0;Se<64;Se++){const Le=rotr(me,6)^rotr(me,11)^rotr(me,25),He=Ae+Le+Chi(me,we,Ee)+SHA256_K[Se]+SHA256_W[Se]|0,Fe=(rotr(pe,2)^rotr(pe,13)^rotr(pe,22))+Maj(pe,ge,ye)|0;Ae=Ee,Ee=we,we=me,me=xe+He|0,xe=ye,ye=ge,ge=pe,pe=He+Fe|0}pe=pe+this.A|0,ge=ge+this.B|0,ye=ye+this.C|0,xe=xe+this.D|0,me=me+this.E|0,we=we+this.F|0,Ee=Ee+this.G|0,Ae=Ae+this.H|0,this.set(pe,ge,ye,xe,me,we,Ee,Ae)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const sha256=wrapConstructor(()=>new SHA256),U32_MASK64=BigInt(2**32-1),_32n=BigInt(32);function fromBig(he,fe=!1){return fe?{h:Number(he&U32_MASK64),l:Number(he>>_32n&U32_MASK64)}:{h:Number(he>>_32n&U32_MASK64)|0,l:Number(he&U32_MASK64)|0}}function split(he,fe=!1){let le=new Uint32Array(he.length),pe=new Uint32Array(he.length);for(let ge=0;ge<he.length;ge++){const{h:ye,l:xe}=fromBig(he[ge],fe);[le[ge],pe[ge]]=[ye,xe]}return[le,pe]}const toBig=(he,fe)=>BigInt(he>>>0)<<_32n|BigInt(fe>>>0),shrSH=(he,fe,le)=>he>>>le,shrSL=(he,fe,le)=>he<<32-le|fe>>>le,rotrSH=(he,fe,le)=>he>>>le|fe<<32-le,rotrSL=(he,fe,le)=>he<<32-le|fe>>>le,rotrBH=(he,fe,le)=>he<<64-le|fe>>>le-32,rotrBL=(he,fe,le)=>he>>>le-32|fe<<64-le,rotr32H=(he,fe)=>fe,rotr32L=(he,fe)=>he,rotlSH=(he,fe,le)=>he<<le|fe>>>32-le,rotlSL=(he,fe,le)=>fe<<le|he>>>32-le,rotlBH=(he,fe,le)=>fe<<le-32|he>>>64-le,rotlBL=(he,fe,le)=>he<<le-32|fe>>>64-le;function add(he,fe,le,pe){const ge=(fe>>>0)+(pe>>>0);return{h:he+le+(ge/2**32|0)|0,l:ge|0}}const add3L=(he,fe,le)=>(he>>>0)+(fe>>>0)+(le>>>0),add3H=(he,fe,le,pe)=>fe+le+pe+(he/2**32|0)|0,add4L=(he,fe,le,pe)=>(he>>>0)+(fe>>>0)+(le>>>0)+(pe>>>0),add4H=(he,fe,le,pe,ge)=>fe+le+pe+ge+(he/2**32|0)|0,add5L=(he,fe,le,pe,ge)=>(he>>>0)+(fe>>>0)+(le>>>0)+(pe>>>0)+(ge>>>0),add5H=(he,fe,le,pe,ge,ye)=>fe+le+pe+ge+ye+(he/2**32|0)|0,u64={fromBig,split,toBig,shrSH,shrSL,rotrSH,rotrSL,rotrBH,rotrBL,rotr32H,rotr32L,rotlSH,rotlSL,rotlBH,rotlBL,add,add3L,add3H,add4L,add4H,add5H,add5L},[SHA512_Kh,SHA512_Kl]=u64.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(he=>BigInt(he))),SHA512_W_H=new Uint32Array(80),SHA512_W_L=new Uint32Array(80);class SHA512 extends HashMD{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:fe,Al:le,Bh:pe,Bl:ge,Ch:ye,Cl:xe,Dh:me,Dl:we,Eh:Ee,El:Ae,Fh:Se,Fl:Le,Gh:He,Gl:Me,Hh:Fe,Hl:Ue}=this;return[fe,le,pe,ge,ye,xe,me,we,Ee,Ae,Se,Le,He,Me,Fe,Ue]}set(fe,le,pe,ge,ye,xe,me,we,Ee,Ae,Se,Le,He,Me,Fe,Ue){this.Ah=fe|0,this.Al=le|0,this.Bh=pe|0,this.Bl=ge|0,this.Ch=ye|0,this.Cl=xe|0,this.Dh=me|0,this.Dl=we|0,this.Eh=Ee|0,this.El=Ae|0,this.Fh=Se|0,this.Fl=Le|0,this.Gh=He|0,this.Gl=Me|0,this.Hh=Fe|0,this.Hl=Ue|0}process(fe,le){for(let Qe=0;Qe<16;Qe++,le+=4)SHA512_W_H[Qe]=fe.getUint32(le),SHA512_W_L[Qe]=fe.getUint32(le+=4);for(let Qe=16;Qe<80;Qe++){const ot=SHA512_W_H[Qe-15]|0,nt=SHA512_W_L[Qe-15]|0,ct=u64.rotrSH(ot,nt,1)^u64.rotrSH(ot,nt,8)^u64.shrSH(ot,nt,7),mt=u64.rotrSL(ot,nt,1)^u64.rotrSL(ot,nt,8)^u64.shrSL(ot,nt,7),gt=SHA512_W_H[Qe-2]|0,Ht=SHA512_W_L[Qe-2]|0,jt=u64.rotrSH(gt,Ht,19)^u64.rotrBH(gt,Ht,61)^u64.shrSH(gt,Ht,6),ze=u64.rotrSL(gt,Ht,19)^u64.rotrBL(gt,Ht,61)^u64.shrSL(gt,Ht,6),ve=u64.add4L(mt,ze,SHA512_W_L[Qe-7],SHA512_W_L[Qe-16]),ke=u64.add4H(ve,ct,jt,SHA512_W_H[Qe-7],SHA512_W_H[Qe-16]);SHA512_W_H[Qe]=ke|0,SHA512_W_L[Qe]=ve|0}let{Ah:pe,Al:ge,Bh:ye,Bl:xe,Ch:me,Cl:we,Dh:Ee,Dl:Ae,Eh:Se,El:Le,Fh:He,Fl:Me,Gh:Fe,Gl:Ue,Hh:qe,Hl:$e}=this;for(let Qe=0;Qe<80;Qe++){const ot=u64.rotrSH(Se,Le,14)^u64.rotrSH(Se,Le,18)^u64.rotrBH(Se,Le,41),nt=u64.rotrSL(Se,Le,14)^u64.rotrSL(Se,Le,18)^u64.rotrBL(Se,Le,41),ct=Se&He^~Se&Fe,mt=Le&Me^~Le&Ue,gt=u64.add5L($e,nt,mt,SHA512_Kl[Qe],SHA512_W_L[Qe]),Ht=u64.add5H(gt,qe,ot,ct,SHA512_Kh[Qe],SHA512_W_H[Qe]),jt=gt|0,ze=u64.rotrSH(pe,ge,28)^u64.rotrBH(pe,ge,34)^u64.rotrBH(pe,ge,39),ve=u64.rotrSL(pe,ge,28)^u64.rotrBL(pe,ge,34)^u64.rotrBL(pe,ge,39),ke=pe&ye^pe&me^ye&me,Oe=ge&xe^ge&we^xe&we;qe=Fe|0,$e=Ue|0,Fe=He|0,Ue=Me|0,He=Se|0,Me=Le|0,{h:Se,l:Le}=u64.add(Ee|0,Ae|0,Ht|0,jt|0),Ee=me|0,Ae=we|0,me=ye|0,we=xe|0,ye=pe|0,xe=ge|0;const Pe=u64.add3L(jt,ve,Oe);pe=u64.add3H(Pe,Ht,ze,ke),ge=Pe|0}({h:pe,l:ge}=u64.add(this.Ah|0,this.Al|0,pe|0,ge|0)),{h:ye,l:xe}=u64.add(this.Bh|0,this.Bl|0,ye|0,xe|0),{h:me,l:we}=u64.add(this.Ch|0,this.Cl|0,me|0,we|0),{h:Ee,l:Ae}=u64.add(this.Dh|0,this.Dl|0,Ee|0,Ae|0),{h:Se,l:Le}=u64.add(this.Eh|0,this.El|0,Se|0,Le|0),{h:He,l:Me}=u64.add(this.Fh|0,this.Fl|0,He|0,Me|0),{h:Fe,l:Ue}=u64.add(this.Gh|0,this.Gl|0,Fe|0,Ue|0),{h:qe,l:$e}=u64.add(this.Hh|0,this.Hl|0,qe|0,$e|0),this.set(pe,ge,ye,xe,me,we,Ee,Ae,Se,Le,He,Me,Fe,Ue,qe,$e)}roundClean(){SHA512_W_H.fill(0),SHA512_W_L.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const sha512=wrapConstructor(()=>new SHA512);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$3=BigInt(0),_1n$4=BigInt(1),_2n$2=BigInt(2);function isBytes(he){return he instanceof Uint8Array||he!=null&&typeof he=="object"&&he.constructor.name==="Uint8Array"}function abytes(he){if(!isBytes(he))throw new Error("Uint8Array expected")}const hexes=Array.from({length:256},(he,fe)=>fe.toString(16).padStart(2,"0"));function bytesToHex(he){abytes(he);let fe="";for(let le=0;le<he.length;le++)fe+=hexes[he[le]];return fe}function numberToHexUnpadded(he){const fe=he.toString(16);return fe.length&1?`0${fe}`:fe}function hexToNumber(he){if(typeof he!="string")throw new Error("hex string expected, got "+typeof he);return BigInt(he===""?"0":`0x${he}`)}const asciis={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function asciiToBase16(he){if(he>=asciis._0&&he<=asciis._9)return he-asciis._0;if(he>=asciis._A&&he<=asciis._F)return he-(asciis._A-10);if(he>=asciis._a&&he<=asciis._f)return he-(asciis._a-10)}function hexToBytes(he){if(typeof he!="string")throw new Error("hex string expected, got "+typeof he);const fe=he.length,le=fe/2;if(fe%2)throw new Error("padded hex string expected, got unpadded hex of length "+fe);const pe=new Uint8Array(le);for(let ge=0,ye=0;ge<le;ge++,ye+=2){const xe=asciiToBase16(he.charCodeAt(ye)),me=asciiToBase16(he.charCodeAt(ye+1));if(xe===void 0||me===void 0){const we=he[ye]+he[ye+1];throw new Error('hex string expected, got non-hex character "'+we+'" at index '+ye)}pe[ge]=xe*16+me}return pe}function bytesToNumberBE(he){return hexToNumber(bytesToHex(he))}function bytesToNumberLE(he){return abytes(he),hexToNumber(bytesToHex(Uint8Array.from(he).reverse()))}function numberToBytesBE(he,fe){return hexToBytes(he.toString(16).padStart(fe*2,"0"))}function numberToBytesLE(he,fe){return numberToBytesBE(he,fe).reverse()}function numberToVarBytesBE(he){return hexToBytes(numberToHexUnpadded(he))}function ensureBytes(he,fe,le){let pe;if(typeof fe=="string")try{pe=hexToBytes(fe)}catch(ye){throw new Error(`${he} must be valid hex string, got "${fe}". Cause: ${ye}`)}else if(isBytes(fe))pe=Uint8Array.from(fe);else throw new Error(`${he} must be hex string or Uint8Array`);const ge=pe.length;if(typeof le=="number"&&ge!==le)throw new Error(`${he} expected ${le} bytes, got ${ge}`);return pe}function concatBytes(...he){let fe=0;for(let pe=0;pe<he.length;pe++){const ge=he[pe];abytes(ge),fe+=ge.length}const le=new Uint8Array(fe);for(let pe=0,ge=0;pe<he.length;pe++){const ye=he[pe];le.set(ye,ge),ge+=ye.length}return le}function equalBytes(he,fe){if(he.length!==fe.length)return!1;let le=0;for(let pe=0;pe<he.length;pe++)le|=he[pe]^fe[pe];return le===0}function utf8ToBytes(he){if(typeof he!="string")throw new Error(`utf8ToBytes expected string, got ${typeof he}`);return new Uint8Array(new TextEncoder().encode(he))}function bitLen(he){let fe;for(fe=0;he>_0n$3;he>>=_1n$4,fe+=1);return fe}function bitGet(he,fe){return he>>BigInt(fe)&_1n$4}function bitSet(he,fe,le){return he|(le?_1n$4:_0n$3)<<BigInt(fe)}const bitMask=he=>(_2n$2<<BigInt(he-1))-_1n$4,u8n=he=>new Uint8Array(he),u8fr=he=>Uint8Array.from(he);function createHmacDrbg(he,fe,le){if(typeof he!="number"||he<2)throw new Error("hashLen must be a number");if(typeof fe!="number"||fe<2)throw new Error("qByteLen must be a number");if(typeof le!="function")throw new Error("hmacFn must be a function");let pe=u8n(he),ge=u8n(he),ye=0;const xe=()=>{pe.fill(1),ge.fill(0),ye=0},me=(...Se)=>le(ge,pe,...Se),we=(Se=u8n())=>{ge=me(u8fr([0]),Se),pe=me(),Se.length!==0&&(ge=me(u8fr([1]),Se),pe=me())},Ee=()=>{if(ye++>=1e3)throw new Error("drbg: tried 1000 values");let Se=0;const Le=[];for(;Se<fe;){pe=me();const He=pe.slice();Le.push(He),Se+=pe.length}return concatBytes(...Le)};return(Se,Le)=>{xe(),we(Se);let He;for(;!(He=Le(Ee()));)we();return xe(),He}}const validatorFns={bigint:he=>typeof he=="bigint",function:he=>typeof he=="function",boolean:he=>typeof he=="boolean",string:he=>typeof he=="string",stringOrUint8Array:he=>typeof he=="string"||isBytes(he),isSafeInteger:he=>Number.isSafeInteger(he),array:he=>Array.isArray(he),field:(he,fe)=>fe.Fp.isValid(he),hash:he=>typeof he=="function"&&Number.isSafeInteger(he.outputLen)};function validateObject(he,fe,le={}){const pe=(ge,ye,xe)=>{const me=validatorFns[ye];if(typeof me!="function")throw new Error(`Invalid validator "${ye}", expected function`);const we=he[ge];if(!(xe&&we===void 0)&&!me(we,he))throw new Error(`Invalid param ${String(ge)}=${we} (${typeof we}), expected ${ye}`)};for(const[ge,ye]of Object.entries(fe))pe(ge,ye,!1);for(const[ge,ye]of Object.entries(le))pe(ge,ye,!0);return he}const ut=Object.freeze(Object.defineProperty({__proto__:null,abytes,bitGet,bitLen,bitMask,bitSet,bytesToHex,bytesToNumberBE,bytesToNumberLE,concatBytes,createHmacDrbg,ensureBytes,equalBytes,hexToBytes,hexToNumber,isBytes,numberToBytesBE,numberToBytesLE,numberToHexUnpadded,numberToVarBytesBE,utf8ToBytes,validateObject},Symbol.toStringTag,{value:"Module"}));/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$2=BigInt(0),_1n$3=BigInt(1),_2n$1=BigInt(2),_3n$1=BigInt(3),_4n=BigInt(4),_5n=BigInt(5),_8n=BigInt(8);BigInt(9);BigInt(16);function mod(he,fe){const le=he%fe;return le>=_0n$2?le:fe+le}function pow(he,fe,le){if(le<=_0n$2||fe<_0n$2)throw new Error("Expected power/modulo > 0");if(le===_1n$3)return _0n$2;let pe=_1n$3;for(;fe>_0n$2;)fe&_1n$3&&(pe=pe*he%le),he=he*he%le,fe>>=_1n$3;return pe}function pow2(he,fe,le){let pe=he;for(;fe-- >_0n$2;)pe*=pe,pe%=le;return pe}function invert(he,fe){if(he===_0n$2||fe<=_0n$2)throw new Error(`invert: expected positive integers, got n=${he} mod=${fe}`);let le=mod(he,fe),pe=fe,ge=_0n$2,ye=_1n$3;for(;le!==_0n$2;){const me=pe/le,we=pe%le,Ee=ge-ye*me;pe=le,le=we,ge=ye,ye=Ee}if(pe!==_1n$3)throw new Error("invert: does not exist");return mod(ge,fe)}function tonelliShanks(he){const fe=(he-_1n$3)/_2n$1;let le,pe,ge;for(le=he-_1n$3,pe=0;le%_2n$1===_0n$2;le/=_2n$1,pe++);for(ge=_2n$1;ge<he&&pow(ge,fe,he)!==he-_1n$3;ge++);if(pe===1){const xe=(he+_1n$3)/_4n;return function(we,Ee){const Ae=we.pow(Ee,xe);if(!we.eql(we.sqr(Ae),Ee))throw new Error("Cannot find square root");return Ae}}const ye=(le+_1n$3)/_2n$1;return function(me,we){if(me.pow(we,fe)===me.neg(me.ONE))throw new Error("Cannot find square root");let Ee=pe,Ae=me.pow(me.mul(me.ONE,ge),le),Se=me.pow(we,ye),Le=me.pow(we,le);for(;!me.eql(Le,me.ONE);){if(me.eql(Le,me.ZERO))return me.ZERO;let He=1;for(let Fe=me.sqr(Le);He<Ee&&!me.eql(Fe,me.ONE);He++)Fe=me.sqr(Fe);const Me=me.pow(Ae,_1n$3<<BigInt(Ee-He-1));Ae=me.sqr(Me),Se=me.mul(Se,Me),Le=me.mul(Le,Ae),Ee=He}return Se}}function FpSqrt(he){if(he%_4n===_3n$1){const fe=(he+_1n$3)/_4n;return function(pe,ge){const ye=pe.pow(ge,fe);if(!pe.eql(pe.sqr(ye),ge))throw new Error("Cannot find square root");return ye}}if(he%_8n===_5n){const fe=(he-_5n)/_8n;return function(pe,ge){const ye=pe.mul(ge,_2n$1),xe=pe.pow(ye,fe),me=pe.mul(ge,xe),we=pe.mul(pe.mul(me,_2n$1),xe),Ee=pe.mul(me,pe.sub(we,pe.ONE));if(!pe.eql(pe.sqr(Ee),ge))throw new Error("Cannot find square root");return Ee}}return tonelliShanks(he)}const FIELD_FIELDS=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function validateField(he){const fe={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},le=FIELD_FIELDS.reduce((pe,ge)=>(pe[ge]="function",pe),fe);return validateObject(he,le)}function FpPow(he,fe,le){if(le<_0n$2)throw new Error("Expected power > 0");if(le===_0n$2)return he.ONE;if(le===_1n$3)return fe;let pe=he.ONE,ge=fe;for(;le>_0n$2;)le&_1n$3&&(pe=he.mul(pe,ge)),ge=he.sqr(ge),le>>=_1n$3;return pe}function FpInvertBatch(he,fe){const le=new Array(fe.length),pe=fe.reduce((ye,xe,me)=>he.is0(xe)?ye:(le[me]=ye,he.mul(ye,xe)),he.ONE),ge=he.inv(pe);return fe.reduceRight((ye,xe,me)=>he.is0(xe)?ye:(le[me]=he.mul(ye,le[me]),he.mul(ye,xe)),ge),le}function nLength(he,fe){const le=fe!==void 0?fe:he.toString(2).length,pe=Math.ceil(le/8);return{nBitLength:le,nByteLength:pe}}function Field(he,fe,le=!1,pe={}){if(he<=_0n$2)throw new Error(`Expected Field ORDER > 0, got ${he}`);const{nBitLength:ge,nByteLength:ye}=nLength(he,fe);if(ye>2048)throw new Error("Field lengths over 2048 bytes are not supported");const xe=FpSqrt(he),me=Object.freeze({ORDER:he,BITS:ge,BYTES:ye,MASK:bitMask(ge),ZERO:_0n$2,ONE:_1n$3,create:we=>mod(we,he),isValid:we=>{if(typeof we!="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof we}`);return _0n$2<=we&&we<he},is0:we=>we===_0n$2,isOdd:we=>(we&_1n$3)===_1n$3,neg:we=>mod(-we,he),eql:(we,Ee)=>we===Ee,sqr:we=>mod(we*we,he),add:(we,Ee)=>mod(we+Ee,he),sub:(we,Ee)=>mod(we-Ee,he),mul:(we,Ee)=>mod(we*Ee,he),pow:(we,Ee)=>FpPow(me,we,Ee),div:(we,Ee)=>mod(we*invert(Ee,he),he),sqrN:we=>we*we,addN:(we,Ee)=>we+Ee,subN:(we,Ee)=>we-Ee,mulN:(we,Ee)=>we*Ee,inv:we=>invert(we,he),sqrt:pe.sqrt||(we=>xe(me,we)),invertBatch:we=>FpInvertBatch(me,we),cmov:(we,Ee,Ae)=>Ae?Ee:we,toBytes:we=>le?numberToBytesLE(we,ye):numberToBytesBE(we,ye),fromBytes:we=>{if(we.length!==ye)throw new Error(`Fp.fromBytes: expected ${ye}, got ${we.length}`);return le?bytesToNumberLE(we):bytesToNumberBE(we)}});return Object.freeze(me)}function getFieldBytesLength(he){if(typeof he!="bigint")throw new Error("field order must be bigint");const fe=he.toString(2).length;return Math.ceil(fe/8)}function getMinHashLength(he){const fe=getFieldBytesLength(he);return fe+Math.ceil(fe/2)}function mapHashToField(he,fe,le=!1){const pe=he.length,ge=getFieldBytesLength(fe),ye=getMinHashLength(fe);if(pe<16||pe<ye||pe>1024)throw new Error(`expected ${ye}-1024 bytes of input, got ${pe}`);const xe=le?bytesToNumberBE(he):bytesToNumberLE(he),me=mod(xe,fe-_1n$3)+_1n$3;return le?numberToBytesLE(me,ge):numberToBytesBE(me,ge)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$1=BigInt(0),_1n$2=BigInt(1);function wNAF(he,fe){const le=(ge,ye)=>{const xe=ye.negate();return ge?xe:ye},pe=ge=>{const ye=Math.ceil(fe/ge)+1,xe=2**(ge-1);return{windows:ye,windowSize:xe}};return{constTimeNegate:le,unsafeLadder(ge,ye){let xe=he.ZERO,me=ge;for(;ye>_0n$1;)ye&_1n$2&&(xe=xe.add(me)),me=me.double(),ye>>=_1n$2;return xe},precomputeWindow(ge,ye){const{windows:xe,windowSize:me}=pe(ye),we=[];let Ee=ge,Ae=Ee;for(let Se=0;Se<xe;Se++){Ae=Ee,we.push(Ae);for(let Le=1;Le<me;Le++)Ae=Ae.add(Ee),we.push(Ae);Ee=Ae.double()}return we},wNAF(ge,ye,xe){const{windows:me,windowSize:we}=pe(ge);let Ee=he.ZERO,Ae=he.BASE;const Se=BigInt(2**ge-1),Le=2**ge,He=BigInt(ge);for(let Me=0;Me<me;Me++){const Fe=Me*we;let Ue=Number(xe&Se);xe>>=He,Ue>we&&(Ue-=Le,xe+=_1n$2);const qe=Fe,$e=Fe+Math.abs(Ue)-1,Qe=Me%2!==0,ot=Ue<0;Ue===0?Ae=Ae.add(le(Qe,ye[qe])):Ee=Ee.add(le(ot,ye[$e]))}return{p:Ee,f:Ae}},wNAFCached(ge,ye,xe,me){const we=ge._WINDOW_SIZE||1;let Ee=ye.get(ge);return Ee||(Ee=this.precomputeWindow(ge,we),we!==1&&ye.set(ge,me(Ee))),this.wNAF(we,Ee,xe)}}}function validateBasic(he){return validateField(he.Fp),validateObject(he,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...nLength(he.n,he.nBitLength),...he,p:he.Fp.ORDER})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function validatePointOpts(he){const fe=validateBasic(he);validateObject(fe,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:le,Fp:pe,a:ge}=fe;if(le){if(!pe.eql(ge,pe.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof le!="object"||typeof le.beta!="bigint"||typeof le.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...fe})}const{bytesToNumberBE:b2n,hexToBytes:h2b}=ut,DER={Err:class extends Error{constructor(fe=""){super(fe)}},_parseInt(he){const{Err:fe}=DER;if(he.length<2||he[0]!==2)throw new fe("Invalid signature integer tag");const le=he[1],pe=he.subarray(2,le+2);if(!le||pe.length!==le)throw new fe("Invalid signature integer: wrong length");if(pe[0]&128)throw new fe("Invalid signature integer: negative");if(pe[0]===0&&!(pe[1]&128))throw new fe("Invalid signature integer: unnecessary leading zero");return{d:b2n(pe),l:he.subarray(le+2)}},toSig(he){const{Err:fe}=DER,le=typeof he=="string"?h2b(he):he;abytes(le);let pe=le.length;if(pe<2||le[0]!=48)throw new fe("Invalid signature tag");if(le[1]!==pe-2)throw new fe("Invalid signature: incorrect length");const{d:ge,l:ye}=DER._parseInt(le.subarray(2)),{d:xe,l:me}=DER._parseInt(ye);if(me.length)throw new fe("Invalid signature: left bytes after parsing");return{r:ge,s:xe}},hexFromSig(he){const fe=Ee=>Number.parseInt(Ee[0],16)&8?"00"+Ee:Ee,le=Ee=>{const Ae=Ee.toString(16);return Ae.length&1?`0${Ae}`:Ae},pe=fe(le(he.s)),ge=fe(le(he.r)),ye=pe.length/2,xe=ge.length/2,me=le(ye),we=le(xe);return`30${le(xe+ye+4)}02${we}${ge}02${me}${pe}`}},_0n=BigInt(0),_1n$1=BigInt(1);BigInt(2);const _3n=BigInt(3);BigInt(4);function weierstrassPoints(he){const fe=validatePointOpts(he),{Fp:le}=fe,pe=fe.toBytes||((Me,Fe,Ue)=>{const qe=Fe.toAffine();return concatBytes(Uint8Array.from([4]),le.toBytes(qe.x),le.toBytes(qe.y))}),ge=fe.fromBytes||(Me=>{const Fe=Me.subarray(1),Ue=le.fromBytes(Fe.subarray(0,le.BYTES)),qe=le.fromBytes(Fe.subarray(le.BYTES,2*le.BYTES));return{x:Ue,y:qe}});function ye(Me){const{a:Fe,b:Ue}=fe,qe=le.sqr(Me),$e=le.mul(qe,Me);return le.add(le.add($e,le.mul(Me,Fe)),Ue)}if(!le.eql(le.sqr(fe.Gy),ye(fe.Gx)))throw new Error("bad generator point: equation left != right");function xe(Me){return typeof Me=="bigint"&&_0n<Me&&Me<fe.n}function me(Me){if(!xe(Me))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function we(Me){const{allowedPrivateKeyLengths:Fe,nByteLength:Ue,wrapPrivateKey:qe,n:$e}=fe;if(Fe&&typeof Me!="bigint"){if(isBytes(Me)&&(Me=bytesToHex(Me)),typeof Me!="string"||!Fe.includes(Me.length))throw new Error("Invalid key");Me=Me.padStart(Ue*2,"0")}let Qe;try{Qe=typeof Me=="bigint"?Me:bytesToNumberBE(ensureBytes("private key",Me,Ue))}catch{throw new Error(`private key must be ${Ue} bytes, hex or bigint, not ${typeof Me}`)}return qe&&(Qe=mod(Qe,$e)),me(Qe),Qe}const Ee=new Map;function Ae(Me){if(!(Me instanceof Se))throw new Error("ProjectivePoint expected")}class Se{constructor(Fe,Ue,qe){if(this.px=Fe,this.py=Ue,this.pz=qe,Fe==null||!le.isValid(Fe))throw new Error("x required");if(Ue==null||!le.isValid(Ue))throw new Error("y required");if(qe==null||!le.isValid(qe))throw new Error("z required")}static fromAffine(Fe){const{x:Ue,y:qe}=Fe||{};if(!Fe||!le.isValid(Ue)||!le.isValid(qe))throw new Error("invalid affine point");if(Fe instanceof Se)throw new Error("projective point not allowed");const $e=Qe=>le.eql(Qe,le.ZERO);return $e(Ue)&&$e(qe)?Se.ZERO:new Se(Ue,qe,le.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(Fe){const Ue=le.invertBatch(Fe.map(qe=>qe.pz));return Fe.map((qe,$e)=>qe.toAffine(Ue[$e])).map(Se.fromAffine)}static fromHex(Fe){const Ue=Se.fromAffine(ge(ensureBytes("pointHex",Fe)));return Ue.assertValidity(),Ue}static fromPrivateKey(Fe){return Se.BASE.multiply(we(Fe))}_setWindowSize(Fe){this._WINDOW_SIZE=Fe,Ee.delete(this)}assertValidity(){if(this.is0()){if(fe.allowInfinityPoint&&!le.is0(this.py))return;throw new Error("bad point: ZERO")}const{x:Fe,y:Ue}=this.toAffine();if(!le.isValid(Fe)||!le.isValid(Ue))throw new Error("bad point: x or y not FE");const qe=le.sqr(Ue),$e=ye(Fe);if(!le.eql(qe,$e))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:Fe}=this.toAffine();if(le.isOdd)return!le.isOdd(Fe);throw new Error("Field doesn't support isOdd")}equals(Fe){Ae(Fe);const{px:Ue,py:qe,pz:$e}=this,{px:Qe,py:ot,pz:nt}=Fe,ct=le.eql(le.mul(Ue,nt),le.mul(Qe,$e)),mt=le.eql(le.mul(qe,nt),le.mul(ot,$e));return ct&&mt}negate(){return new Se(this.px,le.neg(this.py),this.pz)}double(){const{a:Fe,b:Ue}=fe,qe=le.mul(Ue,_3n),{px:$e,py:Qe,pz:ot}=this;let nt=le.ZERO,ct=le.ZERO,mt=le.ZERO,gt=le.mul($e,$e),Ht=le.mul(Qe,Qe),jt=le.mul(ot,ot),ze=le.mul($e,Qe);return ze=le.add(ze,ze),mt=le.mul($e,ot),mt=le.add(mt,mt),nt=le.mul(Fe,mt),ct=le.mul(qe,jt),ct=le.add(nt,ct),nt=le.sub(Ht,ct),ct=le.add(Ht,ct),ct=le.mul(nt,ct),nt=le.mul(ze,nt),mt=le.mul(qe,mt),jt=le.mul(Fe,jt),ze=le.sub(gt,jt),ze=le.mul(Fe,ze),ze=le.add(ze,mt),mt=le.add(gt,gt),gt=le.add(mt,gt),gt=le.add(gt,jt),gt=le.mul(gt,ze),ct=le.add(ct,gt),jt=le.mul(Qe,ot),jt=le.add(jt,jt),gt=le.mul(jt,ze),nt=le.sub(nt,gt),mt=le.mul(jt,Ht),mt=le.add(mt,mt),mt=le.add(mt,mt),new Se(nt,ct,mt)}add(Fe){Ae(Fe);const{px:Ue,py:qe,pz:$e}=this,{px:Qe,py:ot,pz:nt}=Fe;let ct=le.ZERO,mt=le.ZERO,gt=le.ZERO;const Ht=fe.a,jt=le.mul(fe.b,_3n);let ze=le.mul(Ue,Qe),ve=le.mul(qe,ot),ke=le.mul($e,nt),Oe=le.add(Ue,qe),Pe=le.add(Qe,ot);Oe=le.mul(Oe,Pe),Pe=le.add(ze,ve),Oe=le.sub(Oe,Pe),Pe=le.add(Ue,$e);let Re=le.add(Qe,nt);return Pe=le.mul(Pe,Re),Re=le.add(ze,ke),Pe=le.sub(Pe,Re),Re=le.add(qe,$e),ct=le.add(ot,nt),Re=le.mul(Re,ct),ct=le.add(ve,ke),Re=le.sub(Re,ct),gt=le.mul(Ht,Pe),ct=le.mul(jt,ke),gt=le.add(ct,gt),ct=le.sub(ve,gt),gt=le.add(ve,gt),mt=le.mul(ct,gt),ve=le.add(ze,ze),ve=le.add(ve,ze),ke=le.mul(Ht,ke),Pe=le.mul(jt,Pe),ve=le.add(ve,ke),ke=le.sub(ze,ke),ke=le.mul(Ht,ke),Pe=le.add(Pe,ke),ze=le.mul(ve,Pe),mt=le.add(mt,ze),ze=le.mul(Re,Pe),ct=le.mul(Oe,ct),ct=le.sub(ct,ze),ze=le.mul(Oe,ve),gt=le.mul(Re,gt),gt=le.add(gt,ze),new Se(ct,mt,gt)}subtract(Fe){return this.add(Fe.negate())}is0(){return this.equals(Se.ZERO)}wNAF(Fe){return He.wNAFCached(this,Ee,Fe,Ue=>{const qe=le.invertBatch(Ue.map($e=>$e.pz));return Ue.map(($e,Qe)=>$e.toAffine(qe[Qe])).map(Se.fromAffine)})}multiplyUnsafe(Fe){const Ue=Se.ZERO;if(Fe===_0n)return Ue;if(me(Fe),Fe===_1n$1)return this;const{endo:qe}=fe;if(!qe)return He.unsafeLadder(this,Fe);let{k1neg:$e,k1:Qe,k2neg:ot,k2:nt}=qe.splitScalar(Fe),ct=Ue,mt=Ue,gt=this;for(;Qe>_0n||nt>_0n;)Qe&_1n$1&&(ct=ct.add(gt)),nt&_1n$1&&(mt=mt.add(gt)),gt=gt.double(),Qe>>=_1n$1,nt>>=_1n$1;return $e&&(ct=ct.negate()),ot&&(mt=mt.negate()),mt=new Se(le.mul(mt.px,qe.beta),mt.py,mt.pz),ct.add(mt)}multiply(Fe){me(Fe);let Ue=Fe,qe,$e;const{endo:Qe}=fe;if(Qe){const{k1neg:ot,k1:nt,k2neg:ct,k2:mt}=Qe.splitScalar(Ue);let{p:gt,f:Ht}=this.wNAF(nt),{p:jt,f:ze}=this.wNAF(mt);gt=He.constTimeNegate(ot,gt),jt=He.constTimeNegate(ct,jt),jt=new Se(le.mul(jt.px,Qe.beta),jt.py,jt.pz),qe=gt.add(jt),$e=Ht.add(ze)}else{const{p:ot,f:nt}=this.wNAF(Ue);qe=ot,$e=nt}return Se.normalizeZ([qe,$e])[0]}multiplyAndAddUnsafe(Fe,Ue,qe){const $e=Se.BASE,Qe=(nt,ct)=>ct===_0n||ct===_1n$1||!nt.equals($e)?nt.multiplyUnsafe(ct):nt.multiply(ct),ot=Qe(this,Ue).add(Qe(Fe,qe));return ot.is0()?void 0:ot}toAffine(Fe){const{px:Ue,py:qe,pz:$e}=this,Qe=this.is0();Fe==null&&(Fe=Qe?le.ONE:le.inv($e));const ot=le.mul(Ue,Fe),nt=le.mul(qe,Fe),ct=le.mul($e,Fe);if(Qe)return{x:le.ZERO,y:le.ZERO};if(!le.eql(ct,le.ONE))throw new Error("invZ was invalid");return{x:ot,y:nt}}isTorsionFree(){const{h:Fe,isTorsionFree:Ue}=fe;if(Fe===_1n$1)return!0;if(Ue)return Ue(Se,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:Fe,clearCofactor:Ue}=fe;return Fe===_1n$1?this:Ue?Ue(Se,this):this.multiplyUnsafe(fe.h)}toRawBytes(Fe=!0){return this.assertValidity(),pe(Se,this,Fe)}toHex(Fe=!0){return bytesToHex(this.toRawBytes(Fe))}}Se.BASE=new Se(fe.Gx,fe.Gy,le.ONE),Se.ZERO=new Se(le.ZERO,le.ONE,le.ZERO);const Le=fe.nBitLength,He=wNAF(Se,fe.endo?Math.ceil(Le/2):Le);return{CURVE:fe,ProjectivePoint:Se,normPrivateKeyToScalar:we,weierstrassEquation:ye,isWithinCurveOrder:xe}}function validateOpts(he){const fe=validateBasic(he);return validateObject(fe,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...fe})}function weierstrass(he){const fe=validateOpts(he),{Fp:le,n:pe}=fe,ge=le.BYTES+1,ye=2*le.BYTES+1;function xe(Pe){return _0n<Pe&&Pe<le.ORDER}function me(Pe){return mod(Pe,pe)}function we(Pe){return invert(Pe,pe)}const{ProjectivePoint:Ee,normPrivateKeyToScalar:Ae,weierstrassEquation:Se,isWithinCurveOrder:Le}=weierstrassPoints({...fe,toBytes(Pe,Re,Ye){const Xe=Re.toAffine(),Je=le.toBytes(Xe.x),Ie=concatBytes;return Ye?Ie(Uint8Array.from([Re.hasEvenY()?2:3]),Je):Ie(Uint8Array.from([4]),Je,le.toBytes(Xe.y))},fromBytes(Pe){const Re=Pe.length,Ye=Pe[0],Xe=Pe.subarray(1);if(Re===ge&&(Ye===2||Ye===3)){const Je=bytesToNumberBE(Xe);if(!xe(Je))throw new Error("Point is not on curve");const Ie=Se(Je);let De;try{De=le.sqrt(Ie)}catch(Ze){const Ce=Ze instanceof Error?": "+Ze.message:"";throw new Error("Point is not on curve"+Ce)}const We=(De&_1n$1)===_1n$1;return(Ye&1)===1!==We&&(De=le.neg(De)),{x:Je,y:De}}else if(Re===ye&&Ye===4){const Je=le.fromBytes(Xe.subarray(0,le.BYTES)),Ie=le.fromBytes(Xe.subarray(le.BYTES,2*le.BYTES));return{x:Je,y:Ie}}else throw new Error(`Point of length ${Re} was invalid. Expected ${ge} compressed bytes or ${ye} uncompressed bytes`)}}),He=Pe=>bytesToHex(numberToBytesBE(Pe,fe.nByteLength));function Me(Pe){const Re=pe>>_1n$1;return Pe>Re}function Fe(Pe){return Me(Pe)?me(-Pe):Pe}const Ue=(Pe,Re,Ye)=>bytesToNumberBE(Pe.slice(Re,Ye));class qe{constructor(Re,Ye,Xe){this.r=Re,this.s=Ye,this.recovery=Xe,this.assertValidity()}static fromCompact(Re){const Ye=fe.nByteLength;return Re=ensureBytes("compactSignature",Re,Ye*2),new qe(Ue(Re,0,Ye),Ue(Re,Ye,2*Ye))}static fromDER(Re){const{r:Ye,s:Xe}=DER.toSig(ensureBytes("DER",Re));return new qe(Ye,Xe)}assertValidity(){if(!Le(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!Le(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(Re){return new qe(this.r,this.s,Re)}recoverPublicKey(Re){const{r:Ye,s:Xe,recovery:Je}=this,Ie=mt(ensureBytes("msgHash",Re));if(Je==null||![0,1,2,3].includes(Je))throw new Error("recovery id invalid");const De=Je===2||Je===3?Ye+fe.n:Ye;if(De>=le.ORDER)throw new Error("recovery id 2 or 3 invalid");const We=Je&1?"03":"02",it=Ee.fromHex(We+He(De)),Ze=we(De),Ce=me(-Ie*Ze),_e=me(Xe*Ze),at=Ee.BASE.multiplyAndAddUnsafe(it,Ce,_e);if(!at)throw new Error("point at infinify");return at.assertValidity(),at}hasHighS(){return Me(this.s)}normalizeS(){return this.hasHighS()?new qe(this.r,me(-this.s),this.recovery):this}toDERRawBytes(){return hexToBytes(this.toDERHex())}toDERHex(){return DER.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return hexToBytes(this.toCompactHex())}toCompactHex(){return He(this.r)+He(this.s)}}const $e={isValidPrivateKey(Pe){try{return Ae(Pe),!0}catch{return!1}},normPrivateKeyToScalar:Ae,randomPrivateKey:()=>{const Pe=getMinHashLength(fe.n);return mapHashToField(fe.randomBytes(Pe),fe.n)},precompute(Pe=8,Re=Ee.BASE){return Re._setWindowSize(Pe),Re.multiply(BigInt(3)),Re}};function Qe(Pe,Re=!0){return Ee.fromPrivateKey(Pe).toRawBytes(Re)}function ot(Pe){const Re=isBytes(Pe),Ye=typeof Pe=="string",Xe=(Re||Ye)&&Pe.length;return Re?Xe===ge||Xe===ye:Ye?Xe===2*ge||Xe===2*ye:Pe instanceof Ee}function nt(Pe,Re,Ye=!0){if(ot(Pe))throw new Error("first arg must be private key");if(!ot(Re))throw new Error("second arg must be public key");return Ee.fromHex(Re).multiply(Ae(Pe)).toRawBytes(Ye)}const ct=fe.bits2int||function(Pe){const Re=bytesToNumberBE(Pe),Ye=Pe.length*8-fe.nBitLength;return Ye>0?Re>>BigInt(Ye):Re},mt=fe.bits2int_modN||function(Pe){return me(ct(Pe))},gt=bitMask(fe.nBitLength);function Ht(Pe){if(typeof Pe!="bigint")throw new Error("bigint expected");if(!(_0n<=Pe&&Pe<gt))throw new Error(`bigint expected < 2^${fe.nBitLength}`);return numberToBytesBE(Pe,fe.nByteLength)}function jt(Pe,Re,Ye=ze){if(["recovered","canonical"].some(pt=>pt in Ye))throw new Error("sign() legacy options not supported");const{hash:Xe,randomBytes:Je}=fe;let{lowS:Ie,prehash:De,extraEntropy:We}=Ye;Ie==null&&(Ie=!0),Pe=ensureBytes("msgHash",Pe),De&&(Pe=ensureBytes("prehashed msgHash",Xe(Pe)));const it=mt(Pe),Ze=Ae(Re),Ce=[Ht(Ze),Ht(it)];if(We!=null&&We!==!1){const pt=We===!0?Je(le.BYTES):We;Ce.push(ensureBytes("extraEntropy",pt))}const _e=concatBytes(...Ce),at=it;function yt(pt){const kt=ct(pt);if(!Le(kt))return;const er=we(kt),zt=Ee.BASE.multiply(kt).toAffine(),or=me(zt.x);if(or===_0n)return;const ar=me(er*me(at+or*Ze));if(ar===_0n)return;let pr=(zt.x===or?0:2)|Number(zt.y&_1n$1),Mr=ar;return Ie&&Me(ar)&&(Mr=Fe(ar),pr^=1),new qe(or,Mr,pr)}return{seed:_e,k2sig:yt}}const ze={lowS:fe.lowS,prehash:!1},ve={lowS:fe.lowS,prehash:!1};function ke(Pe,Re,Ye=ze){const{seed:Xe,k2sig:Je}=jt(Pe,Re,Ye),Ie=fe;return createHmacDrbg(Ie.hash.outputLen,Ie.nByteLength,Ie.hmac)(Xe,Je)}Ee.BASE._setWindowSize(8);function Oe(Pe,Re,Ye,Xe=ve){var zt;const Je=Pe;if(Re=ensureBytes("msgHash",Re),Ye=ensureBytes("publicKey",Ye),"strict"in Xe)throw new Error("options.strict was renamed to lowS");const{lowS:Ie,prehash:De}=Xe;let We,it;try{if(typeof Je=="string"||isBytes(Je))try{We=qe.fromDER(Je)}catch(or){if(!(or instanceof DER.Err))throw or;We=qe.fromCompact(Je)}else if(typeof Je=="object"&&typeof Je.r=="bigint"&&typeof Je.s=="bigint"){const{r:or,s:ar}=Je;We=new qe(or,ar)}else throw new Error("PARSE");it=Ee.fromHex(Ye)}catch(or){if(or.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(Ie&&We.hasHighS())return!1;De&&(Re=fe.hash(Re));const{r:Ze,s:Ce}=We,_e=mt(Re),at=we(Ce),yt=me(_e*at),pt=me(Ze*at),kt=(zt=Ee.BASE.multiplyAndAddUnsafe(it,yt,pt))==null?void 0:zt.toAffine();return kt?me(kt.x)===Ze:!1}return{CURVE:fe,getPublicKey:Qe,getSharedSecret:nt,sign:ke,verify:Oe,ProjectivePoint:Ee,Signature:qe,utils:$e}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function getHash(he){return{hash:he,hmac:(fe,...le)=>hmac(he,fe,concatBytes$1(...le)),randomBytes}}function createCurve(he,fe){const le=pe=>weierstrass({...he,...getHash(pe)});return Object.freeze({...le(fe),create:le})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const secp256k1P=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),secp256k1N=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),_1n=BigInt(1),_2n=BigInt(2),divNearest=(he,fe)=>(he+fe/_2n)/fe;function sqrtMod(he){const fe=secp256k1P,le=BigInt(3),pe=BigInt(6),ge=BigInt(11),ye=BigInt(22),xe=BigInt(23),me=BigInt(44),we=BigInt(88),Ee=he*he*he%fe,Ae=Ee*Ee*he%fe,Se=pow2(Ae,le,fe)*Ae%fe,Le=pow2(Se,le,fe)*Ae%fe,He=pow2(Le,_2n,fe)*Ee%fe,Me=pow2(He,ge,fe)*He%fe,Fe=pow2(Me,ye,fe)*Me%fe,Ue=pow2(Fe,me,fe)*Fe%fe,qe=pow2(Ue,we,fe)*Ue%fe,$e=pow2(qe,me,fe)*Fe%fe,Qe=pow2($e,le,fe)*Ae%fe,ot=pow2(Qe,xe,fe)*Me%fe,nt=pow2(ot,pe,fe)*Ee%fe,ct=pow2(nt,_2n,fe);if(!Fp.eql(Fp.sqr(ct),he))throw new Error("Cannot find square root");return ct}const Fp=Field(secp256k1P,void 0,void 0,{sqrt:sqrtMod}),secp256k1=createCurve({a:BigInt(0),b:BigInt(7),Fp,n:secp256k1N,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:he=>{const fe=secp256k1N,le=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),pe=-_1n*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),ge=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),ye=le,xe=BigInt("0x100000000000000000000000000000000"),me=divNearest(ye*he,fe),we=divNearest(-pe*he,fe);let Ee=mod(he-me*le-we*ge,fe),Ae=mod(-me*pe-we*ye,fe);const Se=Ee>xe,Le=Ae>xe;if(Se&&(Ee=fe-Ee),Le&&(Ae=fe-Ae),Ee>xe||Ae>xe)throw new Error("splitScalar: Endomorphism failed, k="+he);return{k1neg:Se,k1:Ee,k2neg:Le,k2:Ae}}}},sha256);BigInt(0);secp256k1.ProjectivePoint;/*! scure-bip32 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */const Point=secp256k1.ProjectivePoint,base58check=createBase58check(sha256);function bytesToNumber(he){return BigInt(`0x${bytesToHex$1(he)}`)}function numberToBytes(he){return hexToBytes$1(he.toString(16).padStart(64,"0"))}const MASTER_SECRET=utf8ToBytes$1("Bitcoin seed"),BITCOIN_VERSIONS={private:76066276,public:76067358},HARDENED_OFFSET=2147483648,hash160=he=>ripemd160(sha256(he)),fromU32=he=>createView(he).getUint32(0,!1),toU32=he=>{if(!Number.isSafeInteger(he)||he<0||he>2**32-1)throw new Error(`Invalid number=${he}. Should be from 0 to 2 ** 32 - 1`);const fe=new Uint8Array(4);return createView(fe).setUint32(0,he,!1),fe};class HDKey{get fingerprint(){if(!this.pubHash)throw new Error("No publicKey set!");return fromU32(this.pubHash)}get identifier(){return this.pubHash}get pubKeyHash(){return this.pubHash}get privateKey(){return this.privKeyBytes||null}get publicKey(){return this.pubKey||null}get privateExtendedKey(){const fe=this.privateKey;if(!fe)throw new Error("No private key");return base58check.encode(this.serialize(this.versions.private,concatBytes$1(new Uint8Array([0]),fe)))}get publicExtendedKey(){if(!this.pubKey)throw new Error("No public key");return base58check.encode(this.serialize(this.versions.public,this.pubKey))}static fromMasterSeed(fe,le=BITCOIN_VERSIONS){if(bytes(fe),8*fe.length<128||8*fe.length>512)throw new Error(`HDKey: wrong seed length=${fe.length}. Should be between 128 and 512 bits; 256 bits is advised)`);const pe=hmac(sha512,MASTER_SECRET,fe);return new HDKey({versions:le,chainCode:pe.slice(32),privateKey:pe.slice(0,32)})}static fromExtendedKey(fe,le=BITCOIN_VERSIONS){const pe=base58check.decode(fe),ge=createView(pe),ye=ge.getUint32(0,!1),xe={versions:le,depth:pe[4],parentFingerprint:ge.getUint32(5,!1),index:ge.getUint32(9,!1),chainCode:pe.slice(13,45)},me=pe.slice(45),we=me[0]===0;if(ye!==le[we?"private":"public"])throw new Error("Version mismatch");return we?new HDKey({...xe,privateKey:me.slice(1)}):new HDKey({...xe,publicKey:me})}static fromJSON(fe){return HDKey.fromExtendedKey(fe.xpriv)}constructor(fe){if(this.depth=0,this.index=0,this.chainCode=null,this.parentFingerprint=0,!fe||typeof fe!="object")throw new Error("HDKey.constructor must not be called directly");if(this.versions=fe.versions||BITCOIN_VERSIONS,this.depth=fe.depth||0,this.chainCode=fe.chainCode||null,this.index=fe.index||0,this.parentFingerprint=fe.parentFingerprint||0,!this.depth&&(this.parentFingerprint||this.index))throw new Error("HDKey: zero depth with non-zero index/parent fingerprint");if(fe.publicKey&&fe.privateKey)throw new Error("HDKey: publicKey and privateKey at same time.");if(fe.privateKey){if(!secp256k1.utils.isValidPrivateKey(fe.privateKey))throw new Error("Invalid private key");this.privKey=typeof fe.privateKey=="bigint"?fe.privateKey:bytesToNumber(fe.privateKey),this.privKeyBytes=numberToBytes(this.privKey),this.pubKey=secp256k1.getPublicKey(fe.privateKey,!0)}else if(fe.publicKey)this.pubKey=Point.fromHex(fe.publicKey).toRawBytes(!0);else throw new Error("HDKey: no public or private key provided");this.pubHash=hash160(this.pubKey)}derive(fe){if(!/^[mM]'?/.test(fe))throw new Error('Path must start with "m" or "M"');if(/^[mM]'?$/.test(fe))return this;const le=fe.replace(/^[mM]'?\//,"").split("/");let pe=this;for(const ge of le){const ye=/^(\d+)('?)$/.exec(ge),xe=ye&&ye[1];if(!ye||ye.length!==3||typeof xe!="string")throw new Error(`Invalid child index: ${ge}`);let me=+xe;if(!Number.isSafeInteger(me)||me>=HARDENED_OFFSET)throw new Error("Invalid index");ye[2]==="'"&&(me+=HARDENED_OFFSET),pe=pe.deriveChild(me)}return pe}deriveChild(fe){if(!this.pubKey||!this.chainCode)throw new Error("No publicKey or chainCode set");let le=toU32(fe);if(fe>=HARDENED_OFFSET){const me=this.privateKey;if(!me)throw new Error("Could not derive hardened child key");le=concatBytes$1(new Uint8Array([0]),me,le)}else le=concatBytes$1(this.pubKey,le);const pe=hmac(sha512,this.chainCode,le),ge=bytesToNumber(pe.slice(0,32)),ye=pe.slice(32);if(!secp256k1.utils.isValidPrivateKey(ge))throw new Error("Tweak bigger than curve order");const xe={versions:this.versions,chainCode:ye,depth:this.depth+1,parentFingerprint:this.fingerprint,index:fe};try{if(this.privateKey){const me=mod(this.privKey+ge,secp256k1.CURVE.n);if(!secp256k1.utils.isValidPrivateKey(me))throw new Error("The tweak was out of range or the resulted private key is invalid");xe.privateKey=me}else{const me=Point.fromHex(this.pubKey).add(Point.fromPrivateKey(ge));if(me.equals(Point.ZERO))throw new Error("The tweak was equal to negative P, which made the result key invalid");xe.publicKey=me.toRawBytes(!0)}return new HDKey(xe)}catch{return this.deriveChild(fe+1)}}sign(fe){if(!this.privateKey)throw new Error("No privateKey set!");return bytes(fe,32),secp256k1.sign(fe,this.privKey).toCompactRawBytes()}verify(fe,le){if(bytes(fe,32),bytes(le,64),!this.publicKey)throw new Error("No publicKey set!");let pe;try{pe=secp256k1.Signature.fromCompact(le)}catch{return!1}return secp256k1.verify(pe,fe,this.publicKey)}wipePrivateData(){return this.privKey=void 0,this.privKeyBytes&&(this.privKeyBytes.fill(0),this.privKeyBytes=void 0),this}toJSON(){return{xpriv:this.privateExtendedKey,xpub:this.publicExtendedKey}}serialize(fe,le){if(!this.chainCode)throw new Error("No chainCode set");return bytes(le,33),concatBytes$1(toU32(fe),new Uint8Array([this.depth]),toU32(this.parentFingerprint),toU32(this.index),this.chainCode,le)}}var i$8=class jn extends t$5{constructor(fe){super();let le=i$c.fromHexInput(fe);if(le.toUint8Array().length!==jn.LENGTH)throw new Error(`PublicKey length should be ${jn.LENGTH}`);this.key=le}verifySignature(fe){let{message:le,signature:pe}=fe,ge=o$a(le),ye=i$c.fromHexInput(ge).toUint8Array(),xe=sha3_256(ye),me=pe.toUint8Array();return secp256k1$2.verify(me,xe,this.key.toUint8Array(),{lowS:!0})}toUint8Array(){return this.key.toUint8Array()}serialize(fe){fe.serializeBytes(this.key.toUint8Array())}static deserialize(fe){let le=fe.deserializeBytes();return new jn(le)}static isPublicKey(fe){return fe instanceof jn}static isInstance(fe){var le,pe;return"key"in fe&&((pe=(le=fe.key)==null?void 0:le.data)==null?void 0:pe.length)===jn.LENGTH}};i$8.LENGTH=65;var u$5=i$8,r$3=class zn extends B$6{constructor(fe){super();let le=i$c.fromHexInput(fe);if(le.toUint8Array().length!==zn.LENGTH)throw new Error(`PrivateKey length should be ${zn.LENGTH}`);this.key=le}static generate(){let fe=secp256k1$2.utils.randomPrivateKey();return new zn(fe)}static fromDerivationPath(fe,le){if(!D$3(fe))throw new Error(`Invalid derivation path ${fe}`);return zn.fromDerivationPathInner(fe,h$8(le))}static fromDerivationPathInner(fe,le){let{privateKey:pe}=HDKey.fromMasterSeed(le).derive(fe);if(pe===null)throw new Error("Invalid key");return new zn(pe)}sign(fe){let le=o$a(fe),pe=i$c.fromHexInput(le),ge=sha3_256(pe.toUint8Array()),ye=secp256k1$2.sign(ge,this.key.toUint8Array(),{lowS:!0});return new m$5(ye.toCompactRawBytes())}publicKey(){let fe=secp256k1$2.getPublicKey(this.key.toUint8Array(),!1);return new u$5(fe)}toUint8Array(){return this.key.toUint8Array()}toString(){return this.key.toString()}serialize(fe){fe.serializeBytes(this.toUint8Array())}static deserialize(fe){let le=fe.deserializeBytes();return new zn(le)}static isPrivateKey(fe){return fe instanceof zn}};r$3.LENGTH=32;var v$4=r$3,a$4=class _n extends o$b{constructor(fe){super();let le=i$c.fromHexInput(fe);if(le.toUint8Array().length!==_n.LENGTH)throw new Error(`Signature length should be ${_n.LENGTH}, received ${le.toUint8Array().length}`);this.data=le}toUint8Array(){return this.data.toUint8Array()}serialize(fe){fe.serializeBytes(this.data.toUint8Array())}static deserialize(fe){let le=fe.deserializeBytes();return new _n(le)}};a$4.LENGTH=64;var m$5=a$4,poseidonLite={},poseidon1$1={};const F$5=BigInt("21888242871839275222246405745257275088548364400416034343698204186575808495617"),N_ROUNDS_F=8,N_ROUNDS_P=[56,57,56,60,60,63,64,63,60,66,60,65,70,60,64,68],pow5=he=>{let fe=he*he;return he*fe*fe%F$5};function mix(he,fe){const le=[];for(let pe=0;pe<he.length;pe++){let ge=0n;for(let ye=0;ye<he.length;ye++)ge=ge+fe[pe][ye]*he[ye];le.push(ge%F$5)}return le}function poseidon(he,fe){const le=he.map(Ee=>BigInt(Ee));if(le.length<=0)throw new Error("poseidon-lite: Not enough inputs");if(le.length>N_ROUNDS_P.length)throw new Error("poseidon-lite: Too many inputs");const pe=le.length+1,ge=N_ROUNDS_F,ye=N_ROUNDS_P[pe-2],{C:xe,M:me}=fe;if(me.length!==pe)throw new Error(`poseidon-lite: Incorrect M length, expected ${pe} got ${me.length}`);let we=[0n,...le];for(let Ee=0;Ee<ge+ye;Ee++){for(let Ae=0;Ae<we.length;Ae++)we[Ae]=we[Ae]+xe[Ee*pe+Ae],(Ee<ge/2||Ee>=ge/2+ye||Ae===0)&&(we[Ae]=pow5(we[Ae]));we=mix(we,me)}return we[0]}var poseidon_1=poseidon,unstringify={};Object.defineProperty(unstringify,"__esModule",{value:!0});unstringify.default=unstringifyBigInts;function unstringifyBigInts(he){if(Array.isArray(he))return he.map(unstringifyBigInts);if(typeof he=="object"){const pe={};for(const[ge,ye]of Object.entries(he))pe[ge]=unstringifyBigInts(ye);return pe}const le=[...Uint8Array.from(atob(he),pe=>pe.charCodeAt(0))].map(pe=>pe.toString(16).padStart(2,"0")).join("");return BigInt(`0x${le}`)}var _1={};Object.defineProperty(_1,"__esModule",{value:!0});_1.default=void 0;var _default$f={C:["CcRunsaOm9T+H6q6KUy6OKcaoXdTTN0bbH3A29Cr16c=","DANWUwiW7sQql+2TfzE1z8UUKzrkBbg0PB2D/6YEy4E=","Hiih2TVpitEULlEYK7VM9KAOpaq9Ymi9MX6pd8wVSjA=","J68tgxqdJ0gICWXbMOKY5A5XV8PgCNuWTPnisSuRJR8=","Hm8RzmD8j1E6ajz+Fq4XWkEpFGLyFM0Iear0NUW3TgM=","Kmc4TTu9XkOFQYGctoHwvgRGLtFMNhPY9xkgYmjRQtM=","C2b981YJOmEWCfjhL7/s8LmF44HwJRiJNkCPXVyfRdA=","AS7j7B541HCDDGEJPCreNwsmyDzFzr7t2qaFLb2wniE=","AlK6X2dgv739iPZ/gXXj/WzRxDGwmba7LRCOe0Rbsbk=","F5R0zOyl/2dsa+w871QpY1Q5Gok1/3HW71rqrXypMvE=","LCQmE3mlG/qSKP9KUD/U7Zwfl0omSWmzfholibvtK5E=","HMHXtiaS5j6sLyiL0GlbQ8L2P1AB/A/FU+ZsBVGAGwU=","JVBZMBqtqYuy7VX4UpeelgB4Tb8X+6zQXZ7/X9nJG1Y=","KEN746wcsuR54fXA7M0ys66iQjSXCoGTsRwpzn5Z79k=","KCFqRC8uH3EcpPprU3ZusRhUjaj7T3jUM4diw39fIEM=","LB9HzRf6Wt8fOfTnBW3QP+7h784DCUWBEx8jdzI0gsk=","B6utArel68SGMrzJNWzrfdna/KJ2Y4pjZGuFZqYhr8k=","AjAmRgH/3yknWzP/qrUd/pQp+QiAppzRN9oMTRX5bDw=","G8lzBU5R2QWg8WhlZJfKQKhkQUVX7iiecX5dZomaoKk=","Lhwi+WRDUAggbDFX6GNB7dJJr/XC2EIfKmsiKI8KZ/w=","EiTzjfZ8U3gSHB1fRhu8UJ6OoVmORsn3pwRSvCu6hrg=","AuTmnYulnlGSgLS9ntAGj9e/6M2d/toZadKYkYbN4g4=","Hx7Mw0qroBN/XfgfwE/z7k8Z7jZOZT8HbUfpc12YAY4=","FnKtPXCaNTl0JmwwOamnMRQkRIAyzRgZ6suKTUKE9YI=","KD4/3CxuQgxW9Er1GStK6c2mlh8oTSSZHS7WAt+Mj8c=","HCo9EgxVDs/Q2wlXFw+gE2g3Ufj9/1nWYU+9af85S8w=","IW+Eh3qsYXL3iXpzI0Vu/hQ6mkN3PqbylstrgXdlP70=","LA0nK+zyp1dkun6OPijRK86qR+phylmkEaH1FVL5R4g=","FuNCmYZcDihITuenTEVOnxcKVICr4FCPy0psPYlUb0M=","F1zrpZnpb1s3WiMqb7nMcXcgR3ZYAikPSM2Tl1VIj8U=","DHWURA3EjBb+rZ4XWLAoBmqkEL+8NU9U2MX/u0Sh7jI=","GjwpvDnyG7XEZtt9frb9j3YOIAE8z5EskkeYgtkZ/Y0=","DM/dkG80JuXAmG6gSbJTQAhV00kHT1pmlcjuq80i5o8=","FPa8gdnxhvYr20dc5slBGGanqKP9Bls84OaZtn3Z55Y=","CWK4J4n7PRKXAspwsvbFqswJmBDJxJXIiO3rc4a5cFI=","GogK9wdNGLO/IMed4lEnvBMoSrAe8CV1r+8Mj2oxqG0=","EMuhhBmmozLNXnfwIRwVSyCvKST8IP8/TDASu3rpMRs=","BX5iqaj4mz69x2umOp6sqPontzGcrjQGdWooSfMC8Q0=","KHyXHekdwKvUSt9ThLSYjLlhMDu/Zc/1r6BBO0QoDO4=","Id8ziK8Wh7uzvKnaDMqQjx5WK8RtSrpOb395YOMGiR0=","G+XIh9JbznA+JcyXTQk0zXid+PcLSY/YPv+LVg4WgrM=","Jo2jb3blaPtoEXF1zqLNDdLLXUL9pazqSNWcJwag1cE=","DherCR9urlDGCb6vVRDs7MXYu3QTXr0FvQZGDMJqXtY=","BNcn5yj/oKZ67lNasHSkMJHvYtjPg9JwBA9cqh9ir0A=","DdvXv5wpNBWBtUl2K8Ai7TNwKsEPG/2GKxVBfX45ym4=","J5DrM1FiF1J2gWLoKYnGwjT1sNHTr5tYiinEnIeJZUs=","HkV8YBpjtz5EcZUBk9ilcDlfPZq4sv0JhLdkIGFC+ek=","Ia5kMB3KliVjjWqyu+cTX/qQ7NDEP/kfxMaG/EbgkbA=","A3n2PIzjRo1NopMWb0lJKIVL6eNDLglVWFhTTu2NNQs=","AC1WQgNZ0CZqdEoICAngVMoOSSGkZoasjJ9YoyTDUEk=","EjFY5ZZbXZsdaLPNMuELvtqNYkWeIfQJD8LFr5Y1FaY=","C+KfxAhHqUFmHRS79svgQg+7K29Sg21OYMgOtJytnsE=","Gslpkd7CuwVXcWFCAVpFPDbbnYWcrV+aIzgC8k/fTBo=","FZZEP3Y9vMJfSWT8YdI7Pl4SyfqX8YqSUcozVbywYn4=","EuC802VL36drKGHU7Drq4PGFfZ8X5xWu1tBJ6uO6MhI=","D8krTxu+qCuepz1K+a8qUM6rrH83FUsZBObHbHz5ZLo=","H5wLFhBEZELW8uWSqAE/QLFPfHciI29PnH6WUjOHJ2I=","Dr10JErnJnX4zeBhV6eC9AUNkU2ji0wFjRWfZD279NM=","LLfw7Tnhbp9pqfr9SrlRwDsGcelzRu45eoOYOdzPxtE=","Gp1uLs/wIsxWBUQ+5BurIM52HQUUzlJmkMcrynNS2b8=","KhFUOWB/M1peqDw7xEqTMdDBMyapp7owh9oYLWSOxy8=","I/m2UptdBA0VuPp67j40EOc4tWMFzUTylTXBFcWkwGA=","BYcsFtsPcqIkmsa6SEu5w6POl8FtWLaLJg65OfDm6Kc=","EwC97gi7eCTKIPuAEYB19AIZthUdVbXFK2JKfN7d9qc=","Gbm2PS8QjhfmOBeGOo9sKI160pkW2YyxBy5Oe31Ss3Y=","AVvuE1fjwBW1vaI3ZoUi9hPRyIcmtexCJKIBKEgbT38=","KVNzbpS7a58blwek8WFeTv4eHOS6shjL6pLHhbEo/9E=","CwaTU7oJFhiGL4BhgMA4X4UbmNNytF9UTOcmbtZgjfw=","ME901GHMwTEV5OC8+5OBflWut+uTBrZOT1iKyX2B9Ck=","FbvxRs6bygnooz9ed9/k9arSoWSkYXpMuO5UFc3pE/w=","CrTf4MJ0LN5EkBAxSHlk7ZuPS4UEBcEMqf8jhZVyyMY=","DjLbMgoETjGX9F92SaGWde9e7f6lRt6pJR3jn5Y5d5o=","ChdWqh83jKSydjWni2iI5meXczqCd0iWoweO+lFtoBY=","BExKM7EPaTRH/RcXf5Uu+JXmHTKPhe+pQlTWoqJdk+8=","LtNhG3JbinC+ZVtTf2b3AP4IedeaSWiR03sHtUZsS4s=","H5uk6Lq3zkLI7MPXIqouDq3965z900e12DOepxIIWKo=","GyMwQwUujCiPfukHqE5RiqOOgqxFAgZtt0BW+GXF09o=","JDHhzBZLuNB0Axq3K9VbTJAgU7/A8U2wyi+XsCCHWVQ=","CC+TTJH1qsMwzWlToKfbRaE+MiCXWDMZp5Hyc5ZYAf0=","K5oKIj51OLCjS+B0MVVCo8dyReKufL6Zmta7kwxImXw=","DhzZHt0s+izOuFSDuIepvoFkFj51qKAOsLWJzHAhTn0=","Lh6sDyv9/WPJUfYUd+NpiZl3TxmFTQD1iNMkYBzr4vk=","DL+pXzf7dAYMdhWOdp1tFXNFeE2O/bM8I9dIEVtQC4M=","CPBbO+kj7UTWWtSdimHppnbZkeOndRPZmAwjLfpKT4Q=","InGeKgcLzQhSv44hmE0EQ+coSSXcB1ijJaLdUQwEfvY=","BB9Zap7hyyvAYPf8w6GrTHvb8DYRmYLA9B9isvJoMMA=","Iz/TXeG+UgqHYo6wb2sdTAIb4cLQ3EZKGfzdCYaxD4k=","BSS0bRqoel5DJeCkI+vIENMeB4qhtHB+78tFPGHJwmc=","LDT0JMgeVxbOR/ysiUuFgkInu5VLDzGZzESGI3xRUhE=","C18qS2M4eBkgfv/CtVQfty3SAltUV8yX8zAQMn3kkV4=","IiB4VggszFTFty/kOdLP1sF0NdL1evbOrvrEH+BcZZ8=","JNV6i/XaY/5OJBWbf4lQtc37IQGUyvefJ4VASM4sgXE=","Cvqxgf3V4Fg7Nx11vWk/mDdK1wl7sBqFc5Gbsjt5OW4=","LbqbEI8gh3KZilLvrHy9VnbABXGUwWwL8WKQ1isRKO4=","JjSbZu24sW9W+IHHiPU/g8u4PeC9WSslWv8T5rzkILM=","Ja984OXhA1doXpX5Izl1OtgaVtKOzBk7I1KIo+bxN9s=","JbTOe9IpQ5DAlNalXt1ouXDu16roiyv/H3wBh/41AR8=","IsVD8Q9siew4flPxkIqI5d6c7yjr3zCxjLnVTB4CtjE=","Ajb5PneJxHJPx5CKnxkeHkJekGqRnXo032aOdIgvh6k=","KTULQBFmygEOfSfjfQXamWUr2uEU6wFlnLSXr5gMS1I=","Du14fWWCDT9r0xu6tUf3WmXtt12ETruJ7hJgkWZSNj8=","B8wRcPE7RvIDanU/Ugsykf3NDpm9lCl9GQb2VvTeb60=","Irk5IzsdcgX0m89hOj0wsZCHhtf59dEMIFlDVonorOo=","AUUXYqCquByKrR3IvDPocHQPCDpaqFQ4rdZQrOYK5aY=","I1BrtdhyfURh+r8QJdRtH+MuqmHex9pX5wT+wIkvzok=","LkhMROg4rqC6wGrj9xvdCSo3CVMeHv6pf4vWiQc1VSI=","D0vH0H66/WQ3nnjFC9LkK69KWUVFztwlRUGNomg1tUw=","H008j2WD6eX6dmN4Yvqu6FFYI4hyXfRg5iCZbVDY504=","CTUU4McHEfgmYNB74OSpiPrgKrx7aB2RU+uby0j+c4k=","GtqwyOKzutNGaZorXzvANkPug+zkcijySljgo0fhU9g=","FnKxcmBX2Z3RRwnrtHRkGjeMG5S4ByusGiLb756A2tI=","Hf1T1Fdq8uOPRPU/3KtGjMXY4vrgrMTuMNR7I5tHnBQ=","DGiIoQt1sPOnCjYmOjfhf+bXfWQPb8PevH8gd1MgXGA=","Gt25M6Zb53CSs0p+d9Ev6GEaYeAO5oSLhQkezKnR5Qg=","ANdUDc0mioRcEK4Y0d6TPPY4/1Ql8K//eTVijimdF5E=","FAwOQmh+nq0BsoJ6VmTKnCb+3eSs2Z2x0xaTnSC4LA4=","Lww6EV1DF9GRuom40T0YBsIKD5sk+MXtwJHirlZWWYQ=","DE7neP98FFUwBu0iDPnIEAigz/ZwsiuC2MU4odyVjGE=","FwTydm1G+Cw2k/AEQMzDYJQk7SbArMZiJ8PXSF3nTGk=","Ly0ZzD6l146noCwbUdJEq/B2nJ+FROQCObZv6QCcPPo=","GuA4U7dfyrpQU/ES4qjo3N1+5suc/tnH1sdmqAb8Zik=","CXGqv3lSQd9R0THQ+mGqXzVWkhstbwFOTkGobdrwVtU=","FAjDFuYBThqR1M9rbg3nPtpiT4OA3xyHX1wp97/i9kY=","Fmfz/i7b6FAkir5CtUMJO2yJ8fdz7yhTQWkfOYIu9b0=","E798XQ0sQ3akiwoDVXzfkVuBcYQJ5cEzQkxpV2UA/jc=","B2IKbfsLbOwwFq3z01M8JAJLlTR4VreXGbwLp0OmLCw=","FXTH7wxDVF82qMoIvb3YsHXSlZ4vMitzFnXePhmCtNA=","Jp5LW3oushr9VnlwpxfO7FvUGEVxwlT9wG4Dp/+DePA="],M:[["Bm9vhdb2ioXsEDRTUaI6Oq8H84r4yVKnvOynC9KvetU=","K51LQRDJrpl3guFQmx0P2yCnwCu9i+pzBUYrn4Elseg="],["DMV827CFB9Yr9npEk8wmL7bAnVVwE//x9XP0MSIfj/k=","EnTmSaMu01WjGm7WlyThra3oV+hutcOhIbzRR5QyA8g="]]};_1.default=_default$f;Object.defineProperty(poseidon1$1,"__esModule",{value:!0});poseidon1$1.poseidon1=poseidon1;var _poseidon$f=_interopRequireDefault$f(poseidon_1),_unstringify$f=_interopRequireDefault$f(unstringify),_$k=_interopRequireDefault$f(_1);function _interopRequireDefault$f(he){return he&&he.__esModule?he:{default:he}}const c$l=(0,_unstringify$f.default)(_$k.default);function poseidon1(he){return(0,_poseidon$f.default)(he,c$l)}var poseidon2$1={},_2={};Object.defineProperty(_2,"__esModule",{value:!0});_2.default=void 0;var _default$e={C:["DumlkrqalRjQWYbWVvQMIRTEmTwRuymTjSHUcwTNjm4=","APFEUjXyFIxZhlhxafwbzYh7CNTQCGjfVpb/9AlW6GQ=","CN/zSH6KyZ4fKaBY0PqAuTDHKHMLerNs6HnziQ7Pc/U=","Lye+aQ/a7kbDzij3UysTyFbDU0LIS9puIJZjEPrcAdA=","KyrhrPaLe40kFr6/PU9iNLdj/gS4BD7ki4MnvryhbPI=","AxnQYgcr737MperAb5fU1VlSwXWrawPq5ktEx9vxHPo=","KIE9yuuuqoKKN234evSmO8i3vyetScYpjvezh78oUm0=","JydnOyzLyQPxgb844cHUDSAzhlIAw1K8FQkord35y3g=","I07EXKJ3J8LnSr0rKhSUzW771D40BYfWuPueMeZcxjI=","FbUlNAMa4Y9/hiyyz3z3YKsQqBUKM3sczZn/boeX1Cg=","Dcj61tnks19e2aPRhrec444Oio0bWLEy1wHU7s9o0fY=","G82V/8IR+8pgD3BfrT+1Z+pOs3j2Lh/sl4BVGKR+TZw=","EFILCrchyt/p7/gbAW/DTcdto2wleJN4F8uXjQad5Vk=","H21IFJuOf32bJX2O1fu69CkySYB1/tCs6IqeuB9WJ/Y=","HZZV9lIwkBTSngDvNaIIm//43ByBbw3JyjS9tUYMhwU=","BN9aVv+VvK+wUfexzUOpm6cx/2fkcDIFj+PUGFaXzH0=","BnLZlfj/9kAVGz0pDO2vFIaQoQqMhCSn9uwoK25L6Cg=","CZlStBSIRFSyEgDX/6/dXwyancwG8nCOn8HYIJtcdbk=","BSy6IlXf0Ax8SDFDuo1GlEjkNYaptM2Rg/0OhDprn6Y=","C4ut7mkK246wvXRxK3mZr4LeVXByUa13Fgd8uTxGTdw=","EZsVkPEzB69aHuZRAgwHx0nBXWBoOoBQuWPQqOSyvdE=","AxULfNbV0XslKdNr4PZ7gyxKz8iE707lzhW+C/tKjQk=","LMYYLF4UVG488ZUfFzkSNVN077g9gImKvmnLMXyepWU=","AFAyVR5jeMRQz+EppASzdkIYyt7awU4rktLNcxEb8Pk=","IzI34yibqjS7FH6XLry5UWRpw5n8wGn7iPnaLMKCdrU=","Bcj09OvUpuPJgNMWdL++YyMDfyGzSuWk6AwtTCTWAoA=","CnsdsTBC05a6BdgYoxnyUlK8817zru2R7h8JslkPxls=","KnO3H5shDPWxQpZXLJ0y2/FW4rCG/0fcXfVCNlpATsA=","GsmwQXq8yaGTUQfp/8kdw+wY8sTb5/Ipdqdgu1xQxGA=","EsAzmuCDdII/q7B2cH70eSafPk1ssQQ0kBXuBG3JP8A=","C3R1sQKhZa1/WxjbTh5wT1KQCqMlO6rGgkZoLlbpoo4=","A3woSeGRyj7bHF5J9ui4kXyEPjeTZvLqMqs6qI1/hEg=","BaaBH4VW8BTpJnRmHiF+m9UgbFyToH3BRf2xdqcWNG8=","KaeV59mAKJRulHt11U6fBEB26Hp7KIO0e2de9fOL1m4=","IEOaDISzIutFo4V6/Bj1gm6Mc4LIoVhcUHvhmZgf0i8=","Lguo2U2ez0qU7CBQxzcf8btQ8neZqEttSipvKgmCyIc=","FD/RFc4I+yfKOOt8zoIrRReCLNIQkEjS5tDdzKF9ccg=","DGTL7LHHNLhXlo273PgTzfhhFlkyPby/yEMjYjvpyvE=","AoowWEfGg/ZG/KklwWP/WudPNI1iwrZw8UJs75QD2lM=","Lk71EP8Lb9pfqUCrTEOA8mpry2TYlCe4JNZ1W1254ww=","AIHJW8QzhOZj15JwyVbOO4kltPbQM7B4uWOE9QV5QA4=","LtXwyRy9l0kYfi+t5ofgXuJJGzScA5oLuoqfQCOguzg=","MFCZkfiNo1BLvzdO1ari8DRIoix2I0yMmQ8B8zpzUgY=","HD8g/VVAmlMiG3xNSaNWufChEZ+yBntBp1KQlEJOxq0=","ELTn86td8AMElRRFm24Y7sRrsiE+jhMeFwiHtH3cuWw=","KhmCl5w/9/Q93VQ9iRwqvd2A+ATAd9d1A5qjUC5Dre8=","HHTuZPFeHbb+3b6tVtbVXbpDHrw5bJr5XK0PExW9XJE=","B1M+yFC6f5jquTA8rOAbS55PLouCcIz6nC/kWgrhRqA=","IVdrQ45QBEmhUeTurxexVChcaPQtQsGAihGr83ZMB1A=","LxfAVZuP55YIrVyhk9YvELzoOEyBXwkGdD1pMINtSp4=","LUd+OGLQdwinnoqulGFwvJd1pCATGEdK5mWwsbficw4=","Fi9SQ5ZwZMOQ4JVXeYTyka+6ImbDj1q82Jvg9bJ0fqs=","K0yyM+3pukgmTs0siuUNGteoWWqH8p+Kd3enAJI5MxE=","LI+8st2Fc9wduvj0YihUd22y7s5thcTPQlTnw14DsHo=","HW80dyXkgWry/0U/DNVrGZ4bYen2Aemt5eiNuHCUnak=","IEsMOX9OvnHrwtiz31uRPfnmrAK2jTEyTNSa9cRWVSk=","DEy53DxP2BdPEUmzxjw8L57LgnzX3CVTT/j7dbx5xQI=","F0rWGhRIyJmiVBZHT0kwMB5cSUdSeeBjmmFt3EW8e1Q=","GpYXe89NjYn3Wd9OwvPN4uqqKMF3zA+hOpgW1Jo40u8=","Bm0EskMx1xzQ74BUvGDE/wUgLBJqIzwagkKs42C4owo=","KkxPxuwLDPUhlXgoccbdOzgcxl9y4CrVJwN6Yqob2AQ=","E6stE2zPN9RH6fLhSnztyV5yf4RG9tnX5Vr8ASGf1kk=","ESFVL8omBhYZ0k2EPcgnacGwT87Cb1UZTC4+hprMapo=","AO9lMyKxPWyIm8gXFcN9d6bNJn1ZXEqJCaVUbHyXz/E=","DiVIPkWmZSCLJh2Lp0BR5kAMd21lJZXZhFrKNdijl9M=","KfU23LnddoIkUmRlnhXYjjlaw9Td6S2MRkSNuXnuuok=","KlbvnyxT/rrf2jNXXb29iFoSTieAu+oXDkVrqs4Ppb4=","HINhx461z13s+3otF7XECfKuKZmkZ2Lo7kFiQKjLmvE=","FRr/XziyCg/ARzCJqvAga4Po5op2RQe/09CrS+dDGcU=","BMYYfkHtiB3BsjnIj3+dQ6n1L8jIts3R525HYVtR8QA=","E7N72A9NJ/sQ2EMx9vttU0uBxh7RV3ZEnoAbfdycKWc=","AaXFNic8LZ31eL+9MsF7eizjZkwqUgMskyHOscToqOQ=","KrNWGDTKc4Na0F9desuVC0qaLGZrlybagyI5Blt8OwI=","HU2OwpHnINsgD+bWhsDWE6yvavTpXTv2n37VFqWXtkY=","BBKU0sxITSKPV4T+eRn9K7klNRJAoEtxFRTJyAtlrx0=","FUrJjgFwjGEcT6cVmR8ASJj1eTnRJuOSBClx3ZDoH8Y=","CzOdisyn1Pg+7dhAk671EFCzaEyI+LCwRSRWO8bqTaQ=","CVXknmYQyUJUpPhM+6s0RZjw5x6v9Kfdge2VtQg5yC4=","BnRqYVbrpUQmueIiBvFavKmm9B5vU1xvNSVAHqBlRiY=","Dxj1oOzRQjxJbzggxUnCeDjleQ4r0KGWrJF8f/Mgd/s=","BPbuyhdR9zCKxZ7/W+smHku1Y1g+3nvJKnOCI9b3bhM=","K1aXM2TExPXBo+xNo83OA4gR6xFvs+RbwXaNJvwLN1g=","Ejdp3UnVsFTc12uJgEsby44TkrOFcWpdg/62XUN/Ke8=","IUe0JPxIyAqI7lK5EWmqzqmJ9kRkcRUJlCV7L7AcY+k=","D9wfWFSLhXAabFUF6jMqKWR+bzStQkPC6lStiXzr5U0=","Ejc6glH+oATfaKvPD3eG1Lzv8oxdu+DDlE9oXMCgsfI=","IeT06l81+FutfqUv90LJ6KZCdWtq9EID3YofNcGpADU=","FiQ5FtadLKPftHIiJNTEYrVzZkkvRekNioGTTxvDsUc=","HvvkbdeleLT2b5rbyItDeKvCFWbhoEU8oTpBWcrASsI=","B+pehTfPXdCIhgIOI6fzh9Ro1VJb5m+FO2csyWqIlpo=","BajE+ZaLiqO3tHijD5pbY2UPGadefOEcqf4WwLdsALw=","IPBXcSzCFlT7/lm9NF6NrD94GMcBuceILZ1Xtyoy6D8=","BKEu3tqd/WiWcvjGf+4xY23NjojQHUkBm9kLM+sz22k=","J+iNjBXzfc7kTx5UJaUd7L0TbOUJGmdn5J7JVEzNEBo=","L+7Re4QoXtm4pcjF6VpB9m4JZhmncDIjF2xB7kM95NE=","HtfMdu30XHxAQkFCD3Kc85TllCkRMSoNaXK4vVOv8rg=","FXQumbm/oyMVf/jFhvVmDqxng0dhRM3K3yh0vkVGaxo=","GqwoU4f2XoLIlfxoh930BXcQdFTG7AMXKE8DPyfQx4U=","JYUcPIRdR5D53a29tgVzV4MuLnpJd19x7HWpZVTWfHc=","FaWCFWXMLsLOeEV9sZft81O367osVSM3DdzMPZ8Uamc=","JBHVekgTuZgO+n4xodtZZtz2TzYEQndQLxVIXyjHFyc=","AC5vjWUgzUcT4zW4wLbS5kfpqY4S9M0lWIKLXvbLTJs=","L/e8j0OAzemX2gC2FrD80a+PDpHi/h7XOYg0YJ4DFdI=","ALmDG5SFJVle4CckRxvNGC6VIfa3u2jx6Tvk/rsNPL4=","Ci9TdouOv2qGkTsOV8BOARykCGSKR0OofXetvwycNRI=","ACSBVhQv0Dc6R5+R/yOelg9Zn/fpS+abfyopAwXhGY0=","Fx1WILh7+xMoz4wCqz8MmjlxlqpqVCwjUOtRKisrzak=","FwpPVVNvfclwCHx8ENb612DJUhct1U3ZnRBF5Ow0qAg=","KaujP3mf5mwu8xNK6gQzbsw344wc0hG6SC7KF+Lb+uE=","HpvBeaT911j90bsZRQiNR+cNEUoD9qDotbplA2nmSXM=","HdJpeZtmD61Y9/SJLfsLWv6q2GmpxLRPnJ4cQ72vjwk=","Is28i3ARetFAEYHQLhVFnnzNQm/oacfJXR3Syw8krzg=","DvBC5FR3HFM6n1elXFA/zv0xUPUu2Up81bqTucfazv0=","EWCeBq1sj+Lyh/MDYDfohRMY6LCKA1mgOzBP/KYugoQ=","EWbZ5VRhbbqedT7qQnwXt/7NWMB23+QnCLCPW3g6qa8=","LeUpiUMahZWTQTAmNUQT2xd/v0zSrAtW+FWoiDV+5GY=","MAbrT/x6hYGabaSS86isHfUa7lsXuOiddL8Bz19x6a0=","KvQfu2G6ioD9z2//nj9vQimT/o8KRjn5YjRMgiUUUIY=","EZ5oTeR2FV/lprQajryF24cYqyeInoXngbIUus5IJ8M=","GDW3huLokl4Yi+pZrjY1N7USSMI4KPBHz/eEuXs/2AA=","KCAaNMWU36NNeUmWxkM6INFSusKnkFySbEDihasy7rY=","CD79eifRdRCU6A/vr3iwAIZMgutXEYdySnYfiMIsxOc=","C2+Io1dxmVJhWOYc7qJ76BHBbfd3TdhRngeVZPYf0Ts=","Dsho5tFeUdlkT2bh1kcalFiVEcoA0p4QFDkObuQlT1s=","KvM+P4ZncScawMmz7S4RQuzT50uTnNQNANk3q4TJhZE=","C1ICEfkEtefQm12WHGrOdzRWjFR91oWLNkzl5HlR8Xg=","Cy1yLQkZoarY21jxAGKpLqDFasQnDoIsyiKGIBiKHUA=","H3kNTX+M8JTZgM6zfCRT6Ve1SpmRyji74AYdHtblYtQ=","AXHrld+/fR6uqXzThfeAFQiFwWI1oqao2pLOsB5QQjM=","DC0OO1/VdUkym/aIXaZrm3kLQN79LIZQdiMFOBsWiHM=","EWL7KGicJxVOWoIotOcrN3y8r6WJ4oPDXTgDBUQHoY0=","LxRZtl3uRBtkrThqkegxDygsWpKonhmSFiPvgklxG8A=","Hm/zIWtojD2ZbXQ2fVzUwbxInUZ1TrcSwkP3DRtTz7s=","AcqL5zgyuNBoFIfSfRV4AtdBpvNs3CoFdogfkyZHiHU=","H3c1cG/+n8WG+XbVvfIj3GgChggLEM6gC5td4xX5ZQ4=","JSK2D06jMHZAoMLc4EH7qSGsEKPV8JbvR0XKg4KF8Bk=","I/C+4AGxAp1SVQdd3JV/gzQYytT1K2w/jOFsI1VyV1s=","K8Gui43buB/KrC1EVV7VaF0UJjPp35BfZtlAEJMILVk=","D5QGuCllZKNzBFB7jbo+0WI3EnOgex/JgBH81q1yIF8=","I2Co6wzH3vpntymY3pBxThfnWxdKUu5KyxJsjNmV8Kg=","FYcaXN3q2XaATIA8uu8lXrSBWl6W34sAbcu8J2f4iUg=","GTpWdmmY7p4KhlLdLzsdoDYvT1T3I3lUT5V8ze77Qg8=","KjlKQ5NPhpgvm+Vv9PqxcDsuY8itM0g05DCYBed3rg8=","GFmVTP64aV8+i2NdyzRRkoks0RIjRDuntBZuiHbA0UI=","BOEYF2MFDlgBNETby5nxkCsRvCXZC73KQI04GfT+0ys=","D9slPe6Dhp1AwzXqZN6MW7EOuC2wi16LH15VUr/QXyM=","BYy+ippQJ72qTvtiOt6tYnXwhobxwImEqdfFuum08cA=","E4Ltzplx4YZJfq2xrrH1KyO0uDvvAjqw0VIotMzspZo=","A0ZJkPBFxu4IGcpR/RGwvn9huOuZ8Ut34eZjRgHZ6LU=","I/e/yHINwpb/8ztB+Y/4PG/KtGBdsutaqlvBN663Clg=","ClmhWOPuwhF+bpTn8OnezxjD/9XhUxqSGWNhWLuvYvI=","BuxUyAOBwFK1i/I7MS/9POLE66BlQgr49MI+0Adf0Hs=","EYhy3IMuDrVHa1ZkjoZ+yLCTQPenvLG0li8P+e0fnQE=","E9afoSfYNBZa1cfLp61Z7VLgsPDkLX/qleGQa1IJIbE=","FpoXf2PqaBJwscaHenPSG94UOUL7cdxV/YpJ8Z8Qx3s=","BO9RWRxurZfvQvKHrc5A2Tq+sDK5IvZv+36aWnRQVE0=","JW4XWh3AeTkOzXynA/suOxnsYYBdTwPO1fRe5t0Paew=","MBAtKGNqvV/l8q9BL/YAT3XMNg0yBd0toAKBPT4s7rI=","EJmOQt/NO78cBxS8c+sb9ARDo/qZvvSjH9Mb4YL8x5I=","GT7djp/PPXYl+n0ktZih2J8zYur01YLv7K12+HnjaGA=","GBaK/TTy2RXQNozoC3szR9HHpWHOYRQl8mZNeqUfC10=","KTg8AevTtqsMAXZW6+ZYtqMo7He8M2JuKeLpWzPqYRE=","EGRtLyYD3jmh9K5ed3GmSnAttuhvt2q2AL9XP5AQxxE=","C+teB9GycUX1dfE5WlW/Ey+QwltA2ns4ZNAkLcsRF/s=","FtaFJSB4wTPcDT7K1itciDD5W7LlS1mr3/vwGNlvozY=","Cmq9HYM5OPM8dBVOBAS0tApVW7vsId36/Wct1iBH8Bo=","GmefXTbre1yOoSpMLe3I/rEt/+7EUDFycKbxmzTPGGA=","CYD7IzvUVsI5dNUODr/eRyakI+raTo9v+8dZLj8bk9Y=","FhtCIy5huEy/GBCvk6OPwM7OPVYoySggA+ustcMSxys=","CtoQqQx/BSCVD31Hpg1eakk/CXh/FWTl0JID20feGgs=","GnMNNyMQuoIyA0WimsQjjtPweoorThIbtQ3bmvQH9FE=","LIEg8mjvBU+BcGTDad2n6pCDd/6rpcTf+9oQ71joxVY=","HHyIJPdYdT+lfAB4nGhCF7kw6VMTvLc+bnuGSaSWj3A=","LNntMfX4aRyOOeQHenT6oPQArYtJHrP3tHsn+j/Rz3c=","I/9PnUaBNFfPYNkvV2GDmaXgIqwyHKVQhUriORiiLuo=","CZRaXRR6T2bO7OZAXd3Z0K9aLFEDUpQH3/HqWPGAQm0=","GI2cUoAl1MK2dmDGt3G5D3x9puqinT8mim3SI+xvxjA=","MFDjeZZZa3+B9oMRQx2HNNun2SbTYzWV4MDY3fTw9H8=","Fa8RaTloMKkWAMqBAsNcQmzq5UYeP5XYnYKVGNMK/Xg=","HabQmIVDLqmgbZ83+HPZhdrpM+NRRmspBChNozINisw=","J5bqkNJpryn1+KzzOSESTk5PrT2+ZYlF5UbuQR3aqcs=","IC190doPa0sDJcizMHdC8B4VYS7I6TBKfLAxngHTLWA=","CW1nkNBbt1kVapUromPWcqLX+ceI9Mgxop2s5MD4vl8=","BU76H2Ww/OKDgIllJ12He0ONojzlsT4ZY3mMsUR9JaQ=","GxYvg9kX6T7bMwjCmALeudiqaQETsuFIZMz24Y5BZfE=","IeUkHhJWTdb9nxzdKg3jnu3+/BRmzFaOxc63RaBQbtw=","HPtWYujPWskiaoDuF7Nqvstzq1+H4WGSe0NJ4Q5L3wg=","DyEXfjAqdxu65tjR7LNztiyZrzRiIKwBKcU/Zm6yQQA=","FnFSI3RgaZKv+w3X9xsSvsQjau3mKQVGvO9+H1FcIyA=","D6PsW5SIJZwutM8kUBv62b4uyeQsXMjM1BnSppLK2HA=","GTwOBOC9KYNXyyZsFQYIDtNu3OhcZIzAhejFexq1S7o=","ECrfjvdHNaJ+kSgwbcvDyZ9vcpHNQGV4zhTqKtq6aPg=","D+CveFjkmFnipU1vGtlFsTFqokv73SOuQKbQy3DD6rE=","IW9nF7vH3tsIU2oiIIQ/Ti2l8dqp69796KXqc0R5jSI=","HaVcyQDw0h9KPmlDkZGKGzwjsqx3PGs++I4uQigyUWE="],M:[["EJt/QRug5MmytwyvXDansZS+fBGtJDeL/ttoWSuoEYs=","Fu1B4Tu5wMZq4RlCT928vJMU3J/b3upV1sZFQ9xJA+A=","K5C7oA/KBYn2F+fcv+guDfcGq2QM6yR7eRqTt042c20="],["KWnyfu0xpIC5w2x2Q3nbyizI/dFBXD3e1ilAvN4L13E=","LiQZ+ewC7DlMmHHIMpY9wbiddDyMe5ZAKbIxFoex/iM=","EBBx8AMjebaXMVh2aQ8FPRSNThCfX7BlyKrMVaD4m/o="],["FDAh7GhqPzMNX55lRjgGXObNeeKMWzdTMmJE7mWhsac=","F2zAKWla0CWCpw7/CKb9mdBX4S5Y59e2sWzfq8juKRE=","GaP8ClZwK/QXun/uOAJZP6ZERwMHBD93cyec1x0l1eA="]]};_2.default=_default$e;Object.defineProperty(poseidon2$1,"__esModule",{value:!0});poseidon2$1.poseidon2=poseidon2;var _poseidon$e=_interopRequireDefault$e(poseidon_1),_unstringify$e=_interopRequireDefault$e(unstringify),_$j=_interopRequireDefault$e(_2);function _interopRequireDefault$e(he){return he&&he.__esModule?he:{default:he}}const c$k=(0,_unstringify$e.default)(_$j.default);function poseidon2(he){return(0,_poseidon$e.default)(he,c$k)}var poseidon3$1={},_3={};Object.defineProperty(_3,"__esModule",{value:!0});_3.default=void 0;var _default$d={C:["GbhJ9pRQsGhI2h05vV5KQwK7hnRO3CYjiwh44mntI+U=","Jl3f4SfdUb1yOTR7dY8KEyDrLMdFCswdrUf4DI3PNNY=","GZdQ7EcvGAng9mpUXh5RYkEIrIRQFcKqPfw2urSX2Ko=","FX/z/mWscggRDwal90MCsU10PqJQZ/D/0DL3h8fxzfg=","LknEPEVp3Zxf01rEX8oz8QsVxZBpL4vu/hj0iWrJSQI=","DjX7iZgYkFINSu8rbWUGw8svC2lzwk+oJzE0X/otHx4=","JRrUfLFcTxEF8QmuXpRPG6nZ54BtZn/+xv5yMALguZY=","E9oH3GTUKDaYc+lxYCNGQfi+tW/dBeXzVj+jnZwi304=","DACbhOZQ5tI9wAx9zO90g6VTk5aJ01DNRue4kFX9Rzg=","AR8WscY6hU8BmS45VvQtiwTrZQxtU16wID3sdL79ygY=","DtaeXjg6aI8gnZpWHap5YS8/eNBGetRUhd8HCT82dUk=","BNupSnsM6eIhrK1BRytrvjrsUH9es9M/RjZyJkyfeJs=","Cj8mN9hA86FusJQnHJ0je2A2dX1LtQv3znMv8dT6KOg=","JZpmbxKe6hmPihxQL9s4+jmx8HVWlWS25UpIXRGCMj8=","KL90Wcmy9MbY59BqTuOkf3dF1CcQOOUVejL99+3g1qE=","ChypQfBXA3Um6iAPSJvo1MN8hbvM5qKu7JG9aUFDJEc=","DG+PlYvg6TBT1/1PxUUShVU17RU58FHctDom/ZJjYc8=","EjEGqTzRdXjUJugSisnZCqnooAcI4pbghN1X5pyq+BE=","JuG6Uq2Shdl906tS+OhACF6PqD/x6PGHewdIZ80t7nU=","HLVcrXvRM94YpkxcR7nJfL5Ni3v54JWGRHFTfmpK4sU=","Hc1z5GrNj44OLHzgS95/bSpTBD1QYKQccUPwjm6QVdA=","ARAD4y9tnGb1hS8FR0pN7wzaKUoOtOm5sSubtFEuVXQ=","Kx6AmsHRCrKa1fINA6V9/rrf5ZA/WLr+18UI3SKHrow=","JTneF4W3NZmftNrDXuF+0O+ZXQWrL8X66qaa6HvOwKU=","DCRsWi747gEmSX8iKz4KDvThw9QchtRuQ5gssR13lR0=","GSCJxJdPaOlUCBSPfAYy7bsJ5qatGhwvPwMF9dA7Uns=","Hq4K2KtosvBqDuNu6w0MBYUpCX2RCWt1bY/cL7WmDYU=","F5GQ5dDiIXnkb4KChyq8iNtuL9wN7pnml2i9mMXQa/s=","KbueLJB2cyV26agcesS4MhRSj32wDzG/bK/nlKmzzRw=","Il05TkIgdZlAPv0MJGSpDVJlJkWIKqw1sQ5ZDm5pHgg=","BkdgYjwlyM91PSOAVbREUyvhNVdFHAh94J79RUsj/Vk=","ELo6DgHfkuh/MBxLcW2KOU1n9L9Cp1wQkikQp49rW4c=","DgcL9T+EUbJPnG6WsMKoActRG8DCQuudNht3aT8hRxw=","G5TNYbBRsE3Tl1X/k4Iac8zWyxHSSR2Kp/khAU3iUvs=","HXyzm6+4x0ThSHh6LnAjD51OkX1XE7sFBIe1qn10Bws=","Lskxib0atPaRF9D+mAyA/4eFwpYYKfcBu3SsHzA7F9s=","LbNmv9020nemkruCW4YnW+rEBKGa4HqQgupGvYNReSY=","BiEA60hdsGJpZVzxhqaFMphSdUKEUDWa3JnOxpYHEbg=","B2HTPGZhSqpXDn8egkTKESAkP5L6WeT5AMVnv0H1pZs=","IPxBGhFNE5ksJwWqA04/MV14YIoPfeTM96cuSUhVrQ0=","JbXABKS9/LWt2exOmrIZuhAsZ+iz7/tfw6MPMXJQvFo=","I7GCLSeO1jKklOWPbfb17QOLGG2EdBVa2H59/2Kzf0s=","InNLTFw/lJNgbEupASSZvw8U0Tv8/MyqFhAqKcwvaeA=","JsDI/gnrMLfienTcM0kjR+W9/0Cao2ECVEE9P615XOU=","Bw3QzLa9e7rojqwD+h+7Jhlr4wg6gJgpu9Ym3zSMytk=","ErZZW9sym2+wQ7p4uyjDvsLApt5G2MWtYGfE6/1CUNo=","JI2X1/dig9Y77DDnpYdsEcBvypsnXGccXjPZW7fo1yk=","GjBtQ51GOwgW/G/WTMk5MYtF63Wd3eSqEG0V2b2bqqo=","KKj4Ny48ONrO18AEIctGIfTxtU3cJ4IbDWLT1ux8Vs8=","AJSXVxf5qKi7NRUvJNQylAcc4yDIKfOIvIUhg+Hizn4=","BNXuTDqnj32A/eYNcWSA01k/dNT2U66D9BAyRtsujWU=","Kmz16aoD1DNjSa1vuO0iace+9UuIIsx20ISVwS794Yc=","IwTTHqq5YLqSdNpD4Z3et/eSGAgI/W5Duq5I1+/Lo/M=","A/2ayGWksqbV5wCXhYFySb/win4HJvy04cEdOdGZ8LA=","ALclje1Su9oiSEBNVe5QRHmK/DogkZMHP3lU1NY7C2Q=","FZ+BraB3F5nsOPyi1L9l67E9OnTzKY2zYnLFymXpLZo=","HvkOZ0N/vIVQI3p1vCjju5AAEw6iXwxUceFEz0JkQx8=","HmX4OFFeX/AZa0mqQaLSVo33ObwXawjslaee2Cky4w0=","KxsEXe86FmzsbOdo0Hm6dLGMhE5XDh+CZXXBBoyUwz8=","CDLldTzrD/ZAJUOxEJIpwWXcLXO+9xXj8cbgfBaLsXM=","AvYU6c7fs9xrdirgo31BurG4QcLotkUbxajjw5C2rRY=","DiQn04vUamDdZAuONiytlnNw67d3vt/0D2oL4n5+1wU=","BJNjC3xnC23rfITUFOfOeQSfDsCYw8fFB2i74pIUpTo=","IurRAOjkgmdN7NqxcGbFomuxUVNV1UYaPcBsyFMnzqk=","JbPlbmVbQs2q4mJu0lVNSFg/GuNWJtBN5QhOC20qbxY=","HjJ1KtqINu9YN6bN6P8T27WZwzY0nkxYS0/cCgz2+dA=","L6KoccFaOHzFD2j288NFWyPACZXwUHj2cqmGQHTUEuU=","L1abippEJMknjh23MR6In1TMvxBmG6t/zRjnx6fYNQU=","BEy0VREKj91TGt5TAjTFGKffk/czL/0hRBZTdLJGtD0=","IngI3pOQbV1CAkYVfy5CsZH+jJCt/hGBeN3HI6UxkCU=","AvzKKTTgRrxiOt6thzV5hl0DeBrgkK1KhXnS56aAA1U=","DvkV8KwSC4dqvMzrNEodNrrT88Wrkajdy+wuBg2L76w=","F5cTD0t6Phd363V7xvKH9qsPuF9r5jsJ87Fu8rFAXTg=","CnYiXcBBcK4zBshaurWeYIx/SXwgFW1NNsZoVV3sxuU=","H/+57BmS1muh53p7kyCa9vj6dtSKy2ZHlhdLUyajGlw=","JXIcT8FaPyhTtXwzj6U42F+Pu6bGucYJBhGIm3l7nF8=","DIF/1C1fekEhXj0HuhlyFq20w3kHBdqV62O5gr/K91o=","E6vj9SOZFdOffhPCwklwtt+M+GzgCiIAK8FYZuUrWpY=","IQb+6lRiJOoS7385mHpGyFwbw9wpvb16ks1grLTTkc4=","IcqFlGinRraqp5R0o32rSfHKWijHSLxxV+GzNFuw+Vk=","BczWJVwebwxc8fDfk0GUxikR0U0DIWYqjxpImZ40GFs=","Dw40pktwpibkZNhGZ0xMiBbE+yZ/5E/m6ihnjLCUkKQ=","BVhTGk4lRwxhV3lMo20Olkfb/P41DWSDj1saii3g1L8=","CdPcqRc+0vrO6hJRV2g9GJJMra0/ZVpgty9YZJYfFFU=","AyjL1U6MCRNJP4Zu0D0hi/I/ktaKrsSGF9THIuW9QzU=","K/ByFuKv8KIjpIexpwlOB+eee8yXmMZI7jNH3VMp00s=","Ha80WlgAa3NkmcWDy3bDFtb3jtam3/yCER4Rpj/kEt8=","F2VjRyRWqqdGtpTGDhgjYR7zkDmy7cf/OR5vIpPSxAQ=","LvHg+tnwjoeju15H1+M1OMqWTSt9EIPU+wIlA1vT+Ns=","ImybGvlbq88XsrH1fHMQF5wYA97Fro8KF3ntNsgXrio=","FLzjVJzD23QoEmtMOhWuD/gUjInxP7NdNXNOtdStDe8=","Lev/FW4na7V0LDNz8mNbSLjpI9MB83L45VDP1ANCEsc=","LUCDz1qH9bb8I5WyLjVrZEGv4baynEet19BDLR1HYMc=","DCJbe80Ev5w0uREmL9ycG5G/eaEMAYTYnDF8U9cWHCk=","AxUhadTz0G7DOnm/rJGgLJmqAgDbZtWqe4NSZfnJyPM=","C2GBGpIQvniwWXRYdIbVi93I9Rv9/ru4ev6LeqfTGZw=","ID4ADK0pjar366alxZIYeLiuSKz3BI8WBG1jelM7b3g=","GkS/CTfHItE3ZnK2n2yWVbp+44b9oREsB1cUPRv6kUY=","A3a0+uCMsD01AK/sGh9WrLjg/edaIQbXAC9ZxWEdTao=","AHgK8socrWRlohcSUP38Mtb8JB0yFBd/PVU+82MYIYU=","EHdNmrgMJb3rgIvt/XKo2bddvhjVIhyH6dhXB5vcMdU=","ENxunABuo4sEseA7S9lJDA0D+Ykpyh1/tWgh/RnTtug=","AFRLgzh5FRiyx2RaUDknmLIfdbtg41lhcAZ9ABQcrBY=","IiwBF1cYOG8uLoLrEieJ41LhBaO4+oUmE7xTRDPuQow=","KEDQRem8IrJZz7iBGx4PRbd/e9t/fitGFRoUMPYI48U=","BidS+G7r4RoAnJN+RowzWwRVRXTCmQGWUI4B+lhgGGs=","BgQb2sSCBayHrbh8IKR4pxyZUMEqgLwKVajoPqrwR0Y=","BKUz8jbEItH/kAo2iUmwAix6KuCS8wjYKx3Lv1H1AA0=","E+MdemcjL9gR1qlVs9TyXf4GbR59wz3wS95QorLQWyo=","ARwmg66R6037wT1jV+hZmpJ50WSP8sldL3mQW7E5IPE=","Cw0hk0a4V0UlsaJw4LTLpdVsko4+LCvQoeyu0BWq9q4=","FKveyNucbclwKR7mOGkCCbZQgHge+f0T2Ex6cmtfE2Q=","GgtwtLJv3Cj80yqj0mZHiAHrEiAu9HztmI0DdmEL4QY=","J4VDch+W0TB7aUP5gE5/5WQB3rLvmcTRJwSILnJ4tgc=","FutZSUqXds9XhmIU29FHPz8HOKMlY42Lo2U14BHVglk=","JWemWKgf+0RPJACI+lUkxpqeU+6ra3+MQcNHnc+MZEo=","KaodfBUemtCnqznxq9nPd6t44CFaVxWmuIKt6EC7E9g=","FcCRIz5g7+DUu/zis2QVAGpPAX+ahTiM4ga5H5nyyYQ=","Fr19Iv+Fjl4IgsLJmVWNd+dnOtXxkV+f62eagRXwFM8=","AttQSAoHvg6ywuE+1u9AdMAYLZtmi44I/+Z2klAEICU=","BeSiIOajvJ97aAbsnWzboYYzDvK/ettME7qGY0O3MRk=","HdoF68MBcLyYy/Kl7jtQ6LX3C8Qk05+kEE038cvPekI=","AYS+9yGIgYf2Rbb+42Z/PJHaIUQU2JulzTAfIrDeiZA=","FJijB+aJAAZfXoJ29irvHDdBS4RJThV3rRptZDQbeOw=","JfQPgrMdrMT0k5gAudLD6s73N7j6sfhk/jNUitRr1J0=","CdMXzGcCUZQ/b1hiow0uqegwVs5JB7+7yx/zHOW7llA=","L3fXd4bZebI7pM5KTBs70KQRMs1GeoarKbkTts8xSdA=","D1Pa/VNan0Rz3CZrb8zGhBu9M2lj8lTBUvieeF9ym78=","JcH9cuIjBFJlw6CZ4XUm+g5pduHAC68W3pbehd7vL6I=","KpAsiYDBf6rjaNOF1S0WvkGvlchOrqPPiT5l1s5Kj2I=","HOFYCjRS7PMCh4yJdrgr6WZ23RFNHcjSVSdAV2L4NSk=","JKYHP5Gt3DOkmh+jBt8AiAHF7FaWCQNNL8UPfw9NAFY=","JeUtvWEkUw2fwn/jBtcdRYPgfKVUtdFXfyVsaLC+K3Q=","I9/648Qj+nqTRo28z7AphVl0vk0KeymUZ5blts1w8V0=","BjQto3DMDYxJt3WU9rAnxIBhXVC+NiQ6mVkbyZJO1vU=","J1QRQoEoZUa3XwnxFfx1G0d4MD0EBcG0zH3w2On2OSU=","FcGehTTFwaiGLCvB0Rnt3qvyFBU4M9e9tZ7hl/gYfPU=","Jl/gYnZtCPq0x40NnvPKvjZvO+CoIQYWebSz0td9Xz4=","E8z2idZ6PsnyLLfNCsOjJ9N3rFzQFG8Ejev9CY0+x74=","F2YvdFZ4lzn4HNOXSCeoh9kqXgW98/5rn7zMpFJKrr0=","IbKcdjKbMcjvGGMeUV9/L4LKalzKcM7k6An9YkvnrV0=","GBN0eDgqrbpEHrl/4nkBmJwGc4FlIVMZk56xewH6l1w=","K8B+or+taOjcck9f7ys3wtNPdhk1/9O3Oc7sRmjzfog=","LdsuN29U1kpWOEBIDfmT/rQXMgPCvZStDmAgd675oD4=","J361DyuqcGEGtByyTGAmCeiiD41y9hNwitslNzWWw/c=","DU3kfhq6NCadDGIJBPAaVrM/xLRQwNtQu3+Hc0yaH+U=","C4RCv+nkobRChnO2vT7qb59EVpcFjxNKrpCNAnminww=","Ef5bGPu+oahuBpMMuJ99SibhhqZZRelldCR/3bcg+PU=","IkAm9t+vceJNJdj22fkAId9bd03K1NiDFw5K2JwzoNY=","CyymqZn+aIfgcE2tWNA0ZalryeN9EJH2G8n5xiu+uCQ=","Ihtj1m8LRfnUDFQFOiigax0KTOQdNkeXoafgyWUp9CE=","MBhcSLey8dU9QSCAGwR9CHSTvOZNTSSu3OL0g2u4StQ=","I/XTcqPw48upieIjBWIn01MzVvD6pI8n+CZzGGMqYfA=","JxZoOzLHVf0b+CNeoWKx84jh4AkNBhYujm375DKPPjs=","CXdUWDaGb6IEyh2FPsCQnj0UB3DICsZ9yTDGl0jV1Lw=","FETo9ZK9v9gCXZGrSYLdQl9RaC0xRysF6BxDwPlDSzE=","JuBLZenKgnC+t0ocXLj+6L4/+/5YP3ASoA+HTncY++M=","IqXC+oYNEf407kelzZ+GmAD0j0/r4prW32mBb7GpFNI=","F0tU2ZB9j1xq/Wcqc49Cc37DOPOglkxin3R03UTFyNc=","HbHbiqRSg/MRaPpmaUzygI0hibh8jIFD1WyHGQezm4c=","FTC/D0ZSfoiQMLjHt9/eEm9l+vjM4KtmOHNB2BPRv9E=","C3P2E5kyKfWfAcHOyHYOmTbq2e3I8oFIiTMKLyut5Fc=","KcJaIv4hZGBFUqrqN39EjVh6uXf8gid4e9LcDza89B4=","KzDVPtF1m/uFA9pmySz0B3q+gnldwnKzd99X13yHVSY=","EvbXA7VwKqt7e35pNZ1TonVsCMhe3nInz18KKRZ4fNI=","JSDhgwCv2j9hpAoLiDcpOlWtAQcQKNSEH/qaxwY2QRM=","Hsna6oYJcezdqO1PNG+pZ6ybxZJ4J3OTxo8J+gO4uV8=","Cpmz4XjbLi5DL1zVvvj+RIO/XL9w7UB8CKriS4MK1yU=","B82p5j22458Ia4m2AcK75AfuCrrDyBehMXq618V3hJI=","CMnGWk+VXolS1XGxkbsK20m9gpCWMgOzXUiqs4+Pw6M=","Jzf4zh1aZ7NJWQ3b+9cJ7Zr1Sio/JxnTOAHJwXvdnJ4=","EEmmxl/wGfDSh3AHJ5jot5CUMr0MEpgTqfF5umJ/fWo=","GLT+locyxGLA6lqb6yfOy96IaJRP32TuYKUSI2Ha7ds=","L/K2/SLfSdJECy6u7vqMAqb0eM/PEfGypPdHNIOIXRk=","LsXy8ZKP6TLlbHibj2u8s+i+QFfL2NvRihs1L1zvQv8=","JlpezNi5KXXjOtn3W/NCbUJKTGp3lO4/CMHRADeOVF4=","JAXqpMC94RKdYkK7WtoOaHeOZWz8s2a/IFF9od/UJ5w=","CUyX2MGUxC6IAYAEy78rxf21GVXYstZrdt2Yotv2BBc=","LDDV8zuzLFwiuZeaYFv2TVCLcFIh5qaGMwyWJcKv4Lg=","AadWZvYkH2gl0BzG3LFiLUiG6lg+hymeaqL8cW/bbPU=","CjKQ6DmBE+pNEqwJHoe+fG01mrmmaXn89Hvy6H04L8s=","FUrenKNuJo3+s4RhQluw2MMSGdj6Dfx17NIb9pqgzHQ=","J6qNPiU4DAsbFy15xvIu7pkjHvXcadjcE6S1CV0Ch3I=","LPQFHmyrSDAaiy47ymCZ11a730ha+h9UnTlbvL2AZGE=","MB5w9ynzyUsdP1F93/nyAVEx/quK+l7rsIQ9f4SyPnE=","KYvrZPgS0l2LTZYgNHqwIzLcTO8ROuYNF6jXpMkfg7w=","GzYucqX4R/hNA/0pHDxHHtHBShWyIWgKzxGj8C5GqpU=","DciiFGEQwLN1QykCmZIj1aoe9ueOHl68vB2bpB3Bxzc=","CkhmOzTOXhwF3JMJLLaXeMshcppy3cA6CK+h65Iv8nk=","Coc5H7HNjN9glrZKgvnpXw/kbxQ7cC10VFuzFIgQmO4=","G1spRvfCiXXwUS/45so2L4gm7dfqnCnzgrqKKgiS/V0=","AQAc9RKsJB1H6+Ijkhm8ahc6i7y4pbmHtOrB9TMxW2s=","L9l3xw9kXbT3BPp9dpPacnrAk9P7X1/rxyvrF9g1ijI=","I8ADmj+rStPC18xogWTznnYdU1XAVETZm+djqXeTqcQ=","GdQ+4MYIHAUsnA32Fh6qwa7DVs9DWIjnnyfyL/A/ol0=","LZsQwvLnrBr93M/9lKVjAovym2RtAggwkZ+dXKHO/lk=","JFfKbC8qow7Efkr/Wmb1zieZKD4Wb8gc2uLyufg+Qmc=","Crw5L+he2oVYIFkkRQlAIoEe6Gdu1vDDBE37VKfBCzU=","GdLMXKVJ0dQM68038+pU8xFhrDmTrPMQHSwrww6sHrA=","D5euMDP/oBYIqvsmrhPNOT7g5OwEG6ZEo9OrVG6Yycg=","FtvHj9KLf7gmDkBM8dQnp/oVU36k4WjoihZkluiM/so=","JA+vKPEUmbkW8IX3O8TyLu+DROV2+K09GCeCA2bV4Hs=","Chuwdao3/wz+bIUx5V4XcOq6gIyP222/RvjKtY2e8a8=","LkfhXqSkf/GmqFOq86ZEyjjVsIWsEEL9xKcFp84In00=","Fm5b8HM3g0iGDKSpwJ054Wc6sFmTX03zX7FFKDdXcrY=","GLQtf/3S6k+vI1kC8FeidAyszNAnIzAB7RD5ZTjwkW8=","CJyxsDIjj15JFHiOPjx+rU/DaAILPtOCId6rEFHDdwI=","JCrNPrOi9yuvfHB23RZa34n5M5x7lxkh2ecIY0Ud2NE=","F0+7EEpO4wK/R/K9gvzolurJoGgoPzJkdK+GBFckXDs=","FzQOcdlvRm1h8wWM4JLGfSiR+yuzGGE/eAwnX+ERbGs=","Ho5ArIU7fULwDy44OYLQJPCYufj9RVlTov04DE339rI=","BSmJjcBkmQfh1NXihLjRB1GYxVytZuipv0D5KTji6WE=","IWJ1TbC6oDC/feW7eXNk3OjHeqAX7h179l8hxNTl348=","EsdVNpjEv2886yUK4AxYwqn5KR773kyEIb70R0F1LsY=","KSZD47ogJq/8uMUnkxO9UaczyTNT6dnHnLcjE2UmUI4=","AMzxPgy2+dgdUpUb6pkL1bbAfF2Y5m/3HbbnTVuH0Vg=","GF0eIOI7CRfdZUEozy86qrZyOHPLMPwisPhsFatkW0s=","FMYcg21V0990K98Rxg76GGd4494PAkwPE/5T+Nh2Th8=","DzVoQbP1Vvzl2+RoBFdpHCkZ4q9TAIGE0D7hGV1yRJ4=","G4/Z/zlxTgdd8ST4h79As4MUM3T9IIC6DAprbo+ls+g=","DoaowgCcFAyj+HOSTiqqFPw8iuBOnfCz6RA0GHlvYCQ=","LmxeiY9VR3cOVGKtky/N0jc/xDggyisWsIYUIeeRVcg=","BdeX8as2RyN8FPnR3wMryf+f4aDs03eXLOX9WgwBRgQ=","KaMRBGOlqudsPRUodZgdDB2vLc1lUZ71yokphR2owAg=","KXTae8B0MiJzw6S5HAU1TNxxZAqLvR+GS3MvgWOIMxQ=","HtD7BmmbokmyowYhwF6xLKKcuRqggsi/zOnFIoibR9w=","HHk+8NzFESNlT/JtjYY/7q4p6MVy7KkS2AyK425A/ps=","HmqsHG090xV5ViV9PSNO8YyR6CWJp4Fp+7Sodwl33C8=","GiCtp1diNO7mJz3W+piyXtA3dICApH2Uj82jMlb7a/U=","GRAz1thc6qb8epojpv2ZlmQtdyBF7OUTNdSTBnKK+Ww=","AG5Zedp+fvU6glqm/dw6v8dvIAs3QLiyMu9IH10GKXs=","Cw1+acZRkQu+8+aNQX6foPvVf1lsjymDHv+MAXTNsG0=","Jcr1sMG5O8UWQ17AhOLs1ErEbbuwM8URLEsgolyc350=","EsHqiSzDHg2a+LeW2WRYcvf3dELWL9TICFsvFQ9yRyo=","Fq8paVFXq6m4u+Ov6yRf7uWpKdn5KLm4Heba3HjDKq4=","ATbfRXyAWI3Wh/svO+GGkXBbh+xaTP3BaNMQhCVrZ9w=","FjmijFtMgRZq6phPum5xR54Hse+8dENNuVooUGDnsIk=","A9Yvv4L9HUMT+OZQ9YfsBoFsKLcAvcUPfiMr2bXKm3Y=","Ea7rUn3IzkS00Uqt3KPP4vd6HkD8bal8JJgw3h7f3lQ=","E/m5pBJ0EpR5xeYTjGyO42pnDmvGjHpJZCtkWAe/yCQ=","Dkdy+j11F53ISEzSbHwfY13e7tepOUQMUGyui3680Vs=","GzmgDLyB5CfeS97Fj+vo2LWXF1IGemErOfxGpoxdTbQ=","K+22bhrVodVx4W4pU/SHMfZkY8LrVKJFRE0cCjolcH4=","LPCgmlXKk6+KvQaPBqcof7CLGTtghYKic3nONdqRXew=","LRvXj6kOd6qIgwyr/vL40n0aUSBQun2wdTyPuGPvs4c=","BlYQxvT5JJH0I9MHHrg1OffA1JwThwYuYw1/0oPcM5Q=","LZM/8ZIXpVRQE7Eoc0Ur68xfmWkDPxXsZC+0ZL1gc2g=","GqnT/kxkSRD3a5Kz4Tsw1QDa5TVOeVCMPEnIqpngJYs=","An7wSGnkgrHHSGOMWREcaycJX6dz4aygeM6h8chFC90=","K31STFFyy7sV204AZoqMRJ9nomBdnsA4AuP6E2rQuPs=","DHw4JEPGqnh8hxjYZ0fH90aTriWx5V3xP3w8Hdc12w8=","ALRWcYa8P3xip7Vqz092IHofQ8LTDQ/kpifc3ZvXkHg=","HkH8KbglRU/m1hc3/gi0f7B/5znkweYdAzdJCIPbT9U=","ElB81Va3u8xy7m2vxhZYRCHhr4ctjA6JACro07oGU7Y=","E9Q3CDVTAGvO8xLl5vUqXZfrNmF+82/k130+l/cctds=","Fj7HMlH4VENociJIfdqaZUZ9kLIvCzhmRoYHfGpEhtU="],M:[["I20TOT74XMSKNR3Xht16HeXjmUIpYSf9h5RyI65RCK0=","J3aGSU92RLvEqbGU4Qck65Z/HcWHGOWePO3IIbKnrhk=","Aj22h4Tj8MwLhWGIJqmzUFEpwWR5lzsKhKRSnmawnGI=","HTWdJF8obBLVDWY7rnM/l4rwjNvWMBfFezp1ZG/zgsE="],["KnWhcVY7gH21Jb4llpmrKP6bx/sfcJQ/8Em8lw6EGgw=","CDq/9eEAUfB44oJ9CS4a6Ai03T4VzMNwbzjOQVe2dw4=","GlrXG7vs2Kl9xJz9uuMDrSTVxHQeq4t1aKn/glOh628=","DXRf0A3RZ/uGdyEzZA8CzpRQBKe8LFnoeQ9yXF2E8K8="],["IHBnnnmHgu9ZKlLKnO+CDUl60u7Lqn5C82az5SHE7UI=","LhjIVw0gv134AHOaU9p12Qbs4xjNIkq2s6K+l54tfqs=","D6hvDyfk091/M2fOhvaE8fLkOG0+W584+ig8aqcjtgg=","A/Pm+reR8WYoFo5LFNuutlcDXuPaayyoPwwkkeC0A+s="],["L1ReV4ICyXMkiFQOQfeDto/wYT/Xk3X4uos9MJWOdnc=","I4EL+Ch3/Bm/9+7+rj+vS7gQTDK6TNcBWWoVYj0BR24=","AU/NXrC+bVvur8SUQDTPMhwGjvkw8QviIH7VjSo0zdY=","AMFfw6HVcz3YNerggj43f4ukqLYnYnzCu2YcJdIPtSo="]]};_3.default=_default$d;Object.defineProperty(poseidon3$1,"__esModule",{value:!0});poseidon3$1.poseidon3=poseidon3;var _poseidon$d=_interopRequireDefault$d(poseidon_1),_unstringify$d=_interopRequireDefault$d(unstringify),_$i=_interopRequireDefault$d(_3);function _interopRequireDefault$d(he){return he&&he.__esModule?he:{default:he}}const c$j=(0,_unstringify$d.default)(_$i.default);function poseidon3(he){return(0,_poseidon$d.default)(he,c$j)}var poseidon4$1={},_4={};Object.defineProperty(_4,"__esModule",{value:!0});_4.default=void 0;var _default$c={C:["DrVE/uKBXdp/U+KcysmO19iJu069R8OGTzwr2BptqJE=","BVTXNjFbhmLwL9un3XN/vKGXrrEupkcTunM/KEdRKMs=","L4O53yWbK2i810gFYwfDd1SQffDA+wA19Qh8WNXowtQ=","LKcOLo1/OaEkR6yDBSRRtGHxX4tBp17zGRUgj1q6loM=","HLX5MZvmpF6RsE1yIicclJlBlvEu0ixdTscZy4Ps/qk=","LrT5nGn5Zuv4pCGS3n/2FiHHu0e5N1DCueoI0YRGwSI=","Ikoo5aNThafFGYFp5AXZ6g/H2ouT7hO21ffQmeKZUg4=","D3QRtGXmAO7Yr91q/KScMDbzPsvZoPl4I3lrmTu9gvc=","D50NWq0slVWivnFQOS2NmBmyCK4zcPmaBib5/12Q5OM=","HpqW3IKSu1lvUqWVONMpIpcyslJZz3RLahLTBwLW+6A=","CHgFFMzZA4CIfVeMRVVeWTz+Uuq0uUXGws1NUo+z/jw=","JySY/O1obHrIFJ+j9z74ws7WRxfjVW1aWfEZ1inMtfw=","Ae+PndfJOqxLfLgJML0G60W9NQr/WF8Q49Dvingu998=","BFufWbZZXmFNwI8iK0abE46IbmS/PECql+oK51STTTA=","CsHpHFfZ2pGf1vWdKkD/jqPkHiTiR6OHrfJYQpXWHGY=","AooWIalAVLDH+aQhNTzYnQ/WcGGu6Zl50S5o8E5i0TQ=","JrQYAsBx6kyWMmR+0FkjblDBnD+zyW0J0CquKg3Nnbw=","L7XdqAcrtyy6rC9j5GghXgXJ3gZ1jbapSvNDhK7bRis=","IhLToPX8yvJE/zVH/YIySa2KuLoqGNOD3QXFbuiU2FA=","GwQa1bLwaEJY5N+u6gm+VqMnb9sZ9EwBXNDH7tRl4uM=","CgF3a7IvS2uOzP8z52/e0xRPt+OsFOhGqR5kr7FQDv8=","K3tWdKrsw8vzTT8nUGbVSaTzOujBXPgn95NkQIEKzkM=","KdKZuAzUSJ5M91d57VS0jGCwQiV7ePwATBuAM4Gjvf0=","HEaDHZp0UpNXZBwhnXIadKQnEQAyteHdGd3jBCS+QB4=","BtdibJU8y3LzcUHcNNV44DYpbAZXZ0+Ac5rh2IPpEmk=","KP/dyG8YwTbFQAJ0jgxBDtxcRAowIs2WDxCMcc2ikww=","Lmf37l5KopX4Xe7QnkALF75n8bftKratuOwGGfb7xek=","Js44+mNskGMOl/JRFKeaLcpWhZ73WeU856vyLCToDyc=","Lm4Hw8lb98NN16AdAKf/7ELLPRah9ychr6y0xM/TXbE=","KqdPdZfwyfRfkdeWHDpU+4iQ0nZhLhJGOEsUcNok2Mw=","KH1oGkai+q4sfAkPZoq0W4pxMTwVCRg+LsDKY5t/c/4=","ISvRnfgS6q70pAYAUo89faXTEG/1Zao7EeKfMwXnPAQ=","EVT3z1GRhr8ar7FLNQ64YPl/2XQJJtq5OAnChARxNQQ=","Hf9jhcsx8cJGN4EKS9Gxb79RUpBb42WD2nR+eWYfwgc=","DkRFgtIrTnbAgdNMRMGOQkARo01UdiUoY+o8YGtVHlw=","AyPJ5DO6ZsSrq2Y4Mo8C8YFXc+nChGMj/3LTqrfk7/g=","EnRrvXF5EFkZO7p5zexEjyW4zwAnQBEttw8saHapwp0=","EXO30RLCp5j9m503UYQsddRmyDfPUNc+/QSetEOKIkA=","E9UcEJChrUh20eVV1/7RPajlcTslAm6+X9tICHAyQ9o=","AIdME0SkrVH/jct8vS2XQ8tydD8DlO/n9KWOvrlWuqE=","It8iExqquFhlziNrB/JE+g7qSNNUbpfWoypWIHT+8I8=","C/lk0tvSW5CHCLQ3pEX8PphFJKWRAebBi/XrBakZ8VU=","CbGNm5F6VbyjAr4ffxgeDmQLnXOpqymMabQ1tfxQLzI=","CU9VNERPrjakv8HVvz3AW/u7xwpjZTZt1nRaUGconkM=","KZm6saXyUhBRn6ZiKvU6FaPiQMDaVwHLeE/dwNwj8B8=","L2iYwHWB9jccqU23NxDogIQwG86Kk9E2aVdaEbA6PSM=","ByaOqroIvBnsFtfhMYpHQFZd6x6OV0L4YhdLGmhm/Ms=","GGJ5sANFTbATOf93ETvJ62JgPgeOHGaJpslYLEGgUp8=","GKP3NlCRl9bkkVvdBNPl3bZ+LMXemiJ1B2jlUkc3Fyw=","CiH6GYjPONh3zB4u0kyAjHJeLUvLLToAe1mHuHCFZx0=","FbKFy+JsRn8fr172pkYlIoMowYSixDvACzahNeeF+6I=","FktwYsRnHPCMCLjD+YBtVgt3dbfJAvV4jNKN4+d58WE=","CJC6CBmsCm+G2YZf5+UO82HGHT1DtuZdeiT2USSbqnA=","L76k1l1+1CWkJxLlpyHk6qYnrFyw64eMzC7grtVD6SI=","BJK/ODw2+lVUAwOjtTb4XntwpY6FSrm5ED1/Xzeauqo=","Bekf6UTpRBBOICUcVlFC1h1hhanOhWdfapadViktwk4=","Ev5cICnksziT1GPLBBrK0JlbliHm5Jw7fjgKduNubBw=","AkFUrfAlXUeVj3cjkhR0Ex8mKfrciUlpBs0B3G+geE4=","GIJKCeavr0o27SRiqGvQuteYgVZE8rveiBPBNFekVVA=","DItILboK1Rvp8lXeDD293d+EpjCvaNULuwaYPj1dWKU=","FzJf0KtjWHE2PgoWZ9O2fFpPpn/Naq+GRBOSh4/bBeY=","BQrpX20vFRkSL1r2e2kPMeVQdz+o0Yv3HMbQ6RH6QC4=","Dw0Tmg6B6UMDjLKI1iY2dku7YpXwdWmIV3HshO3FDEA=","HA+Gl3lWic33D9LywPk9Gnmznrx6GxxUnbvKe450fNY=","K9D5QK2Ta3ltK8LgSLyXnkm+I6SxNZj5/lNqFtwdgeY=","J+sb4nycTpNHeMCaAFMzf6BuuydeCW0WfOVNHpbuYss=","LkiJ2DCmflqPlr3TFVp8oyhPvTB9H3Gw8VG+YlSOKuo=","GT/j2wq0fTxdLsXpxb2Zg8mJHyytwWXbYGS75vzB4wU=","K/MIbpbDbHvOQVkHrQxA7W6WYcAJZ55ON8sTAnyD5SU=","EvFuLebUrUapjNtpfGytXdXn5BP3Qczyn/LqSG5Zuyg=","KnIUfSMBGfOgJi42U93RnzPz1dbsbEvwrZGbA0O5LS8=","Ib4OLEv9ZOVtxH+VeAbcXwotm8wmQS4pd995rMELqXQ=","Di1+HclG1wsnSaO1Q2eyWnG4T7kRqleuE3/UtsIbREo=","Jmf3+1pPoSRhcKdF2KQYjMMa2w6uMyXcnz8H1LkrPi4=","LMxvQx+3QAcwp4O2YGRpehVQwSsI3+tygw4QfaeONAU=","CIiKlPxaLKNPAgFGJCAAH65tvunoygwkLsUGIeOObl0=","Apd7NO6qPLatQN1Cybb916DS++dTr4izas/NPMvFPyo=","EgzM4T0ot1z9b7bJ6hOmSL/P4Nfm/46WELXp+XHha5o=","CfrSJpxKjpPIHhuXcOoJjJJ4ekV1sr1zoL8q8y+G/zw=","AmCR/T1MRNUKSzEOSsbw+g3r23B3XuuK9jDP+2AJLW8=","KUBKorpWW3e7f7qd+2/DISVDzFavrWr8uQT9K8qJOZQ=","J0lHXDmarznU6HwlSGlbTvH/2GWQ4IJ95yATUbfIg/k=","CYyEIyJHn3I5kStQQkaFy6Lr4twuTacKx1V9q2X/oiI=","GM71gSIrZH4xI45X/q19XHWKzhTJPE2kAZHQwFO1GTY=","Exd4OcaKUIDU50Z0XkNxHTy8DKShCPmNY7KqaBaY3mA=","AgymlvUx5D7AiPVvS3QyVibMTfcSwOXwqQfYjl8N7/0=","JyMO7enMz8n6gFow/FSNtpPRNwjGRoQdFuAoOHx6wCI=","AWRZEcEZiwHWT940o0KheGSXwFlpoBVDkFfS/nW7KBw=","LDI/4WSBv0luQ5yINBziXxmJceFEhwVs/cpKRRpdhkM=","D8CC3+cHKOhFC9IHTD4i4bAiwSTTv/6LWviK5ttQhcg=","IFLBdIANsgnYzcpWjcwls76WQhFqxMd+/opIi0I1Ie4=","KOQg4Q3y+7WvltYh1VQjGQvjUc6BKQZajdn9BbPs6cA=","JWmMpeJKG3mfeDxEYqJNtlXWrhvazRy1SdbgvDrlBpo=","FgqZgaXImlfPj/v6V9UQSaKXthB0QirBNNm4V9aYTTU=","IckaOeFFw7w02baUuEPzv4t86/Wd27CgZGQrBpmX89Q=","GsjYDc1e6HbSsJNF7xEjRdbqoCnZPwO20Ql1Rh5Bc0w=","CrPmrQ7Pi458FmKkF0xSIl2CKJXidVVEuNvOpWV84Cw=","HGdRglEmIK4n47C5F7OiHKUu8+9ZCbThxbIjfL2rM3c=","LNvJmN/Xr/09lI0MhbrS4uN6Sj4Hp9ddDIqQkqwr7UU=","I7WEpW4hF7B3S/Z8wN7jMyQzc1Awnf+DPkkaEzu2Oy4=","Hp4rMQ9gup+MtzAwo8nSoQ0TO8a6TsEVLz0g3hRl6aU=","DgHjZbpbMDGrw+cgFArnRsmrXauYdSDEYLzU8fpbIts=","BAiEzc/GS/x7cSc0BJjVxEM4IBG2HJpLE4fYW8EmTmg=","GQse4SBeuVAMdKOZjyvqNjU/FyTWBn7QoKF94xHvlmg=","FkfHKuxsQ4jQT1L8I82cCMHfz2XOYeFl/CjR+DK9Oyw=","JDAAY0agFF95mIDMTIc2Jp9UlNiftIsChC5ZW3HkVB0=","F3uaCDQ5F+E2UQej2jrn9p2FOQK7FrrLMiGFAlK3V68=","BKQg5kKxGulOWIYqaPXjJgnNU9CuKUI0ObEdBGZt9Pg=","JdDg9zn7OfwQWoj6sK/YEN4kYYWOlWzMzfq+3baiXI8=","BEdtkbfv8v2FkFy/WGUe3DIMsVYQ6u1FLE1P+gx0Cic=","EJDAtos9fXuLycokGeuN6hwo9tXhJQy16XgP2coob64=","JTk847klbVBEinJcXHzVrTdvLUNYVcEOvyiZy1xmF74=","JZMcDHNx9PH8hi8wbm5YMO2CQ4jWuTQml9FE8Pq0ZjA=","I5bLUBcAu+bIKq1RsPt5z4pNNTGF1YCCA/c/Iq+/YvY=","JqNjSDNItYlU6nSKcSmnsKPckGjDzKe1s/DOA7hySIQ=","J8oQfKIE8qGNbxU1uSxUeMmbiTM0IV9rp6DltF/NaJc=","Jtoo/Al+13zkZiveMmsszqwV9zAReFgdjS0Cs7LZEFY=","BWqzUWkdi7NwPjBVBwrJzGVXdMG7NdV1cpcbpW7gy4k=","Jji1fyO3VK7HbRCaL0gao8IlR6Ef/FAVLXKa9jI3apA=","MEdUu4xX1gcy9JLCYFGE/cM+RqUyveyA6nvFUZ7efO8=","ANFyf4RX7gNRTxVbWAbL90jsaFf8VUAQdSrJOpt2Gaw=","AO4fPGb7wFxDuilaMDxy+rW8qGgF7JQZxYjlCUd2H6M=","Cvr63PW03UpKdrWh2CQV/RChn7z8WQeMYfkpfrZ12XI=","CyRJ85dGCF6GzkXo7tEI7mWiNINaCmpeqJltEk3QTQo=","IGsM4vGyxbfJ83sARSJwlfbG8HHsO92nan3fSCPdXdY=","D+uk+4eDTHy2luZ0M2KM1sr/w6TvIP6oUsfhApRZQJw=","JU2/rHTEmwuJJnUuCE4CUTsG8TFebXDhgXPpcjNuVdM=","Ct2xNyzuThZGVRaMNnVZ4ZYGxb0XkQrrN3Ge36DKh2I=","JrJbfiV/PpfHmQJPsBn2XGyk2NgbGuFiIaWJ1ogx11k=","CQmVt5rOwkBBO41MZYeH5aRle5qwC9tbGWCxBZ4RO6M=","CNvcLiHvEfLFcploeEPOo+sNjkDpkTH0KXQXjUT3O3s=","CeirpnFIEZdnn691Kg9440L+nEkVlqtnWPFwk5eFF58=","HesFGA6DPkVlkFKn66+BbH79Eqf57slLe8fGg/E2PVw=","GacOxr38kJipJu+8wEqp7iSJl+iywkrzNf1lI+UlCHk=","IddzZgra+4qHmYb5qrSJBWY1Ojd32KPx65Or4Qu/H2Q=","CfGJD3Lp3HE+ILpje4nV05emsB/NZnNH9vRmF4QcOQE=","Ba9Fk2HrRU0qMAxh5EaZjUj6H4l78hnWCMIUXDOxEcM=","D6Gh1oKfA0VmSmbcdaZXM18zbxXzQHVs+hL8hQzItRM=","AuR6NbzAw6C9oLHAMHrVQ/QoD8+H9jb4U2Vc+Xpii7A=","FPdz6YNMa964+Q54v0wktyA0EUYBEkkQNmIYlSBNDxI=","EC2Yz1Au2EMlXPGdKbx9jmQqvnz9Y5mS/7CRli/I98w=","BD3V9Kpadt1MR/bGXafKIyDUxzrTKUc4y6aGp+kTc8I=","IYM4GcMzcZSmwNKaSNTyZ28OfHl0OjBvTP2ysmvRHvo=","DygZJc9e5km0dKaBnRFso+tOyiRsMR7K3FMmKjz/K1M=","DT4kd6exC+tEcJx3RtaCTt9iXdYFBNXck85mLxXCONY=","LNf2Qb7b9mlW/4oBvpzeNdgPgKtR5ztJrL/D7/Wu/EQ=","KelbSSvy+V9NCTgPmLdOOJFJ0kBFgR16ht2GExBGPPg=","ItpmvGLo8BEmbvyoamyBD5rkxRr2/+tX+LPFDfg8wT4=","D+bTDeeoLRYwI0kXlPSsoyINt56BKd82QwcthBklVUo=","AFDoQqEpmQkSPEbv8YXCOtMS0D/vGt/sx+B+yymP1n8=","ITCjp7MiEiK+NMxTpC13M2Zvnd9xTtfFiFy722MQjCE=","LfnuKU7fmePY1Yg/4FZsJKpmcx80qTKA4dMo5nszyfo=","G/fW5ImtjAzybraMwh/1QVgTI5bcJQrrpLb8X8M3J2I=","DGAvoVW+lYdh6vc5YXqxNs97gHcov3/jXUd40xF4DlQ=","LlDixbNqogUyQH2GuNItfVFUCAokly+utj+vASHtfyE=","F8JRCYKntYJXENYpDsT3gvZ0mV7oQJtCtFkSOxgDMuE=","Cw1S8DyK9ydoA+zyRluIWyEze1OOq9L2sqslXzdrQqg=","D1Yz3xlyuUVZU9iKY/gGR6msd8bA+F1FYZct2Pq4vRQ=","Dr960pyhOAThQi6TloEVUSR4D/Q+dukpA1SYEwp/FXI=","Gv8TyBvaR+gLApYhc7ujQ+GPlL7ifIpXZhsRA6cg/+I=","IQRJ2/XPMGHaJGW+hVBYYtPzHeGjtY/zVxO+V++sbAc=","CIIwwnlOUMV9dc1tPHudvhnR4vHTABBEuTrRw+5imBc=","HECMJWSQsKHaCNxGQTjfx4zOmp4Wx3BWF6TW27IOfjo=","B0UX4IHrTB8i0XcSAPsHZY98d2VNWEQEkN1vVX6eOQM=","AtBOnCHfHb2IUkvbIDaRtM7lUwVZ1s8PoFrfYeEv3L8=","LregEbi86RCC4T69dd47WOubRlDa6fEaqB2zLPG2exM=","Lv2nftNfSvApn3XW6KhJtU0qxr+VNoME5gMMGPDPF7U=","CRmdyv1QzmQu3b7aZSBtT2GnPRCFK4EUxRskQBkq4GQ=","Joxc/ERtOZxN0xnbZmp1tctlXYwXl+n6dhgctCFuFWI=","IwOmUslJBxgmsOmjbIBXhpe0TpEszmaHAShU7aEaGNw=","J8U1Y7EqbuLD8EHzHcRZIrxTU+sRCGjSNwc/Tvs1+98=","EgGofq9K5hjwK9gtClEJBJlptSSM/pD0LCePImFdKw4=","LEMWlDn81p6tghSZe7Bpvsr8sbosUeVwbLS0PasqRD0=","BoNZcxU1kEDqA8RdaYTGiU9Gy7NtcC48T7mEfmME2UQ=","A1RXBnBuqzavuTsSj+vRb7BCXhWDFBl7d3la06eY0YM=","GjPCVOwRdhnTXx/AUbMXKHQL7SOmo3hw7bOTtxoMDms=","H/5paKRHDNVnsMACKByvmW6I9x51m4fm8zjlF/FpDHg=","D9ZuA7qICP/ssFnImf2A9BQN3V0qXESDEH9OAuNVs5M=","Jjq2nxO5ZvgZc5RVKQaxfmyGF6e91ddKe+M5a3/gE6s=","FqQl5H0REGJQVNWhZd5BPjvYfVqjlY/dbrfgPjm6QEY=","LcUQpHGewQytdS8DxnPw4lPMMdE+OekJ/MX3OvkTjZo=","JN+OjYVsW14b0crSPQfdo0I8UXkym3qCy0qnCalFduU=","K8yU/0/Dx2881caJFaBC6HYoJJoBsJVhvfJKbNzlYg8=","B2weiNxUDI2N5U40PffEKdMpX1LDjP/mtIvoaFLal98=","CbXyCaRRrEMcBR+xLZpeT+QO4WARIJR9qZD7jhLLRuE=","IF8XsNhyni6qiNakQTWmq2TpQk9VsPHqBoOvdetnfAc=","KBxcaIg29s+RJjjDi+BGzQkWgfCkF2FyDN0e358jcCk=","GgU+aHjpAPRfTWdEjEcc8wCaROegLqUOSvpE8lkmIfU=","EA3H1CbevjAH+3zqyE5PVGjvy4l+e77pgXQoOdWeBkw=","FwImcqAWqVe7h+LPrci3X7KJBb22LILICxyzG0EeScg=","EIbbfidg/ItxBTqH6+FRI5+4tUcYKxcN4MJyA/lU9NI=","FThP451ztjMCRgrkwpQvrCtB+2WhhVNvuF3ST9dYQGQ=","LrtZn+kTbUJL9KvFNCxsdEexqFMgX8+1UZ5VE1dwkAg=","G0teh8+5Jiz+w8DwVC5MWkzyeCkrTOPu2Zb6xvTTcog=","JGUFOuULaIWAHz+C4wLK+7tKdYG7T7pgtjf+vmWeUFc=","EU8y7c3qCc0JXFu1048bl9qfBeGLNwi/bgq509VIWe8=","K8cN/rK6qy9rOHzXe+d5rC5eVRnz0YEj7ijYwlQ8cUg=","Acm/eiA84it3XjphrX53tqeDSLn27GikEuSb/jLAVBU=","BRSw/lkJ6oh77bApX7vOw1XPtXX/apfNn0rQDMtX7ps=","Jnx27IGTTMgaEyqLBYkQoSCSUgsSogGvA+MgLXtsG34=","KRcOMyKz2NXHjIS6u7RwrfFiJJPOg+lc+xUc91e95dY=","AZ9qgSSxnjOvM+XThz+cM1xvCaRUhsq1Nt1ZbKQdlRk=","GQSqTWkIVEqLNI6dsZgcJwCe2OoXFRiuVAXQNiQrYOk=","JvF4c5Sbxnn38EOVZpTkIrPO4d6d1vZHO5MqR2RV/xo=","GsZo9hK4JDwZOzNyC4qlQEDEdgMRlxMevcrJsYvEj3U=","CZbZYadcDQcZba5Fv2JHZsz7+FVb6XltpS+BVo7wZj0=","AwyX4bjK0dT9UNG0OD++ZnTRcfmcY/67VCWzlcJPyBk=","BuOtakaQDi05UzcCVbaPibPlI/H+UCZC7iJvLYvQhI8=","HWs3VTMc0CFraIDkL5iA9WXLlLDgRVFToymJBYjMkW4=","KOTcukuW8SpZsEFTXnMKyMNRidwLhawDPdOMCLrlMfI=","CLYIYEaoNVCMz0hPKXS2prBxKkdiYDdsejs+S8SkehQ=","FizSyn/jtfFES87JeBIBm7b9hfumoFNqiWQ+Fbm7O1I=","KPHgO6rqm7wFr1sRk35PXLXJqcEZIGPRmYwBxk1IOnY=","G9sGJ3jXwV2jla8nNMJfqgEn0qq0qnE2YDGgu2eRzhA=","I3WDlQLgmJDLKRToKWJ+Dg/JiHCyMkqLUDKevdJHScs=","H6hmL7y2H7OtfFVmjclCOjMtyHz7LfRW6S0zYR7Xu1A=","Hk+tLdawpvH4cH9yFxbIpEbi+yxHpROPP3+XNgeddpQ=","IRJW0Wxyaf1t9vX83R+niLo70FAFn1PSYbD18Tcx/+c=","LkkISzNuzqpPjiouavCDGPQgYOV03aNB9KEHmxK8xaU=","DOGfVM3Dn38781GSrGgIIRrs6gjf4UyrdY0liR+wC7k=","ABHF1Ww5Dok8w5QiEmHYdI3GBFHkrk4chKhGi6ssFMs=","F9ef8GtjrCqKngXuavPbt8pg4Xv6ObR1FKjNgFFXm0w=","GafTpEbLU5PcdFYAk1krBrGos1zWQWouyrABc2OQFfo=","AwwAoJM9zboqgIsuG5KC8zHwRZbYko2nqmw8lyNwN6Y=","Fry0R84tUPOuJa0IBpU4LpNdLQAYTErMk3C+iqtkE5w=","EjQbRrAVCqJepOyHFTEpl+YhJPN8q3ttOSVbfNZv6x0=","DobRORf0QFC3Kpeyv2EMhAAvwo4pbRBE3IkhLbakn/Q=","CObrQInTfWbTV+ALU9fzDRBSoYH48usU0FkCWxEMcmI=","LqEjhWJF9shHONFd0UgaDAQVzLNRoeDO4QxIzpfKexg=","LcpysuvKuMI0RuADMLFjEEGVeJAlQTq/Zk2w+chN+m8=","Bv+e1Q0yfoRjMp9YXskks/L2tCNfA2+kxkomy9Qrams=","JGoQt+PgCJlH98m9o9VN+OKmDgzKhOoqxjCkU1r79zA=","IqY1AcXwS5AYcZ7ZnXAO5S+EanFa5nrXXJaznWiLZpE=","L0xQR39/2cZxeZrF0uIkzbkWT1g1HYqhQOwH5RT66Tc=","EP+3qtH1HH0TsX9Nh22aHjjwuopKI9S1DNoyythRVn4=","Dpzv3cPC076k05ciUy1UIHhAJzUhh+evGgVpNcNYA64=","B6+EpNMUHnrCM1Lm3G6kr6Flb5ajPIl4o+g73UumK0E=","LZ4xoQrrx2H43gDRSx5WbRo5Mj1uibY46UDz7Ioiw8U=","J/GaZTLma1Mz2xr9WS9m8dNgNLMU2thEdlZ0e+J+ZMc=","AFj6PIRU1jNUsgJMO0pXehgO2Z+PMVXNfk1hfUfQf/0=","BBYntnFbeAlnlXwIBpk0PrBBSiBdOhddcIlklWgWpdU=","AGrEndklPtx/Yy5XuVjM7NmCAUcc8fZliYiPErcnxS0=","ATGt/9i9clSx2MNha74zhuwMnA1tJamk7EamvxgwE5g=","HEpvUsn8z3pBOOQT72Kig3eXetfiXkmjzwMOHNj59bY=","A/KmvlHsZ3+UZVGzhg6kef7gSK4geK630feVjSwmRfY=","LadwqtLC6wk5Ggy3jvOpZIoTcthUMRlWTXN2OWuN3GI=","FSeEY2ZfdM3cGAL+v6sCzsnUX+hmw1nHOAYq+3XWSgM=","Ev4niqNlROrJcxAnCQUY1DTjjqlmoIpvjVgGOKxUx3M=","FJucgCGCVYpMRdEZ0/TMf9hYdgTKTw1uIbBv8wtqI7Y=","CBLntNhHvIUX0ZMZdy88mFXgRP1g26yaCtxJWbaR3+Q=","Au2Njd6v49nY338ooL+qf1VYE8fnUDrqKmaXNwOgxhs=","Dr0HO6BTe1FN62Ap+SECnlXl5NmgPWtroTBAOGYtTbg=","FcdU1bFLLEIFxrqNLM0CglWz55LGr6CLRO51ti7/n1k=","FpUVyJrFR52w7Y+m+jEbORzBI1Jw9MvFwp58vDDocyo=","JUefv7Omj5gjiPJiEAEQFgi9wp9v8DdpbZFh9c2aT+8=","FEdcS9UgRR88hSywMRpXjKf45ulyGCGWzglIbpS+YHE=","BFppEGbMZr7JuvJ5iDOh39OoR1Aq7I1fXE5zNj0Jd5k=","JgKcDCZ8eZ+4M6yKEeOj8BR6jKA3IhuQATuLyzfrpoM=","Fj+ss0/1cvv3yUaWnBwmCHPOEqapSj5FuBAdW5SNFkE=","LHFOluGROzUdlpMgzGnV7BPgamJ15YaIr47gDEJA7ig=","HBZh4qfOdLdauoRmXs0r+d3WJo8G3r/i1SuATv8dX6Y=","Bqaa55Xum/5eWvPmYZpH0mY1s0wqCIn+qMPAaLfcLHE=","ET1YU12JIRXF0otMGaNgk3Tb2631QZXHMUFshdcx1Go=","KriRAuK41eY4/5fXYdpgQuU08f9H95F6LKGnQGO0YQE=","A8Ecp55B/f6WJzDEXmmVRjSQMYk9orT9OYBP1qFa0bM=","JwlsZyYhQDiIAU3bu/ydoff2e01M/oRsat8ED6ryZpw=","LeMq0VSXrvTVBNTe61OxPGbbeQzkhhMMqp3CtX71vg0=","DcEI8rCigNL9XTQTEHIqLSjHON3a7J89JVdURI7v0AE=","GGnzt2P+gWTJaFihu5761bzcPuvECb58fTTKUDZdgy8=","Ai7Totn/Mcv4JVn+apEYQ7YWlF4WpWjUjG0zdnEpaC0=","IVXWAFIQFp45RO0TZb0OcpL8ofJ8GcJmEMauwHfQJrw=","DeG6elYqj3rK6TJj9fG0u+wMBVbJGvPbPqWSjIyuroU=","Bdu0QGAkvqvPzlv0bsfaOBJvdAvOjWN7Y1Hfp9qQJWM=","BdQUm6rEE77U2NyK13jTLADnieP81y3MyX5UJ6No/V4=","Ac34tFLZfCub5QRuc5fnb/C2gC+pQceHkhLiIXLCey4=","H8anGGcCf1avgIX/ga3OM8TXxQFeztjHGwoiJ51GwHw=","EEC+9MZC0DRdTVmlp6OkK6nhhbdTBtnDVo4P2paqr8I=","FrecOmvzFuD/LJGyiTNKTSsh6VZ2QxkYqAgUdauPrQ0=","IN/xvDD222tDSzoTh+PIxqNAcOUrYB/BPL4c3NWfR04=","AhKsKrem6q7CVJVQMKlw+AYt1BcacmqL37f9hRKuBg0=","Lyk3dJFHREKGmhCckhVjfLAtwDE08ARCE8gRn2mWrgk=","CYTKal+RhdUl7JPDP+pgMnO+nzhmqihMWDfZ8y2BS/o=","DQgKa2s7YHANKZvW+oEiDeSRNhyKa9Gc6w7pKUsk8Cg=","DmXNmehLBS9niVMGOMsK2CGsyFtkACZNzpKe18haRUQ=","LiCIdbx6wSJICPcscWzQXuMOPSA4D/amVZddoSc2kgs=","KYnzrkd8L9N2oLD/PX36wa4uO4lK/Sn2SmDRqoWSutU=","ETYc5UTpQTeSItEB5vrAzpGBBqRjKQo+OnTDzqcYlFk=","Ho0BS4bLWn2lOeEMFz9qddEiqCK4+zZsNMi9BaIGFDg=","Fz9lreyN7uJ7qBKtKVWOI6DCMkFn72yRIS7iwo7phzM=","AcNtqvnwHxuv7ovQx3msPl2l33rUVJnQmRvWlTEO3dk=","E1OssIwFrbSqmrHEhbuF//J30aPy/ImUSm9XQfOB5WI=","Llq9JTcgfK0YYOceoRiO5ACdM960+TrrIPHIejsGTTQ=","GR1cXtrvQtPQLu27erhWJRPetOs0kToTQhcmuo9pRVw=","Edf40fJpJkKComP+ptdZnYKgTHTBJ96d7nk53S3NCJ4=","BCGP3jZoKe2Q95rV5nmXlzRFy0zWvG+VG60IUobKyXE=","AHB3L3z1JFMEg5fKX0eiAgJ7c7SJMBwyJ7cccw121t0=","A4o4m6712afIZbBlaHodm2doGpjNBRY0wdwE2+PSuGE=","CaXu+rizaoDNpEaytLWczQ850AlmpQvq8ZhgeJAVpuU=","AbWIhIuLR8i5acFFEJtLWD2eyZ7frLdInRYhLHWEzYw=","C4RuSjkOVg9uGvbfwzQUGVReWr+jI9gX/tkeMNQpVKY=","I6ZnnH2a22YNQ6At25AAQOsVE7w5T8T5hcq/6FznL+M=","LgN0ppkZfjQ+XKo18TUen0w0Avt8hezM9y8x1v4IklQ=","B1LNiZ5S3E1/egivTN4/9kuMwLEXa7nsN9QZE6eie0g=","Bo+IExJymdrDSaK21XOXpQJ1FCtmS4AsmeKHPdeuVac=","K6cKECNV1UlndXQWdDSz+YaHLQSilbW4s3QzDy2iArU=","LEZ6+IdIq/ajNNHfA7VSEwn5CZuCXdKJuGCecKC1CCg=","BcXyC+8b2CcBAJorRIrogeOlLC0aMZVyltKeV2Po9Jc=","DcY4X9xWe+WEKjgfYAbixgzQg6LGSdnyOsjJ/mG3OHE=","FC05g/Pcf34Z1JkRuGcPpwN41bhBUNJe0lW6qBFLNpw=","KaAe+y9qqJT9fm2YyWoPoPNvhqepmqNcAPoYwbLfZ78=","BSX/7nN9YFE4xKUGZkTsYwq56K/GRVW30qGvBOthOnY=","HoB9yoHXlYHwdmd8oOgidn4WT2FJECZO8XfPQjgwHcg=","A4X7P4nHTcmTUQgWRyR000wCI+D3M6Uv26VggtvYdXw=","A3ZA3Br8AUPhpimOU8rln8+r1wFv1u8a9VjzN7qw6gE=","E0GZmh7YaRnxKmxSYIKe7l/VbPAx2oBQt+TA3olgdLQ=","Bp6wdYZrCvNWkG1Lr7EK13Ov1kLv3MVleyRPZb7Y7Oc=","FxwLgeYhNuOVs46OCLPmRtJyYQHTr6oC6hkJphkDNpY=","LIGBTJRT9Ry261XDEXU+hMu9yzm/5pb5VXUQdQKsztg=","KdhDwEFdNdnjsz+tzydLKrBLOQMq3Kks45uKhqfDpgQ=","CF1qEHDzUT2ENrzNq7eHUNjhXqWUfyzap2ac8/rncos=","EYIDY+1UHaoQpEumZb8wLNvx3U5nBrAsnipc2kEvw5Q=","IBk1pY9cV/wCtg1hqDeFvd/TFQ4F8d9dEFhAt1GhYxc=","CowoIMVpcariepUqvTOgPUZ5Tu3Whs2Oz+1hDofALpo=","GAY4/zAaZMoEq9bQvXUAtmULZf8z5r4f1Q28FjooGHc=","CVxxYmbx3lkET5cRSkFYo/hcqKk3z77GPpsyGoEt02s=","F8MeoC+8N4Mg2G/+1sfKFYO2GMXBpoeBjUCHpJfXNJA=","BbhsS7jvMYtqcifkGS0UnTwXqXZMzWYN5NUKd/GSqRs=","JlvJXfSkxIdv9w1+ov3ix6sV9KauDSN81s50uphsens=","JHUrR7xsa8jZu+SPX+8vaQhwFznF9bSz1siG1HFceSk=","FIFKHg9JKk6g2G5SepZIIXjWJLmNqW7l5YO5Mk2XTv4=","EN75MQc7ZHm9YFdzePKTgZl8jgQdPPs9x1I7ypBvAL0=","FPeudwv36V9/cGwNirTtA/oLiA0oxp0DG0WSyYYQF18=","Gu9QoM7nUbWfkmr0DoA10Z3sydQo6+TndcXMnc4c5Yk=","BBk1YHFy9o66ZcpgBo3+OwhsKi1X0JYClRIUtX5zz1o=","JoY+ndJCVdFXO9CDlZuFbAST++/oPIGYN6FR079FLLg=","IDbvtvmDCWXrPXoGi9CHyfWt8lG6YgUsZSc45j/4s68=","DHEql1t03J12a2OaAplpyjC+T3WnU/hUsA+k8bT07ps=","CAFNqzzRZn4nr8mb+sHmgHr9/2RWSSyjN1cx04dTlpk=","GY0HGS20+sKoKkp5g51qK5fE3U03tOjztTAJ95s05qQ=","Kesd5Co604GyO0ExQmiXoycJsp1Tu5Rt/RV4TR9j5XI="],M:[["JR5/35lZEIAICwrxM7nkNp8i5XrOPNf2T8b9vPONfaE=","JftQtlrPT7BHy9OxwX2Xx/4m6pyiONbjSFUEhukcd2U=","KT1hfX2nIQI1Xznr9i+RsG3rUyXzZ6RVbqHjHtV2eDM=","EE0ClasAyF6WARGsJdpHQ2ZZnldam37fYUXxS6bTwcQ=","Cqo14shLrxF96j4zbNlqOXkrOBOVT+m/PtW5Dy9pyXc="],["KnC58dS7zNvAPhfB0dzbAgUpA9xmCeppafZhsut0yDk=","KBFUZRySHnRjFamTTxuKG7qfkq2O9Ll5EVuOLpkczXo=","KMK+L4Jk+V8LU8cyE076M4zNj9ue4rRfuGqJT32zbDc=","IYiAQeb+vVRtQnyJCxiDu5tibYy03BjcxOyPp15TChM=","FN21+toBcduAGVuVktjPK+gQkw4+pFdKNQ1l4sv/SUE="],["L2mnGY4fvMfepDJlMGo37VW5G/9lKtaapPqEeJcNQB0=","ABwe3WJkW3Otkxq4Dje7sme6MSs0FA5xbWo3R1lNMFI=","FbmM6T5HvGTOLyyWxpZjxDnEDGAwSUZvp/mksii/wys=","EsfirfpSTllY9lvi+6yAn8uoRYso5E2SZQUd4zFjz5w=","LvwrkNaIE0hJAYIi57iSLq9nznmBbvRoUx7C3lO70Wc="],["DD8FCmv1rxUZgeVePhopoTw/+kVQvSUU8a/Wxfch+DA=","DexU5tv3UgX6dbp5kr008Isu/i7NQkpz7ad4QyCho24=","HEgqJacp9d8gIlgVA0sZYJg2ShH02Yj7fMdc8y2BNvo=","JiXOSKezmkJScyYk5KuUNggSrC/JoUpfuLYHrp/YUUo=","B/AXp+vVbdCG981P1xDFCe1++OMAuai7n7nyivcQJR8="],["KiDjpKDlfZL5fJ1hhsbD6nxeVcIBRiWb4veMLMwuNZU=","EEn4IQVmtR+q+x6aXWPA7nAWc67YINnEQDsB/rcnpUk=","AuysaH71tLVoACvZ0blrS+81emnj6GtVYbkpm4LWnI4=","LToa6i5tREZoCPiMm6kD073La1i6QEQe1OvPEbvh43s=","FAdLsUyYLIHJrRceTzX+SbOcSnpy27bZyY2AO/7WXmQ="]]};_4.default=_default$c;Object.defineProperty(poseidon4$1,"__esModule",{value:!0});poseidon4$1.poseidon4=poseidon4;var _poseidon$c=_interopRequireDefault$c(poseidon_1),_unstringify$c=_interopRequireDefault$c(unstringify),_$h=_interopRequireDefault$c(_4);function _interopRequireDefault$c(he){return he&&he.__esModule?he:{default:he}}const c$i=(0,_unstringify$c.default)(_$h.default);function poseidon4(he){return(0,_poseidon$c.default)(he,c$i)}var poseidon5$1={},_5={};Object.defineProperty(_5,"__esModule",{value:!0});_5.default=void 0;var _default$b={C:["FEhhRZjgD5jnrn3qRfvYO9loZT74OQzeLoa3Bq1AxlE=","CreykTiOXJ5DwNwfWR+4Ps22UCLhtwr0O4p7QMHf98M=","K3y7IXiW9SyajAiOZUryHoTN51SjzvWxXE1UZmEtat8=","K8aw3b4dcBtlcEKL3Byhvw2ln/O7u5X8K8ccDG5nplw=","EjpVoxmAOE89ILLOy8RO1gw4wR99IOknHvq5qQXu/Tw=","A3UBzIydyBkwmnafTfCY5YiwGFi8jrfieeKIO+n7jFM=","HCEW5H4DqGuxFpWwpfbatrmkYLHrlRqwHCWeyj/UfVE=","LBghNIkDLoWpyMuOmmWDm/rtE+V7wPrknb2uv1T1b5M=","Luj+09TSxxoEKer9jl2xcY8p4iJ5hf3yrYcDyDW54DE=","KMZNj17XqsAEySAp2em/kbqUNtHM6UuTFtERxwoMFxQ=","GKAdn/t0euDePoPHB/iyT2gshPFav1cbNCVKA0eGZeA=","HCHZK+8ZfnOyNOR3e2DbFOZCpWzucVFdVOGscc3nK9M=","CtQEzLyx4ZWJfLYMgJgeu51mpmd9u+2ti2RV/mLYB7E=","Cptt6DMGT5O2rbma9sAFlFy2VMt70UyLl6+LYMwfs4c=","ExKeP5MK7W1HaQMx/wncUWDvpY3c4sPmGA1FvsOqOm8=","DXphTImRUIqxzkiVgTuxyC8Yv3v8nigMzKGAeYOTh/E=","BTL37DbjAEGwSGmGh1yROkm93y9a9f6+jDHy9AlP/qU=","BrvLjo4YAgEpPnEvSVDxsLvugIydZCY8hNnYrhVcuJI=","D1WKTbGjrAf2Hi5r7pR/c1hr9A8hHOtPaHylZ4qdyzM=","K+FApgtbXy+O3XioGKlpsgxkPkGbzwtXfCSg0Oes/pg=","HEnEuanwn3ua1fdOusxxBRK46Ge6zifLDeoG6JuW9jE=","FwwacychsSzefzPkdqOaGqd6gcBuLqxQOEewDVl2Uts=","GcJ9DlL2XKNPTjGgaOSTMca/w52SQfnUwwIEFhXPJ/E=","LxvcUlT5Igwacx/FJ2lk2rJrOF+kC2sEvtmWDiVDugg=","BbQtL7zL9NOdK+kznKvp0Nxtkh6FXNkRVLY50o1KHPA=","EiAEBxWkGtWfT0EODAWkLF/TKsUv6dBviBiNcfYeCTU=","JflSZSYVW4OUZgn3u5UH3Ukl74cd7pFtkUTrtOzhNDw=","AXv+QoQpmud0C20OIElR4xSopdBFJBkUeXipWzR0JEQ=","Kl1HZAIcpx14qWdMtnCPFYjSzq81eMQRHPizWe7wic8=","F/Atq3RfvjwIEyH+XO+EXnuNBwslFNKbKnt9icwIFdo=","GdpiYm23GZtl9K3PV/pKPbqhdkp70VVwjubzeMie8BM=","D4jilfou2BtCbJH6aTZqc+33Xzm/GGNM0mbsQDiCngU=","H+McVUhUbHlI/k7hvXQS4ygO/30gywmqhfSfJ2YUgBc=","EP3BYTvb9n84vd5WGy+R5MxItZ+Y1kNjj9wK+tv+Em4=","HyYYwuvpV0UIucUvAADjPr/drRoD/da8pu9/AJMSe+8=","Ep/n/D76xqirI9um2IbzlNoR9ZU8+Y4oJpoNuip0XdM=","Fa/UzfHk+CDBYx1KuFykujuvz+5yvq3p+uYFIxAkSOM=","Hyx0ulw2fjcNco5x4VsmiFGnu4tFUoy3NJVgeayZsBI=","ETDhhy128vk2nPWble35zhnwH6icnDaybgne9nhtrTw=","E1I9Fz9+a623O2P8HJu9vuJCxhvGhlZJMydTOlwbHco=","FNpA0K9CemXxhBta3JZThlM2j3JUy1Zn3a27rXpXTNQ=","AJH5ZADkKX6oW7GGwXswToJjjlf9Yx/2MVl24aXdi4Y=","MDMpv5AxxVFbmjTUmmS7agJnvHtUoN7KXEUCd6ACzcs=","FO1H5VwdocLwXTwaGy5sGFCfyDNuz+nbc3kW4oP6ghs=","EWHxCzV3ddgQrVO8xKINWt0rAyUcdH3rBO6UxWXljWs=","F6ilCucs5wfyK8Bw65koUcqRTrlMxo6vu4qWpxTrgiE=","Gmxh15Xbr2L5klCzfsXfiGRaHBU3kdtjErky3CUOT2I=","H4vSq4qoQGZMTu4ZjEaE3EsFdyuyoIadpnIrFfRHoTM=","H/y4UqTwAnqXmfExzXS5jM+4y8BjSdj+/MYvEMj7Pi8=","A150LsUvGbNtSJxyD0Z/+td81TvC213dskayMCH3nxg=","Hfqu5BvflNeDqin8Yrfse1VnOqgY0wX9QtF1oF8uPYY=","KCE3hHegLplQBaVjUIhUCUW9Mz8tFFXwOKIZuMR5azo=","HbSk0PI4pXCxBhxu7IHALzH/3Up8GedjF08jjQSJdCE=","FL94iUV7ILehNns0o6U4IX1pO1JCav9ApLtyiTsXhMo=","LO1Swr8pb4fldBDD7JqUg6eW0WT2BJEnEJ/w06nAhGU=","Hd6sWAWn9K2k0EQe0QjjFJ1M5lhPSa5b39RtZ2buozQ=","Lja05enJe0YjBOjitfnciOHJ8hYboEBnP5ERI/BCrnA=","DGhA0csGZtxZ6JsYZSddihZLRHxe1kNHyu5jUCwjjV4=","E34uPonnHUYfTJvD6PEhgyYqTR21XFibLK6qwBI49Yw=","JQky57CtzyyE7Uv7YKNra4LlWqlHURV7HUV5Swgciq0=","FwpykvVjTAbdO/CatcnE7NSwDVzi81+XK0VVOR8WtC0=","DWjLvnconnjVy/UdcPG3W6IV30570BSdELLFDypPO4E=","DK90VjuQUl9kWm0gNuzRMG+h3GgLSdnOTtJMl0mXMXg=","IKfRwKJ/zOeP/jcvTFgwaxZvlFbtRs3rJV45W30w1Co=","BiPzImtUcLJ4m4pTBA5ERDOF6Wuc+gvk01AVFYpGhGU=","FjIwhojCXnkPV9aKU1AkEkKlYwU0feSlAJzka4zcuR8=","LeR5Om+ZzRTj9mQiEfTQt7z6NhWXxUT/y1pWfpB29H8=","HU0G0Z6hsJyteQhtUb3hFyWlVPqZVZyi8J87tz1yjGY=","BIDnR5pmp82ephyLKJdDiZCDUKvEqvwYzXXjPdEwwUQ=","MEMLAzaOvKqRJGlgSQvPkX14aBRj4ufXRL+0QzXawk0=","C1ezcyASfUxQ8mkSSw29yysfE1IkGl0SEDKD4InAx0I=","LPSJBlDSckDhlfYKT2mO2iSbjdYUsjN2tQF40t9tK48=","HiIcVSaJi/0S3oaFGg2XA3UaLyOQCKtfm307aRHGQYQ=","KOB0ha19mS7RpY8ynKEq3OTsaT6927KVLlTTOfLuvaU=","L0TWT4TeFtxnvV6tUe+x3IOByEUgwShU3V7zoHms1OA=","BQp2vDLr0d/ivjMPME7ces5xZ6t7oVFvQCHGLPDU+sI=","L1jEXl1lmmfXgTZyQfbDXYy0Y2HZeyiUfSlCHCcFlKk=","JejamuDkLoQOBLIwNw54K9tnU0hEMlujb8fl4WDGanQ=","L+xzTaIP4yAD6gTxJ/hEck84o2i6EMKVRCUr55YED38=","KIpnePOoOYio7Rcn8V6TtMsU9OOju7kd1tH6yv/9Xu8=","INzGx1/Yklm+f0BnULPbZ5olqM0nFdJFuRdTkKySLIQ=","F/QroQlC3yXLilQXgqGLb9Mc+WXREXjHsErEW03qXdM=","Ao7rhdEVqQQCDgxhSO7GYD6c7avGZKvudkqv1FWYa6U=","Cx187POnmyrT+imPbOp66V2AwCmezJGOn4ycPTjVnUA=","BEAznJdkzsecFu/bg0omJh244/Es4c9yLSPA4R/0zwc=","BspkfClyfBlioAIXfaLVBPSwel9+tXx5uI5reru9rVw=","LqEgqGT1xAk90ali6PATx7jvd4sE0rpb/DyrKGGbqeM=","K7c3VGxK7nwMwrqHwRV+KnfEeev7Xcdq27Oc+Gl2M/0=","DjDaZJBiXTPnnNUBdvVo+aLCjC9EmivVGiXRVoaAOpM=","DffKcnihNlC5GdhUl7LrsPcQNafCBDDUEx2QOrf1dSE=","J8xYn1v1hXlKus5Yn7inSi94TAmQuA/KppRAl/hw4tU=","IlXDajjIc13kXO30Uq+oQjMtMwQveOYMQ8dFVCGzJb8=","Ez2WAr0zeNafaBwnsFvf/Ji32GzKY9c6YMrtSFeE0Ic=","DhVI6UKunT4mhgaZuTcnyBeplIYWyT70rM2YGx3D14o=","DyDw5V2TaJ/gnsMS9q9HYnSC5L3goWAqjiyNboTopq4=","LlIyhIPLW3/y605FsS5RsmIyybwXtykpVMCp9r+lG7k=","ArIWLVM+BZpu2iq7dHEu2zp4YL7qld2KSr/JV2YIBPQ=","GeCSdxXRzG04lCmUf7Nzfa1zOXTGsuE+Wz1DJRlRbHQ=","DTqABFfXd4VjYwO4uU8X3P/LRgSIcqyfdO9/J+5XNwU=","LJdNGVJVehqsX3uuSZZhbaYZtz9EHE5QTcj+nPtVnjI=","B2a/7u3izPNwjhtP8wcUwiwdQ0zb6PVVFLq8LdXZe+8=","I9rI6lQIL8Ex4XOuVeRjDNTKfIcbKgpHnB505/GR5iw=","F9X7bCyzcBDj41irLVdTdocO0zGGuOrkmtO0fjQKjX8=","F13Kx22KgSYTm1g644hTKQJG5D54P6aQPsgAfxeMACM=","DE/Qj+3l0iGtt6v1SYmMkeW+foW/H9KmEb8YLMLnFlU=","J3k0uQnnLTo0dbsex2arejitWbEoMD/FAC8Cplvf5yk=","Dog0mZjf5wPxsYRST5w5TWAEzKz5y5UolujP2wsHi2g=","HxsgeLYLD84Hgk4qK8jK6O5nNRSwBwqLRXEMx4y7mUI=","LrFVlWbFNt28MW9kgtUfo0BVdldwD1uKhG6BKg7TNNE=","HE29wzXPZ2Q1Ugi0ydJD00VB1iPGad7Cw7oGa76vZ3M=","I3SmstpvjKuOXP6NgF3Tot/KHot+ul3IV0Ah/RJB47Q=","Gd00JTPMxgOplzjj+1pWm5TvcbPkn5D7h09hYXMwcvQ=","IX1m22x/s+/6UIgAWH0us8bQPYOFEy8vzOfzXycFzM8=","CBX7hZH+AQOM06OziyNvnvynfGGNO/xsKn+okpbH5k8=","K7lDtAwr1FamwXhTscqI6w/zb1l0sv+aX1CT6b9joW8=","EaUVP85llRPufLmXSubLpYHjtM0UVwxXCf7D2NP8guk=","G3K/0HY12FAbLv+HhaJJW650x2U8+Q5tXJ8URCaDbfQ=","FJAsBwDuyJeuF4uoyvhQ15Px2HUSvqDs6jnPax/uIz0=","CcE4xuCmFqSf+Q1DprBD87dFt4hlhW3EwaReL9hMs/Q=","BbWKPc5XsoGicdaYlQUtiHRYpxV4PoMX4CSmGjXsELw=","K+jSlSXAz91eazEl473jv1WOVfvoZ/AkRXqWdlR00Dc=","Bh1y948bqdxrTX93hCJdaoG9/Bta1sJDafnAVgUj2a0=","C/GK78rP+r30ES7drcphRXOLSAOzYUW7lRbbUBoGkuk=","LnPdEF+osuyTHYzfKexnnjqYAakwcafV6jBlklXwO8Y=","D4RA72Z8mugTN7pdjJJ6U0fecpaGCyEcrR7L+101mO8=","AE0wOy3qYnsnMb6D+TrDTn0U0XihOABVjKc5Y5XrEY8=","I0VBrXIECnDaKZajUmkjDJRpnu8xOk1IBQgAjLw9N8E=","DRI/HnLSa5K92P1z0UKGwxKtTCOstGsuCMFXEEQJ4XQ=","L7Ngd28N551wmO56pBI8Be5rBai+Rgp3TzoEjhOFRbs=","A2hcB5Q04WcnbFfTzHlwO339xBwVbqHot/mbaValUyY=","Jgrw4P/8yXcsFjGxeTRFZrR6qto2geuQNMb3XDcFwcc=","KGK0E3T4m2lSdLM7dz8lVJFuK/+f9nJUX8L0lWP2J2c=","AqmRL+FwMQInGJ6h5pHQNi8Ys4tACw7/GSyllRPrqNU=","COUTreaUoNisHz6/GpZEDTLHE9UFjhIk4HA0jCgfSm8=","FApKQx4u55QA7XRll42EdzITxigmT/gPIax6a2c9Cas=","KWr00BnLXffZWbKdVJw/BxICtOuotT3F7pee0UM3eSc=","AYMuKEp/TIFhSIK2k5/A8YVXO9ICPj5QV2VHC7gSs0k=","GoTVame/3T2WWr3NMpqnjU/pNDRJby0QOGH9GdZtcmA=","BAy4KEd3OSfSrv3AdIkDep0fdjHsp1yfsN2gy5294UM=","AQ3PCEzCnLfK7PJqpjO85O0rAZ8oh87nsaePidP6vi8=","B+3CKgkR6iFEJe9UK3dtsjsP5YF4ENQMcsqYqr2a+oM=","LupKsIrsd18hSEeeo2+7lpNtpYuki9HS06zUgXOqq+c=","HkDA6CV/5KYQBc3PrRSM9/R9G1z936oIJzhpVRgkXxk=","I6J4CVg70epR9DbeVEPhCPadRM31HcHwPiGUi0mAuHY=","LkZSsETb/kDmO2sjL81fPzmr+9IFHuaK3HVAgNSSUKk=","Eeer227Lr8Ln2M3v6ce5xQR160dds8LK9/fWf0hXdfI=","GZ1SNQzDDoxzgh+AIJbw5UehNVGye/a4mTlvY6xc+Oc=","D1ddbuZ8vs2YNFYk4DKjfIWafL7zCz/dyUnNCXhIQQE=","HEtvmiritBjmJlrLqclrBhhNBwKOX7eE80da53cv8Fc=","Lctc+Ilt458ijhV8DFWT9GJvubwiUgY4PbIDYKvwySU=","E0CrufThExhr3CbL30vMpQtTGhB/hjylRFdePPhw+OE=","I2jmkrcnh8uIcOqIjnFOAG9Z0rRGDPt0xIqMxzsdGls=","H6ua3ZuqSk9W8jFld1xvLZIqdjKpT5Y3S33IUnVvVLY=","DH97gjANPGzj+JV7oeSt1UxMAV4g2XZdIgVxwWq4aA8=","FdY+hr6s2Txgg2iOXZyPPGlHkp+fH5mrV4pMOpIu/wM=","C+hDrl+bB+UlcheK99ro7QXTaxLAYHhikpNV6nQCPZ4=","EzJ0nFI2lMtpNeCWOgfoGwWWfOHZUMC3MQWOySp6DJo=","JUOUCIEOB0wL3UWYuYFf7okruVylECns8Am/+lubloI=","BX6NGd2ZmpGNopsJQLODup/RXbCw9kmW3/Z/61X5p0I=","HgFON+mxF887SHDZmfK1XTU00Ka+mOnjV/pD8B5wop0=","Gk7STm4DrrzWvbEAUz3JZll6/hXIUbS4Y/boiQhMZHk=","JTQgAHCD8aqGOtR2CQXBA57UERyfBT8ncQRS+DzjapA=","InahRBlxcJr/5tKpkyAAHsRexyFVxXXd7srA4ydZqwY=","KJV90SGOp5n9NBHrGTJYU633rorhKB91MwL+fTHfp7A=","L9klcmq3lMiL11eWqj5/HmaS8pFM+AImfd8B43kCoAg=","HPilycdqhLFHyCONklPNVbR8DEPYKWbEY2ooZ0cF/Zo=","A3PLvDBuG6uecHc2hxXmIwtLLi5KHbnGdLjDWaQekQg=","BgKD0v5/I9/1E9kRCz3GJEi8SPUxzgweq1kgvyMpCkA=","DatGXW2RB0DzPvbMDq3HG/gRm9/Vo1J9yLv636pAJjw=","DLp7y8giSyqOSroXl3IwpobNZCHcDKU0bzRGtiQ5xMM=","HkNl2weQycT0RbBlPEZv8h25bDi0B2uovWi8tN6mkR0=","G7LbohmamrO8hu9fnef2xcoT1g6rQs7WjemPxkOACo0=","CtPBhwxtbvQO661SEjzRopE9nWLoC/usroEuCCAh+co=","AbCYyR57DLtcNFiAd8Dd+VMA3fYUk1YwwM46JickUwg=","Gf1cDqwU+udZi9TO6jseKZiwwWhJO21yrkG1duVbnD8=","DUdJ15zBY/FxEKQEpG/kJ8ZDTz/me357TM+mq5W9fhg=","Hrv+gRSkG7gJ4LMzmSQSMuuUCthyjIpRbUCtpEDb/c8=","JwTlthM9l2TW0/F9SdgzIj45N/gOufrqu/upuvS0wbg=","IWXhyAJzBbGuDjI1cWNeXVQNE9cQw/mjkLaRPxTQNeM=","LjSX5NNf2llsBq+mO8Og8uVdTuukrOtg5lCBrWOqi4o=","Ax2kNF7s1ttsD3sHx4Fdet0f4FRtc49NeatcV6qEHt8=","CJ7OVOR6pckI5D5fCHN8FDaWcIkAasqxyc0Z6sSiCHY=","L1PBXire0zxH9VoHBIPmzH84Ifv4qkBnfQVS7Z0Q2Ec=","FCqjT0suitDfeiGz45wAyLCqKFcJSAHqr9cr7+0Hf5M=","F66k2kx7zw11iLAU64tAl53Scl7aTmrOMxmCRnx/8r8=","DpcMGdGXSNjEZRBNjwIgA2P5pBeG8C8YJ3QrINwNFyc=","BLytnlU3lWQvWbr3FKa9tDL8RaCgt38aujqYI0dt+bk=","JCwL+82qdvcV29S6glxx/P7WccGxkB+khMh/gQMV0M4=","JdsTQ8JBBAcQI/tu002ZCQeDEeHv6FrwoRsZEU+p55A=","L/5NnEIKWenNx8Masr81GHyhR8uJijlC3rNnd4YDaoA=","EluwOvPizxi75vW1kOs7+NDRumO+aWSD6Y8oO8fNB6M=","CBa+QnRbfbtM7/5bjiTqYP2LcZ3rpQA3rHt1lIdFxrw=","ERFg+az27DYNG2pxIxOg28viPmRCAFVHHS7kxd7bNdQ=","E3eXjhsfaokl+o57eUG9+PtZq5VCNCQZKD2CA0Nck5E=","De/B2IghZu88zeU6TyNvuoPThGIZN87lfkIaUT0NM5c=","L4+lx4xwbjpdSgPyp6OVMEbX6Uy4in7zUOZ7W6Dw3r8=","GiqVfsCnI9phwhNLqwvxe+sA5tzYRpDCMNy55Y2pSCc=","HN+HEJlfXgNBK0p/aZUy+f0B8OoWeo38Hd834oBa3e8=","Jv0xRxgow2rjbCe3SAVLDAxP5SObMBaZ43Ze6+zBiUY=","B3XZlswsRFbzA6LB+QB2R+Eakh2f6j97kmFDuZ0voL4=","AW+5M3cIymOM39qRvQ2uprlyJO97IGJnKt3RvRi7iQA=","LDkvvn0/3kL8pPlHi7Q5MxJYJVNW8YSvb3bxGQVBF9c=","GHoqO/eaafo+UInvnx/Vb9tHxV7s53qiKKo94bSGvLE=","AnGoY6KAoyZB/6M1ELLt0njJhjA1lTLz5Qaydf1dIM4=","FVdFnJx0yUqgDlr2mh4xEvtpU3zol+wMcYlY2WUW8qs=","Ko4myo1kfZpjiFFuqdz/iQg9U55YFowqUMba4w8QnyE=","Ict1IZTPQ/O1GULrAEDrqd4rz7HCo/rpeSS3EPJoMs0=","LCba+Za+JHrNbdSsrWDTi1pHHmMiGI0CwTfny0hDd+w=","AkAXbuDnmC7r6Spo0+OjjCaCGswPXQWM+ME3vKLSbxs=","JjbglzyGXBvZdN142qqNCoTNr2vhrUfs8qDRjxFzGPI=","GehPTyWnmUlgQWYdxdl1toH24GdEzuibe+XZ/eF0SsA=","Dr+JBko68kfKHzb281cBiOJx4LMmxPsmZk6J4UVMoRA=","Jcfpe0db4A6LVZo4xFI2T0ycUx/suKxpj3/XPOIucew=","BETJnlkjU+WuyqMCrdkBwU2MVScKFgr+1EKe9VmK108=","E424iHgwVl8mk9Dg8C5OeeFEln8LpTsDUZq6dktcmUo=","JNQPRiEU/p7gKq/PdLT8ok4a42XcdcO1K7E8u7LyHt0=","IeZdbY7kN2C8pA5zC130xM86inMtsUj0spUbTGHWjow=","JI3XlmnsCdvwNQoV1sdcapvarO/KFNUTAJePE9GrbRw=","K4I4wVSPnL4p/TXPkee0jw69p+Y57faf6NWrp5JNU2I=","JDn9I5JX84GBx7489RPxv3I166lPa4lCqUy93s9vYvc=","IAlYI1KBphuixL4KoygqGMdLbSYvXefC4z0rs+iT3+w=","Dh7KXfiO5fYM+n4f5b77txn62CEfqbLQL8wjMZDBfxI=","JrU0J/mz6ix2nZxmD8YIgaFpwScy0AG3FY7ksbhCyiQ=","IPOz9Kyv6fivPgZmGzqPd4+igSUiudcKZ0As/42ysbQ=","IR5dKznWJSCnpifs6MrLrJ+XUG3vTsKGkoumwn1GOxc=","C7dD7jSAISnFVnMa7Z0wLc0IUxPOVy9iQtE4MuU2tLQ=","I8smYbSI7nHkx1P/I65L0l2KRAlPZrZTKXfiIUDrpcs=","A6NaoxI5Ec20U1uu0zWfX2pSBbnJPvMdNTI6R4B7i8k=","J4A4SKCu2WqT+pQ7ZjXkUCF+E39K3nSmLXkXMicUtpc=","DLN4OcLJp/95iEy+x19B6b5eR8dtYVOCMb2BYpltb2c=","HwAm0L8fjh3VQjzC/sH7XNqh7NxMPLIY287vd8ANL5M=","AqfXu5cLim7S7mb6u7qVa22jsQD1tfuSju9C+XCCc8k=","DP1/QhXkNMjaF+wyWLC8YFrRqy6QqklDUeTuQLvEkfo=","GAsRtyBiKhVoSdxvf25/VxZZvmloIjDF7ZrDOXAKfN4=","BOlqllvOPToKJKSkV8lRWCyHE0nOfu4aq/5XipTGUBE=","FZMfeCtF9/tlbyzb0fdwXDU6I/4dMKWkahUi7RYN860=","LiluV8l6Uwms0m/r9VrJY6VETBxfcDrYig17l7ndOLE=","JhV7zreOhGu7Ji+aHgbUJxveWlvOjwQZlS+X/9E+rKg=","IZTriYR9aw8Yl/Z18ZwMVrYbEySO/zyjbjT7nRx57kM=","I1C/NUd2VomRUa193pbqeFfhVQFEcAjatrPSfI/6J08=","GkhvCuWRys2vCcWKScTReVQFQ1NAgZ4APwRp0RC3dSs=","G1bc92+yPMSoNNRVpAZeEzVxQCt98wnVm8MQXUKowwE=","GnSdeWSvC3ICkT7yBMZT8rS/tlzqt7aFIzq1nOO7aSU=","GK5ZAHP5aWlq92L/pOjw67+X+Mx4fjfN3R8yG+O+rbs=","IcR7J12C3eZGDV52mplCEUSxxanaWSlK3py7MXED8kk=","BHPdvVLnN+UnNk6OtjIHl1w41f1swysnIQKwgs0VGPs=","CxL6yVttOogdiSZXyEJOZFrE5rAFFfkC1ZRXQwKybgI=","CK52FqJgz2ZX+Pc6woRYjSxfB/9CXYN6p83O9j4+IQM=","A52vaHYoC4Doc78qMv0oNKg8aXV7rdWKiI74Gekmzig=","Jeex10cKPHXxPwtWVGyOCfLY7+/wbvdm+ceDyoadEw0=","Ho/TY0w/92QYTQNDX5hYSxG1sVrrnHUmLaPx6iwqnno=","JB3MUaw3gIpBXdHjwoHwWv8ReJ3Ayv3XejVITgmT+aQ=","H/wxU8Vu+XVZMs6ivgVzdJva/hxPoHgaS4tAeM6ddUc=","F2MNYtmj5RDIik1Dw2D5K8D6ALZgMa3sKb2VQ/06F+4=","KYBADt0ddOPWnbVFjSzNX6vbI27BaoKkMBoKtZ6kpuk=","MDT7JDZhI+xtyvytNXJtv7FhlMA23NZI+mlDm/zQDNQ=","Gqfo9Bicqd/z2yq3ZIvgojkplc5GBB4EaA3KitcjLfA=","H6GV+DSmnmI3L2DrSX2hZ2RurhQVPYA7OdxdEfXXgAs=","DyPxx01fv2GVrVpq7l5WmTxUd+hFP1uToNe6/TMwNtM=","AWVW+sk0inNatQqgiclxUbPKrwogo0+52TcFBaFRVyk=","I9kreTZIEQ/Fru8GM/DHfKyw27yhh5uKb25d9EXl9ws=","LkwQ7F5l4vI5u8Q8EwMd8mhqtA/XmjBLBdYRuCPyO3M=","EkGLv9d7Y61eFoZK2cMv+/xaPdm3jsK3kyn+XgqNKVM=","HkqKrOFavB1bdqnoSEMdLAanj3K2vrsSk+bFjlGFaW0=","Dz6WEH3s29aHLCDqCaz5LN8Xo+4dEzFIgJLZYXbet1U=","ASw3gCB/OVzCHesKvZUWge6jJJjdumzol6j58MI1cGc=","E+qxtOZyuhscG7kBdpMB8eVlnQPqEMYd4kd/8KwiFCE=","INxmSrsgt0VsBmKc43oeyxonpOiyTjG0i5xGNaowMj4=","LGseLP6njiw2eF52qM+xsFfpRx8k9bORF1w97LAeAA8=","GIySYlX1t689qWNVcpwqhnCrTCxwQASBsqyQN0Dgxas=","L5kTII4J49bp5vumOE/QdquJ8mYpduPjDghwuzDrVPI=","KzOAPZCIlwbnFPcgtWKNJvtgtUWh8+nOSaaukSsCQIY=","JsyrwQ6wQyfLXMPd4quzbwlwhsl+c4wTPJ9XB350iwk=","GxauDXxUQIy3X9kx8kZ1HysMPcINeegqJTG3bCK01d8=","EdC7RhvYryhE9J8PhAyU75UYslETRHQtH1Q4/j1BWuQ=","IzAxhHtHa+rQEY09szjokTPsQg1nPlBK1kclnfZVVx4=","H4TpeJW+5DjrPJLcmxhGya0pwWQ4ewautu0YQe2MTco=","J39/m1QvDCu19FvtBU8JYkU2AQw8+UUtInMZMyf4AdY=","HvyckGnlBouqwT0uZkVkG30n6A/CMHcWFTXERoLuV6k=","DW7Ed3YeLvusTxSzvz1SV6meZMPyX+EE+vmIsg/l/0Q=","Dg59fFUBmZt9Fhc7WbfK4fIDvvIa6/ACUYgUOcz5MBM=","IXvvL08SxtzJHCBYojORy3feU8puRNzcbqPTb+oybqY=","BXgMiK3wFTG1D4F+P+RER9KbNaqKOJxx6M8SJqzvaLo=","GHM4h6ays7TJDY5JkBluI0ReR9fqWTnr+4mj7j1ntL0=","ILrOY6z8rgscnyvuJLjp2oW6WX03sJBXIMTxXbIxsHo=","Fm6llTdaZ4asUn7p7O1z7Wv1UIdqvK86yStCyAiwDY8=","MEJiqe/0BArPQ+Mi1vUmdq4vhT7C56gNsAxIjPkXx04=","ImuscFAWbl9tt4zQsS028wW26MmgVRFK13Ceb1ckW2s=","JrL1OcVzgp9qypG6qVRQW8XD604d8dY4WCcX+98jiMw=","BqD79M1S6Tul5MbEr2XbAu6WKX+K0gDy8c/yUudptVE=","LLnCQRLTU0Gs6siDYPtSiSTli27KwyG5+ynmqjNo/yM=","IOiKTWB1Jt0H/gijVSpEZpEp64f8wLE6rI/or9kwFSE=","FURkmivXPjunLzlt+R3WVAHdj69R3jJfuu251TatlPw=","GYAHdFeZVxLETafhdxMljj+Os1S/2A7Z6vPsuvaWAQU=","JdHSL/E+dwXTwIX5f8Tk9pFLgv+qXSCR7GTaxCN2Xvc=","L+yZDvVW7+EDWkZP9VgedAZ0Rc1Uq8r2uMA5n+DSTPw=","G9lWNQbZVE7z5IMOE1RQEsV5N5wtzBMwQWxK5JvE7GE=","AK/80XumADxW36hVcfwpc3siWoDUgOfdft7AHxTyMBA=","I2cNuu+WaIHwf5GaLYgxKMeyPPdnpHeysuB2K8DbwYs=","H5OlMpFzlMfiL9F6vupjicZv164t2fAvhg9tlpR/Dt0=","LeQun1N7fWGwITdxwOdPVVUSvge2pQk0c04sW+tAvjc=","JcVX9FuZeBzTfTuyKTFmKmf3izd4LIhbRWu5bVXohAQ=","IHTItwlwXJiIU4p/ijxK/2R3Mb0W+OJU+nTqnyvnZiw=","Jzg1WVYpgTiUnkQhcdak5LdO8gZXQNt8/DoLYP1XOss=","E9Nq0KTr64GWl3hkllnGXLfQxBzFGYcf23Gp6moMqlY=","CKLBi6QTgTSMGs+/lhdxaAa0YqFpG8LjQ7ebgIXjdrA=","BZCS/Dla7ShYB7v1V62aEEH1nAeYIrEIhFeIL+57YSw=","FhkkFRtaWtLYysEZUiqZGpBvFehTHccFZ/ayg3HMJOM=","HGjKj3qhdlkHVAXvY0G45popi5pNcvO7hUswnkuoehs=","J/XQO8ocggf3I5pLLPc65VmhWqN+e93fOqsF7sXOVZI=","Dsv/SEaWKpddNH6pqPxGX7RoYVV2IvLCVkp+Y5gzwWk=","J3xN4jY9i1tFbPxaf/jkb/LsjapZhV9a1kvAUh86xWc=","GxGGLFKs01G3pGR5P0+7V/7Jn4MrYyJvldF1yNL8CLI=","BqcZxYTHT/vdchjrVly0yL2GyS49+zxz4VJyAapRI04=","Iw5K3uy3mYd/fOmljINrmdUzWEoZXB13oxOr4cfRJr0=","ELEJuGSAnEdnoTPM5sutbIhigXO46lHozKhYMMp95SI=","DiEReXDc+9SxUmslNjbzd1ONO0+q61qLJL9iANFMxZE=","Jmc0mXhAE2L2sXk57rDmT/VWB+vbNccHHbRrs+e6R3g=","BQAPpf2lBeApoTv+MEwmew2GxywDm6v20/8C7iRr4C4=","Jk2eCUrtX0GmAkIiCjSihAiQh7JDapv86BdMyb6MLiA=","CAdvnEdD3mEw/2Is9AHt0skvJL/hFPPF5ySJF0YxXEc=","EyNwq927Cx3VfypSDCUza9fO3pS5W79cIVHW2I5kG2Q=","CP8RFreiJ7/f1EZaZ4kIgrYVyMTBfyjY0klY7fYC3cs=","K8sLDbi54+ArfpwclGD92cbNmFYjMuZI2KPgq5RZdSA=","EupozmiBvsrX+KaxF7A6uXb3q9WX+QOwvyMNINIalDo=","J0OcmKdmiAZ6CXsZtv3X141fiOJ04Nj+peprdAb92n8=","AvQNCtBfVlLjHvlECtcevIQZ45NJOTfwXwBJnQKpnjY=","L78EKEMn7k9oDwa9OQ4wnQ0TrMdLnFsUtjBZuMx6v/U=","G+aG1T4qitV6gosGUUJc/Gl4xwJ+2/JH9rZyPCHfhuc=","JoO0JehaUI+WhS8UtCIPz+n3rYsXv+/A40jEfKeLtX8=","FtrOmy6AEuMdscfr5nLYa75hoao+FpPg7d/A3gqd2VE=","J6Mh+MfTyQIuli9/7y48hItFOdu3WqE58wQw/lRbzts=","BszXIQ3uHWsOIreeEtGQgtgHi3iNcQB7leendO2GplE=","CkHdQiIWU3Ur7zUPbXSpF7bLsf12o6EhZvTQvpeOQCY=","IgoCiB5NR6yU2VDN+DhidNF4LifL0NhFl43uyRKY8WU=","DiFVpUX+Xzy7Y5dgZYnqwZzZJjkznGsBcpikrTQItLk=","Dw8ZxikeUVRqJnxgzHdOX7nQiLrFMHgtiR7Br0uEcHM=","DpJbzRxt20o6HGfsje771AxTwNM+eu7xtGeVrtWUPJ0=","KtAAsXSKu4Es1uVBEoa5/z7wpb09JZo25F7wW561vus=","CmWqIy0y7W6N5j0c3/68Lz+mFkZcJ6r5fozT3P9khlI=","AmPYRwq0scYddNjoliQvTyYdyxZ6OgaSOJPXyyyT1qE=","KQHZRq3clLBA/VgATZpfjNGSZUDHqGEs7BxYy2DCs6U=","GInPqCCfSVLfkCLbncWDtXF6BpbaQc7mSTfQzWMh5pM=","I2Bk1xy2xkyEdHrCX8+NiBUC5fA7/4dWG4WhFrHzmso=","L/ehdP/Owphi4E9dvcc+vzZhVwAzV2KQwMH2zYztJ64=","GeckoddCyrEDRV8AQO33RaJpanEITJPjInFUUN1Nb1s=","A+7TiStvDmxdoQWcXzeTmFg1qig1AKgSmQSpTIfxYb8=","COK4Jzv6MMGshQMG2R5Gip6NBQkq7ky8gMaHJIRjujA=","B63Mp22DN3KIOaG2rDs+1Cr7h9cq+Y9S9Bby7FiyjOw=","Fx7zeJa64rECCgpYOb1ReEzhG7QjfVSMFxFp0y+hm0A=","IP/fy4b00AUGTtvClpGMMy0y++/xcp3lBWomq7w6Nfo=","COzXpvFzXu2GuqCU5gj0iPONuzmPz+1LmUODoMqORkc=","HD9dhuWSH96YkBifHYxhh1QohgDmkovBgqxNXkyfDMs=","KcYRhO2dRg8zdVihr2Oap+PAl15AFO2OvK1KJdUeq/M=","De/UWyiVhygiituy29rval6bGmSQKnNPQCuM77irO1Y=","CnTqItigkzYGBhAXmsHYL/+pSS33be7U6mDgEzsIEag=","A6N78S2vFADSl6xKwTuiTBfcJi2xbIUj3u5ODM3ppoA=","Ef4XkNWrv1k1/yIxjk9//mmWatovkTa1T4MOrLCmU2g=","AYFlhC9AY3XyNGaGkVr7FL8f4FZMiFjuO94Kuj3l9o8=","Jh2yXnz/Wp+3LydrH5JgtmcwD7fTYbUP1cDotplbBfk=","KjrDMUsrZueW++Nt93jF5GlyMgzEPsgHBIgmtnBLp8Q=","I8qkuA7PqZ6dP+orvB2782nRv8iTfQPQdAYcMP2M12s=","J9smAIXiJImN8UXyP2NfIGbY5OEk5YHoxiYZKbHf4Qc=","J09sX9NKeE1rkV7wXUJO5sC6u/Np55qxOLgWe1YY7H8=","LDop4TqE0moJEckona8apM9YQKraBwHVfiPfx5babaE=","HqIQ8gAaM00+gB9OUycNQtp6rzF6VTtCgqp46qIoLm0=","JU2+tSiEtpnBun+g1ugNYQkDsYo+UJw2NRzMOwJJRuM=","BZ54HWWJbr4OS6JtwvKZB/R7ze2kososcT2FBeox/V0=","C1sc7GPULV5hXcJpuIWiTO8wPseMly3RfNuz6RXMT/s=","KnwBXpw7LFfKi30m05obzIXW/6y32fvWbSqPHWTtDJI=","Kbc2uRHXGnnPY9im94bxG9Wr7iQWHcVnp8hR6uHkO1E=","KFdFqQp/49Ca9agIcEvGnG8XAeVzkS31zB4mXVlsQUE=","LZAbgZXDyWyMNuuZ/sATTsK4MEroEL0w2lVOMICCZxU=","GQXTUYNV6rp4WbWR7XuMnCU5gPBFDb31TXp3groFg5I=","I+gTAm/AuABk0ZtcVCiUL99+/qgL+o7ECVJyv9t7TJ8=","I8ChmiUsh+axwcIbGnmAAgDD+/8+MwDn5VaAcd6e+4E=","EcSuYHuuSSQTv2LNqiwoaO0f7G3AYxsGfKYPqxJbnio=","LNBV67fuRoY2XepFDwRv9iQF+uGxr8n7AXB8+B2g47k=","BTyf7y4CH6miD62iL96hUFtYoxWbu0czfb95GyFbFFI=","CjW9dOh8urqr6JrRMZ0snoY7TGMcIZOMmlOVv5eHKp8=","HBFQVlOc4gzVoE0aXEPisA++g7JZAb429d3EZm/Dg/4=","JClUBH5Xcv073tWQ7IvrTFQvLiZMjD4oTNxHNQXFGpA=","Diq9MVtHwNyThJwM3yZ+gRy9vbIApufCtn7ffLAXQhQ=","KCs3AgwIkNdRw/12lQ2AaGaOHf6uYh3VUtLeiH2i6nU=","KJM4UiZrUtnqa1u5I9nZTy5aW+XHeOdeB5QsI0tkO9k=","CZq2dlUFuhGY7xQOd7eVTU++eaBWznK6zjnASMANo88=","KvIR2OCsLY/af4SbjyKaIlxhhrVXYsensq4tHdhcV8s=","DNBw8jQBSigJq5DHHB2mHpipYyL+3Zm2qq4coQTz+s8=","Jnk+KryNPDDGBib7qhWPJjWH1r0Vgz1EixFiZLkwJWo=","IlvjbtDuheH4Ra2oTldIpWaZFSET/2G1BWtti95gwZ0=","AhdPSe2wLVFU0r7KLckrnMWVOD2h/ejwnkte4+paBl4=","D2SJHCyLAg5Gw1lMt1jwvdzb0JvQMIgW+0FzSoaYcsM=","GSqEyi+Z02mR4tKx3v85idHBVsI54Q6fVhQOGFRXYGc=","Kd/Ne2PwWr8nU6jDQda3pgxiQ7BMmhuLMyC7oEpNR4c=","HuJ61rm1qGdzOvxhorPnalK6PkvV5let6R/AOIGduls=","CrR3PxUMP4rTvJU49DzsOVp+NzGulz/v62I6CSF+ZMc=","E8NSoC9ZUYYgLLC5n6WMVUKrZ/m206Cv0QPe7/bYD0E=","KpfPLBDEv7/SmfZ8UqFp+SwFt9rFakHE3U/ofIJGzhQ=","AL7LtHBCvX+Mn2u0IhYtGu0ImihIL3/RarBqEyhf5wI=","AI5E2iHXOGkbiBdX7zftKcW9n3pEUPz1MpCpLMLKIXY=","KyBai21LcGPZMfO7XTRkBThD/n++S4PBeIP4ZSeIKhg=","LZ4yp8kFVv4QjSVawB513zOPzWOyv4TBkoDUJymIY/w=","KaMiqEwlvS3fbi5CACKNlavWNJoCJmrB27pSBzjOypc=","BnjJv8by3wEvT+VeM7torBTO0d8NAhUnkgidBG2CjEM=","D6/zpedCV5T+IKfg62FbixdgOUt/IwQoajrkAJEk2yM=","H49bYRr5/rnOqGwIQFgSBVPkBBA67iE/WkHR0CVBwNM=","Fgh12EeWAvlvQKzC0ELuUsFYi2op3kKEllptxskw6gc=","Fth6UYOjFqHXCvyVHv4s1mfHcyj8/aRYy/X+MEX0bZ4="],M:[["EkZm+AVh7VkW8vBwsb0kjG1T9E0nPZVqDIe5F2kqTRg=","EZJPAv0ZsJJVqqHPRuoFGOPXv+70dCFglJEBHbC9CwI=","JH+n8CIwShmU/1BUVsIgHvm3FzaUmNP/zkRmAe2d+EU=","A/17Ge8shh8i93/4EPVOJ3vJTrdsAtedmGvj3N8FHD8=","GL1BI5w+cVeaZ3RD7P+9VVqB7u6mk1Kmi2fIVjwMKgY=","LXjDpdKN6f81vwoldjUZblcwyn9ASTJ3B4zXXai069w="],["ClFKXCJ/TOyV36Ap6N0STDSJWqRrsnwJEfN4DVAVVAo=","GS4W0X2VayV7haZS7v3y7glYnqxb6AkVd1cj0ssdoG0=","KYzgweMRO7k1xwWOd3K1M7GqnbDAkmvciRflYFyjrBA=","CUy06DYhr9Jx5BvHFyfwFY69YSI5rJ1pixf+S+Bbf8g=","A9iAOVvpPCfWSa9f0ULnazORjLiEHVooFzvVz30yh5E=","KO6ua1hmrWjkQ7uvkWgNt9fiswN+OP72G0LLzP/OyoE="],["J4u0mntORK6kbrD4gstpKAGm5g/dW1wjxjzWXMzk/go=","Bj7ewb7YMfUGr422SNb96hRTRYh+i9z/EJA1odm2dNc=","G67xy1UJtSakIGH7U2V/mbMjJQDoVRksvoyUDgaMR18=","EyRWSse9+eIhZOmFjX+o42ixZerqPa9Otn7lnA3y5dQ=","AFdhuMauyxqMpOpN/CyDdgZKSoAEzu2iEKVSQFYt3BM=","EMnigxWdWMtMsuNf3oOjuh/cKAAu2ZY9KpnxhheKFI0="],["DDmen2eqQHB6ID/u+wuVi72tzsXKNJAdJT0CaiQZ9qI=","CD8N8/GgNR0DMOw/9gLKjMNTt/bnYscQcYTNe0I0SfY=","Gmdk1ZQ/xKcgtMChn9uMcRmEMHKHpYubX59dWCEssmM=","ARpjom/qv4f6Zr3mbMJakiyWOC12xqf/SPFTe+rtaDo=","CMp7ZGV8NUjzK+9bY60kKIpBwLJRCZrSf5Q0MH4+ZNQ=","AZmCcEcek2GVVEawzbi+qRXsBnXxzWSN3LBDA1B6RIk="],["HWs9X26jacJvgl0jYpM+qjHqNewKd8H72eAcoVI+RDI=","EZ7xiLs90NMjBpdsGZQehmS+aH56aWkton2iFabwbUA=","LZ4KtcBok9/f0DSBOBuoa25ikt9WCdcfLGSy2aefgJ4=","JfFmMb93Bg9+o0CHwCW/E1eEMZ7wjNouMUGe4KUp5lg=","FEx6EdpafF2rrj8z+9A8rYbRi8WUx5pJfsuYlO21VPE=","D5cRYmJ3I/P+rayyiwwQTLj3TeUIdS+o18DbKvE96O4="],["JL5RAJVDYgbdCr0LDLuVyIOrMEqlJZixppMG7JgaaI0=","IRYQ4q1KN3Qm+t9waLDBpsKZoWTBwaYD6u2USHDQubk=","FaZ9mBBBsfbwnz+evv2GTnedOvCBV3hqwHdQXlDsefw=","BJMn+nnSjBKiyCQGlH938Gd1sCh0aLMTaHdwHb58lZg=","IwlA3MUjJlj/nClpej/UFtFw6MmY8aqF3qDELXn5Uao=","GxIcBJzRFZ4okAfgydqZlcxLq0wm+4iOw5cqii5laWQ="]]};_5.default=_default$b;Object.defineProperty(poseidon5$1,"__esModule",{value:!0});poseidon5$1.poseidon5=poseidon5;var _poseidon$b=_interopRequireDefault$b(poseidon_1),_unstringify$b=_interopRequireDefault$b(unstringify),_$g=_interopRequireDefault$b(_5);function _interopRequireDefault$b(he){return he&&he.__esModule?he:{default:he}}const c$h=(0,_unstringify$b.default)(_$g.default);function poseidon5(he){return(0,_poseidon$b.default)(he,c$h)}var poseidon6$1={},_6={};Object.defineProperty(_6,"__esModule",{value:!0});_6.default=void 0;var _default$a={C:["IZdwP860y/B8bb9GxK2T59FOVU22bQkQL/hIJHQ/5Oc=","EyLw//x+SFS9i1/CPnEGtR9ZvVBh2LVlrKL9Pv5RL3k=","GeQU+AOAqi0iITMRjDN9gqjFiUwviIYe5G9Ej6nWE1k=","IiQRmaTfnLfWUknZViytbGXxZGDnmnk5y/3W17kgnZo=","AwEGFzU4Tfzs+aMRwireMntRx4shFhX0HHf22F6KQbY=","Ip4dhsHygQ9KJjO3tLW7YbfcXRmslf2NN5VI/ytoUO4=","DjHc+cUyCagX7rKS6YlyfD9Wv/ZYg6/l/cKKw9++pnU=","IixzGOvpYwbJ15rBEjcmPGuOslJy64hAfowpo1i0Dyo=","DLQWtCxTqCnPT8gjvo9P7dElkzlM1SkFP/TjYEl0osY=","CJJynQlZSo2LGt+/Li7XU5ne5hKEK22z0tLCqt22wKo=","GOOemuRfFLqXoVvWcnEa4SQ3XZ9IKkSHoOM03uLSfHE=","JWDJ/2cubqaduzOETQ0ihwRh0Y6vD4mS1NesZJ7dZhA=","Ib7iuO1UtybvF/dzZrHc+9p8zx5If5kW5flj6BTFcxI=","MA4bKNq+vcDUvbwZvimj3uTtqEJd0MfG6C/sFHywcLo=","LESl/0Xe6mndKWHWcBGvSYK5QF+f443kpzLSrq6IzCM=","DI1Z/ht/VQleaqrZ47Tnsck9h2ujI03RrF7GQQgpG/0=","Bs+CvF/RFdNIowsMRTeNkMyhZgRGugSXWfpTED/NeLU=","L4DtAaIRjQLiFFERw/5spw79+V2Kvq7ogpKTNH3JBhw=","C9/n9oA+Te57Am4HkHWQjLhBTj1lHdEv2mffCN3tnkI=","BsxI7YgkBVlbNNOROPULtbMaljoNumau8XwZrWIuKbE=","Kmfzum0VlJkyrFYiz54rSTgBvxalAzakUYJYvMaGfJU=","JXJyWmfGBxjfZWk0qnj764DI85WutqIM2DPEsU/vQSo=","A7t/bKQ1RbEfGXISZbQWFmV5y3UzMLGHm3loXR3wv6c=","JBKBXoY/jzvCi/y7lX+qXzkzALJRM+kiG46zFW7VwSs=","Db9k1Y3yEuQweHGWbeCXpdsJqT5bwwXOvc0GMPQzr0U=","J0wGwBFY4Ef/SnkeJbe7PbGQUp349Qtjhic/gQ8Vxqs=","I89AaT9Sq/DtPYQve8hdGiER0Kvs/Bis0P45ke5f0z0=","HaqpJlKPM2j05M+SQWa4vT/42u+8+QDm3MTuY8QJlpg=","EBA3idyUca1xhle+u2eB45vZL9IO4aMtDePqKBegFVU=","AAm8JQZQgObG6ZMuNL/eeNEIXxnp/8iWWkZgpNm21gc=","ExLHJ8tUibsXTh3LgliO36sxopmbN32r7ORm6dzWr+4=","IClKRix9DCWutTdGGOXncxZoKuPXJoJPFfAPfLmnAJ8=","JeDGvom7sEvYORyQzzVYjw6dc/2wYln0egVROteiPpE=","AISguH4LM2yakRBp+J2HWji+MT78Qg0ouewofyiBD9M=","KKA+4p9hKqsmj3YkHVTUd6HZf1gHui4YEvTTUNfG99o=","C2eUGCtyOhLgs192vVWn0QbuakA1UnxNMppvMwaNfto=","AVuaaYRlQo/GhredtJWchJW5K4USL2ppMpQINvrOqG0=","G/5SKJ+BH1w2GfFIZhOK6aEnm7dujOyaiTb9w29Z33s=","HNV0/o1eTEKLkrI6lxc0IXbh0wmn4lkFLDG9ya8JH6M=","IS0bvfqvAgBzW8WFGhVq3L+k9gf12hIuH2Ovrs04yrc=","CwR54ogg6IPZA6lR+VsTCTeI6eHKZN3yq7lLE/7p7bw=","ARD1JXwhyTedc7dunKlcUTx3oVzI7g73JthGDU+72qo=","CMUulAGpdk8MJIff7TTiFcGGtsKDjjjrWlDMpPC8aZQ=","LkIrQyPLTAr0b0sOUFL3V0TFOKvMx2Q/M5RA3Dqu7KM=","LhJIK6FgRy1FVJ/3nNBK68SjJ8S7nXjCVzuDWwXFX+Y=","Ek+l+cWpbWzOks/HPqJEYgLwkQDu0gOuQmeqY3oDLTY=","C/ZR+C+Dyh+gN6lB1OKks+CPXhYD+TOhcjrfQTV5bec=","IcZ06nuDR0HLrTmyGyQquaVVTGyfkugByx/kOCthlGM=","IU+R1sSu9X6DGGtX/Z+kihk+HK8W1/bcFVnRRKJxs0E=","ID4iGDiXKcJsb2YhPyJpwmJ4XsaMdZWZwtjj9oA1BVs=","Gqk0GYcTzhdlj1EpP61EscIvyAORQFznbJKyNJt+s6I=","EBTU5d3ZwXs8KyloRHav269/xW6LeZYWpnu8ZnjkU1E=","AzwT7UW0dipH4dLUXX/I+/nU4kVG4g3FlpEfuZFxA1g=","CbwcMnTFaeflxdd8Uf5psjt+Q1E49PMhcBai1wznHV4=","GAMXHJ28BhDjjYMI2xAdapnKkBN/arjNqyqRs2tjMio=","C6YHGqmK/sP73rRqiOSl0XvURUwOfajHSxWwhEiM/c8=","F56Qq0sIpOrSgahwkFdIfgd7cQh5kR8hX71ujr+Djpc=","HLyoi4qz8FiP+H3uqXjQAAitutgI5lEIlyOOoAf0kaQ=","L1CyCzNpK7D2J3feXjGYN315I+8vqO3giDHhD36bn1o=","FboDDo8e9vJgVm/W/P/80hoc/BIy9+xxSP8HbRumhwc=","Db4FPaAapLfA+tg6PMlm8LgoG7SUD5elUWz7nc1UOm8=","Ii7KXXVK/sqJl/Mdb8uUpdeZr7eV5o1Niwzm2Dn23X4=","Kr/6Q9dW7yQtt/WEvWJAWZERJhg2Lxspoz7iExtGpEY=","A8klJOvmcwDQ3QqsRk8Obs+WLWrUG/JoXwd7/XiOs/0=","KCJBdYreTvj/OFgwUojTtKUiCSldGkvInYhbL13DNBo=","AmNcuXPXG7PSE3vYFoDdO8YH/FSH6JjEwtg8HcKBdoc=","E8hmqmbo1QYHncJMLfex5pGZSIfTViL0z88BS76iI+k=","FR8AB8z0Kn75afG29jFZkuZZS7U0TSg5/uZiC2DiwCM=","HBxqXrzO6Mqk3H7xjhlCdPbhmNKxQN3Ml8sVySuhQJw=","GDMMnmfWL3hhqZbX7Wm7qQSw3UWfKyVPx8xT3SjkWmU=","JrdHdAyVvxOcsRvfAvpjpL2ympDxWJM6GCLN3lOHKQ0=","FHVnb7IFCEJG75vHI08xLCFPQmhS3LLsfcN3L1ea+LE=","GwOtkIDSm3Cq8wu8MgDv/+c+4mncAy0uMr0ZB2e8OA0=","IcF1+TfC+C6Zc1vHwgEoT4lXeyeh+E+iRkLs61UvRFU=","EZLgJpprZqjFiHUnqkR0wt6Rz4xx69qDXfLNzN1KTks=","DzoSwO5S8NNPK0oNzRNUG0ius9USHTERE7upeSpFpY0=","B/tSGIO994szaJIFtF5SJpRYoGG8uH7rOx4YPG1+tbc=","JI0OgFHBqWVkDJbG8BDEkx/mSLlvle9vW45HT2TPMWk=","KrVT256tLILOkf6+GAUp7/NSGHX36Qqbi3o8TeSHfNY=","IR7jvaPJXxlU7vIqCoLC7ehETkKnKoIAurahM4RtW1w=","ER2ztRhP90EvecEpkEqcrE7mWlHCBi1mcy9UvN92e+Q=","GnOEMmTPmjobtvto73YDfE+pgzflwQCWxjC0SexKX2c=","HC5aLZMy9lEoyFNYZi1qfEQ1Ot0JwnzQfaAvkUTahV4=","Dis1/hAhuHneW2enRY+mGIu96jniv0aKGiTjYlyv/5g=","LlaFlOXfv63ycrjW6Mmb14XE+pTOnof6ipo34yx6KN4=","BwQ8dXHLfcUgW/2kLWk1J6S8tYI47WpqJI55F92vDDo=","I54YoMhbhF/9a4XpY0PxqDePPGkdrfsijab/eqee/h8=","JeJHryUMVkwA9f8c8fK8hgZgDxc8tl7weAr59aG2dsg=","AxujOFZkVE4+CAHxaYsVAzpgSbJQTpzcLG4+sv0SEA0=","KjN3dzniqwrfscpWh9seBZsgNwy+7MrTLaXDYJQx/2U=","K/1vDp6Za6E3STJ7nFzsaZA9QTst8pt3fQU4Sz56+VI=","LUU9k/s2+/jjZ0fuktkMrZ4C5pLQdIwH/UPq/CzF6CM=","GHvYBD+GQs2itrrYKVjRFYGIgOuA9rcwOB2XSsXVA34=","IaymBfkqSKw1cI/lFAcp+zXD5IzOxEEhdxOwhklEOTA=","Fz/RZPUiSsBsLpnz4uqmN53xE94wqkhei7zH8P0tHgM=","BxxmpkY8P9QpK/HlrLbeYRFC1zzR21kOibYbV9RNab0=","BEpA45aFW+VQ2MzOe4LuLKrvZnW+vpImbGZpgv9yu/g=","EXbZ9S4S32fwhxEKFar5jR3tKT/9+ZWZ/t7y5RVp5PY=","BujrfdAm0lexXGYkvuLzfVtntKZxz83+5Xl+hFe2ORY=","BpaqSMHV/oTKXPWQCasLqu+7YS4yyR1e8wbe843FZzo=","CFPDOpx6fDs1XJLHXeRENl24LSQe758/rEFwBKOhrMw=","MBbAujRnjgpn9Zz5bOFukIFU9fmAJZFxfmbpW6Jat38=","CvAIYB3JVSUX8wP/niLHk6aCyqkyVvLwmk90ZUJgOw4=","BMttdrWielquOHy2R3kDGMJfwW+NfRhVo4dl+Ef3MbA=","Ls9ww3LY5e3K1J5Y1Hh18mkz1iYU8mbmtPWGF3FIVl8=","AfOTpu503WxNUrDnggpxMvjEiJdCMTwGyqbsxV891BM=","Lk1M4/l7+W/4a4jpadE+QV4UchKCdp98+MOnNyPwlNs=","MGAA7ySn9anGUuOpNnV4VU6lm/jvoL2LxXdkYMGMGt0=","JuWNYodnjz25wiXB07k658Q6aQJOvySci95AYXwrPUk=","Ce7gn4c9G/aDlx30185WyPC4uY3cBblhLAoNMXMQZVo=","DwiHnf1PoNwR3tVW7wHG+UzG9NGFU7CLyx3WBDkuwAw=","EUWffp8OPHJ3d+NNbZPsKKJb2GcXFSO61b4NWiACnrc=","BOnLtvbo6AWiD72AGlO3I/eMH1rNIniA9/N/TlsFKK0=","LS/zLregwCZt1GvVk5yamq6Is+mvXa0BpzBPmGj3x8Y=","I7d+sPJ+lQIApZBEfWRacj2bQF+iU4pct2/F/a4W2Dk=","LNbSxWWOwHktruIGfi+VjWhJiGMYpsHCcjOkaemZjC8=","CuHapCC6yQeA0MgwJr/MhK+DlT4m7Kg52naGHnOYVec=","K0lbhUVT0Cp1todjvabdjvDoH+MrXLBy0/WAqRSWe/A=","BW+l184sMrxXNTUdLUivXWySVqS3LhKjVkC1PqlZ4pY=","LsvhoGso7HjqfSLfEc0iSg4aCsejR2xcw8TlDalhqHs=","FDBTwcOH+TU71nfl226ZdXkr/+7PAtaqD+j2J1ef5s8=","BAZLJVhEmaAR6nSsBHqLN0lBibxjNCuxGC4jQhLUK9s=","EA9h9rgVQhVnYKbSmvXdhkTILeq1uQ5qxm3otKBpVko=","GNMxsugYC3qnBVwCn6d6/08CsOKiB4v/Z2iO1ltR1t0=","D8+bieGbGlX5sDJVz4DMuftqr94rRiB9hz+sgMzvCFw=","JU+AHzyJxiQ272PfZ9kSwfIxux92xse0l/dwjbz9wXs=","FtjoXleBmhCmFGG82NPTyWPE+Vr7o+TY/Q1uyIK50WE=","KclWWqcCCIvUQ+RiDYS7K/uTJTqPDwTlz0CMkoIK2oQ=","KU+2gGRkPYvrI3vXBaVXhxtfFAhiTtpG1HtYOmDSnPk=","LCbzCDFAwQS68kw9+SIxdYSqEXcEUeaoRt59x5UZcxM=","IxgRJ5hUcH26pTfLJyQecCGpSaHZZxOAp9aUTIOJBMs=","FBk2Wtu5Hx99G7CqiktdEcetBXDMbPNji+nFoqJ1tJU=","FnRCXy6fyqZusAH+ykjd1LKinobUUfANF26jW04C+4Q=","KR+Vbe9ZuHgCgADO8D17VNzC/h3Vp13BgNbVvtiYzTA=","LxMCiU/momtbwD+6ppxNlQEjlNeN5JRUnHBXt++WW8w=","BifW1tlNChmhfbRcB5b3243hPSeKKyTJmsXZLQoaHOI=","LuKXZiuv68sB345ivV9Q8DAlUVsQRl1Z86KU8L+7L8U=","EYAplF33c/Uv71Qp2nZrkC7q59lnBi/dh5xgob+rp1s=","MGBC0mL2JounietDI8IWknl1L/7GuFNsxotTvU3w6Fg=","BHKhOsfanr4RMuBfnvYJE1yCoOvZJ43vKzT4znCa7ko=","Lo92sntHQYDwDFpsLWWFC7+WAZvw1227R0OpcPQqEw8=","HjOYQWX0fCBKM/7jH2E1RLfYRqfV6kUoDt5LNiwyqqQ=","F/IuJyUr3PkacrWesnamZs5P6nrfussuqf3yhSS3tD0=","AFR+fHDuTj+0pNOGyLqlXYI6DwK8ljtDA5uIR8/25sk=","COpMy/gVvjJczRVJTzjz+XFTqwnFSoeoUrKplIByTiU=","J3y0Xz5jJxhnO6BdSMcS/nQE357/VAHOvkXRlMZ/qNs=","AVnsfqSarbOosKI8HboAI4B7DQmdPEC2nfhmqS3Iezc=","DDNIkpfiRJVt5XnFwRKrQMf7LYmGaihBj2YKhu4YUk4=","AbtPy64oovM5lWjGs4Sdon1t30/mrau1kRUWee030h8=","KiM0PSSpz6O49BP1LuGyM85MHVub80sD28bXM9UjBck=","Bwem1RWzutA6mwbWvgSN76hQE0qs0SDzj6kyZAFrd4Y=","GDfbVAHdbsMLprhmGE2lbo20Of/QQVTsRptiEgzjXLQ=","JEhyoNJ2a4VH5ralr+q/GY4UCaDwAm3jbBAXk5UvbPs=","IE+xeSfOhzx2EZY5X32kb2ecozGDKln93SrjHoTrofU=","BW9TA31djvx89qb+uhjRAr+Bi7unC4bdm3Y6EgcvTC4=","HfS8XXMjn17DuJ761T35zYrY/KVDvgH19A/qKVIHG9Y=","H/tsy7oAEVXUbhZ9H60cE78okqyHzZw0fHNKte9lg2c=","CO426IFJZTmwq9ZH01PlG2P++R/JRIgABvLCbC7PKiQ=","HDCAwlREMzKj5ig9W6tvf86KqmhIe57k43LLxswXJmU=","LcYEBQDnMp91o876TbSfm0cIWxZg+Ic7PoG3sa+Cr1M=","LIvKndKTu2fbH2b/LoIEeuk4XOZ9fzNWjNTCFqiZlLc=","KhV7l4b5Ikz2Nkiq7BufYcenCH7W64qyDGxUadQBt98=","Hg+wzdilRZHELnwmuQJ7d0F+TmUitHK/5h/4nDm8QOk=","JQFE0c6gM/14vXPuTqTP3NakL3wA4tfuZ5TUZCB9Kz0=","C2s/6aelJcpgRDxLeKjoMJV6rgQDEW0imDouaA7t/2U=","L99hPmfRdlafR0O0lj+MU+Ukgvoy5wUkfrZQvHvWFuk=","BI9ksUJ1+4b8VbPARpzYkwZ1KCfDwERjvlvqZvvXs4w=","DyAnt4HCxSSQ4R7Ut7SU1mzcFuaQtqSzySTcnW6FSDI=","KWUnhRYLJhwcIMdBUkomFHzDGR8zt06/F9RM4viLD5E=","EXaQngKls3v9R4EPy+c6+H/qEwRwqkS99rBYxNNZ4Xk=","GA8mxs4qOkd7rw2ljQaXacK/AVbWNvIlXhvDXAHpiZM=","Kv7tzCzsVyha0i5zT7f+PdZfYmAcHKSISobHpqBfCD0=","DdIah+4iYmmY281z3XUa/7SdR6AumVpBvKJjmRAwh9I=","HSG6oJ1/UPAVn6igtuDWFEbRx9tdFWZGnaaoWqciSWI=","LcWcTJ4nXNjCUGKCzFu4QsAUvqQjaxvCeoVjUbSK+AI=","LPYtCFQd/wkZumiml/RPR5HELRRHpBUTq51fdV6x84o=","L1uIU+LNLkep/t7qQEfkYIPJes1LaHrr0iZOeg6zVLE=","BYZTKKmy/UaRcMORxbqNtcZu75k45NpbrjPycDxHBzA=","KXYcn8PSxMwbEmvh3ARwqXuPJyXTJ8bRypI8KqgJKx4=","HT+x+Nw8d8tRXDe8gQ06XjuWVS1Lu1f9sBwq7rHZoEg=","BfL763yuCjXuLzpNKWTSQaDO60ez98TIe7OwUshwXZA=","H0RQFKDyZggqUCVxUmCcwhkGIVT018EyiHRpVLl5mPg=","LTWRfLHQymEe43z9kHjJJPyEvRpL/X2zzjngWzj2mLE=","BaiaTrQDh7hRLy85i2Um7+dnFpUcUA/I2ryDV3UzXO0=","BOJqo/AmARdPRs7RVZQynk9OW9XX1T1d9shjOpTdAd4=","IE1YfWFSbB4Efh3GttQDueuHMPLi37e8c1DZObrFuQ8=","IcjKIT0vRERq6Qpr2uWEO3wstT7WmfNmdeqCgKKkIOU=","EwO9kh8y+kxOc68hRXxGttaeLmosOWcWIXeHtG6CLr8=","BhOCPFtqvu8UOHRlMX5xO0Ws55wORDPXxNNSCX5cg5k=","DyfFMF7pePT3deIT47oSqQH1EUTOHqibtQRpMPXsVdE=","LK0RxpPGpidTGVCjB+B7MOqKSVEV9aU4iCd5ISDHvbA=","FrslaIPETPNzZmGORsbbTj2pep1K59XFhZWd4ycvgrE=","Ka/lC9ePcsx2NpWXZBAyS/1nFXpczbeuRbAAMuHVelE=","CTKZAuWeUkOnJq5co1QIogcUhgmrNpgTlyWu/imusWc=","BLGADmAMkOxHdrxq8XZMy9wQv1XDMU9CrNBTGtU0IP0=","KY0BELuQ5MNeKTx6fazt737pNCpZG0Mw4nJ2qhO2etE=","Ak6m5oyxqmtAfgImSaoy0bfqSjUOUQwH7uQ5KTleT4I=","Iq46GoHEVQ9foBFuE10t8r2faDWg8NA/Tdk04TIKPY0=","Hw9e7p6auyovSuBNb+CTEf4BFcHhmcKOInBeaBRC7Tc=","AjyGYGYW8xevAiRk81C0vugML8oyBkvL+D6M012sBsc=","KonE5bB0++Z9BMsD7+GMS/kEvsR1mzPa1rLIbr/SudU=","BLD0jE8uBb2kuc+AYHX5wnXfLPYLX9EUcOqnOUqCcn4=","Dt3losATJ60EKmhvRDQXvY8QfJnrfAKQDJMae9jLNJ4=","LKysycnYsABNiTIID5N4tgZ1qL2FOq0dxQZy8TchLME=","CBbzNQhiHy1WNxFWsKP3cxAw5LIY5EyQqIzsrwcXDew=","LvjgpFXUcrSb/9qTXI077hrpJIYI4qUtU/S3YxPJeSA=","FxhKivkZmrpgXdHy3RjrwC4wVc5AgGjsyq8+p8CjNK8=","FjleFTk3qDZg2294RGy5lYNkNmAnd9gfBgcTC0SIFEg=","DhdAiCI8OOlED8dzB9ZyCsMnhMnS9ZHiQ36uqbj14rs=","GecPqTd4j3ohJ1c9VsgZe9DdCWFA85BkhlxlwxtH1AI=","DkNMMp1SQq29qyR4BJX/lyML6zRLkY9vjWvX0hsDaS4=","LIioLrh8gbpCohG/LvPBWHWsFXx/OGj/81r59VqMIrw=","ER3CI+PJ/HRSqcLeRpODkV8zrfTPW0n9LgHFHQnM9DY=","EGRzU94xl7nLSPRTm1B+RTk7AAhC6LqhIYrwl/hxuuo=","DlPWQSHAqFHBs/B0I1ggNKvOaYUl0KR3JDVMBxUvcDs=","KJGTisuD7hk3VJafSqWmKlMQgdvKTewiYljqkphLQ0g=","BBBvleS6P7dNvkvFOrwXAmK6AMfGPtjEV8MidTLBLOM=","KnPmG48bq/uzixhvQB7tDZLFYTuiXdL/TQmffdPBn+U=","GOFrJGQvGRk7eYuSO43SX25IVtayG3Ka7SKBqxVPfF8=","DV+EmxZqufb8GmRGfFVXAp81mi0PGUAwxN2HXhKuNIU=","DiUlDFc2WinGOk8VMbiw71I+qpPB1wrNCqfNeETdBEI=","D4E9FK8Mhbzt+/SAs9gLnzNYU8YBiFJtgHYSdAdKWZo=","DSNWqS26rowkqM6+1kKAg+8vRpRg8Wam53Q3fngFVDU=","H7bc60lb+Q//Vsiq1wtAv3c+oQA83Qkv13pDlh6dfcc=","LApwzteZUadeI8WjI/1wbCq4fDgc/DwmkIFid0HCu+g=","E9xrO9sFFn3OtLEQNwZKxf0i214inkxrpV6DgjIdxe4=","IQ+ot3eQfsMLuI29fA5sqQBOs0JdSYAl2myQpHw1Alw=","DFz6lXE5tFpy+7+ApBCqtUVKmCZouvJLDdPATk1ZnNk=","Hx87xMIdYzQA/Pi9t75Zt/Zc7cBrsvyTqHO27xLg9Ss=","GI8O6Vqd+wPNXj+zCCcFfpM3EWRO571XSQN0wNZ1MuE=","CCOHfr+KhCt36ODztEhz6UCXJxAbGGyuK4DQz6cm7Iw=","D+gWA945zPFIymOQ1vi9yTlcovP1CHgoPZjx8OYbGv8=","LvYf4ZL1Kp186/QcE0CY8syuNcq8qhKWNWZ2j/G4NwY=","DbbQdrLdG59NVtL2b6tNe/xqOP73+a4dTC+MRLFRD1E=","KhlKSuhYPygYn5wBHRB7gvJ55qD4yovJywqlgYMcfQY=","CuU5+pymfUr0j7KS+RiMnnLy7qri5QC35yAXGMjajek=","I/ZqiUsd9NJqi6ptBbGs5RH6/9RgWzbP0Su0xtwrtNc=","E3zvUirylCrumk+4AXvzMOZGAfRmtW0yJFZp2f5bpwc=","GHqvy4eEGy351kwXZ3iaayIXZ+RjTw1VAGOgv5J4jDI=","IyEudfS4mZKjZHA27jbXSTi7mphR4T17blLa9mxMvSU=","D1TL6Wd3DfqdBosvxTq8lkibt9JmISZU0ybea5rxbWM=","I9g6YLmIerQ1m4Vp/zohm7gTZ5Vf3nKmIALTzVEQH8w=","LqZ2/n8h/Fg6sLDhiQINQssi8ERgfuFb+sfdZtpevnY=","FvN/NXoMWEgho1arVqFtQfBFApy1FfWO3gAfBagHiQs=","E5CTt4/JYDpCiK5YEe0TEb6RbkyX01pc8Y5LfkfROwM=","Cqul/K0cBHAwyL8kb0FhC2jWC60oXMFfVZAPUneKEbo=","FhGCeVbzQ1wfxn3T03lUolXqoBls3cXVphh/oKKDnvs=","I9tWNi8kiRJCHl8IetFuDJ5tK7WdswpSgY5Blkt9gSY=","LyFeZAIHqIsCmZyY8a+PoXMx0Z6j3h3s/o8uR4IkIJw=","KyomGRfA/s8rzhkCH4UG43jp0+GvtFHp0WKz2T7thhI=","L2YuTN/vX4IsuVbfdbF7RvF7CPkw9UurQySgNj4jOEs=","CHDuqy57segsQmwqsdZf2iXUJnSaU4tOpmnqox9mGgA=","FpQY3/yZ8u9dxrEBNxfBNECTSdhGRXmFclsVrGoVL6w=","Ah08skDWQAM5rVvFNbT7tAkZzmuQFi5R7GiVp8q7Q3U=","EuRcRsRbZgtq3cFJ5CFu62+xlHTIzOTXjjTDzBgCSvs=","DHyGOUt61h2MNI0YVAPcdxUv0xC10FlwN1oRtavQNUg=","MCTniyF/hdjv62AAj/cNM8PoTCONnCGgQSG0mKL7sTE=","I1l3EBtWBxztMWPB7HGHkJo+12ebtUrUCBG6MY4a/IE=","FL+IXmb3wB/ZdO/cC8LWKO15rW/GulEcWo7Dg+GnOnA=","IjMlrn5zzwk+HViRqpLtQ/gmEPEoPyZfVlSLOAcvONM=","I5pa4Tjc5qAZ9EVg73wZ0rgCXa3wQFWSJvVIcNMYpX4=","AdzDURXZBX769GjXyKfUYEjgE1nJdIVbyZc48LJHZy4=","E1mkABLFMyWHpN61YEpDbiacKCuiQMygptd7ND52u/M=","Cp7jlxIiPUwMN8JqlvJnyF/I4xrK7gwHNU03mNxQA+c=","EYEtHKNnGuaIqYdyM+617CmGj3zXxeEydTkahBZ+AjE=","JDXNaZvJSYWUXYeJYHcPkpjUDA4otrWXkGngWQlS8Lg=","K/AgeF5BF6HqWTDNU1UwO/mqsqHqDWaFOR9A7qsq8KA=","LO9seFd8npenaFUpLKkuQmmsU+m3Q53/usLtpcZ1gCQ=","CaMOAMnw9vJg8F8CnNqnx6/KUGpc5WLId7O41UMTVCk=","H9hZKPjIBTybJkp08SG5C7+a6AY+DolnAWW5umaj580=","JEgiednvpXhips1FJKoonmlQYG34zfj7yu1LZ0/a3pE=","ECYKOc+w2CrYGCppUfnHgKRV/B3kjEF9bOayfzZGIYU=","JSB4J6dgUtSJuyaYcw1cP8lxkqRCBXjSR0o3rn1+MUg=","KONrY07L33uOT54aNH35XXcfFdl/LVxAHt9qbjdYdL0=","Bz8N6m+D1EPuO6J8W38AZKt8wNNLq66Fn2v2bUah4WU=","FMZhhWn3SP9lUUQ3rbz6l/h7mw0WkEjoTFU7qYiMRR4=","DHZ1oEK6bMdPpYigsm/cTy0fEZoP5u8RG+ai1FtLvK0=","A9+tfbPzLG7YEwxDz/YE2+HCnb/yUMaEyVXwnklfs0w=","IBFCgfvjXBiBZPxtQUQgD8HZ7EM+/Gd0gL0s3LNbZOY=","KeQvUhix6j+tBqSOIpLA/j3wiixKgjo75LmYlV2ooh0=","E79AOUiNlLG2pn8lYpba62x8gPrScm1um+EeF8I1KBY=","GEek42s+rOE95Y+kZiqfiMnBekZObb0gg8KTjCJ+4/o=","CnogVse3k4Svn+PGgmgwFF9R9vjKXRo0Tilcp2Y62ic=","GBJ4yqFb37WUDP8rwyFv8GpFli1Jed/A1slJk7t96G0=","CopvT7ui7gmjbTkPuxSF+3ic8/n2QdrgEVIMjxDlekM=","CPa0wNe9XkyH+8aHRSDjMpwGe2hB/IM6o3UUQ16YfOo=","IgaywY8ykuepqRA5aDpV2BPdkUsMfVIyEEJP8PKBffc=","AYbO9cBLOmwy2iZAWhbN01nfV76Okykay+uj9IcynPw=","B1r/Z1cOoXx8eckRTHoQ1TPGCAttFaW+vRIE/c3ncvA=","KwbYOJupYhw4adLoslrBXiyXOJyq9/l6NXAL5mwWVag=","BPxtCmtndEQoFhy1IoqU58DpXe3oBLK0ehgFWs1zeus=","JeSilbTnotxxOU1B7CqPSxJOWMI0RIoCiiw7xq0l5ps=","AJTCSrAcbbWU/akHtjmns6VDAUOTQOiJtsqctsugZ7A=","J1GCGm47IgbNa8PNXZjLrohQdF7Gy76kE+clTSpRRUk=","FFquzCTjh425qNdxSbJBntW0LfAl7L0ajpfYuBeQS7k=","DSqgDMblFn2EXuGHe3qgWbXlFRxX5MFj2jQD+alXVfI=","JCM7aYYccMRJ69NuRCDd/DwkK2n/bj1MYJDCvQinZMI=","LFX+GnUUfJyCb3Yvg21WRaxBhLoZJ91Wp23AVqmJVmc=","GXebHLFqnHllQBZnSXi4tu4aeLZFed6T7S1nueSfCY4=","GAdyG6YPuuR2/2ASDB9H7AvOaSz8ABAq5QvZN2xaIqE=","HAII9auhJ1CAL73DvxLqyeAK2nCPFn1LFnvX1LA9dvE=","CQtuKP9UHMOIaavi9dv7n76IjSECHynSvduRJ9PCc74=","GT1sfnatlOtZogAQp5nHv5ao3ajJCIfWUhTIZl7NoBs=","Cd3VvAsfjUxPGnoQLBuhLsfnVAzaKFpWTqfEdTr4qNE=","MAod1f2hXRqc/iooeAGBcWhyHaL5cBOVSeFoEfVVvh8=","FSCQjfLu+6B1u0HP4HQOHloe4YHOSSAW4VJwbkk89HA=","Cz8hXVLoXsPGgmmOvLYigjOulRj5RQ9IBonnzzATeEY=","BQmWoHr2dlxWqO4vc2ZQ3rSXK/zdsZSg7+sZVNqopNc=","I6WTJtr1+U87UZLBjtBsxYzZYI5EE4aGOZ3E8e6Aet0=","HSILmt0FkoZomM6DSxvcIAOXboFcDPfT9ri/lnrVZJY=","GbScTaPZ46JtNlZnOGWJI0d8UE52o4qCsbEkcQT2geE=","E53sxWewa0lb1vPPAGwFt+HyXVt6xVREXDfdKFvqrno=","Glp9i8qNTwfUzW6bzQDACeMJnpmvMIDeu7IfkPjltCU=","BiHjgR09y5WE0Ki+QeQx1YjJMnTIVJ5iX5j9FZg6gJ4=","AqQcLSvPFGZKATCgIdqm79SjsMOt7ThjW/+X43he1r0=","Ic+1S6cvwGeUlHzDvaM9gVNVQW4qrhkITYRHHu3KOZ0=","BRFQk4lAiaICpM+NCuoynYPL4OznQRYPmXXPAbfIXcY=","LkBUHKynZTISgnEpVZq0IqHAam9IyXQpFHDGX8Bw37Y=","B+6t1zAoT1q2B3iQC2AwDSeXAAGqY+Ruu3+c2hFXYA4=","DPM+SWTTUK3yBR+OLoRI0zJNJNP0hYQH9P1g0zM72Y0=","KHxgSD4tsxPxor2pLB4cKLZe8Lmd9Kz7dXCe32o7/Lk=","KJRA9Lf9uLKyJmHQdC6WlROcGh7O9Tw/694LX22btKU=","KRvaLDf6yWKiRVWnq+s22Oi56yUiL5f0gX7y5bC8cgg=","DhBUSViUEkBM2nuC8U1SdZT/mdBM6olNbswxURn0K3M=","DmCX8K1BiscSOufrps1FIrf/qNyM9gofg2viPkHsJeU=","Iv22dnJAF6+oqAacYtMHqk/1LBRFrUG5TD5AbjPg3vE=","AgTVlK14Va0PaVB0KxnmDCxTOIF6q37nv2McOqkhYPE=","C2pkPa0/lTh3EQUX97M2UYyPwR2Gi8cuds12w7L33Bs=","BBiepsK9SwD6Y0mt3hcCfrfXY1OhC9B9CUJjlEfLQ9M=","I7yESdiYp1JLLf3iYwNsrC4Uk1E0+MO69/HhPqLe7Dw=","ABfvpgjZlBvGTTngslk7dCV226JX+rMj1MmcekIQehY=","AvBhR16diIizh3+TCOd1ihb5Hjo0pYVvFa0Lny+S4rQ=","HyV9TW8yd2dKBhMw1z1roTXafLDLoxhoaHL+HvbVLiU=","GVNA9sH3tfYViIS9I3cVFJzqSI7b/YD8m5zGHDhIU6s=","Jz4gAXnFxF2GCyaiCywIU8EAj5QkWdXNvtYz7eAxqh0=","JL0OzqHh35evDylsDnktZ24sjgLoCKFYvb4BQxxeSkg=","DG5vD3wggR9ARZnUWK9cbLQatnFZnWNQ3zjoIQS8aDU=","He4TUkcCNc2OEptWEfqVNwa8CNWPaj7z2ANw2NGWg6I=","G+DMMDQ6Fo/afHV6wMfl4Wr92/tyZYeAgHJaEvoSrUw=","GkSav2RPaKZMIXxqBCojEQfKjZxhkghYDrdrvZIV2YQ=","CAEX3eWPIopFn1nZDmS6vi2vR2qaLKAY+qPF/sqsF4k=","JKuaFnthhV4PLGC/8JjV630VFm+rUfK2LICd4xjW0XY=","K1asqdWVRgUDNjKSvM3IDoIyAfcbVL2mhMk+sIk3hPY=","BXNh7CPIezAID/HN80Z9V8laEq+/xIq14eTeAWKkG1o=","G67Rdxd6Jey7+vTyBNmSHq3jaJuhN4zZNizBQUUIn5U=","AMzbbV9JE9dlaInDEpdf2+DgMJqEGEn9gI119ZOnFIE=","LFL14e9X3l3eUoRxzB8O54OZKd+Y7nQ9nv+WJRVWGRA=","AjSkoy92fy4cpI2tOi/dP/VLLKPVPOE/yQUkFK1/dVU=","GCtMDFUasM4ZkLRyJ495S6nMYqvMkKie/dgHdlWONDM=","ABqyu9vQQ9LX0aTrdttN5x/d8Z7fENfNuVUOGEblP9U=","IG5s0eMVTBE6dipijiSUCQe0HpDnwtQ6olbqUkmXg1g=","J4Fsq0vsGFd70zW9r4KYeYomG7F1E3F31GupXdA9yLs=","FoC2MqBL4+se1k71iUQLP5Umsq2CzwuIOdPnsPWFvIw=","GWsswObgdijfgjT1jAJ8GQx1sDQlEe/qTDckxP7dbnU=","KasLYGXrvvxoRgisxr87X8aTdww4v5G0vjj+b3JkdIY=","IkzoFNOcOC2i1l7M2d60gFbt4Yxe/LjiVRW3J+VAqFk=","GV4cso84qctXsscZtQT1/dHUJVm2o2gmT9D7/vpmVZ8=","Dp5etw9EkLptvRwO4dZyTM3Vis3xOHhc6Y7jhI/7eEA=","GZXJyOUgAU5EEuxlODnXgVSM9x9G++tRkZWCImy9WyE=","CIYJXMN2yH+mUwACg6bq4RAImC8nEEr+4Zj8N38m4yQ=","E3YeIGs+ibI94jQr/Khg+bDZo21IaqEVVl+fUjacEk0=","IqjGz8DjilAKR1FcUZrWpyUG7A1QjeJZQsEPUfDfq4E=","GJhenH6m8aFpYuTifPGqSqMIaTixP47pRlpex7697gM=","IVtSPOPwVckusUjAACfRrUBqKr1kCBBD4NFUkoRbMaQ=","AQL3jHUTsJO4hXJrffLnApiAGz5AGc3UIjnXZEhYjDE=","C86IYC/ToPCriIWJGtRARQWPms4R/avSTo36GwpK5yc=","B0X3YPjUZvwhBD4ikubLsgtiJ1F/UgAlESnFSB9S+ks=","BAbeOAdEXG08vfexdMQQqZihUw/MqZFTWiomLeTi7lY=","Jneec0Y0kGjbumb3hPh+JDzCfKtZ6If37XoBF4h9Gs0=","JRUGUqCK+MpXTHxcd//Zixclmh2RSm6kHbdQFCZ5Sdg=","ALuNE0OAQPZ0p57UIgLFv25n3m/D9rZcqDfOq3lfzG8=","DB6/QO6qw9Shkt1Q7iXABn9m7/YinQRdWoAQZ2Oczyw=","GjlzHrMv21HdeTdU92EDtcq4aUeq0S1JDUlRky/yByc=","K6rT1BsYrhDEY68WYuyyjGmIUk7d7TaUNnKg6Fe5YPg=","LneNoVGLak+tLoM+QUZvsv6C9PjfG1whjN07fkmvZ+E=","FW3HF5MNZJAWd0ORHpv01GNK4Em1OtqygWmGRfixbcY=","EX8u8XEmkqudvcUdtJaLRfXgEE+eUoEyk0nZCLI+Ixw=","CygbXZ3SyhqS4tg7UIe2oI1qsIMw9HUSqgR7L4i6aMw=","HCgDdm3ZCWVnozZgYXZPjJFvKi3WQLbuwJQsy3XUB2c=","EgF01TulfRoUG/QOTHBWg2aL1VgAAAqrbzR2a3tldaI=","DDeyUCD4x26lU23lTHIuR9AXldMbXtc0ZufYuK03bUY=","ClCPNFzJqLDDC6J2UbocOtg5gCWkAApcJQAijET6kbg=","Eq+kn/TYtMbDcvfgZYQHg8uUl+6syEejQPYfGCPLKo0=","Kfw3617HzQBICVFreqPHFvT39ud3L0Q+BzCwHdUHGlU=","IEj7nB/aztD9xRWUkNspd+V9vL/3UUrR5SonG/hN0ag=","AKbEIjqr5YPombvNAxSkdDGB8dXgPbwRyKTQJVD6tk8=","FfRiq1shwxVX4l2cItjcagzKk8jtaKNWVc/3RWhnZNA=","J7wcmvaO3443MBlxJL5VnxRy5+O7oNNeB5stG55Cce8=","Gi7BSPkA7q44wNPW79pk4UaSnHHrgtoxOaOoWWjsbrw=","BP9By1U8phbQYWVFki8gMLcbI1S80cVdfqvK6okEwi4=","LyxOexioRfzWrdZwCfwjexSphGGSYKez04cS4DoISbc=","IpJcYGofCRwdXHEi+OGo/+pqFAAxEGgmrFOpxp2EwKs=","EOKox7Er9wJmwldXPKJZTYgRYz93gi18IysynFtOcnk=","FxIxlZWuRkmSUkv45Ii3g/pFs1SM0/Fi1Ya84x7HGEw=","LpYWmH0zMziOpaHLVrTBYfJ5/xlFSmSt5D2u1NzaXAs=","LGghDXVmDfXZqDkqKAXqFhL8YTfPWzWmj8HwOs+/5Mo=","BTzzcHKD34cwtuH2N9I8Z7CzUzBho1vLDLD5u+TorcI=","B1d0kUg9A9d2nazHlge5iXCBwAld7Nzj0ifAWd3t22Y=","BWObIyTAsK+BxbJWymstRrler4Vfwmztv5BBExLeShI=","DskJROuPw2xS8/0TdjcU9BzqH/SH6jnXC9lOm3+PFtU=","HpbNOsNFuy5b0+dVki+Er68wPW+yJ/xo9wO5NmX16pY=","BAhCVAXGa6p9SYWObVhx5bQv/rsN+IWoJJQtoeLjbVg=","KE13VmtC85E9QeuwUouJlCbggFqtuZV6U0sCKwgaqXc=","CwROWYSIfNozf1jHylCngSbetWJPZEUWI5QnlI19Brw=","BIaXIXnuNJZ5W97RwvyWdMDD9xtYFQycUlBjpvKzQNg=","JbdWgxbEsv75tyVDtgM7MXp7/kBmI+R8to5ceSlua+4=","DOyedMNEGYcDzv8opNESdfbFwVc4qlpUoZJpJh7GqKg=","K8w0qZNFF0yXpl6JeBlEhqmVfJ1zbwyjm5gTCAHRoRQ=","LdsuvArJj2SYwPK+LXPoanhpQKHoxVjY2+2Nb0SwJVE=","JkK0ogjlA+NIBxjU0gU1H0PaGD7ShO16OF73zcqAvqg=","I/q9sJtIG8dkECroXM8eb/ccd2L4utBKLeP3oCXLUIc=","CuTtDqatt0udMn+80B2/N/X2xGdIDIql9JUSTPcLgj4=","CQNOGmRtZnS+8EGvp3TjY0+vitzHxxvC7W4DsLRJIBY=","KBfqILRxpL8Tjex52E+fbAAV4MoUe2UGg99LM3K1XvI=","Lft/gUJcLe9r+k6DPlHpEimDl954/Sqhf20d0vE3nKk=","E3tb23RlI8BR1oC+CNqmsNVMn/cJnyv1zolMJKjvHzc=","A5AOx63I4or3BGgz260/oQJOOCrr4CvLU1JD3cohqoU=","KyhbbCOyXFLyB5hjx1nmoQwz348ZFVHq1T6lCFEctVU=","EkIGe+IgLRssMrecRk4tbJd+b9EtizUoHoTDdYZGE9g=","HoaQ9bCocpuVNu8pIKvn5vPu6AUjexWNmX22OxdSXu8=","BH9RE+Eoe1VyyC7bNp+w9xepHyYe+dgXZKWyea2cE7o=","LYgA8hzWd01aaqWK4s0yWTWT0XO2hxIqTWHER0OQIQU=","J0uhUh1bxcWAZH8Q0aTEyt7vCIaF0ZdpebrYE3VvhLA=","F4lbfBDWpHUxDTSgc3767d3Kjx7unY1W5/5JNMi1ZEE=","Bu7RGun3DfXO0JsabbJYl4z1vsrS9m0Vdhv2Hn3BNEA=","MDa1IcYxzl01meN/al2vkohCzvy80sa/hOLbXe10jwk=","H1LW6awol2xab78WjIGEeGRckNcuNnYJ19eAWmNnSC0=","Kg5gNWh11qzhBVkys92e85w92HEJHpajI8FZbO2zXms=","AgiWM6YZTz7Tju7CyPVNDH9DSTj967nA4YMNvlMRw48=","F4xz0naXZdhTgyg/2w12lFfP7wYSuqljM2usEkC2BMI=","L8ILyrqePZbrzdcQ47NBg31dDbhJ54nyjEvlAEr6GaA=","FRpCO+5n+xTVrSefQlIT234PIUlJgt+HI1TAHw9Kciw=","JdYWGeE1aQxOEOSv609VeK0PjiXCBzU2aJWzHuvN9H4=","Fd1Xm70HVCkwHXKV0+aF2DK/nzbFEnfQnyw6ZksEXNc=","I2+im4FnjIoQn9NhwcqQrfRCPBPPW4zBAytyg7zJWbE=","KoDLrJuITiA2hpG/FWfLcyBTepd9oQ5TxbrqNEbAHR0=","EdTLiVeTezYoo7P00n8nbMDBebDCKywT//vehf2RI3g=","Eom/jsUHv3UqB8m3HvwPgApS++sWN8UBD6VOratAKUY=","JvhCsamTlCl9JXmfLwPcnkkD530t3APsL7FVRm2m8wM=","FZRLmVS2GCMU6Hj6L54JHcxA6txI0305vdXwmQXDo2k=","B0IWbc2OvYV2pr/g8f7RN5OSj4RELHRloAEvWEQm+t8=","CGA9Wg6Te1NTtWsFdo/VC955LnL9YcBjRMvXNXB7aP8=","DKoXEcZukwG28l4hoxaD2Av1jYYDLQO/0luXd+23SnU=","LWUG2mldIIff+HtfY27mdvqwDDKuRcdbPbNF8/50oxE=","DZJEsHr5turv9vhAScsuAdddxMtoUzYG6Xa4swB1jIQ=","JDq8PDOC+qXd4/HDtDIELT8DDvah9UAao3rNFcscjEY=","FoQW4KbSddMO2jmJJC4HIwJHJ9OweRsG+OG/6O/kAZg=","G83u8DaT0a0OqAxlaIZUr/5jSqFMsRrjpJFoHZxfjus=","AvZr/aPSob3tsKuL9+scTlUb71jZT61/fCMRB+VlOQk=","AZ9oAhcauCpZIvAj/ezAl+uKwf0KHtNJr+mnuUKYl1o=","GVocc4OY/u2MdgRooFVsIyZFod2GLYfB9QjJSa1Sw64=","CjajpG5uwWVn364fhT82Dm8kkkgQ6DjLJO0bD8438eM=","ACEjwp6of36ns1wl+ejdPoG7w5dMPBfGB82EDAnzdK4=","AqcXSZy2wx9x8PA1Kw9b/vMAW4DpOlILbkKzmFeJ4tM=","D8BTWEsKRgeiKT4YuqMJxS/ckz6bqQ/TJ6qoyM/E2qE=","ExDRlCEpc3sy6HqG9FcwMrG5muPG1xuv73tJR5SFVUE=","G/ra5T/IKQD1dhxVj+5eEhjmsqZlfnS1QJae60nguN4=","KMCKaeXzZBRg/yxgt1eTlWUMW2r7OS2hQtMt6Gd1Vuo=","IjIi7kK2ypl/RNZD7Wo/KwQPR/6M2SIWPZ2diyYi2Qk=","Bk2tR1LnCP8puwhC0sRSpxRItDlJNFaQAxyxJViIdqA=","LV3cIXlwQ5lrItyruaG6bIK3HpobxZGduL79NUEQVqU=","JjFfzZteGiZuyOn2YA9abgvNsi+SbWFZHoP6IQacDgs=","B1knOkF3/N6rI9o4tHj68tTyLoLzRqp1SwoTMbyDce4=","CeEzAOrecFaPoKhA6pcpiW3dhMNk1iedNKC50UePzyo=","E+l+08FvrWy1t7uVTyePJDSyL4zAVEY6FFy+AkDU+Lw=","Bc00htylj06yIbwsvtuKowJ83ldllxux9hwnLFqlGtA=","AFzlI/a8Idrx30aLEv0+hmXhwWl4FqmmcaOythScfeQ=","IQMGbMXfVeZ815FAKBRftx8InWccg8W1N6vqSCstjLs=","A5+Ad72bcfkcoFAurMwWcsU59yMpMXqvgXPS7ddjaSg=","Ike8DMQ3NwW4lnKiIFNG5q86ZCLoG09Ihdw698rcxcU=","J7zHaL0xudAGh6flPDzlPEJnYnBhiHkOogsugZY434A=","DZHO9Rp296YsUcc6KAlzLXmsNQFZgU6lNkhzaM/f1wg=","IKns3GSaJjiNxo3AI0Og8We61G1qoc0AhTf2J7oUBzA=","IxNBSaDUVnxt/JEdXLgMGhAWIg054MIwMl2uKUH1KLs=","KgdQfp8DCkLG8pzPHJzE8+WlsNvwWHTV7a3AP+dLlHQ=","G99mux1X/XiOVO8p8G81/bJym3GM6BFSzzqvxklmEQs=","J1wz0H+eczjd9QeDvxWNUb5hm/d6EgIM9WMLeOfg0Lk=","FkEVVOVf5gSh/xs7W3r7aiv9DzLEBwtVvxrSNOiygRY=","Bz5qx+avInVXJJyhpcVSIqNsZBvChRoN/Ptggx9nWag=","EKb96IxfYh10hUPHaiGPlcICu8O6ygaDjzEzGwVW4S8=","KcWGWiZYjKiogSigcshDTMl6G87CPhNvA40p3PlrDrY=","Iz4O9q0TLtIRsZEc3VaVdv6owXymTk1d1Rb8ygchLBo=","CW+bkrnPLH1mRAiimGA2X1tq3CONh4pHa97T5NLguEA=","L8eI/oqtTCi5Q7tXy5Dt9tex8eg13h+/MZLjldt4VVQ=","G6wO1gkjMUhQN5X8XhFAdu98nXIrxkjdAzjZaJ9uAjo=","ABw1JoqgMNbNFI4Qbj/CMJTlYVc9jHKmn8ODZD4q3II=","K7H4/l2ZjQuLkoN/+ye/56Oc45/5T8Fn3cyVpyAuNLI=","GphXZFCkPl5wW5r2jNDBRUItojlFYwsQuOgh3WH5orI=","JxTTfuUG77wrqZQQQ/sj8Wr5ZvEj1lPzg4i8vdUOYDc=","F10EgLoUq/C8uAdaA/SioB/37XVBORe1PlDqAMwqStA=","ID3kWgN7de9jdhdQ3OCNor53CXAeyBWMF/wCb9CE1UE=","Jlqr/Hi3DKmFwykIDWMpoSVg92sBzD1DGnKDAiGTq/g=","E1Ro3763Dowu2v+shlimwisq0VIKwIGcEnry6l86h6g=","IWpB4kMp3tplqKggAchM6ChsYXWER/8b+p2Sk7ZxH90=","KIftSXl71mUr7Yu5muNFrXDRonzbIblGC7b9DU/kguY=","A+K/gmkMgEu27jx52r0YkupTqYEeJCShn65Ea4rknK0=","Dm3OG75unkZcvhTcxhVhGGdBRnbdiozplGZJscToERY="],M:[["Kr2eFre0gomqGc3+xyb6P6FcwWJRAq5RG8pF850zfp0=","G0vFiF0c/I62kYdTANtaDHNirjgYmKyvi2PK0E7LNsY=","CKcvu1Xd4+k8WBhXGkJKVJU2lQKe7bz5Hq6wEnUcf4M=","D5U1mh9oRdSSGJL4PlALuxs9N2PY/HYkAK8Dmwq7g/U=","FvAXUc6YUyiv3jTYFhne+0Pmx7Xa31LQ+CRy+853cNk=","HDkWJjKEV/yvpinz5tM+JVXo2IXjwHzsyK8fTVZZZBc=","AJcPZxubo14+PGQtHguAMgI+1brJHCwQVvA5ZaQsUpc="],["H+n+tcf3x6Qmv/AyzWoxWCeLbGssxXqHEhP8r9ZCeYk=","DMfquxVKp5VerEehn2Q3orjewP6eVoYVD/boixp7S8Q=","A5Pv2WOZqgcm75r3m+i2xxXkKZBsoNFQdrWpkP6nWs4=","CHEjODW3UuoDDPik9DdxKW7rM/aX0bCCXbR9OayeWVU=","GgJ5jwR6Ubquo0/Psmymr+lqX60dLbQnBJe25lBIkcs=","BVZl123zzQ/LcTwjTqedBqMdbj5MO8xlfbpMZk1aDaA=","Ju6WkaY47cfJGIfjAvxV6Od1goakSEWtiP1947sQUsE="],["AM2y255PnXMtIXxeMRSCEWXUnlotQVVrzVPQxNQzIkw=","AS87spyXJ5MYISP1xJMG4Wo6eHxLzZx5ihMbcIVtHL4=","C7qQBkBMXt6CtSdnfa9ETtQ/0eDb3FUo3SzR8XrXNIE=","F+TnO/cB+I0hms8cpjkMweF8n4SxcTggg3ygcL6Eotw=","I0uKB371K1OjQ7jaWyDMNYrWB2DdYCdtSFAV9z1T0gc=","LcP9dzlLe1rBy9G0bm3tW4NdchekxQpIeumjWn/UXZ0=","FmhHdkD6sUxyscFv8BkuSM+ILxIna9Evl/gsbuLmHkg="],["CWZCFspWXBpE/CuYNH6os2kEs4d/IVncyZmJWt601ws=","ER/Y384r07e6DPqT4g+2hav3bXcwWFe43zCRTkhJ7O8=","GfU8ClkrPqk0l6UR5W9mdTWYJlsatndNpI7sBOTZNCY=","GbaDw507AC/DUjt77lpgFIsdvfGN0cMY5qVB6M9moXQ=","JUcROoGHefE+NEhxnH7xALgDa7Pogt1eZFbDUxHBvVs=","AM8Uj4BFzb57sQE/cuvUEmo+NcupqXBEG6jVvHaUOws=","MAhCHu12egkzIqCcNzOXOgOBaMsozS4fcJB2wAuGlZk="],["FGP1HUpMseuhbbwRVWaqSP53tDwkTJmIo8ZY0vVkk9Y=","Fq/Y9MOQOLgAalnSkq6oRzHA+DgyphuCJQ7ZARjo/sI=","IpY2HzvxVO+6uZaSGTbpsd/4NScR+VhjgXIFUzPgdXk=","HDFg666xD4CfaYQ8+NW7rKGY0fjjQ5vim+uS2QnsiRw=","CUxmvc/1Q4LNkhOr5DMS7bW01BTG4JrMokkSp2NUBMY=","Log71AjEyCbQBP93fXwJOENKtbuE80IOXZS4U7F0b4k=","Ior21CXpGng90Y/Ymms4vaBT8vI8CUuHXyfLOruiAws="],["IU5BeIvSuZA0fH8qj0dhLU386xoebaOBZYc99mzlH1k=","A/uoLT94NiCHPalOn06EyLUp129U5LXX1IBScq+bl3U=","BmeC/j6GneLOvX679g+0NXhTKd+xKtm9G05G7TYolRE=","HFzWsj7zNr4B76N6J+a3quXRZD/O6yEs3/UViINftTc=","LztL8PEF+I4nJIrwlOKf7tn/P62aeU4VgwvSsxFTlFM=","L0CF6qn4Cmm3Ofwj8v5AV/ZHKbMReD/PqzoKNvwf9DI=","I2NgM0npT1IPofmP4lB/aq42GTQHiqWaFiFMCIGFY4s="],["BUhUFyT2TiASgmCJmr6PvN/xhKGVepOF+3FZI78Px50=","IcXiWmmRNk5ZogXlsByBHe6wlWgKcpKDac/S3nGxT5g=","EcXMU/YzjIJYF6/3eSou+86P/xcTANQUVaLtrDdmPQI=","J6CUn9yfEElcTuchSqDt0q2O72j1d9qLlvnYejlQS/k=","HH/Gjz+95KI8RV7w0NvODOVWoBlObVUsBFXLtbDCMOI=","EdD1b8AOfYWzopOf0zmR3Iq8HO0MPzxTDL+0UA1j3pw=","AbLp0g2bVd6wSMq+Fjbw6WNjvsiGZ5y9kfMy+yut5E8="]]};_6.default=_default$a;Object.defineProperty(poseidon6$1,"__esModule",{value:!0});poseidon6$1.poseidon6=poseidon6;var _poseidon$a=_interopRequireDefault$a(poseidon_1),_unstringify$a=_interopRequireDefault$a(unstringify),_$f=_interopRequireDefault$a(_6);function _interopRequireDefault$a(he){return he&&he.__esModule?he:{default:he}}const c$g=(0,_unstringify$a.default)(_$f.default);function poseidon6(he){return(0,_poseidon$a.default)(he,c$g)}var poseidon7$1={},_7={};Object.defineProperty(_7,"__esModule",{value:!0});_7.default=void 0;var _default$9={C:["EjmS3zudqmUTnsE/u1L300jhNDM2hMFZb+sOjYw61ZY=","L6RvXbqZCc6ZhKAeKvMLVQ3+yXi+krSRGaOVnH9iNwM=","Idj5TTvZjwtjp6rLF1ssyhOy3YqM9o/DbZSuKUAbLSw=","GowGxhBG4Pjcajm8V66g0H/X2zTmj3NXnaieEWr4frg=","KYzXBG9YwMq3dSOlim/f0UAbieeuXu9JlEQtFn960dM=","DqxzeWZxXfSiCzGraT7ahqB/PoMPykdaZXTWf8Xxn2M=","Brm3GLs7bUXgy+bV2aLwlqd76wVoIXUNByJirypwoz4=","C8za1uix/fuoRqlVP8eQWz+W5DXWU+7DlyVl4fu8MCo=","Gz/0pryEkJk6u3oAI5PNHBwAf0kkD/wq4fEFfPzYx60=","AX8MlFLXDuzfXMi2sLIF7C2h3ll1DW0XCXUYMbfkziY=","DPGrgFvEehA0mudxNeqVpBRKbtBxj97tQpccFgeRsmk=","GNysrGExivZEqw8uYe9IwpqK7PoCgun8MltcAocQPOA=","FvuzvfQGbisvBQuJtoXUCHEWhdt+RjjeyQqxzHlDUP4=","Du/QuGF6Hs13Ef/V9sTNBJZIehsRRunz1TJ1rxj8bG8=","A8cH0YNQZvow5ylaCXpv9GO4W3eMoR2b0piNQbYAquI=","BjrT9uP4RD4JCK+ZzjLSwJYG6EquXjrTDtYNemYHOMs=","LPZ8yc06UxPZkuMVAQ2Qy1AfeQu+NaFmOSpR2Q0Rc1M=","Km56e/fBkNTk9/JY2JDdQXgOKPa3Hok3FvcBQPRAazQ=","JhQEIACbbYxzFHI+ZpJbrc+YRA2mwrl7ZqUrmMvfHUE=","ISxhEUnQV7L/78mTirFJjTsmU5LHNIC5ywInaQbkRbo=","CJGKtobBoWClXbEgELIBUPgmMt1ZM+J80BEpUYzZ6VI=","Fz73dndJoySbAE6seqfpTasg1GXGXr9Lq0IvdD8X2LA=","BJ2Q+1SeDiV5D1plcHVcaME8l7GNZ7uRmdx2U1X8sf4=","DRqnz+bKngSKxs4s2kDG1kr7uMFafNngIiVm+ZIqFUc=","LYLizNi9Y7K6RLwPTLXsiBQqRAis8drUUqZughn2Z8k=","Krc6hC4Lv+Ip6hFUv4rrSM8vwom5OUcda0ZbcgLrI1Q=","Iz82uyBd1Z0EUxAGRAjG6vcQFzoRj57SEVPJmmsHg/w=","GMFKUFlbjfMhJL9X+LjfQwRJ81mGJCov95pkT1EM7yc=","GGUI1rdceQLtahlI+RCIx83flz2M/NtOWlsMrGtbItA=","EL9CmQEEw5sn7wukUbUQy7AB+Ow5oxPSWb5DCdZCm9I=","Fj6HX9ngSyVZcQcsDS52FO4fPH0rk3maoVcL9zFT86w=","KSWln4LBRyuBIJiOOvbPJMLr7JqfD4MLtcgmBhxl64w=","Jcr5/2VD3MNOLQuMKvOzbr7z1MP+YuKTfOWQo43y2hs=","FMxBf9Z0CDCQ9EY/ZhgOSj84yluof0iJ5RCtqST2t5k=","GCVQrtf7O32S7wuR9JFqx/fbO5QxA657ouCewPSghRc=","IWMFhSRnR1qfk007ETKplkL7eftruR2UjzkayeHD8cg=","BCO3cfchVxbPl7OnLM/+FWu5+Al8d6K23Ge7WEhom40=","IkfNWvi1zgqYOu3pSfgdx9P8Wiy7640WrUP6LDqIJTc=","BJkM5JEj7R7Kkt97yisnHQe6SuWjDGoBGfd7UcNkPS8=","Bk6LspzAcq9yevG3mvUIlqZUjexBusEPAxn778G/750=","Bfm+gzUaA39XT9D1TU6a5crbkwzrUckbB4lPAWD4+kI=","ICzhfpbLJOiYbNCTUauVdtWlFnFo+dXzh3xMXOA2KbY=","CYovtcsBhozeZCTEIRuVSbj1UKfwPn/Ni1EhUWs/RS0=","LL2UflMs2g+PG4mf+83V4LawhFHmN/5T87So6ngyqic=","Dg+kYgz8lD2oG0C2tC+G/nTlWQD4AGRbpmE3trfHKKA=","LhyggcltWr8sxAs3l8OLCuio71125tA+m7BnQcIYQSM=","Jxzz6nsGtOdDWFrmiZfAFDVC5AXHCFV4cYEWPkrCC0U=","Cd6hJ5ctIQnK236Wq7p1d8CsAHcxK5VQ+Bt3FqkvXqs=","GYLMcW2iCxGVJcZKP+hfXjG6qXx2yCN2mZY32O8cigc=","ImYA3ou2Wzjs+Zbluyb9YojGkPFqXu23MNk5MR0MP/E=","Ag97d/u8rZmOd0TKJ8D3wMJVCj25D+KJROc9AdJK5ss=","HC5EXPyYY3quvCwat7bXkOusUCcHHRBXqUW8kEN8ScI=","JEs0lQLfSjNWOzAjfudQ55veE18LCJbw2c3gTxAEFx4=","EIYKh12AvXHGJnwdVLAvtYyJCxz/w1+nB/5qlJQSgc0=","Luxa3ezE4kZQ276lMaD+8NwyfcaU8imyUm0vMLLEmcE=","GIu3FQtuQGJLAuooIa62tSsehbW3JLwOxRL4+mQRgso=","BeVgB9q94syD1Jg3HpmtqVPs1p4TXvAgTS07bMH0mqE=","JVN1WzbeYR7VV3aLtVE3MUdKCozcbbqPBPMDGwdoexY=","HPJn3Zv7bmeKgsd0WFemPitXBmqGJrUsD9X/QkGKpl0=","EGsqQAhzdeopiLjgcA/dcdNxavK/0Lawym4kq0tMJeE=","C5eOShDbzcvH6QquLKGWFd9nSBnLYR2TtMv18v+aChY=","LtaP+6amRuUEdma4rWn2yzWtCW1tNP4cpn5TK1GGu/Q=","I8Yywv5o1PCnGx7mOVHHK300l5fwcFPfLtM1IOo+lM0=","J/2l+CbOaoNA0SpYTUuchPCk6jydM+ro1sDiOlqYl+M=","LSSqTAdyJW6QNE0g1G3727Xp3BMqT7B/r47dqjDadnQ=","BI1SxOPXFIXOavEi6hNuYAU+OH13Np7t+Nm7xmP7mPc=","DgwfAFoXWd0WEwL9sjPLrF/hUbXCGSJVvXV7PO2Jn5I=","Iw1kHEVS5eVUFuNg6qMpAHUd5cpT6GVK+NQi7sYn77I=","Av9vqDZKjPsZ4wvofUze7Z+VfdAk+BONU1xjgKi104o=","FomgR2KlqxOI9qclfnxyg4UTxX2n9UaiAX/xKK/hYXE=","KI2McyUgQlDoYy9C3r7ooxpHAxKrL9AK+8dpT5W4J80=","I5lhNa+fOkKm2zP9VTGafK7Y2i5uM4Bo149UCFUsg8E=","FdBS2tzhRQb8zSaQwzP47Kw4LStnNHJiNs+ce+J4u+Q=","FJT7ZeWZPZbDC/C84/Vtzmii3lIpm0gJzBGeN9jgQuY=","C4AO+HSfkbMHlHxYEJXskoPDsTG+WtW9pCAJkvv/BTw=","C6wfU9Wn05gRuufBp53Jl/3V8ScPcoBfsF9cUtd8HLA=","F5JJiT+obuBntHu+gzW4lCvJIa4OCCwwPjK4Cdk5eG4=","CYWnybQoBdkQqJ4tyVY+fjRJ/VtAH/TV6sddzn/LQg0=","LBkFtfAMknpXoVTEdEJ+MfPKq4GYHWIft/6lJczam/4=","CyNQLOBMD0yzDAvbbE8qT4HC7yI5NvB+9XhW8Km7T3A=","LcBRwbz2NyM+p8Xghq7X3N61G3o1JYIL3W62XleFGbo=","Jz2KQWbcP1Ox/yTGHxo7MAeigrUmxyOe7IHpL1HHQa4=","JXmIvn3CV6DF3XB4ty9pLHVfAbo8jlfYLZuWlWXb8Po=","IT0P5aPnYI+mAvW1rVuCYGVERevXJJKjKtOZHzpaYhg=","B6OD56IhvHb7FDcNSz7ujeUCYBpeTVSzNwxMUCsJeoo=","GM57PmR86aOpDQ7ZqlfrmoldWWpUlYzJcC2NohliPoE=","EjIO4Q78H4EY0+ppdXTq4t+vjynBg6vRIzkuPCgpkAo=","CT0OEwTGYP3a/bSClZKPtqgxFIJ1ZsvN4m70yHyfqJ4=","KTG5KV2W5blzZLN9rv2n3L89yfSKszZNqdxqcjTXFMY=","H1M6HktIeML8LpcG5UHShIHOQ7FifQukZZaQbPMoFiQ=","JRfLck0S7m6/p7Sw0lzwMVRm6Y2MrD/7+xobze4M8GQ=","AOQ9yYO8j+vqrUATBESrf5GHGFYkFJp/J0SS2b2Dieo=","GGvAmn/8Tt0pFXmHa3fC/T7tCxuD8h3fuJkDnOt383k=","BdIqL0j2RljhgbiuXnLhqUJ5avK/5u90rJq/U6xl7rQ=","HwBujSRjY2vKeH92X9ascjrSwuRmrmMk9dOfPu5Y8M0=","KJE9Qr32gEeP/Rc3Tolf53mdnRABlvbMww3Ajzmkefc=","EbVXyNfpe9ma5fSegjMIvW4iaUIl1AKd/c2DbLfArXs=","B0S1OSbhoO85W7BJCLEzJq4YZqaJg8Qd5W+3zH3M4pc=","K/svJFanCYmxZftqPub5RNKDYpNcq+UWEUmA8UFCKgM=","MCcEeUTsgs72JA0WNwcMYixdKKdDAt4O/W1K3dTcLbI=","HtC15LKa6wtbPrEozwMXWcs7xHzBKGZXzf6IxcQR1KI=","JjR57nfkTosquVPoLvY6fkr/SPDnMPR4KyJcsid3EE8=","GZBMhOVeGvMUfNt/OkKCZeIMG7zL7Cpci5UEF8ou5HE=","L6hGj+oyBO0qk0oe73x4WAqNowxexZIvrImrkq2Bo6Q=","JnwLSxlmLPCbhw4F90QeBC5bli9z39eNIzhNx+pxr6U=","LxUEZ1BBdVQJlG6MX1Qy01hJunvqDRJRJUeuaEuDrC0=","IEGZ1kmC9XQyf/P0AHBeClOyXVmukc4LnTH9u6HuKww=","Cgh1VOVRFCZ4DkV3V8F1z2GHou+5Voo9OQ06UcIpfM8=","Lvm4hChGX1NcsEEZ9RjRwgUiaEVfGrFFzPFpO+kkFqs=","KpbJ8gC0d+ungxb8RJfgiypDhLJsl8e0zod8tl/1Y08=","BDKT5h7xthSFC8AV3TFuLHxU8S0tt0b3wM3LDsVRz8I=","HYHg4oBhG/MJicGnQIhJNQS4GLOF0E2WrSmNvtmnvfs=","GtnPF7g2jZgALO0s9u+ThaB0xeOqCy4S9LdozEgEveM=","GbMKJxGf9Q2ic0sSergymaSwmWlMMazBgqtFP8AA75U=","Ey2B8Au+8oBJAcQHP82cgXpjgyww1lMGP2f9hkguGZg=","KS6j7yMThjoSdrHw5Jc/p4Tep4oeyY9NWTlH9qTnOSQ=","Aoz7XgxBsMd9mH5zelAYeHB58v+mUBAvL+tzXH2bzoQ=","Ea/XXchDU+L5wvBdHzynNOtFVGuSOWIzo/KfTo9nkbM=","Gq9D7W2jm0UxIL0DEvJZKU6hAbZ43/QnhDwPyBZAntY=","GdsJ34M4ex5Bhc15QAYJ55835aRljb7geF2rXczjKGg=","Apyz3K8uuw9bC5SehCeP7S0R24wfzzXjgYmvyhbAy/0=","KIHfk1LSdPDP61Xfj/6x0Ngfzat5QILiEH4bBCanMKI=","Biig+VlMFZIGx2J6jxB0ih3yzlgrdgSo5kpwFevdtls=","ImVzk+t+2fRXLCLNe51RNNH7zilcKpXxr8ZEHeYNf7g=","AGMl9QnwNicUxIUNrth0QGL8+AmGCABefQi1CbujNiQ=","Fx1kmLQrOTRdVuhmHMwrV270SbH45b3FrHLZ+T3D3Zo=","G+gvOxzJ2ElZXYXjOYMxGGtuS0y99Dzu7b8Ec1MVqNI=","FUcRvmLyPNRghrkxGyjurajSYyP4hk3n425VQ7zXo48=","Gezl2MC2zAf6ARl0bn82ycjUlqweHZXNW7jXaaZ0XNg=","JtYWLY2cnGAkTLzBu3iBQmX++XpToWjGKkO55vTLLRY=","KLuF/vn2WITkqZpjpZqQbVhs3Yi7p8USWbH+ajdf5K8=","JnzKweNCcZceR0F5xYAFJs7vLxpv3arB3iKZ6S2djOA=","LmtIaNFTkNgBQkjuwMfxDY7p7r+mQCX5Yezkmp/62YU=","FwOQI7ok43vEzeSX6V0TT/Nd3m/gk+14jkg50rzs+EA=","IURV2R/HR8aqmQitktGbLcdahGURg9z0O5olYyDDPlc=","CgdAXwNtMOx37GSwNLn8XfLP9Yd8PGe3qyO58tja0qQ=","KfaAcoS25DXMwvwUV5uu0KYGF+DuM6NYyzFoEbPYhko=","JGiU9gcfyWMPaRh8tatQbAUIQRTS788jF4C11LXEoMY=","BCJAgbkKZ3dNFf+Y5hNEk8AZJvfsJQU95WIVwUXl2mc=","DZnP52SdHf0pLxF3O//xzjZFzkISeH7TacCga2ArqyE=","H8dgIzM7pNwPKo26+7ob/zO3U/135rG9xMeWoDG3gVo=","L2DgX6H3RGc1o3F6nXNyilsgFmU3/+tlcH5fdQPorPM=","Git1CJIfoFT1jKTW7rEzRTZjyJedYhbsnuEkC4yJToA=","CgrKSSS+ppeaVuR68L+hnB2311a7Sq3gpY5b3dfdy00=","JiojZcx4D2JVfIVFZvosiCLm/f+OrbkJSfqlq9Y6f4I=","Ga1aiC8dxJcUKVRd2j2xhXscoKJGdos6KwAUulowJDk=","Jh4zYPsjwI6HuPWIvVnwjO8Hu0im8SJqZM3H1N5+lco=","BpzGfK5G3tGP3HJcnK2d1k5EXJkCcbDi0szEL9zgv1k=","Fi4hiWyNH2wrfsFvt65++MjuGSFq4Ymm7y1+vbHOYsg=","Eo1CwIRE2JVoeZlaEFozbEJI/5WBE5Ei7ZydVUZO6bM=","Euk5H38THxPDlyXEQUZpvMZMekG2dk5ofO6OUHQz4+k=","HemI5GwsmhwA2F36+x2nUJvLNkIqq2BS/R+SffdBwXA=","IALLinefk96LRNf7CM/1CCjgdx1lAR+ZVLQk5ngCzw0=","KPblrydSx50Bo8bH0pMP37FkmJwg+QXM/AmCwpNl1jE=","GeustTVPfycvXBLWxxs52J4UqqTvv5hzdzN/+jwCays=","Bd1HxpXMbJXirNG/wM4zXLMEo8M4CpTot8BwaCyoaaE=","JGvDwDejya4run5zV4sagl4WcqdBiAHMB0OVRTTZwMc=","G37iVYFbpwIPDPeM65hggVwO66Jopyzs+eP9Gmhws64=","HOBPZDvJUTMWIR/cC8I8mlK9r0vM2coYWQwXA6LRIOE=","LjplMq+pU4i0GtWdfCcFRF184QyI1zQRtycfUu1MRMs=","H5ESHyy9Hq0vcPT3RymiVyNyGolah9czlMycGAn8z7s=","EQgkAziKmdoN4+19O4c/Wrz3H4vqbjWPWw8XylJ22SY=","A5YqaR60LPXvd5vuglCGQTKe2e63hX8c7MRtyTBG4fY=","CmeRDilFg3OcK20Y6lrXThQbsqNT/N2T/D74P0/Xhjo=","HCD5vRMjcJ/aEk9x6IkBI19ExeSCh78PQ7RUQ93Lrlw=","ERq1bhknTv1HOStwFx39qwyM71tt5XneZ/V56GtQb70=","AG5riObwzfmC3kg6oEu50P4ojuWGOmiSkV0SXq7XhrQ=","KbxZ1vum1pLipehbpQ1v2bz8zFfivL3d1liBr0Rf/4Q=","Jh0TrEQbLzAJbB9/ZqbZcyRMLAcCESdaN9SbHXA0Dt0=","B3+NknP/2jftHqaD9pNJcV+VmG0mFj8A1ByePDZsy/w=","Fnj5/GxFAsI1Jn9LhB2VQyCFQjVe19tCCmCay46Ovc4=","GmW0HcMCuQb9FEpZS+ptkJ9y+3B1ALJwg3yaJJWQB1s=","JlNZvw6td3Jk0Y27TEZkMBojsQV5No9AtDNxC5f4B6k=","LpRM4OtlN0WkVjLAcLkx0I7MSXPqCR5dxnElzJBF5B4=","J+MCWi0+gmFKTdBVD1k1n1ZDuGg1kmrtLrCnqk8GIZo=","DZhI4NO4vI1D5eaVTm8BgZhuV1BUhA8jjKtMtbA//8I=","GsOq2BXY7BOwNd7PZ6aFSWqHsQS/V+84zahVh3/KfHU=","DJEBhvkS7vlf1nPq0igf/Q1c6cgMxR9vkx0MdbnAo68=","JItjp2oCTVzy5Cob9wqVTwGxhJ2sMf1UWnzXTFw6HlQ=","GnH7pgzTY7C+PqNgSjhs0d9Ga15p+TUDhYxp9ahoaV4=","FaKGm2NjzQKkcsvOxckb+hckLO3quDCE8O7fKDQxeLE=","KBPBBzH3aUVA6s3oV3hqskQ/sYkWGSQ7jU2aUppzNUg=","KqlpBe9CvB6EUgh/4T3D1VzpQGKTb95I/Cn4aY7V7FA=","Dwk9Np+tCg0lW/wxHEpY3JihkAzzWbPn2WiPZZG404Q=","Bo27xTCWd2XPfH5puL7k7gjUhrQg1TOWJshBHKmEAn0=","HdDKtxVwlB7pYr1h2tHLaKjtgCKt/zVqZ/yrOm6vWu4=","KahX8ISufytQbv1s+wZy1jrpYM0ZefeNf1XXgllVN3c=","IIH3cT9Rs5MN+gpt+Og2EbyIKc0fhHG34uF/SA2FPDM=","Luo3SmCrGiBkjLkI5gXG2FmbpgFThjXIzO4AyryFcns=","GhtovSlREx5tcZUiM2R+QWW8QS2m2Zwhl6o5fY0+5bo=","He/fFEFaeNXm8oeubknrsRgiuHNMnfkcgOCN5XstTys=","EAQMxP0gusymniYocTi+TayUBAzGIk4r/cdmYRBqckk=","IM5n8y6CO5iAEdDDOrsPclvpb8mrWy63EBL1+ApV/0A=","IC7NUMgsnhx58P4TZRiyJVHAWMIbbuzkNYW80ozE6oc=","EPulDAYPzrmJ11NsNpLwwyQzOCENFF1hh5JnmLdHCH0=","AmgJNuQCdl3WzP3+LepxnTxQenxVESPA+d1ZpYv43LU=","ECvrSlxMkD6u+eyw1XlBVGINfp3oQ2T+BYO+ebTefPs=","CNAdsY+uzRomwoW+ZUFL8YqwEtfvsmdfSuHW9eE3BiI=","ES/l0hfzPC0tGXYtKGhBNmungrS936M72oNvot5BkBA=","BkiF9FfPr+bs4pRKmpNe/ccXr/y0RJzrMaJ5LV7qZ2U=","C73DcattQpbnPtIHi5n6R9AMRM9R7sCtStCqucCc2IY=","C55ZtpmqaI3RIUPokLb9DjSADWtED19rbEJrMK0HiIc=","ClqjHU+rjhCbD9/FXrFKXC2SZ9f5hrYQFwzlVDv7MLc=","AyOdULSgEo45x2c/L5nYi1kD6xu3cExsDN1MMUCKems=","EaaUWUmhgnWbbx2mDq2vLHMMzmbqBG+PXreB58RfjJ0=","DFAv8b7YpocmgD4iK4fVkHSVbYNPLWOBfyqe/tPckx4=","Ii2dqjhK4rQOQ+J0zAfS27nraYjQOJS2+/UTNmNMkX4=","Hfj+DdqOUZcbkXsP8PPgXtSwDAlUU1GhF3gFxQ9rwAk=","Iiu4KQQFxbM3PxsZmWnG0Pm6jrdy8kl8VcD1UXdbJjU=","B5Ar7CPZ+RoAOpKOqv+WR6wDAondXqzYyv3TG5MmTRA=","LHBvBZ1qhupJbC5Gk9FxfkCY/4fQWoLXOP2Ig6grnV4=","Ba4mFpS+4kRqGBNgjt7GlvJSki0z6UKAqoBb/YQ3hvU=","GG7iynecXCahk63w/0fZ8zO3UPmbd2VQEcZLPozN+T0=","HCq26W9o47LM5to0ZbGePkpDex8gnFXm75mhrAc2vRE=","L9F9t+GCcWnDLM/ArRTZ+Xx1B/jviNxdbwSwIgPDflU=","JB+tdXBihBirl0jO1TZGwuEAruvWKmxzgE8IDeZtlyA=","ABa1tTQD7m9H5hAMJ3jKlwtAr2vid+mLcQMviU5vai8=","AAoJWEL3GOcWRbLoHJCz8IV8jJNbE1sMsl3xVB04x/8=","MD8roE7t8UJbXXzEvixQiLnS7yv0eLnpuM5v8WaJCb0=","FJRDUULJb8lOjWbZtkPgGRY8asLk4WIFb6j+7lGVZmc=","Axzbua0o7FfE4ayP9mx5HQSyWiirytroOlVz4/PUv+o=","DHh9/wEvE2uJzjUWwc+GeSjXEH0hjWLVGwstjMmFBJg=","CyCzFJB/Ui4XqdXajBD8+Iy5VlVs8HdFfB5KmtXcCw0=","EdXK39BBicbBSknoumeDVArcftcL8lr+Jd+eL/2bw18=","CFIwnVDxRTjIt9NWWNibow4pqrZiZTGqoRhf8Mq4of8=","JXOV58GQs83OX5NNvqkHcFAIowWTxpKT/XEFYiYCYEo=","Cq43r1w6VCICk19ZC2Z/l5+0FCc8yHkxYQpLMUSuv7c=","HBZUp3/q/Nf+66lMMmBfld7QPhPAimJ0xH7bQRNOJEQ=","FIDMTLO52fyXuZ40D+wZgj3NLt8Zj3CV7lxwqSAJleA=","GHEQV4aRiRJviFNqzOpIgqNHl6ndlqlMyHuOpGJBdlU=","DpxHNe55e5xwgzp6a+fCz8uWLwcMqqZJRm/fm75YKM0=","Li44zOp+9sKakisCfTHZhwrA+dJ94Z1wA5u9H5D/dPw=","HWY2npXC52Aw44DWU4qTJ4+R6l3WDloxaz3O0n/BN6M=","Ke+RArXmce3AX4e8zrbZAEhOfudAKjLMx3/eLnhmoIM=","IQOwTBc191Eet3XHM0oLttYm+2CTe6N2Ha1zqER4490=","DdG2uoSjwptikjdlBoz2PHEbwda7KO7+OKDkhhrROWM=","HqtMf6q+xYq5tzsrqvIeQogLd7Dw39MNOOHJVendchs=","AC4aP2ad/JKbnMhNltSJ7OEU1b5duFcUafd0z29sgCI=","EhTKQk6hUXhRUNfbV7k8xrvI110ZKZOEYKfGfwx5HxE=","LhdN1Kr/9hAxZNkWX/gxnZJgyGIYUQpNkQNB8LTgHTg=","ILMvSkI2F/7xRtpfGiaV/P9kl/+row3s9v/mKulSxDU=","KfTdRo2whzSRRotwCduvx5lR87g6tk77jdLlbMmzGo4=","JRmAHeTljkFk9/DYaZQxHIfyeaOK/EyzxNJs9BxkKvA=","LKEj+vh13k6q2A66c8sqAPIur1thCe9Bpl0tKG9gLME=","Dv7WUaYfowtwk3venQK5tqMCoaq3Bmh7IjOumyAzEmc=","E+Idu/1+VSa9xQdec97grvRaDtLIgLKbfb1cnmQ57j8=","LCSG2FqtvDWLEGXdexSVfoz1v3RRr8s5Rll0HPa+WCE=","LJel1bl1GUO8EeBMLWClbEPZRblrCYLIo/XmO3NVDWs=","DTh2sFU2lDgK3AhsyScuF3Di+Gszb/eAQEGeXtzNjPU=","EjZcfN1hbSWPmuNQSzfUTpWMgWoLujdCeOi3rXmrlnk=","G2A1TRawGENUC4/Glh/4Sljr5eQrRtIq62GOLbSt5l8=","A3ePxyPM0DrYyQwxHBQZY96mOdJSStly2EltEp4cJDQ=","Luch3ehSh54SOMt6eSBxR7PYZObIoUoyfi5Vi531dmI=","EQINBYH/jnnI9apNUL4tx5KgOLy2GuxMzqLsTfLQr0w=","Hg6SEZPjWzxC3tAD3Lvtjq5GcS4V5jrscV8/cDHPT48=","KmwT16/WY2wtTV029CwJrDKGtncDrE0sJNz1o63ZAg0=","J73e3qfY05i0tukVLhfC0JIhdgmxCcFFdPkyuwLIhEA=","LhP5y8NWco5tK3pcWTqp7Mm5ALuYkBWT0CHWHrplVaM=","EJrzN3PkFhVohbqwUT3BmaAEXUBdgb0qFRaQva+6O2Y=","C/ehIamF0g7r6/Yk84NzB0Fa5ICVS/SVUt2MXz5QMBo=","D3i6fD5tFdESkt0SGq1FlIMnG1/i7lamOBTV2xkpBWc=","FiXfA16qmS9CTdxtyIwbcArF5tWYHirQ35spCla9UAE=","GsfR8zu1mP6VgaxzsKrU6azpnq0BmB/PLFAqca/VZ2I=","LTcpbvDNVnbQgJYIujQM17IC4uHCVG2YlBfTA+wxkzc=","AZyqYsUjjgPs33W7LCdr4YBb4/5EqVfYqjvwfKzxwRQ=","DzLeoQQyDODwCRnZD5xsdtSWiCeRFGxSKorKzq4+Skg=","LOXSRSwKWp+2WkpkgvNJmIZb6aKfJm+IqK/6hQ9exuU=","E11ZDegKDnF9pzJceBqhZ6JeXDENkt+DEg6JHM7SSos=","HTzpanzXnpRJLjK4mD1i+sc2SZhQci9/590ViXBqtpM=","DqOh4fXco/99hnHy/s+0Z/ak5lFsgDipMGs23IGDIbI=","HtCMTw4W0UQFkQDwX7RjCY49hp80Lg74tKR6/nSoOiU=","Ct9hK8DCToJhNcfeDbqQ++G9JJ90JPGXC1LouyTZhu0=","JAxCSgJOWb6joU/Kc9e2OGnrm2h0atnDVrk/tuqj4is=","JN+rcjiwW/CPZvvlmXY/Y9XHChgafp/jXa8EeeKxy9Q=","Fg15oDlZyWja+3bqPgj/0s4RfQlOgg1en3zh3r07sIw=","G2UhYYehyhZ5ZC1MQKoFv/clv6UCSKqJ1X9XDC/pNFo=","JDUDutitrxSo5WUBOGPBOnf296D/9XHBJ1sY9UvXc1E=","BsKtR79N5XTKz7pRXRjdr3gqit360cGO5DkRY8VBpiw=","IUNmZz04cUhXj++JQ0vPx+DOTrCGYZBAJrMLoQ86E0E=","HbgdmLTU2DImrkExMByONiKjLit4hIYOhSV/X3t+beQ=","KdK9vBmJbo+vDOFdfIg7y/qjiGHXySKZpr70L3xEPw8=","GSlfcsWQfo2fjYzez30ZP6hkBMu3qFUi9/wzhXt6nIg=","C/AVdgdwy+jm9pCA86yhgljyzQkuM9PtYtjRnRRLrKg=","BsshqsC+jcJSjDl0cks41zqRhTCXb/EY0IdkzULgskA=","Enb+LHUbpJ/Vt1yrW3H2SqBYjt6AfbG9WDw9auaUE1Y=","Khf9gEHs12L1KNEgZ6CSBPkpbqVzdIBsOYlv6UmbmM8=","GQTiv5wFEsclWecePxMvZSWQWPfWi519baGo+fXK9nQ=","EVteuZIzqKIgAXBzPEdDuATGAbXY1GVqE4IS1m64nTg=","AGtYiF8OCb5rqRF2/IphcrwW1oD4iKPZLzGjvyE+fvg=","E8ZwTpBTU1KTTc3ASDtLuXTVC+t6W2vjCvDkb71zJc4=","D7vLlsyvQ8dzuhznBhOJJUNzL+zMhyl1uOtz4/tNVKU=","BZtN9j29K7ZuCyqCbFy9qWwzj8w42/npxGBBkYvdi/w=","J9hZ54aMmdgPmdGB5u9+qTppRiOom75Xpsjn7lS+If4=","IerO0I+dC0LG+lH1nWX5ZZjpylDWzR3Um4T9wGRu1o8=","BoFbejuAlx0F/ebX3FzSgjNj840K9cD/ir6qcaMjoqc=","Bqd40pqr67WjzZQLHDPwVVEhe2AFJI4OcWvVoQ1VjG8=","FP6fsfFnxiV+oBAIgRV2nmK2DvOt0POiLJ/npJGOlMc=","CQMF3/MUF04n7evldL2PDI/YWEPn0mJ9tgeygW41fcE=","LOI9++uOGHS5uolMuF8Gi/sEl1Vc/T3684iKpJLSBEU=","Gw/ZTdnP53TZFGvlhO0LJcssdJWnCCR/V2PCOA5cHNU=","Bgu3FrpyOk5fX6oXk2OjZ3RhnR4M2Rv0eJoarbPmEqo=","BDsQxQjoaBhD7dwF5zuVt/VNpak7cBy6TWgi+cnc9DY=","Emc06VArqfrkoxS2et5s6IkOMEpDDmyfT9YMuK1plQ0=","Ju3TXbl8KrLOJ7UDWShZtDF6JaaI+XQ+8N2cwmGdt+c=","J7Il5KmBrzbOqGP1kci8WqlaS+ttXJq8XgO6kG7XIGI=","EQJyiDL3UcMTrGYQ+uWLnL1RG1HWEhs7+mD0fbElGNo=","GCdssBG9xtdescfV0GzOEMfJB5yMmSD6OJsRZiDuQUE=","JQLX3s6M19egShcwv9KGj8ZPg13+FDzuGEgMfD/K2nY=","BrIL6qV13YRiVGlQaEhGEbvuGuSChbosPZnBTmJYGiw=","Bjq0oHj8shInX/X9BgQr29F6zq6ZTiwnobqHYTn47Bo=","BjctWVK7aaRgvxMz70rGsgsHrUq0Ek3UBmps9m9AaZM=","D0HU4+9V2nHPQDfEnUTApkH1KloXT3q+xSJHbjxiPOA=","Dw7phBshubIjwdGpBpk71msOvLfa++K4AruBZcYBF3M=","Ad8usvpCPwE5bgczkBBMrYAEpqXxQKKxjtZYBoFnUho=","HOBbxVQHyIOlpBeS7zSG/yLkA9OEdM+pD17TDI0wGYw=","A38fx5NLvV/cNDiL+9D5VGclTl3ytbYsrtBQCiWU3a0=","G9amFABDmPMptwgP/mnT3/beBsgZ/t6iSu0W5MRxZOc=","D8Llz/fp79Rv7mKqOz8ivMnxo72JF+Lhz1qjNNKdKgY=","J0+k49hufviw/fGoGszo+e0vLrRifedXgagT8Qajd+c=","GTrxxfoFfOaC7HKM6pBzWTWiK1r/RuovgDopQhqpUNY=","DnLDPtYFVHGtrWHQJ8WsG/dURPxOFJiLQiaPB4fimHU=","HHWASk7xyByDaE1ojEQpqxp+UX38YCyaJEPFnzLulhQ=","CIA/adg+DDOX4J3UeoDPn05CNDcAjKutLlARBFbIxg0=","LRIU7Re/gRYqXdQ6P9zxlfv0dCYETLIttThHjpQrB+Y=","DIWyS3mrV1BEIhNfscsMXh46XwoGEDwkhu5qPu+scog=","Lin1F90bMLeRv6sDznR/lQIC8OuCZ+8/cczsQOkdleY=","EygclKZw/lqwl3OvQmBnQFA1Ce/XTB7Zk7xq+vPWQXQ=","IaIRQHzvewRCFgrMnb/OGh4dWMnpjzgafrSPe9oPHgU=","CF7x53+Sm8/60ak/kgwdjIs2MuHhoczU7LAWAnWeCH4=","K295beNQnqcDyNpiduPqFUtQQXDFmo7EWB6XV9dLp1k=","H9pQdPpbrl4W+08tGNWJpyMLmhweTQioBp/I1Fsd480=","AtIqPA0yR1DTvjEhmvMqgoLDct/eSGHvhu8VwxVdzxQ=","DCH09L2uB6ebs6mM+zUapinzI5xNJK75Lqeb+snC+iU=","G3IewcHfgcg6zXqVrOFrPi/0KXqrtvWBALXasG09xAQ=","J+yenpI+3uWBidbH8wPuPlJJxa73h1jH9RHPh7lTVh8=","Hs8QYDZt6pUG/aDQHLoBbbliAJChYNWnYKddEtXXLng=","JdQy3zEuAFxpoGofAE7ImVdQNNomOSdg0XrMgMOVBs0=","F6DqUfmiAboqD4V8mWmn9rxvXVvA5JV+HA3+SyAuSiQ=","AtNMR7hH1nybTcMTvHFP8iOrARJ4Bv9ski2HY/FCAks=","Ag5Z5eW7CVGmYBIvwa7+opTnzNX5x5g5KC69nhGflso=","JJychQFz26D/6jVowoQWAgEhw9mZDf4ukXN3RndZJns=","AejsV7doHWMaAtUwya7vk3dYae8JPekgFM34XuLUWdo=","APc53Lnz7m57VRl3S1QLKJi7bLo2KbtsYOQjt+trX/w=","DgFvByT/+F14GusVSNdsVm5cJqp5lu31BOQWcoX9pm4=","J1Jwgoud3JZLuNaKYlhUNWjIRJR+1e2UsxgMuHTGgyU=","APHKP8KKrLisIaW0S76wrmTMM53hPgTHT86CD0+T5I0=","IWsvickBBfVw4JEb0c4g4GZP/gGBHLd3+QN2cZwOIPM=","GpHt+QlQyyaJ0sKcsi+N6mHsQfsGHxtgAvciZWlMeE4=","LaM0Lq85orJCcTSERilxr+U99VvtX11Q1n2ROM14/oQ=","KfechvWpyW/K8ilr42Qltyr6rUhly5CQhIJJFY4upLE=","BRlCahWlmfINKXkwIGfb0UVLRlOclJnGX2GVtVx2Azc=","D5xHXNcrfi44ZelrrviaFJ6s06s0AhCpxeDeb8CC6J0=","FfHXEZed/hPkXuuXWaifUds9J1lJhYkLiMm/J2kiFzo=","Hwg6wFSaGrANS8kGbwVJQUj2DJVp55iZQcP1D9as92A=","FQXuT3m8gYeFbV8/WiTel6oIK41FLGOxesOlkUUbdH4=","DyCHbXEvFH4vufe+alHzRuooRH31KetBNClI/C2PCWs=","FpbRLZrneckhIO5xX2uNoR6pOvJnNxWi33cx25HjYNw=","KEhfQ47sEzsL42sy+ugtpX+0AGvX9bsVomfndGs3utE=","J4BDb52hJGH74x2Xllbm0aEzhuDmpTCbBQyoGeEK2UU=","Jx6oY2czMt8r8kcebIk1sDfqgxjqWzI3lYP2EeBrPaY=","KfG6SynB2uy5g5vcCEMbyr5oORylQPaLSEpPjpap3GE=","KU9MxyjdQj/a83N34Gmrpm9NMADxpVm/TESRAzBgMeM=","FGtSGxwIyRgSE+vbwqNPw+/Yfd6xv8Xl0XypUfVavRc=","Da4K+XPqCw/N2BWOpRue/e7V62ZLhO9n6qJV/k5V8+I=","JgTMzDcPClDz9ybt8SQrzBMd3fJpeFMnbAeev7iD2MI=","KHOxnbHQOJbT1S1vk2Hj/a3l57Lmgz5NXORmEYa7u58=","CwTQkLzEz6v6R/YAQ4Wa618zpt4gXf3w49CZ1Kg5Tgg=","BQihlcDKWD7BAVbyBcobtvaRcxi47W67c0e3fXLc90g=","CSYt+oCqoLxhxYkcI3pRnTgIxT/AXc49cfF8Dj8qXus=","DObSWxxsG4n6AFwjYZ2Hfyqy/ecI0wkjZppJ/iWzx9w=","LmloW0bIBQJo28EEDiPHOdchayxedhCBNtaJXe093EQ=","Anj7PfP+kTZXvMzrVTE4+nuKtuBipd3q393dWzBf+CI=","FtqJKt41dU5X2PA/Pm9BEKncFjnZtt5l5HkWXKSfek4=","FZdUkk5zNIVP+AOheC/8BZkno8JtxD5mHgmhJhvXyUo=","IhLKZIe4RbpNFsCeIkKX1LGhbjQebFk9f6utraOSnXo=","LdCI3oMYUtFpruHWvmm1LF3uC3Phj8qRzc75uQOWoEc=","JKtCrWdJoU/i9wfsU6w7AxXe7PQhuXUwMlM+KEkdsw8=","L2Rm5Q7zxhoOZJOxjTSRFAbi6X01UYh6+AjWfhzpric=","H1iG+4YYyHEewI3pR3Vx8OtuRiuPXlNJ+FYx8FlZRIA=","Bbo0lTlZeEpXwAGekW4q3l1qUjEQQ3zqnCuURT3N8qA=","J67mejxu94PLVZFRZaW7/dhrwGx3bxRQSLskAdzxc0E=","D1fvwF6fl+f2jGlLorO/IW7vvVxxcQpW9GBoKmul1e8=","HTXrSkCkHdd1BthypFisk9czbcty8VsYKmcCylO5Tu8=","GKMwZFhtWnArxL9k9wtEtad5GCVcLf++/FN+QL1ZUf8=","CwrlcW5CtEC3QjvYmTGciApKZ0VQt70DYgfgBqx6LSE=","ETag9sAEosV9IaAMQN7G8CexQLNtNZTBzcGw6HB7YvE=","Ic7FKsSyqn+A+Y63W04CgFkZd9ULZ3uP8QsKPQKFMqw=","KEpjZ4b6Y1ebFUF0aQHUjkQM8MWG8bCJzEXouDD60i4=","HUoKugysUcMmH3xIPYlijXZ0iwgzy6a7/KxSQ+S8tNo=","BBCgZZJekPxw7RqqRkd6isgZOhDEi12E+16c8hI64k8=","MBRTsj0FXBhKZa1qas/9n1IGN/51H/e3aUCdUS/JLw8=","A3gnEEKH2Uu9wGWE021NXixGxOoiT04NwMO7VB8FO3k=","KUZBuooCdoxeO39ULSgcadwsPy6AMvhkKVpksIqT2ZM=","HBL5k/Dx7dgJ7u+uaTLluIc4sza75vl29fegoXj/6rA=","DLLZSNOPuOF8YLpsZ2CMn/2RLgpifu51a40ir4ueXkM=","JvH/cxJo2bvSarM+WIrOwJ/VpLcNYLVTkE9eLQXolMU=","Ca74ogKfgrdtgK2KOSbLbhF02Li4nFlwfBI0cxILTH0=","G+gMqxL0vRc3eWvHcPFwc8awBGwye8vzo24mQGx3XHQ=","JHbnvGN/JD0j12LLPizYQw2tiXYldsvdkYQop1gog2o=","GW1wfKWp7cwOMQOu38YKvdHJ5Xc1TZML4NW20DYXwgk=","HSYkhyN+hQOQjVN1oaeYqbjA+szAVu3diqh9CmawfSQ=","KiHgPUEVS/MZHxqDS5r2sj1AvAHQJ8K0hB+yPcn/cVs=","ApxkeCKhrlZbK/EkntrroMuzrXMN620uZhj7+edNqtk=","I+GXEXW4+7JsCYneqC2PSj9wh3TChuTtL4367a89teM=","EwYYi3kjaOvaHy4x6EaFTLs08XXgHJJFeVnuHG2g/z0=","En0PfrmAT8IKtPi5QJg0rlIWRf/6hrDCIdkiP6Dp0rI=","JEGYW8rONagbH4H8ZiEhXfC6QkQeRQ/GXjUZoDk7EZY=","LffU6xFRFFRKxPUvyjbWsz8J9jklPp41SdWYew4JcTY=","D2xVGPku4uVJ0xrbtOeANu+ao8IWTDF6ypIgPjuZ+UA=","JuLMnepH3GgH+HzYfFMbF6fy9eqGrAlOXVoi/DQz3Nw=","HHHjPIZLCo3k0Q3Cb3a+1Vdx0WAaDgTTmcsjlwZMXPg=","Ki8LVjtAg3Zsi2xghywy7v8rIHoZgcBbHzlhePASB68=","DBrwvFVGJQp/3fHL0+e8269067l5U14LNDZ23J+UM8o=","AYvfLnB43ECvHL5IjLVi/TISBJnEyXKm1DuSzhZ93+U=","IrNoWaFqjNw98QryggcViR93lmCh+aJe9lIBn2QL7wY=","EOaX27xDx64gMPXUmXT4NE1eSKtm1jW0HnuW+8fGKJ4=","BX3rT+VjkKu73NiCLKtdoSB6CteUI5IGIrDEoS/vNVI=","ErJ8FjnxYvhG+zeucUTykTdoLufrFjLnkbRiiv9KrCM=","Cyx8dtAYQ6LRRlXCPoCRr7bzVZ1mw7vz0RXcnXDbWvI=","C32WhMDI7KDowxY0yftosug6vnKjZ5s2eKjJsaE6SJU=","E6sKf+qbLIKHZtL6v1dCSNLX97L45g4mHO8pzZFumis=","LeNXnXkKw2f2bZBVe1RmgVOlw31TkekqalYVydYL6Xk=","G6AQttY7lTiygb43ZOjmIxZCxqZzXYnJgI+re62iH24=","Jv/eqKjZiU674CpwX7dQbhKxp/EAxZAlhOTcvh8hGaw=","Ef8WGaSdaru1Y5Dj26rwwcsBuVGnNCGLPL2k6AUsy6I=","Jgw2uAiQvvronLs0eLn3tbP2sR3tR6riwNXgxI2OUXQ=","BcqIhXyw3V84Dlkqo39vlPfwwyYhMc7ymUihpJ/RhPs=","GLODKhnrfuGp3PV0MC7gY+wZBGs7nrf7J3pI7oOQ5IU=","JTUpHwPa0ePFQOfyYgHC4zAYj9pYvngwZ2mKFzn3k2k=","AU+DKzip9Drybl7C+r9sQlAIPPh/C6hrlQU+kYLRNz4=","JUjmxHZ8Z2ka9VFi2c4OReieoIpCMvoKIj/ehpv9PqQ=","Aj7Nqj+UK9RbpG9SjLyBpRzhQlA59EeBp2lvSNKd+9E=","FhG7WaOyh1a4QNsxiaOl6iLsFoRUcqvWhXCsdxyPFe4=","C/dhiEUBMzD/Rl8SypUHmrctDKnYp+YzBIwRvyxGx60=","FciPouuj0If9Kfbeb9hkuHVmL/pDgUQ1LWhHF83NPM0=","DVjRJ5irVS+W8NlR6Xy+74h9hYZWsfavQBDIAJGwxmI=","BAbuzXu8IesE+h5WV0XMZUReT4L0okHvuLqwbq+cfLw=","L6iO2gZXFLmuXhhFYTDjG9b0jQKyQV7GHtIJrY3cMWQ=","AXSYY66rE8pRImEQPquTtD+sU99rBAIsfLfxdjj1HCk=","AVUyY6MY7fNEKdkB84eZMrcvXDKtVukAq/R2cvhvmmI=","Aot6i+R8IjkHmgHdbQ5X3cA/ypxqWNPfbyNN/oL5aso=","LEib7w+sGbsYfl+KBk5nY280sonC6K3HbsvbtRBfwck=","H/VIxmkPUifVdmaP72dB+ZnJkUz0hC55P9W1GUvQw90=","A8G1UchJAwQPrz1tuTToPa/F8O/et6j+snVHckcno0Q=","HuNiDo8N2oxvFVzoGpN2AJvO8sjY9vJm4Et7gKyM+Gc=","GORf5+oXH7EdDEr1M4VomQ8iFH4UQh8zb+bgvLuKABQ=","Jzk0BFIaVeDhpOWMVhGABAwYaCgUiC9Fqt0TG58IdT0=","B/9oVwEaJLINaYrUOl+Vms7/9ymUDjRqsY+dJgD4PQU=","KYGzooi0Mng5VCxXls4vCa+dAipgT/rWH+AHfXZ0i/4=","AN1bC4FY6Kc5le/QudiY1P01hwEfpYbP4CzoAPMGQDM=","CEwF+uc8vWQy5iLPmIDw0oM3xodLh7iOwLRaVdOTYj0=","Hi7i/um5v40/NyLnAo/zr45exjGfptiZfcEV5d4uqLE=","AANBj8WQm2KwKW5utCqgepcQUJOeme43H2QS5E4O9Xc=","HEmUotQSWAZDdr5c88mYh6q3SAP2fBLGTmWq9/HvVrI=","BBPCs4czlh/toKaEk9PPRP6813lSuIBv9YPoxAsxAy4=","AcRq05RVJVUlsme4oFM8XGZQT4GulTS90JHqmJlJl/E=","Iy+iwJD/Pd6oOtyguc0OCRjJRYt1sLo7fWd63YIL4ok=","HNVwHIChD0IOs09TRzjA3M/Mtsh8z5rs41q6s3zwX7o=","A7mB/gxxiCxhlEZVN9XkArgWEYqulL+FGOsHpSnk6lQ=","FopYiQAQAAZENlimHKnWWfCsRR0eC/1abGo67oVyO+o=","HlH1WLztJAxlt8683LvbepqwbjWA1G8xjehO3Hleb4g=","GvpajF/OOW3lbsl9zwMXprfLw+4fjpo7zNbYcAIrdQw=","ETXv1j6PjMnMBmHdSdNqyOv3kA2Q1m3V+oFgVNQBfco=","KRTSHC0oRc4rFOlR9CEDWZyHVQFWQdsDxU3zNxA0QK0=","IMh6LXWXSa6psvD4zAFFJFLnEeOer1qLBxAKGXEn7/Y=","DbB5IN13nBn8HqjsUyPVrw1RG4adtn3uBAh4XtkikF0=","DWMfGPrazL/dOzvkZ3KjvO4nY3jNLka6upDVZGjMULY=","LFAPeQ1GP7E28tjUyt5iKW59fEm84YOVswFMn8ctAFo=","F2qeupdjXR5ZsZ+qKzMlpbGic3ahbexzF6rkr+4Cv7Q=","EgL84aUBuItFXKRHiNVSFLrrO1TjfRzIDz1uwOCdR0c=","IilIN37p0n/GQGAH4XJ7VmuCXey5UJbJrt+o5kU6XLw=","LsZvwn2CqrLJjrUOZ6CTIhDzxuEkViadV+qQlfQRZus=","L1wjPb41cYNv2sCRXOZZb8CET+w9C/WpuWjKWMRYRqM=","E4ibtZucB5U7UvZhI8jBOA5vJyQmEDrc797029KGXaI=","HPePJfqlLHRzEtCftOmrtPHlWj2jScyNzG3Kgc+ZrDo=","LA6uKGbWXJcHcEfQ9MQ8KMjX82r2qcb+B+yJIZ8cxzU=","KLgWzYuMmBYzgAZtClDYsOBv8caQuBuRjH3dCKa3Bmo=","HUbZFmnOW+ZVT8Ps7oldQf2u7hia3uOBq/t17eFIjPo=","GEHgO5/FJ0UORHCqjwiI2eyFmdtrD3Ii3KJs1D0iuwU=","LS6teyB4sJCFgFwnd8kPbFV0S0mnO77wTImTE7r6D1c=","AYMKjbNCZ2z3SSKBtM/HsTjFXUTarkexT8iI5b90UJU=","B05M4yvRSwH+n2cp3ioS8hj+RD+3CHOKhg8ZEL36Rng=","H61MsUD6TVWc+VJfsk5/F0lNI5r2eaAw59G3yc/6lJ0=","HlDGUmxzJLl7fzOHUr1wDKW9bA78siUmAiRVbXaigzE=","As8DWbjaGr///XP5B1hkV5P10REv6Jjorwxh555nPls=","ChSuSXtJeFrndx8N/vS/QYV7sv0fJ9FcPLyM49+Ylc0=","Fr+gL1dzVmLqwcH1ILSz+cS9Js0nkhd7J2BokWlUzUE=","D2+pXgEXtzRXn2jcWXNsf5r9nN1KkOE2Ke6r/YRSXps=","HVnK/ie9/Xj1ZIlDAHY0Ntr5P4Y8MhPBqEnRwxabp3E=","KJ451qLUvIF6sQREO4m4pgixO7uTs63ncqY77jALvDo=","DUftr9ao1GUcJ/a+5I6XVvXWUVrxo6NRL1np4+vcwzE=","GY1qqQcqBt4TEo17FxV/hZlKEMSVcmJ3DMT1nmxtMy8=","F0uA5CEPnYG+e/cOOrCyHegGX3Ii6Ay708+YXWqrDwU=","LXgDa6CUh1KueLETi0ucS2fw14qciWXhu7+jVhWFMr8=","DB/0BFma+COQjzLmB1ZPUht1gSxnBUPjkMsC4wh86SQ=","ClYbV49L5MUzFR2hpSm8mPSUCqW0j4wBKpwYHYEbjzQ=","IBKm7SReSM9lAwKJoc0B0m0+suQ5u8TxbyVq3OtAvew=","CCRCKrtkt1j2AMGOa5mMGdgqn/rLlfnv+eAY1a+zC68=","JQoJG8kTAbsTk3gqfiHuqBwLyOaBYaOk5eSop+MJZK0=","GkrbyFMOrOThlpbXegbh7t66PewuRKzNOs/X+ubQdrM=","JaUR97hZWxInjysFtO1mhO4SsdKY/OJ8zWeHtahuJrs=","B98l6PdvMtmbmd0E2SfBsvoZA3dmNuOPcYjYwrc8OlQ=","BZQhztm7kiYvl+fHvrgTVTndZrzW8L1BvRJKkpgj91w=","JuHNrN6R4RJ5bfcN06R5tZW4z+fEyVtZVu1HegeBOEI=","KYCD3q6eDMQKm2DklORObv6TqOD+IRgcsTUdl/wNlUs=","DwH8e/TS8eyMsa+P8XcVMW/EQ4fVFRhfSaJEOtKhTt4=","GGBJVzsyhrFwA/nlsnuKNqeLjzLvvwUQ2fzI+n5zxfA=","BzNYKdjjdYy7/EzEm2Vex1gIZna005Eto58szcSijRQ=","AZ0HLW5mqm4DSEPMPXylHEffUfNdu/SpnTQpP8PVliQ=","K+o0CiI7ZmX1vm3eLrVbQKBaribTSabErwfjRYq5vl0=","G5D1wOU0Cfi1cwVkOL2eY5X1JW+rsWAGwAm8reHuzac=","AZMsPz4cRIFCDGA+I/FgKdi5dgNWX2MUGEd22GW6Ln4=","EuTp8xvjNnd1J6861EOITjU1Uto2KSEHTgI/FFgLXnM=","JeegmlVpiwxzI0crJAllTvEvKVmnZWwNzzWtmnkm8/E=","F4ySOPuR/lEvaIXlEuKlm3aGo0rtD94d3s5rHQjUItQ=","K1aIMuYmJijDHkBTBfiEApSLUV0ohh8N+u8kkh5+NSw=","FGyg2/sPu5jBYuuEs3Ioz9cxHg0V0uSN74X50ge9F1s=","AJU3FnPtPuVYkuNz1a1cdgJoyD339Q1E0p02bh16k3M=","BRxXzDc0OYl0QnKGnNyUwGYL/PbqHBx65RQn+ymMnbQ=","HIvZbKOQcUorAHnsOOJa8P56afzhYg83b3cOEyWqZd8=","FxL2foL5BEZVDVHB0uTrsUddbmBDpcRu2jFwg5eFByo=","HDNjcV3+qVfelhS2zeoXBmw4Wohk2tW0Ov8JyWNXOSU=","JnK4re90rbC3HAFm3nZqOeXhyuA3Ga7Q/M+3/0Mv6RY=","EGNXcaN4UMJBfJa39fpIqYc0/6WQONi3E2y10MZG4ao=","Cxb9W6l/KPVhn2mJzw1mXpCM/oofwk5TJkYZc9Cb8Oc=","ACffJ+FhgnjtIkl1kBdWktJi1Kr93+NL+NthnDemYGg=","A2q43h1993MB0Wy1dqE0b9GW0lU0siZn9QYodprhNuw=","BJqw837FvMcko+oyGpGVH5DMAK/a1bo9UIFwbfXnXmw=","ES/j9mSEmvn0lMzzzPDUuPHkpgDCljHQWbxuw0NFDEk=","Iys+HUcVJy1fGKA2wTfwxvpWh4yaoFTMMwZOKl0w9Wc=","BWyR3OrOQasTGhxZzkoyCFciSgllftgvcUHnYZpdtUU=","FEzZg8+iWVFjghSOKQ2rFLqbXY5udrhN2uKrCG56eVI=","HSGq1ca0B+bu59C1Wqks4KMqOekYuzK8jUXCgJSmNK8=","F29gvlohuY00aeEzm9XHoKjuhKDTQzm+9nXQZObgpGY=","AynQSGWNDu/tfzqqm8FDsMJmNvEyYhdtZQoaeiBE00s=","D+8o8RTWQg0aKI+WD9ndQL1KWgLVgIFiFxHd0oh8dXs=","CIGIE7o+mpMpJU544AqDs2DJBccgJFnPrQq0dlgnaoE=","AgoSi3ESmU5SxISbuo0SF/E6lXu00LpqDZfPGRS2Wwc=","CYDbPH0siGbpygkCw7jgoHhYWVHqSsusJFthz1WnA68=","FPK9bcMX/hkSa1g9oY4tcXXPpwTFJnuEii/5oSuxiMQ=","ESJv6dgfqmxqNdOhIjDWMkUGHyBFNh51eqDFunxbMVI=","H8FEqidcrZUO5OMYK7h3g9xFkGsuhG4nAyKOXVMowfs=","B4WKPhWt/BQUEJDZcs3aNGGQjb/RyRt+m5kXYMHUd0k=","GShEide1PtJUnF/GYzHHG5sxRG6zZoxl2FrQlHJ9ReA=","BYdwLBm5c3hX+Zz9Ah+Pxq9xtCjjrpD59dLsjnFA9dg=","MGArKWziRQ1ysA7ozs6fiWhC/zRwuY4cuiobOth1Oes=","J3bb7AeaUDRwDNnG4hQE6r98E/oX0GWi1p0ph6cY544=","KL3QCVSal/0MKenDD3r5VV2GSu4FrRiG+5GNNxrSnpA=","KXkaLhfcIEr+ZFMG9YStdn8r6UmqbQYfiG8h0EAarRQ=","IqZntlkIaZoi7cFpcyS9N/+w8Y8AwLpykuyOBUcPvXY=","IA1IY7LzWoU7fV3NwivP/Y9FtgvQNsL5SQfYc+XZXKI=","GL3MrKEcihChK+b3zJbUVX3Zzb7NX4QehzA+OjEuniM=","Em/1AnFLWMOkD/o9lt8N5Oiv81Q5dSNb81EMerItiXw=","BXD6TRySzykXA2+y1HdyflW1abSliJGgf5bFAMKLvOI=","CMhAANuPclZV9HQy2zpN3lFNz0m0D8TTAaF85dcij+s=","ByEtqK+zU3akufk8IPdBnscEsiyJiyDrvzrJ8b9RMDg=","KMa9hmen5TNuu35TxySZD8ivagWTkDU77hbYyNupceA=","AXkOeoxZ673OGOp7m+JhuISKj1xps816e2OhsebUySY=","Cc4QdRwre5C84NYuj8sp/TyKDShuk0EfxmWIpwoUpP4=","ID7FeUF+vV8FbhNGqMW+NM2mbJkB+7C8J7jXc95/Zl8=","IpeYEQC/0L28SVVyquXtVnbs8raT4zkTuPz/5l9X9M8=","AOP/82u1VKAX+U6IEwlXqXXTQ9FcB3KmfOiLsXNts+U=","IiFPncMcF2Z4SEYmCXHQUa7ukiJrbxPixGeGie4TBLo=","HuzKrKI6FEYwnKTD2bfQeWLb+LzYs7NyGPQZkoEmMyc=","G9Us8Ku9MuiI1AKqwKNYMJvIPrdCVu+hftwautGWv2M=","Js2M4qznkRTi7pb8HKOAHQEjRcaHUACXRXNe38TinXE=","HdkhAT5lGeKbmqD1LMjAL/86169qGH7w6QY1AIQG3QI=","EDWOHLisEuVJiKZL7k8elJIfAwppJqANVyNig+oMCsI=","HKEWixZ6pSmL/5bYI1a3OH69HXBDHDCxwMDfgfwECMM=","CNGrJpLSkarvLlCYXIaUhQYVeKLfw3mXIiyB7zAfqUI=","LVl4DdCgCoaVFsagswDtBvb8OeD56tYFB8skwUREiZw=","GbMPBjVWkK+neWk/f5nEpHD4q4q9aYmZPUiamxcYDLI=","G5PJNn1Wsge7Gi8XG1YgjGqhJ5viVywaWeZTRdhzdo0=","L4tF4eB5RIregYvLeFsMi8ru8ATZVhQjR6CEZ+GWGAk=","I5r2kbfW7fJ2H4je6uxmUWnemTmc74GdzDe0YJtstOA=","EmC9KZ2emTIVYQkFWbP5Cv7To282xNOXBy3ik9NM+LM="],M:[["GqTUcKvqojVweRKdEUurEXCUT5KfwXghathH1EMPPyc=","Dh9OTSbp2l+O496vSLSTYQvmHX09sdl1T+yjCHmtxkQ=","DCmMFDVqWn8ibFpUnlkYSQA4Wq/Y6kHZdGcplk73XzQ=","GeBwmC0+5nXhYiyiDROyN15Si2dnBoguuPGv4cUEXqE=","AzPikjmS6J3uVwplASXtp1ogpy5p4QhjoZ0Xt77qkpU=","GUSqxyv2+83sBDYSOMPE2VENXwdDmhtv9B9lKZC+ATk=","J9gCrQGaQv0EiSrRZ9noNZanMGBYkEATGWYWdXNjWfM=","K9BaBAoJh6xrwB9nJC1Ut6LFJ6lwrSgVsnNHHrliPnM="],["JUuBJvRSQ/FN2CEd9B/lUWs1lS1WxiZ4wUjnPNutNxg=","IInFl/6qTKmiAu37yCN2MQDilMnjMADlE7KiFkkdR0o=","Dd6qkGy2Xz6cm+pjRN2o25DCU8D3+Z7O+IeG/v4OXMM=","ERTJEgRCdQST2ZnU3UXb1PO3WrGDIJI1OWzoPY7pkW8=","Los1qMKeY53ejf1JtLNH8A7kZ4Y/bvyzVfoVNO9weD8=","IObMYTrmywpRhCX1PbEpin+IWe4gqtCDINCk+bv+hRI=","JCDdEoH8DfrBdqdS0VkGtV8Te5zDINXV2qnfPz1D0+Y=","F71PJyZ0jZmSWvmi8pKeIxwYaUKME7Hjl7sAmRkXI6M="],["JwcS8YsVGPr+CTZg9JLNvC+3D/qzHYpNihk0vmh5I2k=","EHz++h6GQEWmaDllJu2fZ1srvycspjXY0+iAEJm7l9A=","BLlqKWo1rPQVkpuHhLa7pkpjDSnf8otij8mO9wgjC1c=","HwRlqcEzocaAXXBb5rPqmRKi0GLDTb75LeRpVbg+e9k=","J6K39VSeXu25AQXA+OIPBXGrevCAHxvdI+qtkfIimhM=","AxsK+3qy8dJB+IIXj33NrUhZHMZ5BdZR28r86UsU0HM=","IuAyO7vazl+8dKCz3t6m4eO/EOhN/HH+OVCJrBl690Q=","Hu821i8/hk6uZ8YzJOR6Y0TjOi1b+4LwW++ZAMVOdFo="],["K/w5gaJJrqrsSrkAFyfTLU5v51WY7pZPyFzzDVDfWEs=","AhYw7D8jbtIZ9zzGF7n4smfb7pmmPFKFROoxsnzeSfs=","KIkKAxmbcn/t5e0AkO1pSUwFPJeTD7tsUjWLDX0QTBY=","G4Dz9Dk5bC9Ga46bJXZaAUlwRVob6u16b6MI2sdftYI=","Kku60kWjPl2XAVN/dRQQ5P8pe48dHZCY/pxRjCYaGwo=","HkMfKxt+2uT4y7XTB79RMcNSwqIVqHDXOWF/SwF8bRY=","JVY5iJolnr5Z90qP3y785/3h46Zms12ObsYB1NCyJok=","LQ2KgUz6FsIyPxdL4ty+DClYKfxZvyqJ8TtOrQ6wVqg="],["FgYKF+GxH4Uc6rIEZFcrPXjVguoFABSEMQFIX2Wrcj0=","J0EgPWbFI8djnqcTsgNGEZyWHMHpZZpFivdMvuFtcb8=","IgjFAEgGx6r1gxRZC8vqFhaP5i7ASXr8a90pOMEtmiM=","HAH220NdxIhe75zf7RkyULnT60zuNmZ0sHvdGU/zSf0=","Hw42ws+awsQ4jnSWbZ7n0aCzGGkWoIz6MG9rs20h5Ug=","GZ/CvmDknmeewu3mzzNF3LO5GOWz4Hws2BQTM5NOF48=","CjjRY7ii+jCSmZwXl7GvkJvZcaJaZWuu+9vfo2KOZ48=","GYlJ7vKyfCucPWmeP+V9o9W1CcK2cK/OQAq6Gqqe1R8="],["AOcyF6EGxALkxsFmzZ7x/SoLFqwctDZGvBxyb4MXd3A=","F7IJKw9jRXa2VMbeIaGo2BK9TAFVn/+DIXEpCC4rKyA=","LyTWCcsjcg7aVfrinsbxmQLELYv5BPtlYgJzbZey62k=","LfGD/ivJuLdXc/qWHI1BF+WCqAtlavXFh2PnAk6kGJw=","Ff6WP1vQ2Sh4wQqJThGAGNuC5jUor6TUcD6Yge2hGNE=","CvWU3EAw6FCXAfvT2JlfcxJq1yp68P/zRO7oKjHOd/8=","C46FfZ+x1VTzpOwwetkH3npDZDhgOvGyjU5O43mWDOc=","B+vNJaEOVmk6KBVfza97NRnZ4OCCQeIXiWlst27gYpc="],["BLlZygfnGCygjyNRoDVFvXq2dvdAsCMxY36hQ0yFRew=","Bo6OY0Ed8rOp18Vn9mQZpYDTuhW7/dEibv+j/WvUezw=","A0TQx3LC8FNmSnuSZrGdSK5dKrPRwaGBUHVKtLg2r9M=","B+DMoaNe0V+9thm/rsx6mo9MUSk5J1YqzqjquBfGuEs=","Ii7fPia/dLL1A5gxiSAdTujm1vrTQdf/UHSN1zl0nfY=","LUMItII7Rl22U9NoGBgSCdI80S+ET3L3VI1J5VBVpgE=","Lo5n/IX5tNAOnhGXs1vt9Vr9cwCkw3CYfIPBXPc8rjw=","IvG8TsE4tZYSjOXuW4GElkzCYjGOF60h1FxVJHf1PmE="],["D8nMlSIvknFc90dgECJeFMw48xQHHlDg87yexnSoqsw=","L1oqDNDLJIlslIeKgQbVfoLGjc8eIJFnpFrpz4Vw/tI=","LNGbXFW6sYCeUsyfwaA4wIk12hnPxWPnBI1r0ZcKDI4=","JP8phngf5ArmHo9coO8XxaXqe928En1DFUfB9qj1zt0=","Eqh9DFQZ9EhBmEDl5aktJ2rOAJY9mH8qEAiRPZiicRQ=","CvPO/yyGWpAblAbV2bL8WIM9ZC9Gxkk8oDDvWVBh7Gw=","J/QthoQvTYqMOv8vR//B4Xnwl6rszlW7oLD9/VsZCqc=","K2s7w0DUEZ5Xgx5KIYcBPxIWqztjmUXdkqmElDJB8dA="]]};_7.default=_default$9;Object.defineProperty(poseidon7$1,"__esModule",{value:!0});poseidon7$1.poseidon7=poseidon7;var _poseidon$9=_interopRequireDefault$9(poseidon_1),_unstringify$9=_interopRequireDefault$9(unstringify),_$e=_interopRequireDefault$9(_7);function _interopRequireDefault$9(he){return he&&he.__esModule?he:{default:he}}const c$f=(0,_unstringify$9.default)(_$e.default);function poseidon7(he){return(0,_poseidon$9.default)(he,c$f)}var poseidon8$1={},_8={};Object.defineProperty(_8,"__esModule",{value:!0});_8.default=void 0;var _default$8={C:["IIjOlTRXe/OL57xFfydW1VjWbgwHucwAGlgL1CzaDnc=","G4bmOQjEsSr0POxoEDVslNIcnjfXPf/5dCpY4Ow1a+E=","CcoCK6EULRcPdVIS4u3J0KSs4z4Wgl9UDV1Q1aAhoWk=","J35p1HoTOAQkH2rr6USb5uIshJxtitjJOOr2E7wa7NQ=","F7V+oDdU4krg70Jaoq2TGqybpUV6GM7FlFRaI122smk=","EcdAmDOV4PSgJuLHyTkjY3XJB3dV6xo3p31aH9dKusY=","HNhVKQEN1+L7fqQDUVurVydVakecWbgi78WoHrN7xb0=","LLk1QALOxLy/qYXeNPQ9cCztg9GXqjdLWh+W+HsS8pI=","H3r5jgj2h3kj8no9rUDFJaxS9W+72HhQZUT5rNYaoy0=","KxUXaSXfM6RcnpmnxPJq2UaxB13ljHBkwP+SxDHTHdU=","IsiYWbTTmdOmCjItazmbiAYTWEk/PLNlP9qUDpiMHKM=","Gp8nMMgIVNj23ZgQk2PUBVlwOTc69QVapn/BjlsZOP4=","BAuuLFf8aOPOXilJmOoGDiVj67rFj/j8ShoKQFdfDtM=","Fr9PViJylGful0nMOAYF0rxNiFy5lpmqLdhWXE+vi34=","EEXs6gRLocscO/B/9JaDkKPqB1ABshY37H/O9hsRMpo=","JqMZ/mt9bgjdbOqVh8/j9SNJLs52n3D2bTthl6Ji/Qk=","KKVim0wggzh+rLCcFXElbRcu8e2cBzhobahCFrqBvW4=","GGviK2oGPRjMh2DbpjsRnPxtiJfjLWoLGd4oBTL6lyY=","LEHq+cASjEhsVZWhztaz3RW9m3MhjGr4gTfLiqXFdOc=","EYZCZdduiHO00s7M0Y2tpGq3ITMh2+BoNyf6LffjzXo=","E4PnNx1/Prdfl0Yf95VlU4Fm7eb7asaLAstg2DIkZ+Q=","GgBTRuntxZVz45ifNMME/xNR3pZC85gWNgLhOMWcdGk=","K1QTRbxP4VidZJJwzu1LLcYpnGml0ktGDjbztOtIYFI=","IT5047iGkgaLQg/ax6YvPpD4fovZkzELmCiBtOp+tY0=","AlQ3D99g4xnfXSe5hOIdiXnIbMbJ23e0fp4DfUGuK4Q=","CDtzd5h77T+9DF7jJ5zMsxmtqmYLtqec7uYn9aY2nss=","Cismu/K4SlW8TFsJsgnUp3ut5OywmZ4qcAIczNT7zhw=","KHCQ1AfExSk81yvdiBrOGkeFxRiJrJygU/rvBoUz6wk=","AKn8whojS8IqRzwEkx3eZkdgAepuMpMSd8pM2rYqhYc=","HXn8xQZv8qYtbsDAlvPAYj+XIsXRDWQROGuM8GYG0RY=","HS2mdggbewp9h6V8am8skQIqgikZNK6NZGgU84t8nMM=","ASEYnXNi26kvO7ooc36iR+hf9LPOq7Tq2sJvennTca0=","A7oBvcfzG0s2JoMdXoKFKl2lp/Ry9JdWQ2LuY71tYQI=","IWSHrE7qgeTYNbIgx/Hnt6MxLfXtC25gahab3siaNcs=","DrXrQkvHLlsgd51hOKcpbcMztNmOTO3mmMHY8wafyAQ=","FHYIfuaIY/5p1TjekPkL8nGHX6/sOqxoMfoXgRr8RfY=","JZlezwefT4GSXOgFDmvdC0QOet+wDafk39ilquwAnzI=","AbWQ6hRd9hUv8Ojsy5fwV+s3jT3IWFqBlaj8awPd2yE=","Dr/tEnd62XR3NNgvt6tZ68hfB8PQVeuYfdQkcOAWvVI=","LgO1Gf8HDjG60c7SXQLeGMXAczVYkPJtZDfJmQo+Iyw=","Ao7Ui++3BTShV8C8gDc0eDD/b3v/7ak6ImYxF8MDgQk=","IdVIDvIojPN2Jwg/XG/1gGZF14eDOXkhadEJlFqoecw=","KgF/TKYnF/6dYW/Dt09CaiJmaiaO7RkMklE2ef9TGGY=","CFzxIwhNa0sLKzTPBs9viT4KnbZklYVg4TEC3KJYoYI=","Acqx62GuWpxPGx8PTPcQc9Bjz46m7LOjJrw/LyT8MKs=","CLZZpzfAp+GYxR3gdDjn+u6UNpcVBCNnSV8DBeibuW8=","ArOt/vlWAHupSeBEpoEVsKnIlagThudpdE57WywwffY=","GlAqewiD3q+bJKe0Uc9DnZsExAry/swXKwV7T8AMr6Y=","MEilNqKnWvQaD6WWdSyD7bGcRsAOQHJRaizOM6Qs6Uk=","AdAIIWgy93c2ufLI6vGNKuaadZWj0uhyXnWz6cZqsiw=","BnOJ+mcZu55JNCRXbTDWJU8bfVTmnh0YlsGxXuhcDCA=","F9oEy1BghhWIpN7mDazsQH4I1rGWUDWUUnBWmbzcq/Q=","HhELJFJs8ZRIoEtx+R+DTZA6CNOnZY4F/wEEzm3hSvA=","CwootnJp3PskIjHHOE2blsRAZwjxp77CYWDiNSqCDjQ=","Aia6Ijv1zIMbymBKL1WzJK0dSym4GuM8vXORrQ3KDGE=","H6UG+ucfYX22oE26IetiJKzKxffP8UWUcJO/zi8/XPw=","KXJMwpc7WzTE5T+5gfJzWJ5+BGeltLWhbVlvSIRPA5Q=","IBhYFebVvUPXabHns6QjadtE+tpEU0qeQaGBp82QysQ=","LLXsq5Si+viZhrVlVFST1dhknXOp9TEzthSvbYk3ZhI=","BncnBKamw5by8YYnLbglE1xZhvvbzgo/2Hm8J+4hNL8=","ARK/9HNmeaR3RA50TX/GGR4Wjv5sN/0L7rbmTTBZGFE=","L6rMJI0vdCt9xQsBO+nEsuqNAL4XKDKtB6wOJo45Glc=","EV6gU5FckjHWuacbTzQ3520Ir26P5+QqOAATZJjfQKo=","A1PiwoRcD9/FP1g5Ti26ygYWTRDbr3VhJ2IbWiIYEjU=","KbNoWQC7rKkQNjrgzexfYcrixSx+3j7AEOKv6sdIcQ4=","GnO6mFuCQgnQqfMQkgeR+tkieyG/2OijqfHC+on6waQ=","J0aC1jodap616iLgVYsUX1ubXoRcjJ3OuDvpQzCaMF8=","JJ3mY9/fZoLdwSLgKqwNeTmPOOYInZLiyJLM+Un8r80=","B2NGpJTKSZkYIp0vr4e2ta/UmS8NfUAjy7Z36kN21OI=","BxIVTrQ7Cj6L3ZTimthZOeIg2vaTG4RGR0HmTpkmtQ4=","Fbt+EnufyTdkJpKpLYZJYOJJ3fMn/GySr97dib78bDI=","DUONiFw/zlsGqAWEAV6veorgXGAFLBCrgNgAdoANjhE=","K/+4c8mwR2Ky42LWGVyAE9z3pf2IGJS33Dg8iqNKngw=","JOpCx29zUNCOixAWZj/ao/hVK5Vk5botpFt2ZScH1sA=","KmLqIaCt5HQLgIudg4tO8gWxGTtXns7ODaNFI8SB37w=","DEl3Smj1J0tGjOoPMiEcyajKhkxtMvLGRLGrie30dek=","CptNPTJWTYPCTU4FLcMHLP/WHL/67JVxUf6tEyRgc8w=","IhF52EiuPCm6oN6OGa05nPAA3PzlcqwxD8ZL1NIBw6E=","FwIpQ1JXmkPRnaFd7h/csqcKRd4lIDQ14jQGkvf14KA=","BZq3iCc2AGhc9t4E+Hyp27zrGu/jf3eWY6fvUBnU2OA=","I69ksWIr4Hc1rxmZaROYrWoDQCmhCc5DXxLBshtB9Zk=","EJ7SHiRWrX+UoMbKbtlC716BMkM+X7pu2PSbIDhZRRY=","JtnM+lN50/1pJ6WJWDONYDeHInHYkfGfZ/cMOeCJMyY=","JOqeLbNYwb7Pfc19DkaXmmRyB4Fq5akB+wCmzNmR0P4=","ABWpuMM/zpOuOXHRk6Qwvpjuyh0nc1l0z1Ar+yDHG7w=","K7s2b3m8O6oTjXmparXNFIJr06hTR+VZVQvzUfKW3Bw=","Chx2ZB7e0Vfqob9KrclWeR2eeynrFNB2VK8FJoa3Dik=","Coqfnujs+K0LXNhCF68m/c4soWwHvHR9EDq8tIqyH8I=","JtaFK1kX9OIpxGgk0AtERCt32OVm/js5Abpt4gEd6tY=","GWAXNMMMsqRO5KMjs18sFx7Wfg88H87HCW5fAfuuaIU=","B4lffwKfhMPxfjWbDukm1AJQVYfzhsu3EHC8F8yH0EQ=","BYB+Ciskc/O4cTBYbHhoIo602VA78lzCsPNak54O9IM=","Gsm6jrni/eCnmIaqjH29NiqkkKNV4HmCgovj5QmdL94=","Ixx1lfdv6lgoZyr8W7tkY80A56BzRuJYivVjjjsyG0A=","Lj0WdzECF85fzFj0A5Uy/5RuLv8rgNF/WBynjwBoZy0=","CXQWNEFxKXWjO0CT+SLX3xeyvc57frAseDDFmARkAA4=","HPXBpCgIIqWd7suCpkuqtO24eXfpjuKRObtRZxuZGbI=","Ea1G4TeSFQz1eTOqlHbskYS/1fI95G8d947X6UzIEok=","CCj7/AlRweoMDz1a8v5Xlu15Kpw8xAArQeehu45j2uc=","AscgqEhucSIwUwTs86APmYVFNcT/QE/oLjDpnoUA/PY=","Cb38lC+6iCTAo41vUl+RdjYNKIGqQlAo8c06f8PvcsI=","HZVKD5MlDlWBxriX+9cvTyqUPd5R4mLn3MShssqC4rs=","K4KTUuKXqyEG50+f5wL2ljXt8356sOGn+S8UyYrtVus=","EtO5F+WPH0ThurqjQdHaySPfrHVILhCK8cMzaHNKkE4=","KKnmxl0G7W6kd5W96bF3tVCTBfhTJgYq1QFQd6/ku/s=","K9PDOuMRwvjUrYJQi3bfiQwxH8jSMvvC3FNfpZMiHKg=","Jy0A16j7FGO7Yk8d13TtyPOgkjv5BZuuPYTaI3Z9aHM=","E1WnlqvfqpA7gd+uMhAaEwaPUHBEBVLu4KzypNB9A70=","BzS8vOQYCuFtSmaJublPKwLMfXTKjvFZLNFq/ioDNyg=","B3jUphTC924oGZ2YmpBS4mJ0ZLYg2R57bT0V29R5nVQ=","FrvJgKZ7KmVDTQh8UBhZ0SfbN3rhRP9jTLhXT+i/hpw=","EqPn4ZewUExolDZiRb7WXjJtt8eq8sHA1Z5LrBDWM88=","HzX4xEMfsNv0LZ0HM0/Wf5kWD6n34g2BH0uP6n3V0z8=","JdW/GoY6CmRBz1XnyFuPIy/xVW53+8xtcei980m/37w=","Fea42at+Bjo2OCFq5HEXbofuTOMMwkytGVh6IzMjIKo=","AZKe9HxzIrd+vQ0aQPnsTUHrJkG/ujWpy6e3CKU0yco=","GE9R55Htqi3qeREVEke61LDoZNeo9njHcIrGXFHju3k=","JgWt9VYtUFX/soTfHsDU43Hu4Flc4UIqxTWkEFl82GY=","BubUH+uDLC/gB+G8zIFEJYW8nq4WEri8PSpJJcI5rVE=","E3632gaJVc3ijbauXngLeuHA1jPN0RO/D95DRayclU0=","LpeTDrQZ9zU7onslh5dT/mTX0YcCPOLeS/nnDrpum7Y=","E69Ak2IIeGbmLWhg/asVkgdAW/nHWp79kyFzah2BJBM=","D9L5VASp6S9G1XyAUHN1cklmJkVg66+z/y/RklnUfWI=","C92TrCGu3zGCb8MBL8j/8UOErdUh2YE13zznDkfTgRY=","CD6meNWlPoqbYBkGvvvvI4EaYTd4i7hz/v1VIffZnwM=","CKmQa+bpq5PL8blPCQ3y0C32xsz/Y2TC7WmG1h8Wryk=","GHscgs+viARJM3z6d/YY4+0ZxgTmX7dosDM9jVNeqkc=","JFAF+BTjglB1EUMRf14n1cFz8MpOoqgbG48+kNf+xPM=","JapaU+xecfP0f7HPjqjHV/q2mmEnT7Nuracd6vFhTbI=","AcJEou0ZInU7Oexrd18HytkbFM2bZXi2RJLCzEsMi7k=","AWZOXIYSFsTLEM86O9Ua+g8+WeriT81+faqoU9RsOC4=","KvABopbBEeQeMnrSEu0wI02ivq2gRJ6h0uDwoA5CQHQ=","FgIr3WfSreFfZhooff4jkVQzsnDyjCTmBm5FA5rtgTs=","Ey18pfk18+iGQmitcj6HgN82kWOEpUuBLHSnSaJoJvY=","IL2rmCnkjImpnQ6LDWm3mkonOAiAet5OxduV/RhMTzc=","KNtJQ1CunIGrUtcZ6gX5jcKv6HvBr+VWFh5hdyJYqVE=","GfyS8dLB3AQ680J7d+p06Aq59gQeDlHRsk2cufP7PtA=","Fr6nEmuPByq2yGr8qAtgbLkMfl/QK726Hdczw8uIRwU=","H8V7FopbrcoVpBfrtL9b6yj9CeDf+IlVChJvWDPx/V0=","GtINGj7lWbYzS+S6kR3slX1WaZzzfde5fSPcvGW9mv0=","IXNDCmhCBh8Cc5OkQ7biXlmj5bzSCJWt4PzXvrzYiIU=","EWcxcwQ+FRNzYdsFoLBnFHoj1/MANoDz4VNLGD/ifNg=","A3yAr17VHBwiGB8+dziAaYRJPrmYrdBVVu/2USkln/I=","HXC5YSRtImLKzYwJVAQFSLY/vSXzA4KFw29rROm5/18=","IYREinu4DRdtvj3nPzg6kJY15GEMJYZLLGMlIYa2xEs=","A73KayL7gM+eezFxkOu7n2x9PJbBv31QE/NlIaXbp9A=","K2WHMxPVv/pE1RDcs/VQSENvTuqRoQDsDRr5Uutkskc=","Kn/QLvENscncA8nL6C6FfPBvN+oQ5+P1ObU3eMonRhY=","HLiAzqGSFThlcTVl7kJVznLaI7PSFC0mX7whlvuLVp8=","FmKLb4P8NrvB1gApppyEPSdIT1lKfjuo1HzfpUipGlY=","JvqbhOhV8QaeduA3EE+Ihrdg1JGb7XmOLkuNvgCA8W4=","Duhsh73w7NUm42psSsn8m/BbkWGFbWWMG57NgNqeloc=","CKUXmZOoBWQFUny4K29hmYTGPNEV/+06ZzT/qFJnGR8=","BHqmHkvwchrE4KLykeYhJLzCrTlJ3Pluh19F337rVDc=","JjpRHwM+H73G0oK1JxKgm/XR/sIeqLv+LrHvW8TyEUg=","ImUgv3MEhuLYyFm0SbvadjG4ZDKiwQDdc4bJsfmT804=","K67ycQelKFR4jwxalA9aTfDRjTi4k8uxFXs4an01Y1c=","GAIsyhfyaBjVTmDjALXJSdnJISL33lZRpgz3DI2l/FI=","B7qtMB1YRg0ebtEPUqvxvXhcrvhWV3f+2U3WfeZxfSU=","HkdhBsS845A6WqxuEQ3yzBp/cbQTW+NmL0sBBH4kimo=","HgGd6lAo0jst8GPCEEZqiMP8Hr3tzLgEXH6dG7bnepg=","DdVfAGVZu2dHslTSmnP16nF0xrYGfnMKX5qZCBhjCOI=","CZMIWoAkpZjgyQWdO5GfsuvIG+QIy5b+OKSKlSwCkYk=","FD88v5jkCXGyEVST7gbibHiTeHv8+xOznxZYaex/ubc=","BSX/KPokKRuNAzsCE5V1T6Aw1JcxLMF8qv0AhSTtoH0=","LZ/cGM0lhrn0SRQgF5CTkgJQlRgtX0DVkR9wjrBc2FI=","IwmXIC/NbwUeG/Hlmp0BGI42IdYT/g545t+0AO+0P0U=","BEtWRp/7vJ0MDwdeIPOQ0w0RmBp2flB7gK737WnnFx8=","FQfYi74QshwjqUVV0eTTeapxZy4AJFA5Pq96I3NhULc=","EE1nUqdhtQAmN37HmEBPcRUbPPap6hvpPGhAWUgk6bY=","JSdjBc3q5MFlWN5g2nKUFEap/SImqmBNRLv/ErHg7CM=","EPPO+wVNYwvX3Ex8q9l5QNymg9rYzDWm0MMMvZgSBRw=","DkBsv6OExrJO0EP/PLHWiRuv8Fha/E/OzHzM7ICd8D0=","GPNgM/z2TxvaDBJhawC2EYY+/biWbbftNTTP2kCurw0=","Fl0CKjTPEK0yVXI2NaUaNboqbbB1ctuhBtxWymyTfFI=","IjyMmu0wWz0YJltW7Lekz8SxDli6oTZYJ6U5xHgZQk8=","IQP+6UZ0hAsaoYWh+CIe5FEaK1Jo8ayW17KMiYT95tY=","HBOWQzu56smgKr8jkJc8FyPsXNVSl6OHqSgG947504Q=","G+/uJABaiNLJrpImFp6JgQaZb9Mv7LcrDLTezxCfG5I=","GtxJ8fG0Bd9yemTphnXqCsL8dCyAbw1ZUMisQTUPUYQ=","EKDgyrdtsLagB5nasfLkp073ORc8+qstA+riQMnIR8s=","Gpr/YtbGb9/tDrkbbE+XTB4EfAsn70mxDSkzrxrz+Zc=","Jhln9oQJldr3QRA0Um61rHJfleIfw2yO0ZGHOYX5XLQ=","EzgDD4X80vrgnrAW9CVAhuGvL4j+fb4p0YPIntUoYJg=","AsU3RdHw5mSZ/xCed3cn51DBE0kUy7TVK98WSceRGto=","J0AQA1RAbeTZTrhXocXfHA6I2LC4LRDBJ26n2fYqBdA=","C4qRU9PWQ/Cp99wI8k1whj5PFQ0cMqyJBaYiaIfJvO8=","Jd1z2B6okYycH/abC4ag7TgB7RqkBZ2U63LPVIsu6h0=","JT2BPPBfL/HH1mIr25+q/yd7TQMSpYiKnc0SiRrRUm8=","JSMyLS0qeMxUyUS1d1K92NLI5i469R4CDrLBXtgw9fY=","KsnC1g1FaEjo39R0mc29TyN387SsmOEOKuPk+DsAcbQ=","Kk418d+DNEL5zLjHVSOxrIqXFhdPR/sIMNlPm8Q4a88=","Jw5/axXywOCSYUfL95pzMLZ20XSstltzBSLcywlvn9s=","GTPvddS4YvInRjTh9aTlDOiZ8VIU8Lj+rrssou9SztI=","FlEw3fd6gtuEJ4oxhBEJ2kEI02S73GrLsbD6eqUXXcU=","L8H+Ax3NRTjV2LE0DQ0331UF6WW359xMGYlbn2/O2mw=","Dh6tK+b2RVnZA+rrbgKnyF1UZCLncw42Ch5LzA9i8W8=","CpgzYL8yOS1d8wouSyJTWk8WH9o9BbGlBn0njiHI5Uw=","LifmGChpNgfBfv+bseXtC67veC6HnFIwuG1qedcp9M4=","DRzqJqCCB+UirOUF6DfKos57EFy9BOfIOMGs0Ab/pT8=","C5WNq8moBm3p5M74mryC4zlqA1aDdvtEzN5MOMsqGUQ=","FvW0LYj41PeH//95a8+BdbHNzjByYd7IbPIDSpuIu+g=","EraK7C2yYuCmHw/UuXawDdvPdUbvJ/R9dDWiiMK2xjo=","HSI42Nl2jcY50Gylhw41A/P4HvhjMAlEyHt3Yoq22E0=","DRZOMvyjw8jaOuMyqDHMmpXnXUgzriMq44K9xreQ2Ro=","Avzd5tbqvX8voZI0+xV2YbdipcR7V3OaYgANf2yo7zs=","DxM7ix5U9DSEV0ZHgSyjd8gCoVkN9eW4+cjCGQjvvjc=","AwV+qJMum/fRpLrYJB4U8eYK/RO6TpCvtHLZ3SnEK94=","I9vLbstIB3QN69yCX3dkVxvJPzNkWCXQ5FyIsAiKnxg=","AbkHVKIFghfNtkq0XiTC4pQjvDp2+CiVeZJ+zfY+2sk=","KNuACuFtcDPI4QfhmK6qu/nQJxx02VfGu5UUoPA4+pE=","Avl6Nu+Tp5BMvb3Dbl7zdOWOrze1uUOUc8vkd8P6sXg=","G60dljemrW21y9Gbp7lVpFuegInRaXRFoTB0PgPtPK8=","K5b1IN2oJRqHiyi/ltKBhVucQyILCjJ5F5dT90DtroA=","BB+X92xgso4P33l0v5IregmZ4ODkDGVDeK4ShDISkJ0=","E7XPV0dQV6L1+20ICTEjlzrvlybL2YNblWFsKu1ViOA=","LKQ67VrqFi6Mm+kqFeetCvhNRPPS45i190kfot8S3u4=","CJ9rHsi1HNHm6mm5ZJUgpvDy+W6hHfJwqwxdmttcPfA=","BPUQz8flKDcLq7jtfFDDTGBBdyYneToPNxHRMAtNEnU=","Jg4SxH0KtSVjr/zdXChi9LrVt69O4DfqX4Fk0PE9EFk=","GmVkJHYOdUaK7dhRWzER4WzA1g+NzkUfe7NbEt7Hcrc=","AMyFDpWcVnvtIAWLZ2n8J6bHDPcvIiuAh56b37xnEak=","CIlHkQ6ztD69hohpXGSsAg4Z0LvodafzoLaZvGDxjKw=","LCXCNrtIA19F/eWxeBBWVazp8/mvsJBx55DcS6vchr4=","Et/hvChlT1ybplhldpyeR/K94Ned292iFwSQSykF2mg=","BWRbaPmaVk/wj3ReFBO9g6tbBELwuO+qKphqbPsv2Ps=","F88+yYMbTW6tZA2RLkG0xy6cJZEmv2MQ+ksRDkOGTHU=","ErFfKP7+XW+lGaucxnp4xX3XIatEryhucvu9Vommb2E=","LaRPchBSB3nL2s+qsuHvAe3aju22/m0Df/r45ZhCoAs=","E3/3Mj/nV/Mq+hZfEViLQDvTk9XJqWHNL32i5dmolMw=","ExgQX6n+FUnwTvSGecc9Rrke4L8ntEURld6UXIz3iv8=","FAikJZ31KkkXdZNrLC1HahIXCMMS5jXvjR+EPDujQ40=","EM8g3Vc0wYiA3sW+RK4t3MT0R/IMrJjJUZPrdXFYXQc=","J4f+RiO9MmTgyLWkcZdKwf6x43+8OpyKTqdNYBC30I4=","G5DiEHSQdUXB3sPFnb8qax9wMli8A3B+M9tYLUWrFy4=","C46RKl7FoL+3eaCAG5CGPt/ZQpp7NjK7UCL9vEBjbPs=","DZmCN4zZqDcLt6VVw03zGD7msNir8x8fVHo5kwRBiNs=","Hkl7z9XJXN/WMLCvv203bymkaNHNPs3lb2lAIh0kivQ=","LWAkAcq7xp3/PdVS4nHuwppaSsvJNWhsz/mhUHZYW3o=","FwpfRRj1hUQzBnGtKjYfLIA8DTVfPhCleElR8qvvpwc=","IbOiPDpVPUAcCFAuykl76Th3avZx7f5Ex4SVas+Yhl4=","Ik3Ul786Qke5xIyaw87lMHSQ6CShQgTtiMKxFm6OR5o=","JlSWWjvzySQi+1TmdqyEAbqvD2jUJmTjAGJKN1MC4O8=","HVJfQQX1G2nABoKGcOd4W3Julb4WDuGj4plneCCDnzI=","KPiNCJ9CHKK/5pcnD8DzT1DsQaHt5TYSxS23RHm0syM=","CC5iEVPuNDJOn7f/PRI/yVYO+a8PoPlI2yTRyObwepw=","B/hXgzdSOGex2UA+nKYa2ZwNfVvN5PGdh1LhKk1YBfc=","LlLzDdBZMa231+hSVYSbBiuhzy641ZIItb2o411pgZo=","FMs+VrK4xmBboEJhqLEXeRyvJvfCM7sYP4P3LvTI80U=","L9a05siSYJ/aIUFN2HEt6EXqswW+Yn3002yNMlyb16w=","AyWJjIQ098oy69c/U987GtsMmUCmnpGR/ZlqSpYVe/g=","CPUKe1hNwCK4XWoWoNPf9rin7E3PXsBm+Z/EZE1tXUg=","KcW7uOshT7KFyjCkPP1xQdnOuKGf88lw8rv0ybrp4R8=","EmTL2ewAEXUhHihWp4kB5AiPHrfq9ZNJmeGZcwfnQyw=","KKDngZqgJR6c8r2r9k+tvVHclBZTOuM/fLl/0XdohQQ=","GpvmUcQS/ubIAISEd8u2fkxS/CPlGt6cSPavMH7GIdY=","G/cKJP5/yJRv3eb1VrPtSwPDMAXL5/NKwRKW5bDHX20=","L1bIwDh+XkTPSSGr0zsVkMrQcZ6TKjYZXFE44Masg8I=","EQnbh7doT0knsq/u/wBgivXyEZIOuNY446fJQ7KT/t4=","GFHCmAQCW2+cacgIkQNVkKUdEwMs1XbTMsqJIivHV4c=","CQnkzcC8R/LfSJgQa1xA8lxxN+HVrJqYbJ9m/V3637o=","KuPpDiZQ4obVkT1N0ecdTyM2WXAbMZqiKOFq+fAQ4H4=","BqbAFflRc0QfekDU8b3gTrYPvE3HL9q33YHsVXI11TA=","L2q101zP6eo2baJXyFlvpv8w1sRoFqO9PUhMl/jSRGw=","AfnGAwgYLrbUqD+ScrwiCodF2ckScFCJm/ZCb3q1fN0=","L1FMQSv9l1TmeY5MPLE9XkxLKWCdPqVhfe01vAHXmdg=","FMQWK5ye77l5QbHxM7sYIl0oKU0JLLiRevyz4Iq82cw=","GZIf1iXGbsZ+zYrz1v8OCjy2UOHnKz/JiISwA1QIWzI=","HIUq78kpZ1PhJoc5rBXSxtId40NsgW91+TuN6/N+tso=","BL9KabGqTzBK+qHdG/YN4fVZ6BZ+3drB64itnQJ0X7g=","JAp5HzuLti1dmq6A80HLVp/j/nLnGD2OWDAWXk0SN1M=","FRspW0JC4MCf73vF70Dx48hVFlQYbWLMZj7k8o/152Q=","CG6z0wvE2AZkoHSglzncjEl8k89+ZXlUsMv3Z2Fl8j0=","F6qJkte5AerefqzZWo6JOCopKnEhqw676+DdYmIsIcQ=","GlszRaTA2HVmNldge1x/+DL0ibI6PEOWIAhXD5brjeg=","LwO0bZ7u3Nf49M8s9xDkjOPzHRNk8DNFsqeWSwHmNHw=","D+9YPn6OEC/rqHn3vWAkGHCgKRcjqjVKNSWeCkAFDUU=","Lge11wylg89Nm6/6zQLX2A+l5SOrvYlQhqNiiLlp+mo=","JFmdv6HdH0cU1YUkjPI8oTlLhYr46QTAUXuu2/Lxdt8=","AKgmr9NwvLZbZhiejZhnd+YTdziNhyfkB7UA+1KR+O4=","KHRZUIcLwYSK28X0vANBXwor8j6QXn0zytA96QcIHjs=","IZ5tzaWQ/IjUBWc9LLRxD4tXR7Rt2ZFNG+QIFxTKzlg=","KWaSB3tC6XI5nxe6cf/t7dlRhf9yU9nR9BdHxvJ9vmo=","LMxfDiBJ1CaEGGLzL4Bigp+12CampIPdUHjehZ+cvOs=","BPkVpPq8irIIphXdifogfTZ3ALu5vAYdB/qQpw/v/aI=","LgS3waqFP57l5Pu1zXtuYMzqTtWSijT05Z6p66h5Rwg=","CHAN9RE4s2wO8r7RK9eDQOxpsEouG4ZRCANjkbS22zo=","JQMzY5jxZb3qjUkp2x3Qs3EEFv1j16rc7EG7cGLCR4I=","BWM3haUKnHdXOrENiTNBoMwt8HLtjquaKZakelJ72u0=","C6QITkTFDhQSpMmC3A2KDUYiUTt8lun8yyw74tOQHhw=","LW8yy3YUBt+p4D1/+KQ7rhBtxFGcYcOZbMnMzY8wfIY=","L5Wcgwc35jE5WEY3Ox99ADyOa6466i7bc0kSRPg3Noc=","FIY69ZeSrbG7QJAWZDSSF0mNmZJQzAqFjbJ67VT7qjg=","J2I9EBsfkiiZ+cV4Ph/bsedVKCbk1rWNbfjZhpN83II=","JHMopNnOgWA+N+pyzF0ciVwh8JMFMBvxQRwHmGAqYmg=","GSGQmqrQPMeKbPvtbBBW49k6JaVJbK+soSr0zjJMYIE=","CoXANYzziLR9FNQv6vvdQ5LfFU9km3IT4pzxAa7QDYA=","AbrARzSlkg1l1nqu4EFl3mIb61b5AspIOGD3B3U3US4=","HdFyCWazIxuwCwjWuLrGx23uVFT3hBNLk9jHCrPu2Zk=","Iol968brKn82vuHn9C7UsNN61pZTXYLTnM+76S6GwI4=","KtAbtCuV0ROzuRrYjGmjPB6U3IVRK8UWjucwZbOH4XU=","LoK9CgU84Dr5qpR99fExeRUppX+DYKLNaX6qF3xgALA=","LS2urqqTpfnYtlKfAMTG1pHDvE77/I58LwiuPkTh9Ls=","CrCJFLLeVzl5g7rOCzJ/mMGpweWMdu8ucWzDBXJ6D3I=","J1h5bNHBeO0MQzxPG2sZ1C/6G8iEw80czKEHyyvJGZg=","Bj31sDSQFue9pHQeyJjHTkow/E8bWftxOoJJkjEeMPQ=","I3EwFlVVRnU9QavWnm+5HkNEt8BYOASO0GQc7cX8Zyg=","Jr38ColJmOaTt+IFnWpSiqhqtX6wMblrU/6LWtt0wHU=","CIlxGPdcyOkRXaxYG5VTy0B6HeE1tjJUG7c09TmFKGo=","Au+Osseyb3pXaR7LHhWkCvqbOlVXq+gRRupvbUlgw0Y=","JU6OX8EbmSNI/Xosn0paC1hryq8SYDZYslkQ9jzwiwE=","AvQcIbc91Oe1ENyhbntLQncwHaX7vVnbA9OjK4nFe3w=","JT8Jzp7P0q7q6YuhspgGvChx5fxnv/E+MD25lhjh0KA=","BDletlVYLQPyV3XmauZ74Kr3xjzv+76pImsEsOeVv8k=","E3ESNcPSHddJ4+Qb0EijK/oueW4mty4FyZnm5hJuQCw=","CDx1EXUQo31DtVE5Y/vQ+fM1kN3MKX483Z6kKt16F1s=","JsybVxjYTmBlgtNdj9valExlJd3NdIjP8h1NDYI9zqk=","Dol48EeSmxqUYBSZY0qNoCC5pG0LEYfVRQTtijRNVuQ=","KxFCOvOaXRW+OXQ5tcpQqpptQSNKyr7SAGJHaI9vqAU=","IaVjgQQMcC3aWjGlqidc5pJoViXlqne7xDA4JXO0ArY=","Gahp4Vs/m5ZQFv7KLLgqLxTIAJRbpJ23Sq2Ok0avB/Y=","KwHForqhb5Vp1GcAmEZvBb864Jeqkwdxt28kr6a+UNU=","BYYUhXO2tWYX+UYC/WyGrUpxs/xno1RI1k6upTJYISQ=","BANS4ZgJ3ZO8eixUm8GcsAeHLgWZoxJ6PncEQRiU+Yo=","LWSGuOe5VJ6obPBE6JUP+jaXToQuH++HZWHhNGxaiTo=","LqnS4bfQfJo4lVZYQOJYQ8nevliQRPMFwbWHLHTlpJ8=","EuDcQQWs2GkrfOoL122jSq649tAOz4S08GInBBOoCHo=","DanBBlbm9Cw858mApwydeT2034MHWZozpJHyS2NoKQ8=","AvNVHGpkg4faYpyWYz1cyZNg2bia7CPBisdq8hsRqFA=","IC3jOm/Onf6K7qNK8e1cdAkzhsilU9Oj2kbhNHMd3hQ=","BzctQQVNvACePpH5AtV6IT8ENXXzQn41dopaUkgrG3w=","AvfjWku+lpmUmoGSYpQ8l+jpOM2ZnNkRqe28cW4kVPo=","Kie4SnQi4puMxzv1S/U1sBFgbIGbS6poJLYSMDbXP/E=","GVJ+kJOzE9XSY4yGNJmDn/XY5fmOdLMS+gxjr/cWGj4=","CFcaa4tzA2MplmYjHjxJ7SMdHjVdk4lMhWK6AzFH8CU=","LA8yd47f6TLZEpYcgdiOmNT7ZMrqLMLU4/ITpdKhue0=","JxCmPoT4vzsV2gnmm8JMVn+EpFd2ELGcxYGRsrFFPqA=","LUuEQPFodF7YTD45P3W9wLD7PxSOTud7Ul68JYqVPdc=","I0kB/z7GXgpPYpv26W6vN5rqfICMqe55treWiVkXaE8=","KKUppifPxom6G7M3IHJRjHcgtFCXUznoeGXDa+Um5eY=","GhryYEc9g0iaakZt3BhV/cboPXO1xcD+1VSvEcbO9es=","L9WU3BSZfo4BI/OvFskonQiCZMwWqBGejwKrcnCVKSQ=","DTVk5EcW3owC2Pgniw0vgZZYI0vE21kUf6Ol3CPuyDM=","KT6axEi62kI3fdiwLVrlaV6Ibg+OQ/AbOCZqraPPqg0=","IYbpYd8HKLzXtmfTXpXzVM+x7hKIrvt+CyOBKW2uzbg=","G0ly7gOyeHonIZzeq3rNtdzkS/g2igxD4eO4yKf0nnQ=","ARBa0mZR1axS6BfDLYajsQ8Fc4/OmWsvqQXOHDJ5Uio=","Byt3CnDaskKsMNA/XSR3WVz1Ibp8kUeNcuRTWFae8ww=","HjmaQhlqgGEHnp1h7Jf/jINxlbuTYgaZf1qTAhtw0nU=","JPUMzDpoqz4sukU+xAqHlqPFlzXdMwO8+ttiGK77fWo=","FP6S3JIntC3yP4paCnovULwRnwHf5wi5EY91YWcUvTw=","JHE9hZUXNsd7ZpQcAH0XAoInGVjJj9QtaxJpanBlkW8=","Bc8q0Fx13jgjj2MljI384NG2mN7ef+6pqXsmPM6BXOs=","LWJpXHAIoR0Mh0tAOVppX/+q6m5r/Oha4VgNxIIYqiY=","GeRyJ+dNVWMSZ3D6W6YUBepvNIVlw6ra0IMLPvXXdaA=","IOQ/9YA3i6/iB0prL9UMdFlFN/mFZfLWXtjBXlyhCEo=","Jk5IQTCawarpLd2ctNlz4jdAbVDShJxwkb8cG/XBJz4=","Eji+rO3U9Ts1tXivHDDAd/QoloBlj7Jq4bTAsvcQ5gQ=","DZBHTCYqrBkT83RZ1PIFXa3pA96bwC+l/HwTfM4F/jU=","D1qvSCfV9A4AI169HNG59uvzOIOD5pJXO5XK5PZTrYI=","LN2kNQ81M0dzzYI983CX7pZ8KNYtDEXDTQzuQAiDSJM=","HAyMLrtoYOZNxGdVp+ByeVvCx4gyphi7ai1dCRG312g=","Jp+iYGnbHPDLcFvDWEwBULhWQtTyQ9XmjXJAuOjAMnY=","CbRDsKdnZXW5ptPwA2Cfp8e2ImNBrIOJJYiB2ZT6kcg=","GRtGl6jilauA+BsldD/hPz+2mY6RMemahvIr0z573bw=","C0iLaodfI4vDJPBCiK2GXIV36PkGqXGtS7nZF3VkVzA=","J1kosl5QPJyVwBsYpdMAgbsM0xw2zRcr3h24Mof19eY=","H94FPdhykdfhTw8ue3RhtJ9g5K/DnP3N5l1w9lw7Am8=","KbLDhoFunT92EA6PuVQzKf+IrCkZmhgTWNwjGqHdPgs=","BJh94+MSGBHsPBBCEAXhM/4c6cKqfXxUom9CXNGXZ8U=","GaI7qXQmv6gbdX41qjVZBQYoZl60lu2HMtQJlC+24Ws=","EjM+l9Hw4ygLXi+dllYbLATQAdKzk3kahh/cJsG392c=","I+SKW2RtNTiV0GkooYHXWtJcladnLzofSRfKA7r/Mic=","G2v/QjMX0sJyGWWXKCPKLpO48rsKUiRc7c2UWH1ZY4I=","Fq8POHubqUwLptF23zBwH/N4s1JGgKr9pPfE30sIiwc=","G/rZwakiNO2XxRrH3C2A8ukIwJiyi75xLLdbknl6IQM=","KbtQZAc+mmqux7/ZTUj+IgfZDqiWJTDziEQspNleYlY=","HL5FbsP42ISeEP6jZQmsw2R+3D52X03nSJJk9eNAM+U=","AIejUGLb1zVjb3bO9vqztBJ0l4HwOzmxgUlaYqrkJCQ=","HxIZFF/wvxXZZF40eHmnNH+aal896pqb+UlRdNIovMM=","B/k/tBYF08rhtCuS1SeyznzvFK0rkHcCr6E9ds4C+Iw=","CuPeim7dWJq2J2fpLzwZ778yEVZ50mKaXr0mwcfTQpk=","FbZojod3JLQc4I+xdpU0e164hEQjxxqY68wYjCOIjcs=","ExzcJS8Az+SM1ssbFTRLb+yLF2wcpVhNdtb59q0muxM=","G9Vwz4eLPcFhbKMr9V4LP9iYRE0OcNZJCex4n/Eeju0=","HlpU5x73ueq/cXwB3Zm3Jiw7Q9HWlgCUuOUI0eEfA8s=","IciN42CzaiT7ZBAU/s6s7pSFYjPfvMvdHp8PNcnn/M0=","LvOH3BASrpSJi4r8mqVKO+H5GCC2GrhvReyzriHiOsM=","KDkU2pfwNjSZNq8RV8U22cKHP8PBVDr9v8HAxVzG1fQ=","J2rU97ozlx5Nsiksf/cE0VoUJGpufXbqefEYkGbdQsA=","JMp/1qIBTZghpiS/B5UOj2T15oktSOSnHNT2Pp4sY9g=","D+jzcNJJaN5N7A+uWRnY9PZmZz7K54vX4i3CJ2Nkr9U=","Lwu+x/aiVVEt80gSLfS5F3h3Ws5YnUZX3MEiOq+/JYY=","GAcy7m064qpIZhWPVPTYuYABPMZx1oxppy1ZVWeHA9E=","BaCwuha3sGMdviyS+RIShJdKcDOmm+MEB77GsVNZBwM=","KQiloyBKmhRPZWXlYbv+mktmTtrrpBBuGlesdykBk9s=","GMhgpdJTeoSUShB16ATDLsZstZeZCKjKjNfy2KcCnA8=","HvgGF7AlvVTeU2HcL7Fs+5DDZON/eh8H3bmrKSr8DpE=","KrSVIVzN/aSYUQ9tXb/awUKUZOd4iiKf6uVhvj1iwsU=","JR3Ac78jAQoGvqJVYOG+PMssOOZ9ZOrGgK6mwZlSp+w=","AiAcNmKlloWlEeJVVkNWffUHcujBULzsCUOorz8QaEc=","K7kne4AhxdNUMA2gkQHSTHKoQvl2J6ggZeXmeiL0Zfk=","FPXuRoeOYFWFs97T+oubf9YqIBe20vMO1hM5zKQ140g=","EUV4ZotZUi/H15SrzSSXuqvYVfP7pQPV9eBIYEe/P8Q=","ILwGo1/gfNUH0N0KnaaYfyKAFwVQlu5ozTPqs3c6EUY=","GEgB9lXoL40yuU+wYSuqTsmD0c2UytpnI3ZwBR1frF8=","FATV/HouiUB3gVj7LTAzZIkhR6ZL/uVLJdOQarWzSQ8=","JR30M15RZPy7rnO+uMtXuAnXHLWdbjA9sFYLDB7nng8=","CaRb5J81xPmHtY10nHjGkIJIbT+Hd+ukED6scZD6rVc=","Lt4ii5uWsh3V4ebqJgqH+QLABR8fIDx4j7kH3wDlEXc=","EAoxGOMkisQA5qqw5OaxDwfpbeWCwskjqZzRTkXW8gk=","FYctuh8QR6wfrqwHa1dROtkv9xtqaisy8nrc4ISJThA=","H2ijXYHAVzOlcwdszXlGpAOdoi5ClZUgc35KaEMoP6k=","KhZaGisBirL6TlgdfLVn2bFRXbJ+pxCvNoOokZ6ZooI=","Bk/5S5igWIqpJOlDymJ/y9LvhUxm+ReuUm9xn7QMZ1k=","HINJ+JjL8tH+bbk2xTvTVktnO3LWc6qjn5aR4IKD1e8=","LkYoqGVdL8hKMvEOCpXpLQV2c5wHBQvLAVjxVttufFo=","AGgxbecf7YAhM4CodXs6nVF+fqHkgAoixRB1WkoewVI=","Ip4yzflS/UndrIusyp7AqFufXx6LTrvZlexbgomlQok=","JsmvaatKfggzXN/fM84QKhTPr7Ba0ACvpzg/Abm1uJI=","FLxRQFZpFVGPINUUmMpg9uXkhnj5fBu1jhevTbjyMtQ=","Iv4Gu6zMWxi0qL8syMR+NRKRus7lxSJvvQzbMIc0M5w=","HcoUA3c1gRRLCDqpuXaNtagZAmJt4NgdgPU9ddJHrwQ=","BBUujKMp6JKkUDYT80cu6Ut+MCWlktRiX0IMRcVqH1I=","E85+3J8cfS7VMwJhUPK7bSYfN58fu0io1VbMWteRTjY=","JPT6NqSL4B0LvleFTUg5nYHsA8OU+y7sVEpjH04csd4=","JuBlmvjIOKrMNScQ8UM9nfnM78R71cSHoLPCmgHlWew=","Ii+A8zJ/9zDIylhcBntc6UZyRwdgG3pKckdsT3PngY0=","Gc06ZiFuhZ5DP2Tk+fPirZxY2ZPuFozq5evtMEmrL4c=","DQGqgj7oRsLLaVVDyEmYAxAfwO8iLjwrRNhoDop2GI4=","LheQGRjLb0+tmsDTh3V6p3xyB5JOF30IJuvMRcdkiLM=","LjDMSWOQaeIQHLR5xygehxXOXzTRfAFkMKn6db9IStQ=","GGlNGP5nWLNsOKxw0TRMbStwJJ25KnThQEaDsvAN7lw=","JZfvwRMp7j4Mi9QLSnhoFzi0xSr05V+1vlKZlrVr/7w=","AD6tjLoNJHFa6p/1RD0l7mQIkxhub/bARd/JHtu9HJQ=","HhfkWD1o8OHnI01BkV8vo8e3wEzCr6q9fzu+Bxzxyiw=","LQUJjvKCjXHodYg39clz7Je3VHvfoUM6VScWjun51cA=","CSIMpX4t31obLylxYn0adLfBuDet5ko36OHw1DYFGn4=","Iu5cbTapgLekKPivyZnrCYaK3FK0/M/baLP1+6UY4D8=","G3AVS252z5vPRBEgPbHBnHe8DKi++QeuiktKrCcIQsE=","GirZqDSk1BvA1brDt+lFMQD1jIYF/REu9reiW6p9+4g=","B1qgb0Oic0M8+O4ZboV35foohEWVsfKzb2Rz/9o4OA0=","Bw+ITV0Ak/91+wnOk0yHMwCPmU76T1VlIPEe6Lzt+Co=","B9WpMBIJ3g+lbZ3uRfhICxLTOnO+AvB497nfb5Il3fk=","AQDdSigzsSf9gA0orwQlSgGIUyGM5WWo9hWZWg8kZuo=","Fkx54pBiAuc7z7gQXFwQgpOXvLAInOA7r8Xw5ifg2DY=","Kd7Jv6KhLy+hvJFY3B09HrrR2En61Y00Fj10GSP4/aw=","J9WQyV093c3UPjxA91ed3mRfM8ewzgPVXgeXgJYlf4g=","DDLnG+AvqDAtiry4qyxqPcTpYudZVUAcHmpmFX37llw=","DOzVkepPPP4MfT7fUvT5PWCjEmQzv5ueR3ENKYwx6dM=","BwYnoEIf3oRCFvXyR4mz9U1E8aBhhKqB91qiJzNfJk4=","EW9SMqvKusioufGjrIa/qX/ihYEews/XM/Egb0SdHeY=","Ko7K7PE1WFDQP6Lxp5BM86K6fTuuMKrXo1z7Sm19vsE=","JS7oot+6qyZcBgYAs/bhnyTkkd3TcZUhH5WRjT05uRE=","I+1ec6QiPfha/pSP3vK24NPBIKox4vG0yJBU1SGCWOg=","Dd71ENLHujLkMx3bqTqmiLufuGFzYlA3uGukxioGAP4=","IznNXLdprPLa+1BzvZiL4Vplv4rQbDioLTjTF/D+vo0=","JvtKEByXwGrMmZFQSD1EqnYrWFxCK/jcs3r7/fB2q0k=","B31YdNuiHSYMsC8oDF/fePuO2eCsramYq1y4M7CdGFg=","It2yvryM0clG+FItcyZwIyhRExO0C0qegStprrYRMiA=","LnxDxiIuYyP2gsBcVx9qpio9pkviw/OBaY4sDdrck7U=","Ge4OYPwtp6KVNxxmfOhQdyrNu/oKnqt6fJSlDJxoLeU=","BNRtMsExynkljvLFJWWbgTjA4ZnOWWjleoLngPH6ebk=","Ld0lvTfeojOGoDD0vMHUOCY1ptx+o884iaXo+spGvYI=","C+Pp1HK4EYzj0BqS/BaN54VJNHtEUmiTMS/V7D0nJq0=","J/qPI122FqWQmi8xiW3I3pWUeYcHtHfzQ7SP9Sjkm44=","FyJkEqsvq2Ij7toLhIMzgWpN1kleKcpHzouW+Mh66iE=","AIoqymCeY0QIbu2KcQo1Rpvc5oZGpDWmkYJ3oh0D1Kg=","J6EGGe7DtSEbfOnDGN9+367Pe8hAmNwcWCMqwlCT41o=","Bt7y32OOq5iZhlOTVj7IvIGJf+DxrcXASZdV8lSX/EY=","DIa9WwBGe5hWO3rRs2KgWFOKf6oRCkOLnQ7HvoxQwJg=","AiN8OHDKUcDJ2vCGUkcHp4vohF30ceTU+z8ufzDZAhQ=","Ku9MFKUUo2zhr6nyxfHt6NAFMOAeKnBNcElM/Twpgs8=","D0JfgYYa2oVvAfzw1e8Qis6igXNakT0k7qdbVYM7Mo8=","HlYvKjqDvhMh7q9WT7GfV67Jxm5syP2hiZnVuqC0Yw8=","BifY9MGoyPjF4ethdZiVSqgUp1Z4LizYW3no4edIxwU=","FeWtNvcZzKg6QfZ3gjiMyjgMJZkuXNFMZw/Twxew6ls=","DMjRONCFT5tiaXt3kdqWC+UA41Kc3v1PCxjRbF51fOI=","F/9VW1LSi+GzxGyAlG31GeneJH0s+NgXUIb5ddJMHos=","D9XdV8LO3odmcZeNL9KJqgoCaTJSt09/3ui9QE5seeY=","IDFEp3xy6on8r/ObFB3vfpOh2h+54it9DGczvXLwb2k=","GXkyBSTfpFqo7zXuu89vYh4chVtXBNi/dVvtfar3IdQ=","CJtmg7H4Sdu6sPEJLKBIgPi4lNf4u8uVyt5Oc26iiZg=","LC3Y5mEKBJV4SqCLuWYfviXJCDlrXD8r1REJUX+igWI=","K5YntXnsQBkwaIbh/0ADrrOjMkm+XMa1bcNgexfkJHc=","F49wqZUBpuBb9Mp5stbaRwSfjJiJNmllGTRN3ZMRdPU=","Ik/6D50NV+sMfXGOmc87a6AbUjVI6gyiOj8VbAQIOr4=","APLuHivh7OLNiu8dv8gmmX0wTYjN7lVe9np5l1nDntQ=","JXV3QKsUypN0WnYADiQyjrGj0h08vtGTDdG6LL994jY=","D6a5Y7xlvZMFELPKbhrmLBtGde33nueafygOrmSW8W8=","DMt5Td+HC7kqnLpfhZ+zzD9OsfERfRTByu83vs7Q4y0=","Ej/G0wbxf81aQwnU/m4MwcoA/CPqlEenxraMf2ulAAU=","IhYhcKH4ResKoe57rqSGISoJgUqVV7y5/HLPkPCimWE=","E+OFpc0vval43HdA6SfOjUIsnuhhxDA2JXJCSE5Jfjo=","E769gMICJyQBfY4+uEwmmBDOz0f59X4je7S+aUEKeAM=","E+0pFQJWanAztMRgckUVahWKb8hPS6bwJGwd4FfY/xw=","L/oGkoU2r5HHrDt3FPIE4mxUEUJ0IXkhcJWm5U90Mkc=","Km32VekmxKoCl0mqp8mkChD9VaNoYkwUi15SjUMTGD4=","J9hTHsYSGj7KdNtSQyP8EA21AqWAuKTPhlHxv2ubAjg=","HqEEpE2C++G8HM/UYmzqDAZpNCKzhGs6K0qhKjsOdH0=","HWmjhScgqIdYA02VTepgLlmJEUpGZyUbDaWRVBKsX/Q=","G44jJxD2wc7v+cEIbUnNjS5kf2km2pE8teEDN9fz1+U=","LUDT+Ob546pgFMaWMNv98xafiAZ1dP/JIQ99pZnE+z0=","JOHC9gsc02EBdwzvxDNKjALwDMaW32T3bfVKb7bwUIs=","JAjy62selYzK2/+ByaRJE6wMnLXLy0tAVAF6uz24wE0=","DjxuzSgbouFqo32s0qvDjrB8E1Pa2W6H0U5eoz/47N4=","JIx8+3ui5xgZv8dV656aMGzQ9uMhLiVAkPAAbZ7FQ+g=","Jn/c3uz2nXmeefaGMiF99RIm2M45V01ytK5POdIXIe0=","K9kXPvJ2t9SRHr943RU0LrJhYDwsmvz0rYMd6fo0urk=","HMCvM9B+ULKt2jNGcjAGJQ+rrY+j3bNlwdhYL03GXxQ=","Ih8rxLfc6RlfnKnOj96u/LBUQMIN2XVLxZwRRHyuzrw=","GOvVxjsL8g9F0jj9DKtd7I2/GZa80bNInzwkmez5Kwc=","LzOLxaWG8ndK8765Kqks6OWKXvoZ3ciRvkel536fWks=","BVa5w3hBRetPL/bgyI9BmJ2lkH+McRiuSSk5v+Tp+x4=","HsEANn9laEU4vGlWgF7TcFEjijY35HAioylMveOLIoQ=","FkWindRSerkaS3mMcJboMgc8i6rG5duH4mwhW/RI+E8=","IqeKv31bNip0PtUu8nN7u93Tdemzv7QkCala0QWsk1A=","Gpkh3q0mxVqvs6yfPzWsthpJ1fGB6ANlQIMLsYaG6zc=","DrhkWw0rjww5J9RkNXTAsaWIJyRl0xnhX8xsMmIZGqk=","DkivDLJ1r1XeuCWjTKSJBKR8MbVZLEr6kHfWDl5+plU=","F9+6xaJvBv/5Z8/vWXptoRtbyJTua2LmJqYuhaPqS2Y=","Df+9AW/9K3lSJqg+29s8Wm94kX1/vbvBs2MQJ8hmqqE=","L5SNX3CFa18jpDONJE9rp+fr/HUOFuvR4sLROCUJQxA=","GUyfdhXL4+qg+IXFnkILuJ3KYP4XTqMh2AQ1MBURcTw=","FugaBUAUPLvmYseucmBR7GY9YhVi+zcBJAy/u0sXs88=","Ee8MLYgTH3FeR+mklT94n+x43s2+7TS8jqpCkn6m7uI=","CHbkWk+GKQG/xiClWVGAKh0dXD4UFDCNt9VIQA9mhTU=","LnjTXh3YZ3ak3a7hGSwFWqhnY2O/zzFlMX3MmAF+bHU=","Gfblibo4TbPDatrkvANPuaRE2kIWS27yiQCaLNfRWm4=","Cf7ZCx8Q+E9nOb2xtLUIlXrM6trOaHqnNdyfarFEBP4=","BV41u+985e56NgMiLgkAXdUZKtzXDcM3IXFBNyIfSDE=","BejcNZ7pjTu2mQ/ZKOzwVvm7c24NR87CKpbnysZamCg=","DHMil/iwwnL6x2lE7paZMHUqe9OUPHuX4Di80jFdKQ8=","FnA/uLAslK3jFdW2KqG/eDTeJIMQiH3BPP0T+2wqELo=","KHFaxSZdeoEq9OOeQ7+ayABZY10B/W/kDz8eBZ1/f04=","L2g7ACeZTglece7IR1cw/iJ7SApqymerFZPOb4N7yvg=","CFTZw75yGHovGYWQ3s1DlDxaphQKhY8hWVuaCNqFsyM=","Hj1ZK3Gkc8hbIQSswdjbjLkQGjzOVcZoAaDTeUl96t0=","HrJzd8+jijlnpx5pdyXBlbwdfOBH6D0OBp3ui5Wppwo=","AEW5/R4PEVgBIyx6qvtec7wtZXxHsSL04+owplm92b4=","Anrv49ETDpOUthqATf4iMdaClZEN05JF8eHeZah9umo=","LkxfoaQgZOVW/FDdf8p7SGJeTBaUFUh9TfBIKpsd9Os=","BXZ8so8QGaOWJ6GRlqfkZy6CRBvguQUjx7m5903TMV0=","F+RD4yqzUtIJ0+A40TZLJOs/lF6ZpoCVAsVDnIB/tN0=","AXoMDYPOrY/7cJeO3sG/PErO9KLNz9jDNbzkJ5NRPkM=","KLdJsqm+yzRmXjjzxJt2fyBzikgaenahm/EDAAiiUrM=","H1JS62KZIscPL8G17F6goOCs7kfaJsQENsPx/8ppA1Y=","KTJMQO57yF0zoFbD+o9E1qdyTaU8zts+VswmtzNYqg4=","AFZ+m9iiuUfXWzdqmhrxe/i+xsmr7eWCBU+z7PeGDN4=","Hpa6tu1vRVUPJiHAra10fC/JmISF9hhDVcMXbVwR6NY=","CNR9wjsf9SeZLJ7dyRJZp0j2zXwfYYdKCDb1memVo5k=","InM83TGBUPQNidGsFC8mdQgJoLiIyFdDr2cQUM9nNqI=","IWgXS7nEW+Luh0QRdKJP1B3mv/Sjd4AwJYZMXKGSc0c=","C0j9q6iFJO+NBJW6Y+hxO2WvSpJntdYgg+e4cmBDoeA=","GGWGQ/y2NkRSDA+gLc4jKTWkzo17czqbF6hm5Qs+yKk=","L8lM2lI4/HhYcbypeWCyme0N8F9sayijg0hl/Ul0vCE=","GlSpGondfgzodTAwPBLvdiRPz0LDjbNVE9ZcbVmUq28=","FWENjWS6ApUvQXDq9Conz7LRPwTUZzU3tyUQxcTD2iI=","E1l7Rwdlf0N+5CCHz4tYkEKyd0Z9igQ2z2bqRKZmEhI=","LbuV5RFOdAAovF7fWLLp/H44cdPxatDDhF1elhqHg38=","LLOj584WytlZbquS13L2uK+0PLZJKyw2PsceEfhsUvk=","KG6LlGi9LTktrV2Q72XSjewn3nFHzlC47f/spdcAIKQ=","Fm52KnO1GQAddTc319kI7yJiN7B3y3btn2u/zOmYkxc=","HcW+5kd9fnh5+i8zuprc6Hilf604RefJ6vS+VKuET2E=","Hxb38c1h2VY+BkyGtQiv7EHWFKvHs0u0UXS0DTh3FVw=","KN8Ezdf3nLBvvwROYxqxH635aR5OpfYgn4dRr1jI6xU=","GKpkkAR6tSEF3B5g9Eh2JGG3B104p8CyupVkZSZYj7Y=","AHargUOikHkhR8amRlyag73fT2U4jK6DV7xr2UAKuZs=","JhYhepT0BwU87zsjTMEay70uNEtAO72KJvghvLbx+N4=","IpaGLLmhRCSjTToRCA1u1b/hvE4DAewcvU4mDYFnVoQ=","CChCgCKimZA0BjFMFZcyvA/aIno+ekCkg05RPz75fFM=","B3H/nzl0ad2m8gzxhB5wLBeAoHGbP1kBdbOU84J5x3s=","DcSJ3PYauhEEkl65Q5pPRCKNBt1FZ/zhREllp0lWeXU=","EERw+Skj07na+jnqvffqojtv8Rsuu2SmO9uRLUOGX6E=","FKSQzgnJKVBa0iPi85cYYTWqZYayfMnM1PeO++yZOm0=","IGiTu3R8olBEYfskovcurkzzMINYJfuKyVY/7Zp4U+o=","A8KnOOdT81sGjGrIFxJEwj+9TzfIC6UIYYyACs9iZUY=","Ep7begEwKb6A78dAAhLNevEwgQDTSlae82RrUs+wbhY=","CHSw7f7gXYzdrInntWL5F8fs4ewuJi8ib00VJKHdwVg=","EKC6snhs2jBTfGlrsf+viYB4hBiW975BzfMK0lF7Kq4=","C6tmHCoX++AiH0NbqQUgvO2Sg2TKyYThemxypH4T/Cs=","IEIBbmhsmEBXooqirhPJga2N0CrH1GYwBeE4DFT4Q7I=","H8KVrHGRGlmoHQh/ln8Wo6iHc5187mY//11uBxDPSkI=","BZIml7BK5gjMO7DZ00XK3q9PopHeiI6bHdMsGcsah3c=","JxuH2LiVxuHYZLnNAwcp5SO8kLRpzuN7URRLs7Dkuds=","JKpAE0PkcF8ikA/uiSzKJp0MD/q49VwhxnTtude7pVI=","GwcGjK/he1W14A9wN8msN+8CaNXSt21yccYXAE8Fki0=","HjW60xmgNsxqIJTyob8tGYSit0qvPlsTpu4wyQCXyzM=","KrkbmoXOaee+po9PtbH6CQOUXgOcTdvgXv8tXnVPwhk=","Iel5+jollNI2XscLWz4N3F7bjij6fsMHqrFLVHhY9mY=","GHz/12xfspeVUj6+BlycIRXnN4SsaxXFlv3WhGnRrQ4=","GNL/iCxSs5aowGj4jD0j+dEdn5HA9/3p72ryGAoAc5I=","CoeKd95hXoPD1DDxHzJreFwawRTlmcJOWtwdn7kbMfM=","KGucY4FwAoi8x10CDqCcRZV6YVV212IKC5ryYJ05r8w=","HE5e19uW21IFmuLacJh51ImhrFAxw17htsQi2QgMPxI=","JxQWebuSYKaTuIB4T/X7xdWUV7lmMOClwEkSCSpNKr0=","FeM3xl+ljttqdP2+fN0ZAbXQGc591BRKi0nroCvwhf4=","CCVnkiGMgifsqJ9RFPHn8JHYilV8abKpVv0tyQyuNjE=","DAjRmvnDCjGs05KP+1pX3l6DNnIE7mcgnuftG8pRhdo=","GRmDmtkWBMNw8jfSoKqY76wpJG+Twkob0PnStgcJtvo=","Fb9lsCuS9AufDqiT3bsFcvSTday1lYv5RMd/9sNWGkE=","Ei4C8uAWmAmyLe8AGsx5eyAtM1r3vSzwMuOnx17wM7U=","EgdRAN3bgJhlTnGGBSEff2oh9RdtOAFB+zmXcwUYJGk=","La27uP7PXM3wH3PQzGCxXxu+8BimP1D2jQC3LYrfCHg=","FDNOzgWmMas3Xnz+e4n6DYCS7AzuJMn6MAntzWLqi3E=","CaUYVtSexlT31ErKV7F0NlulR52HFKCfD23gizTjlCw=","BI6P7qm4KFKNvGPNPYEe0Fzp3gGPSkZHrB9oW7j2cVs=","IEum8YGT90f/EJgJVwIuyqj6TBPn+k6Jcwp2JTybB/Y=","AHnhvhYi7cV0Lk+BHqLAN5v/T6gref3l0Mmg0XTfEw4=","J+SOq7DvOyIwWrcg7kx/QU6NTb9DYMgdH/rk12g/Y3o=","FVcb7Mf1RU5FrkFqazV2J0dnIV9lnJG6NUNy2ZmIHVo=","LmpFRev3wuRK+RynGS7sSu3dvSrB309RAff4zdMWZV4=","LeGfzHiAACexkyzfb56VkghgbL+KB1JEV0koZ/j2vKU=","Lhyo79GHbiCfwtYssURG6PPEvdU9Y4LKhrET8yCdVfI=","FUs/herti2VxjnM8osp8ivA8+PI778TXxhd6wA6602g=","KeWPOVVdnd57rD3xjY6usqWlBQOGDSDFzQuios9jc70=","Ay0yAy5SEDrXmPs273wGgVBM0thqEsfZN/9Rjle0w/A=","KB3gGR0wr3MQXjncF0AV1l3H/xLSCIjQLOxlDhokWjo=","D352r4AOurFCgWRdKQYH6rsGK/Cv4UGRM+H/3PcMgI8=","J+pAW9/GVXpN0ziivKmBlUdQH293pYinXAFNRig/dbM=","BXCvVD7+/f3atj+wXTHtytOVrII4FJGoDIJcYhx6wis=","Anp5fgAUMCR4pBPO3npFzYlLCiKcjon1brrsTEZpK/4=","HdDig6jvfQ9JZqUXaH/FMkNVSo08fkHZFxmza6zoFRY=","IAZERpWYdWCGnfbc3iZz5bc+5bzLtDoFwti+bFmXkkI=","JxkmOS5fHJRDev4sKWm+pP8/bYPucTlACIMdJLsbbLY=","G2B+0vEwWA2ajCDqJrM7R41uHwDMgvABdpNai1TKv44=","C3puM4CNIXqeVcI4cc/f5JXBDWK4uYF4SwSH5j3wPgo=","KKx5DUYrs0WrgM0WcEA5Q1mbee3vF89wI27LHvhyy8k=","L410WxtHUP0vky95EwlVFcSYvjFCEBgMbDB3IxImu5Q=","Kj7yDmAULxfS87gu72E1B5UjlW2LxoQJLuy3p9Vtcb4=","CBGbFLg5IuSyJGl8LGU2z3ctBnSJ1CZyuYjLY4xxoPA=","GkuubJz3PqInOaJ1vHIsjMg9kefd/VEQYUpS2EznMgU=","HWWa6+Sze4iL46fX8j42LCUARsCdUyYxLY2UzbOE0b4=","KOL7kr9tpOa5ZzBHnxcHYFZEWNlfcyquJAavTAOWn48=","EPTsOtbz7TOHcpmQRWyWhXhu3o5uFLfGYxHUe4d4qmg=","KtNm2QQZEHhmUE1NNDRuCjxZXebgqlHIBScq4bzdwtg=","AvHcKaBsZMnkPTN52w8ujwzY+ANRck0xPKAq0kxtrIE=","IAhqZyw5fmXLN8+2TdqwgHTxc/N9DkoXR7fwIGUtpk4=","DvKGH07Jul/sdLoiwLevnUWMPNj5DIJcHzYRDKLukHY="],M:[["AZD5Itl8in3PChQqO+J3SdHGS8IvHFVqqiSSXRWMrFY=","H406nS0xqzLZvbY3UXDbuon2+PdNFuT9AvNnXV/iuq0=","IwxpQTlBb0BCLXE+E8BWxFw8Yxs0aFRSOXDq6lijffQ=","IGOkYa0GMVrlmSpToUu1mDZ2JK/CgzzLuDr5LKD2ozQ=","DFdOYo+EtrqdF7nSv9R0fgbdaM2iOD1kzjZZJwmMBG8=","J2Qo2IBAo+D0QkJNL/y40Zvs8/tsoCwbXGG13cU865A=","JL32EBsvIjF06GnWrsvo6lsEoUw4/fFJQ5PMb9s+QqU=","GA/KGEFQwONUtLOkoHWCTUto6CdJQ/Tdiwxk7KJdxo4=","EHJtz/hymchTIVmXZgdjPxvCrSRFPBurJrcmuC11brs="],["BgfNj/m4iXc8nraLikNmRp1HDNfGAEEGyq6VwQxCRBk=","JZFYC3PntdXzTZ/cDPf+Pef2oYolXkN2/ePrMd+lHXk=","CTz/EhUK7LNGXEyZ8ES+hdzB66IdQpEywiYN09EupEE=","BZEW2oiggSZ92IggT8b7eQRsMpfMtl+eD+DVC020TsY=","LJSElzc1FOfZhG3qnd9XVTN922YQQ9bGKM7Lj1UXO9g=","LCcpgSvp7UMudXCRMxGcsKFOG26jHBJ5t8Pkld6vEI4=","IoDW1HGPnwa1UamIQI8FFQcORV7WM3fpEL4If7eb0ZE=","Gxu6ElUFrpZ1vOx8mvV5xcyDUzydVVvjmK+gnL+V1qc=","FwEyV3FtPLrijhwnLLaqooRBNgSf+8oFyiAVIwMsZNQ="],["HaUkz/YLZIVtwfXd4P9i2nsYLaJpCPa6blkK3r+RtAw=","K7RWWJO2/8V5kTnNwVEVh0nCxl20hnKrryTFs4E8Dis=","JQgaAPwgrjZrH+fqawnmKlH2/Td/YINowSuk47+Jk18=","G0NxnNELYMVkfAl9H6hLjzwSycR1reE7OIx+xHJAvhE=","It0gHsurlKLuOTeW/vzKY6pU2aGaucfyCgvtz7nRkfI=","C455g4zTBweZnGIWIed+acD0M9VDt5xmjPN5tmI7rIQ=","AggtVkdljq5kiTbO++360s0FOFcqphIspozM7Wj0MvQ=","J3uuL8WXpTatvpwkvI7oFzHt21dMalFCwcWkjFH4LoE=","MDVMnynJIMBemdfMdHUQ529/pppxWUopDq5yk8WkhEE="],["IvM+ruPEgeZYAbdhpygykI8Gb+Idq1+l7B1Mbpndbfw=","HFznd3aJPUgUdES59tZqTaKclXB96DJ1bHOeq46HZY8=","Krjt0i++KhzTzppCEtDvsoLMrCivTYdvyUYgMHDJIL0=","JuSRVKzKJEJNX40p9lD5gk3oLreIcynLyDpWrgHe5KI=","C63Xf1FtT6Mh0QmbweUZCQAVka2ZGfCM6XGK7rK8pNY=","I2ccXR+1VgY6ZLX2ZDQJNtxf/t1L26ouliBXBNpYZPU=","Ag1yAszeJJAdbOLRB+eeH9eNbJOYunpJlvEWre8U3vM=","HYZJaZXxQmTnoFTMgiSQA2h3XD5axrX1QoX0pzwhca4=","E2lhdG00/RlgJRc8TXm/iz0dBSkcWEko2XJY/V+0+04="],["B1+E6ccZu43o5hCDKQ2v8ZqqQzdFTluoBCV3h0cPL1Q=","F1UFORxhm3VTD6g+UTGEOB5gPYRJ0eBwAX7o7ApNJfk=","KcXOl3EMFXigmQ2GLPiBut8Q5Pa95ikZnoA80cQmvk4=","LK+Gz/YFIczF7G4uLIO0cHu5D5SGRL+qj4Cwr81M3hA=","JPknk9Z2OLSr/fSM47YqtdDhslDcJ010by99BUQYW2I=","AoCd/iTH/XzUm5eycVD004o0C2Dwcz/UUwzUJptIEeQ=","JnCWiBUO0DX5WWh+33dH7o7pRrdwFz2+UDkKuMCMX5w=","HlrkwpWtWhfgD5c/E28SMKb7hWN2MbMG03BfgO/6wko=","IxDiM35NU8FjXaGKJyIXjVWvWDWRvMMX66hC3yR96qk="],["IIS+mlfprbgDA6jcr/1Lt3rbaBUWizah02OzhCVDcTU=","Bu0dFN7fdjowZfJ+ekbX+/INK06GoNuGaSoml2fVd+M=","EyRUSlQXTPezzY/8S4YyDyMZ2biMF3m4mxkWAY8/ubc=","LpI+pG1JIkfhLgp9zPZiD17qZim3Uys68kaAk5iFljM=","AAu7u4fszJHV+we2xVCIylFNaN3ZPPMcjtLSzH8jsis=","JgEKP1KVu0SBMQy8pThKR68PmQXkx2v1S4cO8P/vocg=","B1GkpK8kYlXOQSxLtH+jSlG4Yo882QIHd3XI+kiOdRk=","KNI1FhnMxvsxrUIG4sBkv02bIpKyhGPlPkdx8QZw3b8=","GBXk97QKcCeHhkCmzcSyhUMAz2/UlTwqwsd2Je9ErgQ="],["CzA0SfG/S5LSy8Jqs0tCFbbdevAQdHpwWypuM5iIKSI=","FAzdozu3p5srqoUd9a1Fnn31abnyw9pULTuNW3azVs4=","HRiyWqyYsoLhC1o6dM5cqhaaXDC65Su6KA7VF/P4L+8=","HsbDL1E7jzDHqrQufZGuy+VK6xiKhPjKRr1+l0G5o4k=","CJvushw0bLm8GCqitw+FPxoiWNVok85alI2cZF7Lybs=","J5BkOmYDjM5KZIiEfY0tou6oSWH4E0sb42lH+ANSfmc=","FZ4l4AMmp28lwRQ6W+b1P6UczzaNmXTMbZPM6OuB03w=","JIa4hDcNSaAD/QQegA8KiYq2G16UeZdGHuMoQkHzuqo=","ER78E2qd/g68/66JQ+Z5zA+/Yv0M4DtAn+zZMqgoGxA="],["DAmbxoJDU3ID+XJU8I37fvwJ3o+W1y87Pgqt7UXhi0o=","A16ezEZMtDHMksM1boqYVH6EPtEyTB6XEXn9Gtn9UaA=","AvNekh2uh/EoTAyK5zfb3Ek2y7sDoDpZGFUv5WUnCo0=","I6csJ/T15upTJdWzaPmLQGk7LbHoyj0JZzl1PcVngwM=","Dgex0i7tVP35Zv/fvOu2U7Xaw7KpH1AnKHbvsXFYviw=","BfpW1DHUvQliWobTYjRk3JC9VB6kF0jyAm9lAl6p0vI=","LW8+DphBPV1qEQGyRcnnEbsulW4npYcHhP1UA7OYZ8w=","ITF2vBoEk5/n1rwwaRqr1hUu0k8wm/85OaDZHVTGemY=","CloRSNrUVi6rGBYrORS2TVdT6WF6UVTpP35D5oYGh+o="],["HF/ZBg1ODZmSZEKaUATBZVcL0WdbCfl3cIscpI5hY4g=","Ep8GyTDt02/C+3BEpjMnUaLjvNvnVtiDcWzq1rxwY8s=","FKXOFgMijW5vreV8HaU2ZZukbRslVm8Swo3ry+3FtPQ=","FDYX7827wNJ6CR8oA566irs5OS4qRihQsfnNhTL1B18=","KIXy1Evg7P9X2SpDhO21vr+1hbsj6uKi6lCAa6uLe9c=","BHFdtthrUT0AJYnx+VIvfeOxqL1wLBZ1We3pfaLAB20=","CIiHlmwHnS5omo1te9kT6S0yaVm62lm5mmU/6q32xGc=","Et7UH4BH2j5sIr/tPsW7UtAn5WAEjbTA+Wyp+oXhe8M=","H0fGekMlZy8XuL0d29gOTp5sYkGanCBMx+iCGJJDGq4="]]};_8.default=_default$8;Object.defineProperty(poseidon8$1,"__esModule",{value:!0});poseidon8$1.poseidon8=poseidon8;var _poseidon$8=_interopRequireDefault$8(poseidon_1),_unstringify$8=_interopRequireDefault$8(unstringify),_$d=_interopRequireDefault$8(_8);function _interopRequireDefault$8(he){return he&&he.__esModule?he:{default:he}}const c$e=(0,_unstringify$8.default)(_$d.default);function poseidon8(he){return(0,_poseidon$8.default)(he,c$e)}var poseidon9$1={},_9={};Object.defineProperty(_9,"__esModule",{value:!0});_9.default=void 0;var _default$7={C:["DhliwjL9Cmu1StiWKoK5g4z+8Z0pClX8SdbevQYc0vY=","AeH0XP8+dBaKzNCpRTb8pjFxKJU+tH2NLXm4R7NVz1E=","E2fuw7IMt0lTYY/ZJhBHdV73+Krl/+lvyPfZoC43vRo=","L/atQFM6+irLeMm5FlDXzL0nSwn3jBAEefOk1ylW1wY=","FSyMPZ5D2QrYCUgxp0r4FR/c2gsY172DdP/aaNGl/HE=","JBcH2yb5bfUCNk0mcSx/Rl0KxVl6MJVZsHVAY1GiCXc=","FaTkcooZfa5jA9DN0rbR5BFKn604pTC8pv0Gyh/8H1Y=","DL/WPzY5eMOH1lbpPxHjNph6aHSMj1TzhYh+ZLEHVZg=","H7WUR0uDNPmupv5eMj+w4Kwn0olZIaxk6T5STk/9JcQ=","BaxVNh2pMcG0xWCqjbq8hiS6IlhxvOIkrdta+QFnaus=","E1+DMUJSWF9+ARaSzZrP8232vphQKfIm3iVoA+pwTXg=","CmjyYsnhTYqe4Ra/kM19ZePfVhuzkU4xTj9D8Wf1wEo=","CoNgqDfUyXuUZjPDUymLd9aJG2znjoKjvTn7flEZPRA=","E2ohvROxGFfg92cOEtIykMIxi9rIMBVMw3MwzK2aP+Y=","KmCYm4CS+OHBywI47IW71ri2WTJ6A+jhk8FaVNu3PAQ=","G164HxQ78ybaD065XU9FyBQs6mQNM6yvyN6rFV83NF8=","CJA89raEgmc3o0isqkUuG6n5NF3pEfI0CrcyTQvLR+A=","A7i3F7oQA1oSrk3ED0IQsPBSmug3dm4aJpUiEFY12Bg=","BiPufBnqvRMRU5iJPoJu7iEdrqc/gPpToi+M5VkGAnw=","C8iyQ2mrdmR/4OonjIZtTUW8P5PosG52kBu+W/INtcY=","GjJ9X1QBkOHJyx4x2Fe1xRxcrZ8e4SbERnC3gtRsL1A=","EIfvrIe/pIB6ykEKnCl9IxhMBbtYq/1Do/wt1IM4BZI=","KZcRcwTfu0ZLXNSkGIqk9szVbenL2BPaJwrX7mmegGU=","IpZILpGfvUb3pRgVXnKlWWVZaGbzKx+EMzkPPh8OQGM=","IVLV8WTOCfaSis4lZr68YQmk9iBH5HR6BR4p3Bh1Jdk=","EFQQmGGzNJ5Bkhbxu+gvSleCOnessd62xI+iZ+5dMC8=","F3L0ApVAQyq4xpaLNznDokHNo63hPs4uoKCxV9ZcLJM=","AMKWr9suA315eYeGcceKX2AI2Yy/db5OPsPMHUToRZ4=","DshbIsYmhuUst5qymgGB3I403fMWfR41NRTsho5yml4=","FJ4kNcINSKPsVsTkXbvFg7hb1kMRoldv81JmiWLCGGY=","HUQUDctFl8chSm7YW/8aO1+tM/18UwaZu9YQ479SQN4=","A8+wVw+CSFb79BUTvgHtMnHhw4oW9hCoCXzSehMl1NM=","DyI7OWQj7cKdUeWIcrLat+o6rolRe8QZV+rHnOl2E3k=","H+bcLm6Dq4joQzekUTCWMzd0bM0BwvK+EACAvjKllSA=","BHMQ67RZ/oYMlUUXJJRA02fG78W5P3DEELx2+AiLSj8=","IYWM5poBnkzUYJamF5C/fgPhDj7cGimI33aEmK1mfN8=","DaT4faGW2syWT7aSilHzrO8EIDfbdB8xe02AqBz5io4=","GY7uqYHrJWtPpD8F+k4a7JCOV2E+79NQJjWAgOMpvBI=","EZZO/SHqB5NAxmrZL9tiuKGO4IqZkvEzpBfSO3jLGww=","BLB7GWBRgSL1clzq3AwfBgkovfD17ELhb4wpNId7QUM=","Akb1+7X3GbCJbge0wj/PHSRIe0x3WYPOpJUA+GN3Cew=","JNeNrt6TJ/SeumeVOfhdCZ1lgwYJOMsFLc5QElsBzdA=","I96TJljS8YH1nXI0pn4XR2P/eQ05BM+z3RCvivTYhls=","DE9UMdqqmU3fXz/msd8MDEIoejjJpcTHWPcmOOO9tAM=","F1mZWJiVtpR9OG2Dpeb1+vnGWI1SPHhGQzISIz9k0Es=","AtVM7148rRqARxvG7wxuTnTC5WiGox15JXsnYu56tRc=","FTnNxp/ZPy6lDdEuuwQ3wj307Nopx2rrCUN//b8Bx3g=","I1mkVFKCS6l9vAUAhruRDBLO4KkI2xwoCJed7cjymUI=","CIDl2iElsIQiA7uY5fJK4mIopa9abv1UYfY0pEdqFfI=","FhEPxsgWeTC94jDV35VPEHz9DaAFruROxf9kKHJ2TBk=","ExDIRLcNalhW9tGGaeUywta9XQHmox6ATYGi9a3GP98=","LqhoIXqZpsvnm0QuIVKFPHMw/Y3nV+t1VXZYef5Cziw=","KcUEJHHZCe5IE80aNujsoI1ODTgwCfF8SjZ6h3o99L0=","JeNu2g6rV2B16IraORTClEIXKgJ8bRdM4N37sBfVHf8=","LSEFjsRGdNhJPnAqreW987aR4/qsBCcInoZ/nthWvHM=","GNF8ODXsq0S9uLZ+/irMcdOenTRD3Q7RHZUEVAmnx4g=","KKL2Ow6UCv0seNAN4apv1pU+bWzMOqMgOzlhj11pj1o=","AmNfW9m+uv8M52FOx4Q0GKmqg2N5ECKb7/25HiPrwQ8=","H7jocmUlJoAYhF+MgmsOTVbE6cWOqSdS1YHRpRcCuII=","CH4s5NKuXJPqVhHVDDEyAqgMS0NTO0kHf7Vp+DfqH+U=","B4j6lTLPAPE8gX847hurhfvGh5mM8cFK/1/B6rEVp9o=","HFyFxXofdYf40vzvwdTpjCdBoBnv+9TFAzSwwVw4Fc4=","DB+4MrfL4OfhHo7cK6+HSfbqBjeyDpcqYzFdvdW+FHI=","IpdYoitS7DkH+UoRf2Y5FkUIx3v9vGecGz+Ha0bK+Ak=","BeBmyhJX2NXtymWikh+1teAeOi8KKjvGYix5FVIZCio=","KxqTWk/xbCUAvf7iCG2d85J6NY6Oq+dfanDX2yWjGRc=","GaVZkxCAiOA/5/vCoBRQnOmH9Cd/cpuluSTSWzngZpo=","G7ZaP5pDda2SbUTBiNz+UbWl3Wp+4VKqbMzkSBPpXbk=","H3IcTQ23WS+b2gH9H768jldFLiGNii4ZFjBn1K8SjTc=","K9MqAomUmKlzOCpNQCZtrK6JiphHwrM8KtMLzcQlR3Y=","KFhbBS0iKDZQqROdY2GwjOlNF9fI9twdVPWFiQZuSjE=","A+s0NSYQInvrJvjt/kZsv6NH15UL7kMecWVke/HFzN8=","HBNH70GNZXq75uTAGQEb003bIHq1SpuZ8HxARFieCYY=","BKiqOxgmPhcTY+k5aEehkz8ET6xfWxH3VOb+r1TsR0c=","EnRKBjyr6S4uGPAAr+8pyShYWgOvrDsvTBcUEgOUQjk=","EK9NOactLctl7uq/ykCgimmydBKXBMAhoBOI/4Zi+uc=","EDjGVrMy5Rn0g9VOUiKzSzWvEpBtE2UtHYxrD1CbJ/w=","EO4C7RF2gEt9Q2luuHZDtPtF8B3WWInltlEo94HTnZM=","HQjM1HVBV1xgtWf9m2cF3ogkj5zGCvI0MJjTXZ5PbTU=","Brv24y0m6SK6rIxivPheyTTL32hw44GM/kndOkxwiX0=","A65gQD+TqYNwaIEA3Nh61Mce5SnE3MO+Mta8BiHUI1U=","D9D3dtJn3DwBo3fSF+M6JVw5k3rCgaOw6stYsQEjk8g=","LUqzuF7m9VvBfQUfzvc5Forii35tWqSsEqLcwHubpvc=","LsB7P62+KW+b0fzRdY+V5rki23WCBo121VIYQTHggy8=","CmAT439WD1QNvT6XkGACAHd7hqV3wtLYPsfNE9sxk3Y=","DcvDy0qv4Ixicx3KRMhDASJllQ4Hlsc9j55Tp2fH6Ig=","GYw3P7xrpZgCBFb2JN/JBvKMq5FbcOtVaPF1+EI1XCc=","KpUVdw8wU2OOPAZPWQHaeswlEPsp9fNgf4rRJWraB+4=","LUFUc57Yps+akuWQgS8V+TATFj9XuAOXc8+GNI1TGMg=","Arvq5McW7hNsTO7xlOeYXUZBX8EwQwplsk6fR1Mwd9k=","GStbCDIHZvRb57up6acMDvxpr+wqdeTgcebI9V+571Q=","K74OC72pNrMFgp46dKgt8DDU/YESqn8WlnCHawKPBwI=","CWNyLY21MvyVzyJApXDNehNjZt/1RJR4RbbUh9x/pio=","FgEMDteje8qWgqyFj8jSxK9RPwLQ8X3TBvBc1X3GlM8=","JEhhIph+Fwd7AmuqgecF5dDLdrTZLdP/VLu4E/PQnqE=","KNo1qFJiWCsiD3Ji6mjDgVc6kYwQ3Rfo5WTrbaET5cQ=","HTGWqmIJCFw02y8OKz3Uu2u2cObKJNJ9kNyO+l6BY4o=","Dlb+S3umLc2g0ve53oa85hZteaCgw8aVNB+9tAe5pQY=","FF/Udnat5cOAuQvwgCD678jD0nDGvZf5KhirlPlz288=","C2cESG/dKmM7+eQKXF5AkeLUMMk3MGqzBFs5uLdOMz4=","J2dHmURzupFSJ10Vvq/kK5JN5pcoEHiYtHAaZjbfPPQ=","EmZTJMn8jSRsFRjgQKFeOhfA+D8KR5Vx2PYaR/OYLSE=","AojFiTJ/+Xgk6qPf9Au8ycpz9p5D7r8kspzVP6ERzI0=","LDs/Jm8h0h2jPkw5ABx6cD5rk+BHNXhAEj8wck/aM2w=","HQiSYPU9m22RJGDGqdn/nfWmORpJJzFTSCalV16KdyU=","BSImzU/yyF3D/Lv9yqDsrXEloD1TMiPIZnBA+/z3Bi4=","JxL5FxgEJzqcGXP36H+uKL7ZqDP9tw7ZPcYnSGWGk1Y=","J28veB4MnKBCSppRNVk76Vdkp1nCMRmdtdXg53bhWqw=","KyH/w7oWPqYbfAtxfVGcZKrKuBlX4mjhdfRodumsb2I=","LzwraHS4FTG4kKYDvn42zqrtbIozYKho8YvyNzYojAk=","BWchFI2aNwqOgSjuABeGlfZuxQY8ZmD/VUkTOUzV32c=","DhcS/ReY27Sil236oIW7mCLS0mk5g+mcdqVW515jMT8=","JsmEbHyguCJ7bqp2NM+qbEoTv6RxDL7+gL7+URnAtgg=","HruetHmmRNJfU9qz5tyggznw7/3pt6rXo0dIUH1pqK4=","FhH14q3YzP6dCTvqHVXqxiZhqayXE/pMcIlZl0Qbuog=","JGLD1VVWEa7qShRrjaUNMMQZlDwapgDlsTvEejgQ9js=","DzduuefeTEX/UIois05V8P/aAmgmqYsphnLYHIJrYpI=","Dn/4DD0Zoq2YyMUqXRnRcSUXqmWCYpGubnXgUDyLijw=","LrE/9mq0mnOqrXYPW/JxMW8/hTjFJqGmT6Zb07P8LU8=","IqQOUw3n3dwfhCyUIRksY1tDpssfg9id29PFbCpRLts=","J0C6oxjAL94WLJIKYkWw8iCPfQ7hiYI620e6/91e4h0=","GWVSLM6L0ps861CM5AQx9A1UtZwEEeXKQn+MHHidKbA=","EKDbfCsJadwlBkevC9sNmc6kKF/YqQcXwnYCMqkGvn4=","ApVIYnGto8rkz+NyHm17Cs8hvco8qg4CCm2I6tHyuxE=","HQAgbWWpJGbd7yLlWDZhxo7jE8xAoBwJDlzLEYoa8T0=","ESIiYFBSQj/W2iHZVUXW6Wh45ab0P7Jmbi/cWTeXG8U=","Jc+v233zKoby/0SjKtey/Zpg8xpE5bWtQjrlKw4/8u8=","GkKsozB9+EqB/1ufvsARrJ/a89nHPN/pUBH3wax3nRU=","FPtsTg3wBjJ104DmfCUaKa5jgCjY5gcqbk/f9OA5pP8=","Fof1AajAfJ5D60qyJEkUtlEpOAeii8Q9c6xLVkBEUmQ=","LWS6QGeriY97Q0QJMZ18rd2xQYL2E+RmQpGbQ8ibgVk=","Jl4Z4qK8/5SJy3Sdr5t3JW5AjxgM+vBVBuEaAtbUsUI=","ESDZEWpYTsrTI8uLiCW55DrRbOWcXou18RtKuOXuaAE=","E1wgD3wUXAQv3JStW9LkZhsNuIndw8JKIH9cfECYA0o=","L502XZtfn//FSRwMw55rmtFOTYeUv3bma+yil03Gxlo=","K7J8Gh6EUvMXv4amOElU+GCaKFAEWTxS/c/+fYWBLfQ=","JF8o2mmGNod2lo1+XaF2PTi04aW1OsO0V7JtNdjMVTs=","FgR8P0yiPG9drKXQHrxnIaPRVspMNeAISQODa9Eok74=","Eymd3bnid7EiJA0IZWFk0V+NFcx0g95wh+itlpCcBWU=","FZDd4p4RQkoOf31LPg/H5BLQkkY8+VRbfGImCrLUNLk=","Gf1guqJIa/3//8j2cqtky6QLOU8oGDZsdtBbd+keKzY=","Jlgo7fsDkdhggixBGbOc7uwCGRZT+VxzksAXJURO6Ek=","Ajvamjwui7GyJ7Em6ldPl+x3k82AxiykTPiy5BUTK7E=","G3cMgEv7kYsZduM1eriEZosNKqQU4Aft4ABxRxSqCdM=","HYTqq6ZSHrhmtgB0kGnmZD2qgPfeEOwnNR8TaaNynRM=","BzoKobpMHh6YLvAFORg+9kj8RBvoirHcUxWgy7QBybM=","JawJmqhcniruZ4nyWSJYzfXKjHtXOeJn8SA09wV5f4E=","HB8NwirVTanyYyG3k+AUrBuFMAHRVutZDm7FIuaFDDE=","EDdJzK6Q5DSh2WExn5bHROBOwPd8jGUFvCGhGU2mwUs=","CTxHydrV6mHIVmYg5PQ2w2rQDQRrJS0iZNBtmjd+nGg=","EtSKItRDcRsFu6c/58v14HNN9+00WH+F2FClFYwKJ04=","DRSH7nv8pG/rztuD6dxzwz08CZvzwad5M0g0+J99ozQ=","Lrqx5UT2rUUl61WSFS7LRvjg9wzFTnOfWuTEiUXlNKg=","FyYBELwPothZplpRm2ecqxV6ZIXlBiyvo9noUjVD1GA=","FLYLsbgTUzZVt00ZSPr9lMc+HgutK/Pny76ZfEDCLLA=","FEypsYEEtbtanSHXO9lX83MllTmhY8eBlyEM0WyIZkE=","C2mFQMCrInNLrVjkhRX/hFIAUSFfXOSRXYBEQDKjukk=","H0WP35KkwDvOK/ad091OJr/BZjwYd5m7NZWNNhPiW9o=","JsDD+fKr0ZOSMw7pPiVUq7J+03dIHiolUnmNyVKgrNc=","AP6CW93hq6+0gOmF1vqPTHrpxnNfm+CmkkKT0roRRcA=","JN7tOYhUauZSCmwgx2WevSpfS4KBgqMPUZVnSZex9zQ=","C7vNVVwYSq4IkVgsYdZRlRMroUqib65bykz6DvcckLg=","D5942F3t43hDevvsP2ukDI4/Z0y6pR8vxTVVd5zpqk0=","JpzS+4wDk2qm4w39CcNP94bIOZbon3BsOc+aZzp5yPA=","BApe1VwVQa0UMbLgpcI3DMCrjLKrMeYlBfeZsKU1U34=","CxDbUtaaCDgsmw9g1TxYYzMBiHfsh5BnovlUj6A1thM=","HmzFxAkNLZH1ZyNwZMV6u4Dx0YhqUJyra8I+gXZ6KqA=","EE+ZZraokhODGcoDfUKY+uT61dCc0F5uSBS3UuUfVws=","KdlvUw7VzJLJBNIb9WDIKSO/ZWmsuQq/udaMSVy7mBQ=","FrkXokHF4qGUHXRWZtit/t77SPnP/HVv72ZnQ56rof0=","KASdyHA+futK5ct+7J0LlhTzPwO+ylSmfXKc/2WXH6A=","K8I2cUrv64ZFTPlyZ2xkagcecJWdU4caI6J7zEpRS0Y=","DoXj8LYt+sBN7+iTJrHxycV/ldwpnvlf3OLdEwsOCfI=","FXb1VlDg36gZoSc+ag+gTB8a4Y8fhB2vCtWiNXk7hi4=","Lm0fmE2Q13i8DgmQ2+a+ZiWK0ASHEpqzQ42pDJ7DB/E=","ClIWwkA3gITXQQzHeIAcWQORxvYAqFUU3h1c/S4p+pU=","Fq8MbshXcUuennkyrIprGwH7QlMuUelXxzXgJAPs1JI=","B+84KbIehtzbw6oC/SRrj6jn5MIVeO8FhIdNNt5JGqw=","Ahzf3Ksf/awrrwFd2tfvb8GWt0QugrNwoRh7SE1dYtU=","CRGqHOYI9CNP87nzXZvlRvXnuUvwol+LzLNTXr8cWEY=","HIYesBxLM17P22MgfFFn8vKi271MYE35c5CCxduRcTo=","Ayq1wAk6/AWdciZRUgJrxnS2mISJ+hki0/ahMObpjAs=","Hbt8TjCzvbOiSOARjJJZwxt1vrvais3i0RQxHhFmuFA=","KVchmHsqBy+Wghb2nhSvwQrHzmhwoc72ILnjFnEh5WU=","DYSLu1PqjHLIygqTNxEGHNEcOL71IE4Zh8bgAWzIdyg=","ElQ39hBbVzKcBFN2vpgB8VAIg4SRarV+6Q5N8mBTPkA=","Fqb4XPBwqTQ3ad+96M7DDWJQDVDuKUFnsM/Jr0cHrCQ=","I+S6Fm4rWhUG353U3HTHow37efSTreOL4hwKYEBz01k=","DXpXDVwTG/eAMcZsiuX9RUuphV+rkur5yjedCOhWQU8=","IXk9RqaW7lBA9Zn0gr2YRTVsAuTCsHpkUKEAVUNmWCE=","BM+fEheLqG+rEcEtaQ5iBgNSX/ffy1YG0PZ/CnJQ0KY=","HhyHFK66fnVJ4IR3tDZewtvr37tgGJN/aA08+ttbkiQ=","El+ZyB211+dL4MbmtEdt0OUDwccEs8fT/w7TVvmlv9Q=","ERvDIVs7sqXRclf6c6d4UdKiTkgErRrG5lLwhYMmzrI=","Cec3cfrqAGXIBlPfqov/QC7rC+NmiDQ4Jvr2OfaEsxo=","CWT2IZRoEKEjRp/Oa1RP9hzJtzMDO2MgcNR7yUdPSww=","CVMr+fEQUfhjpOgGeXgrBzLWY5RzkMErApVJGKGOR60=","HRSAjFRYOmIOZYfCS5k7GDig6wc5XDCFtEnTE1vjIvU=","CbiM68y7KgoY4tLnmed8q8tKIxEjwwPpjNiX/61ZjUQ=","JP9as470V0hEkwVMm9PsiUqFZkkakaUr14g0PEKdCpM=","E+6uoimMok7npzFi7Doh2Be6hvl3K7aMBGHRFVNdrsM=","EWAKNstB/eLdJqfNSpjNi+rgoE5G2zme7FwdSQIFEPA=","LHaC0+5Ow85+H2fM6b3rpKH2afBNn3pL7hOzyX0+qjo=","LZsdskawBOGFsIyVPcCvT7t8fcZ7I3jv9wdQey2wbLc=","F/FAfChy04ELdHS+vjcR9yWDzJWDEwG04+BqPKligxg=","CJ/VgFXSBgK9vCFxrkhf9I8gUwEGWTK8nVJv5U0pfwI=","J3nq9TcQ86WEio3/vkC19EKooTxRT/l1Af3KCA+zuvw=","B9bD3bgHuGNMia7zVhXac1lujuGoyrSdAi8LyoeA7BU=","GykY2gub7qaagLBaFR5oFyLLZvuO8ffdgpOemRzQIeg=","GiGhQJ3fypnjwJh/l0UIQPlYUkr/6yjBj95znIGJyrs=","H55n45eRldNoFyJnpro7RIFz4jefJcqhN6tpZHFNH+E=","B+V5MTmbzEEZ2c17IZF5PeDuaUdHFrCACKn2ikKHh6Y=","Ce99Surfe/WTxaeSeenmVXjRQxXfne4HQBaT0ZlZlII=","KF/jsV9LQyadTMAYP591sLT+af8XCsZBsYx/sQXS1xE=","GadoK/7P4Y+6siMBJziVwcS5qZSHfdd4ZG6d/WTyTbw=","CreUtEM7XQyp8/kjYVnue58RKr5x06TRk4UgLCCVAdA=","CP9k9bueP4voFXMRfgEcgD9p3GoJcNwFEYqxBxoomAw=","Lw1FS0ngNmFx2VFCIwAC1w+QyMNwR8ayWMB8DJ0DiKk=","F7Rjxo/LpGHhSeVu2p6NsaS8XHuCibDNQobetck1VMg=","LRqDrIMuSSgN+UseJ7q2X6qeIaYKSO8PRVfAP5t9EfE=","HhgkEVYMgNfUxIDk/WW5mXEypO0p+ajcPYgiCbY7B8I=","BLxcGcuzEpQbobcx8JY0mudiTso7g76IZHCA95TX+rM=","DxChMZUIwJqkQn6nkHHaAtzkoXReE55pSfmSFqzYMFo=","B1edlrq3k+8fdAcT9w89LPSvHSDqVg9I5vjATfZPIHc=","H9i1XQooz9AJspizDiJqo9QkM9wUgxjJnE4yrxPFFEo=","Kv/VDGrrpXaH2CSu/6VcIX9jPUaEDJKMA3PKRkMvpzE=","L8FjS2ncaXtmj60+iciBhqduQHe/bRFA2OQo6ut6OHI=","I6U+UUqyYuIuyn7nIkl4GMBk+PdMzTMFA9er+oXwFdM=","CG6pjopO222FALygPVOgOiL2m28TLJnsr56VD78myHs=","D0iRWFW00ZG3w32F6KXUkWSM1OU/WAbUmajeh+4Q8uI=","E+C7ldnTB4wQ7S9zH1f16eQMlWN1dOlakz2fKnqlbFs=","K8NbDFszXfxvGpNi5bOJ2v62XwzltEVIKA9GwW/1H+s=","BbLdzIaoUEsAgIrLtKZDsWnbKwf8JcnMMThGfKdQtaw=","F1DRpH2iEdjoOGwZgJW4P/ZltYmsJ4vKjA+gG/xoPLo=","G7UyHpXR+6KyLPTXXi6iw2Q7he+78aOyzUvg59EjiA8=","Kk6K1N+idlKDnOF54JZMxNRzL7VTcJAbMpLWY73kHs0=","GbmEotWgMjuVb64JtSm9z0VRIsRD7qx/8VhLzdYyeH8=","ERBfgYzCcjKoRF/4ht7YOP6YADhye54rM0NqVcL5/Ts=","IiggVzL+a5rygbWytf2i0H9RhMVV+1Kn9RTGwbH6gKA=","ILTEaLuOKcGG5/Rf7u+EvYV9uFZDqnmLwmRRnapGP90=","FLzS/Vxzkr+dk+SbWFW181xxfUzlETe4dRuCg4anpfY=","Fhyybm+kjbsFpcO9q0oaUkRp+YuNEBgfKEgCnHleBXY=","JtU3zNjU8+Yv0PrEHGokyUEfTW3cAydrrCYXaJU710U=","HefT35fRGggRBqS9Ibl2A6dq3/FlzUCsdH7UnmHGEfU=","KYAPsAIK4Y1O/Y+sHe9cdgevNfTiI5BKzGoU2MbRSsA=","JxJx+FD2kqNQP7chJLWDqB8/DqZ4m+Olb/tJd2V56yU=","FmlL83/kITQLGGy8gX0LE2+XLJNVefLaMA2PPGY0gfw=","Gcyvg5vN4/uXZOV7QPi+A2wdCtbdI8r0Dwwt6nZLRTg=","E0W8Y76OPobT6s3MTPFCVC4KxmD291/jTTx/NFOCPS8=","B+cz42pjscVORTBQrkMHjIahgDubwZhPg22p5b3ibPQ=","Bn34X8Rh0eE7CnRMT3iU0xJtQAwPZ0EV12SgegU/ZDE=","A8ICXqTuLBmy+Ni+CiuQodL0NFNRXsBCV64fxs5TNK8=","LL8dx69Y+prbi6MbGTCEdiTMT49nzdi8o6knbB8G+7c=","ASA1pSGbkA3trsMvYsu4WiIoo+cbU6/U0v5rPJZPkfs=","G4xxPJDWKzZzgsDO6+vimJMVes1W4QdV0QaZko81Ba4=","FEdfdY1dsBot4q3UbEBdk56xrwqza88m/5PkhgVB3VY=","ITd28eD6yFX5WMsgqgkNT9R+cP0Ok291EDf8M8+cQSc=","Ks9CweyhoJPxAZjdWha84Wv4shEHckqUr/LxkJBuaYA=","GRlLaLiYR2WWqeLUBW4VyVpmSCNKu7+cpZLMLFNwM4A=","CyCh2aJHABHrL4GAIVQAtYPLux/Qhf1TvdHJIXzFo7g=","FKfR1wZe1vatcqDvO4SNdgNPepXS2ioGQzxsQWDvnIo=","GRQkFuOxaKu5m6vBfOaCHZWimjHZK/dKEiqO/nmfm70=","LNFXHfsyq+bl3+yDcfgTDPd1ZqntoGzItkZv6eGzxSg=","HLHrxLQgUodugwQL3ns4AjD18UX5QAtdTXE2phxutFg=","BcSrcs3R3pVBlolmHl5zXhWz/8rsof3IZp5z2KbLyW0=","JMjaA82PtJfk8EUAabXU3rECtk5o1YiXckg+jQ45dNc=","DegZWAVwb/dMslHPsLrZueP90FnQGl/HxwXWCXH6SEA=","MEzoyzzVUZYjUgpIg9NXkiVtygwS3B6FUVelnapFCPQ=","Dza1hphNGVmnnDig4GRQ7boAPa63ksjU3zB8VcnvqLE=","GoMl1VSAZGrH+qOt3ssuwO90gvEKCZxbRlZ1LiRVGGk=","LX9nRNBhlq4IefQGgUqr+IkHNQXe2oRmUfr8jCAYWuw=","CSBVB9/DdnLdlxHXv0Ln3ikLNmtd8jZ9Q3qC3J4IZoE=","HCLpvT8j38P3Pcc8kTHhaosHaBj8iCNCXMsbcyv1ST8=","HFl2IzdQB4QR1sk2gNiHlZbfr1+S1I/U3ZTuXSnFHKE=","B8uGxpc6u8afidJI10QUfiZpCmG24x0Q6YATeHnkJnM=","DDyYgKgkhSC2Ee5N9/3MFqZq9F9S6wEEV1eRB9zJnTk=","A5KObeZtSQy6Oh4+NmUSORmTjv+n/E+MmzG73uHkea0=","A0D3iFc7U2/h5Cx/1AnTZxJHI92pxLDzuWLgE3Zn6H8=","AwplvV23nwCcwbP6wc5GTEwNVDOFJS2gF7EWFG/oDYI=","KkKoAt6QhdksO91AhjcaPxftA8CKK8YbPkPgU5NX3hQ=","FUmhyyUENWmbOiRn+DkBEoCURGprulJtVHPoJBtQBKo=","MFAWRdf2fW1OH2S5WjRKhbxqb5f7Nh52ksls/VSh1BQ=","HD6jad4Y3NwzePYd1WOhqvJWmC+snqCZSj7uJsH10Ao=","AE8tJDclKg1NnKTBsBtmCDxwEoHCM4B+dEkQs925cfM=","Ey/lKeSqvQMEEpYkgFYslcj7PEq63pMm4dh77L4TkqA=","GfoQcVa5YYhvudmewTvNjQxMVE1CQMH39Dx3xj8USFc=","LV+RzTy1UtrH94Q/YFUr3ob0Xou6rkhMa3nM/zSsXuE=","La3ZpprRRuZbur+6rDN4r5xVQNF7m6GbspxIyF2/5xo=","A8kAMHTkUCCSErO9FiLaYccaug6KCUp2YL4fRjjqvIs=","C6kXKScfa4FDeL8rhHSQ2LBrRsoxzFxPx0wcsEtxzxQ=","DuWD2BfxcFrHrAua4EIVitDV7zZywdE9x915SqhPMGE=","EUACalq9icQBLSxDpHi1L7tG7Ahhzls7fBz2n+XED2I=","F27Av6WLOXYpCsFFlUQYxXftd6uH+5+CKBdamtjm9fo=","E+WJnEbBT3AE/Q/Tdkds00qn07E0cP3FIy1Wo+WbR+o=","FnMM52b2XAbLYR+Nf0/D1TxmYuoSykUCu5aIc/PhT4Y=","Fl2w64hf/tX3elV7PrIe8tSLSnzGIgcJ3gDmHNn49SU=","DEKCeMIXwefnbjEQ9+GyapCV6MjLwHoXFxTpr+4mcPk=","LvGDQkxZCgpdO4pjnzfk530Q/p4SMncYuOzCtAoukr4=","C7vgn7v9p7bgbK2GjLGjifulyime2VRTUcl05hL1/dM=","L0IAPsyrO/8NzisiqHaaW6GgpvhUxzp4hEO8E+j6XqU=","BZETqvkorNkVTqkpWlpp+GQUnslvBAlnO+hgzcHt3tE=","H7+q53vAYPu9A/+uq64s1NMnk2PF5GQ3g9+5pdWUaCU=","JbPO8dUkxIFW6aJKoNLCDtMvtptN6+HBLeUNskbjyAU=","FebwMp7U5E0DI/AnRLT20DIeIE/TjJnMtyo1eEuUAm4=","FuR/ZCvxPOZsLCvKAaJ2PXBLRt4NfJncsrSAcHwaO/c=","HZ+EjLnf24HK1i3V/UMVblfEuhlOMrQhqgfengqHAOw=","Bw4gaUb0yywqfFx8DKhP5T/9iEJ5JZ6u7uAGJ92YXP4=","Cl+RrtEVlQzmNIsPDwAVaSQ8hABBuXTk+96sz3Kxnac=","J3NnR3ldI1WXBHpXtSTdTB7Q4/QnmCFbqFBWvqdlVA4=","AWfB12R5EGlTKC+UXI2MtyFg9jEEcKf1Fl8VctbCfqQ=","G+zUV9IboJSATEfDpohzS9VDsubXy1GuwMqJ1sHjw1U=","H0M4b+c55/nGP73LuCvM3NQXM4/qwe7ULe9xUNSiE1g=","LQkcNYF1WDsyy5fFgWjzLYOmjJm9+nwgCNnEVLDq3hY=","AXJXxbyNrVfvb2bMBBoWBjUJANzhhMMSQmBlNG29sbo=","C0rcA8e/0xOQLdpnjC+iUVIqkqf8bktH1PH/mOofIcQ=","GvhFJEQawD+i2LWzkafDcfLZzwagkAX+puO3CMzOLLU=","I+yvgShjNiUaH8xd1EpKuf05QKBI53HuRmiDB0Slqb0=","GHvHA8yJPiy6Ivu1mMDneMIEatvliz/yUte2Ne2ZDCA=","JgsC2xEdY5mLavCagZKPYs/JfE+MuiboKP9cBXoOVfM=","LwIyqZQMTEzdDkTjxHhc7RT/E7X4cc4vbuNXQq0FCs4=","BQrcTV1kgH9zDQ9FDaVRdHmjeGo7ssjeJFNqfKXeLY4=","FquPaCpAg9D5mfWBb0HMftvOgsDVm8yqicJUcpRA+YE=","ESf7LwypzJU/ux1Hk0dCY6blG3fnLDixFH74ZUFdTaw=","H20ErZfy9LcQ+R9SJqjFXsvBwlr05MqLdsxPrSTuxnQ=","FBvlRL5MI7NiXvqIbaZeZ1tnmQKNOnpt3h7RSfqklng=","G/eF+YZxlLReIdx2sgAyXOS9Zkt842mRdLKMD7MkOQY=","JNm+fDLH4zv3aBbhmjweSoh8mudNFadxLa6AKGTAhlE=","KKSB74UVhRMg25z96BaCai6vmUrvilUaPQAi13IFrWw=","IFc8FYpJxUcx/tt8SU66fMoXl1y0pEjGiLxWSVkHJh8=","ChWxVlkpcmQe7ylwkE3j4TNDdu5kv3bbS/XnyFQsIcA=","GyvEo/P0SO+/ohpOQdXW4JtzV0c5tm6sJ+Zaof23jHA=","Gnml2Doou8TBE2AAOBNehs5hiN9N/5OBVTAVk9TMc6o=","HhXn8R6jZ1f9z8xVjnxr2MfLhIQ4iiyVJY4hJRZN9BM=","KYoDvB7dd27DNyyCznPESz4S6VCcEkRZ8V2d94OVOBY=","CsrtGGvSG2vwGITC6A37hGmeC9g7d3DQO5GNJKASkxY=","JSnE/7bDnP0apuBIAMtZuuqjHaQ5A9M4WyqyWGSBKWM=","GcR8Kjcnjxg/O1hCcRQTmz64LAuJDEGZcGrZRDkfpqQ=","DScBvfpXz5EfHNH7Q1/uBoyu1oXGNjgiSd2az0XUyYk=","HljjbgrXtLrSesf3bTSrSXSI0WYaRE28B8ucchlAnxI=","Jpiy9m+xXzsWp+UMvYNaMfu4PgtlmC16esspccxYJbg=","HDqONzeFZRQHGliRt+sob8yDbxG2KcEsm2Gnam9tvi0=","KSfOUXMIZHP6RF1TFyoFqmao+dmhafaFxHqpibng9aw=","JaoX2CRYDW1TMjZBKkiapFqjibPT1Vo0XTVmOhsUO/E=","D88REtrMMReYGdZldKXLje1FAD92Zn00wdNBU9j8qZQ=","BgMtblDQWQV9RhR3mZ77Ssq9Gp2lknMaQEiujRmz01E=","AeQOgZ9Cb649uwCSan1lVvMNhJNMyr+Z6YdjUdFxa14=","J5CEltCQb1JMJRZTJRCYz73Je510F+Q3cQ4af0uA0Io=","AtsYFPFDXNB+5U+MMgXH12Jiy1/F2mBYNqCNR/P98TQ=","GTd6Rdal3gB1HqkBGY4aCsxByoqZ/q5e7Af+UjPSibw=","LQBPyC49+am4kyGCNFiDJ3DsgPh1iVo//iNwwKqlz7o=","F7g2JWp95BPNz5OkxPj7a3aXWx7+MK7vCsEqg7NDTA4=","GyNKKNq5FJ4s05uzT3lKhd0SXzM4O3eEG5ExKMuGo/w=","FYhh/Xa9iliVDAxV2VeMnGw/8a76iIA/MncK2xpvF6Y=","Du+AkwLTFBWEKFYYsP8uajc7G+DbBoW+Nxu2AYiKrLQ=","Gs8+528Z3hV5lnaNr6/mBOGFuyM1a24lkgMutzLbpE4=","L09V9Xt3HswVgTUm1ztSsvocTwZVF7m7+MNlgEDhILs=","BiKWTKZaSLMNQKn9To+nV/1zfwIEWedKUzzqVYKQcrw=","HIyzSbXrpZTj6W7gQe634Jb6zUIfeJvX32rq0DDP0es=","HvUZ87gvKARpwep7JVHTo40+UK0rDFLtAYV4DoNHBpc=","Bx+WbFu4cRHh0PA9F+KIXd9Qt7XayZ8s+ch/JaE4M1Q=","B2j5SozIIi+dLrNquurjs1GtfI/QdZcbyV3mwkIv8qs=","E2+50IkXD8s0PdHyzyVEaBGMl60slRtrP+STPVpPqnA=","FCBK1S4X78yNbDspzlIgpeqMaCniqdM/ZG3yQhLCyoE=","GTSaVvFZGPHpxsWHzSO7P5M69YMyLdXA+mFmzxzVjG8=","L/0VQA49V68dUDdV65fTMYFKrprdR2S7fpUYFuBrT9g=","ABiA1AbwQ1K6DnDR6k5VMC8jkyfh37sP6fp02UfAQwQ=","IZT9BKbT6AoE9TI1pfRujiIl6ZxTAXPMKPsVd6Drqk8=","E4TM3eV3QigaPRF8DbyCXLfRt+K1fA3uZSHTFdYNihE=","CrgPZ5rfh4np9oYV+OZcreEsnBnosJb516WKbpFVr8k=","G+OlVwbUgUSHJovxAZbugACaxp0m6qSua4KZ0/on2ms=","H4p4iUBEZCd+P6fa0UOOWlXbK1O0bxCAqyWzG1OKzdQ=","JjyFxYKC9lbqYZP3JkGqLPme5PfkfxvBuyLEbO+tuu4=","AQGQmSZ/8e1yTkY1c3AfTC0HQzeyf0dAYNw15yzNGKE=","BCm+vEMNQGLjhzNhm40/3dXCbQWyA7qbzV+5BYx1Rfk=","CgPhE/dPwK7j5Ublk3v4xWHBInT8UAjMYxgKJgBBR98=","BoiIczT0g0IvR6k5fkVmbJ/cFeUI+9T6g6XnIr6SYSo=","HKtzF3/uyoyGNgF0W0ATjYGwwgkzSqxYlRcJJ4zPfD8=","BYnhEvQ8l5qzuPExp5CaKE83hng6kgUnH3mBNQCCbzo=","CBodebIm0C8+3HnWdWsreNBrdnf757/S4cc8WwVc9vg=","HRJrI9omvSYqC6RcuDt4rhfvzxqluXR42QhD8KYY6SM=","GdAsyvH3KMNbiFkuMA2vjGy6bqpzNDUusEeIXbIvl90=","Hn4h2/ZtpHt2tOAlu9Q4plTWZe7M/5KOKd3QWHvavew=","Fpygn2HRAQRls9agTqbzI/8hJrLFE/Rz4linOMNOhKM=","GvwdDbj01D0yGTNEY0BDvTzVnsPJ6Gflj3yDSJz44bs=","IZ+GBL+i9a69GW7OIfuqK16dWmKFW+2oeBr81mg1fu8=","Dbcdm+hUgTOiYF1xO59QzHaMGrKCQwOxQfSy8nTG8Jg=","E2A+XNIMEszxLaT30E6VVc2mROXZq9D1QX97uMbCRUQ=","ADXENWBEOJ6NjT2EYZJDtX7DDOzDuox+5m2O2Yd8QNM=","C6aMVq8PBF/uGyJm9TmAwxzuVRh/r5e2EtzZMM3bRSo=","I/R1noz4KvTlGxoxIz3FJ39TqiQiQ12iaY8bZalRV4c=","EgEoebn1nezh7Q4DsX7JSmrG8pGRV6uX3B1f7G+k8Bc=","GRV5elS3A4M2MQ5G4vqgtIuj4aLUK4tYe6uG+AuVlOo=","GQ7Rh3fOiKqK2F6OwjnYJZvw9R7YmWM5dZ0EU0KbRCU=","JOBAgcFRnqw5kEOdX4bylnaF/oa43DekRE1fvyq3AbA=","E0XNq0dRD9vn/Dib4EJWM144fT8k0qpzJvWTmaEMhf0=","EZo6x4A9+9pVZNyBeKecwe/3hZespv2Vs9u/SVJRHnw=","GXs1ltO2bK2sbMTYjC2h3jNllO5IpPLoLO79nIEme0k=","AVdAy/W4DAWPZxq3sUsuC/OxWkTcpNZA2kBFPQ68yxM=","I9pkSUPW+JCjRCSfDUmXAoOAEdxuRTXEeO/IoOfqGvw=","I0T3ahvo9LukjZ3sAvqItu7gHRxI1+N9chC1qORxKB4=","Ltb3x7QYis1WIwIrRhwmcgVO+PaaBexY/I7H8Kj8YIU=","D1qRnoOhA8xipzUCgZ+hY0lNkC186t9hPX4Pe1auli0=","FoUG+1riFwMx7kY3CK0BJMUN2obBq0ZPE3Edt6L2xOg=","BlBkriwoRrHoxzlCvbHitALrl6OT4YpgC7jtvI0CmvA=","FxD/lMB5rsVYnXoEh+4HT/pJ+ICrsU2d3dJznuat3is=","KvNVTJu+WVs5YWZpyhmEwsFD0W+e6e0xYim09aCgEDo=","IpZPw0ebIOcLPpgwbsML89USgFa2+1JeEA9oQ2bDiRo=","Jd4LTNYcgZQND+qH2TietHPUafBBXu/YG1bSBI66y2I=","H9V12hxTUtquI3sOj3ZyPUSjQTtJ4BbqEmNIdjEO2zg=","BTO1avMpl2NQZFx8t/opweDDtdiA4l9aUndNBW6WWKw=","Fn2IXGRb2c+0otY9VyaAALc9iDmGFvvb5W8jG4sryCU=","DMLyQ91gzUHgSyQwyWq+QPIeP9EJ56GUYTGIBRa/hvg=","A0FxW81St16Exg7dRykmEcRwP4+Bq7RfWPhv94l+7hI=","HMxtgwGsFLy32Muf7sIo+cLuve9XePuI5pVxN08sJIE=","JtVM/NUfHXbIpvZ/N9/ky1Nl4zAX+0zU1arf6mcrO4g=","JEUxNECiCyllCgDi76dDLszNIYqLERpn4OwoxVm+csM=","CCh81wmbcYpHPjotv/c1Tm9WpU+GDRUzsooMA0B1WLc=","JsJGKDVqZ8CkUM9T9gRT3vpYD/vsUpXaxvJth8pnpx0=","HRzz7qnW8jwXIgcSQTZ+6LBVYKevGoJf54hYdpIJGqQ=","KabMNA3FCTIajbmaHkpvku0iUYcY4FCUaiEbmwsDUJE=","IrBHLY0Y4iB8f6qBnmRqr/7AKDwGzMsEVUiZwo3ds4U=","CspjfT9xOT9ctdAeCDd49Rm4Ie834TNdZdFLL61VVWg=","DMBs3am7rFih4WLvXJEO2fqYYRY7W/9id2W23o4elxk=","IcVHco/JZMF7ZaYBdtoqGoKS0NUD3BalxgUTv4iGPEQ=","CFEt9S2KlDGbzG2qn4FIU+S/WPV9FvV5l+th1qGb/78=","JcDZ/rDAKmS3U7ylfMaCSKXexBSb4rdZvdtTtvdZPDk=","I1LTlE+mGixO1chOwxj7uuBesQIHVhLCaw84Zw5pmV4=","JLs5Pe2z+BFKzcd82i50qX/4z4nXUfv82fUqQodEF2M=","AzugkbxmXiaLZajyJ4qzET+MSum2oLrMtLhAlpo7Tzs=","IctLRF6KV5xzQ29uCLaySHrQ9cRwbw3clUX6YuoCJLM=","BKklrjQmDf3rF/XHk+S2crj1wNpp8Wv7KUA5JujX1Q0=","LfQmZ2EKa8ZgKromdGJmh3B53DRaefbWc9ZPsn1/9Jk=","F5k0OGpkI82zoQlQ+2XRx3doEu4ZyBP1pnICvfNsmAc=","DA88wGQ8kFPn6Hoe1ZDeqKcObV69kHVDyVYdpO6fz2M=","BRqFje/AQOrwhHvFcU/KPWN3VwnVSGqZXpMzYYT+Cqg=","EKDak/XiTgLh2jtwPuzpf9Ogj0OgR2z+/XA3LWJ0+kc=","LXvrQGeEC2VFaTX+gI9XzJcbb++34J7JEzYQPi+wcrM=","E/G7tqhQy7U2oBl8AWpGcj1zh+mRtn1YqAZcPk3BjFU=","BB/ZgJcdSJfl4/QvQ0LbEOUX9jmFX7ryHAuVkLI72Ng=","CWNpJ/WzSdKQBnAp90BQyXUO9XJpFCSooKAWY6RcUDE=","KvNucEAB9gI6y+B1djf2yw+suo4FFbDfXrMXod0OZb8=","L5dVj+b2AEEJrEZYYJptLNGyLl3AmaLqEy6ICH5yzKA=","I8xMD5brkVJEdEClXjo9C+GryDg02f4Ic/ydcUsOJtA=","Kltr2Iioo2V42GJfW3flJ+oG243BtUeW2A+xx9spO5A=","JyIL438iPILvMVffWWt8PyG8wD3oxKuNfx1bqq9jjww=","CbktBcBZCMXZqvTo0jRIH5aEBmvsD0eKb39B5HOPlMI=","EDaG2E9iCVcs24KbeqZ5Yr4BdSiZ3bcXgx32WcLi9gs=","I7YnI9WO1cLGuoGDg6zTlkzzkkMojVkaS6CAOxW0hzU=","GIcPQ2zLZaDh3F5oNySEdK5S/SJrF5Ihu/5z90fq4Tk=","AoaR0vDDNhSLW18cXcBrQi00BxcF+aM/ryYTyQfzMl0=","EZH8Y7edhe2spqJ9iOktQNiXzArQUhNuYLW9Co5WAoI=","FmgLgvbnVdi0GdHjAyA0V7VHDY36IU0CNXnLbB0Jo7Y=","GA/WX4xzfn4H+9DnZGwVQcjDTwvYoeFiOjoOODykIjc=","BsesVN1A04kaFLSOdCoG5YfL37Zd/0qVXanHHRUiQbI=","LGXJWnJXE3Omq3oYt/Q5LBrvKW61gVQdh2urbDv+ba8=","DZwACKTwchTCT9DnM4ZNfFf04TwEDDGSO94+kohVK8c=","EtOgTzQ5v4W2UlIho/MUomY7m4TuKQ5IEWnasrCkjQ4=","LHXvX87iktBd7np+on7r6Hvt/mWCZE26D7URjP3yVes=","F8ATMLtXCxyplw1YcsGqq4zaJLMw6UosldElSRaCg+M=","A1+iZbp47+wbOJ1Q8YgBkcNb1AKXfFDSUokscP86Zvk=","FGpkjkcViALh/XtuIRVh3jzhDfY0c8JU7S45lHlvOyg=","BcLy1zGPkfA5irVBxyuavkzUgQWYvQr7Iw/Nyijw3Jw=","GhS6ySa8gE+qsK1i+iE1g4cilP8x2nMG6KCS6wcKzUc=","CIPNbn2+O7KTINsdoRdhj/n3YXE7eweBT0u61xYQ2J0=","BvmNK760WtgudiS8Pjh6Gw2Bj8yUzp2W9Oc+gMqiPlU=","DC7JjcDuZ22GLMBbCefXQ4n2hE70Yt4zb2qLaT5WjZY=","JVGRz6gzzWqGKshp5SBXXo2nDaMOyXBlfDh4GnsAJkE=","JjbD3h3XeeVXfeIUs+bGNRcR6cwTSNvFU74cjWi4sGc=","BkNwN5NyGPz05zzpszi6ygw/6UjDmM+fy6JawC5lKVY=","EAhVAoQ0AXTR5HrFoCd5MxHEKGfjtxiySkeJrPt9bck=","FSuZFZ6H3W5oGq7zi/cpVBm7h9tfn7DL83Mg7HJtRI4=","DTgq3psoGi5ybLlttU0m9DMliBh1O4jiZigPdNjcqAY=","D1ROJFnmpjbY2iODTjF+qa3nsqB8SrlMNo2jVs2ITm0=","KmEir3wc8pRrM3NdKp9QIMxd2GaVKed9AGnbNkzLCMo=","K9cQY4+gn6cMsKq2vN5WysrrEaqb7GiMAz73gw3QzQc=","F+FysD8lyY6WgM0Lus8ZM6lC2DTZRfuYgPrpXSWUk54=","B1msycuXWu+xioM/9MhN+DRu9jxOtn4iCxGw9TUMYzE=","Ip9B4VOkQJ+iwMfHWBGBPYpxkw2myLG4gnqmSL3Opjw=","DTFT1tFECqjo3AvxBYZnoY5ZMa/iT6kKwZEf4yLT2fc=","GYpvF5+SukJ0kPuQuM80VfafArdW6Y6wfUYBpSx3ozw=","KcK+B+MNk92SfoCqScRN8Nu18FBulmdtLUsakVcLx+Q=","E+dbCVrSGsnRB7Kn8eYgiJdCQFScC7Tn2DzkYwzavc0=","GG0eJsTkFciqswXxYvANindUzBp6Sl8vMYt0N0ZcqGk=","JEYuF7Kz/zkS0OQfF1DP8WmAa8FYZI2oIuG8n2ISiGw=","BMj/O5oXT8BtOzMC/1fFEK04WAw19OO1r3niQFVmK8I=","F0om958m+nxMJoLOwU2nCu1J/nx1dw+HpStaZyQTKJ8=","F5TID6IG6Zhi1+GnU9d1T28XeVgahSAf1Gpb+3uqlS8=","AltGMtKXcGZ9CfecM7sqilr2akSdbTn2/b5jyXbhyhE=","Ea333vlsU9vf/QaoXWMUXw3SOVBj6NMyvkLqmco2hUc=","Abkot/KTvqsDI1DdPqTEtIxKBP3/CCtPVC4JTZc6OZs=","KBGHv5ikxaa/kCAwksauy5/C5WGXT3n3SBqm0pkYMro=","JHFozY/A7izJ/qVhvE4BrT6leHR1b52dc0p/vEXAALk=","Iwl9dBJeBCeOX9DhT1LuGTa5AcLeZKBbK4CZGh8/Geg=","LK/f/2QiI5OZdTqWEQ/qqKFWJku/WQE/HYGVowg45kk=","GlggKA0cxm4su5kyCinYDnhEV2N3Y22MwipbiYOLXoE=","BDmvGRyCR3W4a2rpzd7WngrFJNLXlTvOZdxU4RZUakc=","BZIW3OBr15ephwmtK5DBXR+feBd/CtZtUACXJe1oZLM=","F0U/2M6XxgB589AKopvoubkMvMmiFht871LFmcYobNI=","AjoayPOgfIbpMYTF8IK+UamPcGttFGfc40S/4mY5fsc=","E7e/061RkZDUm+snsA3zCZH61AppTvDfEuidYXJj65g=","A9N1RhRyKLX6+VuggLK0AialiBBGMgi5s5Vm8HMWPf0=","BfO8+43ckXg1Qwoi5Qz7UTlvFSQqX9DH46wVOABNGe4=","C3VVj5JWf8HsVOmVSjPvr79RhmpYlKdlUtE0lSPPZf8=","CUFRg98QMdrSMpfDNO96JVgZt9dDZb5PNTqItCfZBpc=","LcLH8ZtQJDFc9bDHZUb5Qy4GjvtQ3TfDlfuHRHccDjQ=","EVpawUj/DCmQEiC/W5y9PV3pqQLIxu/QL3qSyx1O2l0=","HseJQusP7RaPvlW3MGdfPd/KtpwSLZ9soi98+nIoC6I=","JLxGDGlyV7swVStFrTcxOYdzniUHnChC3N8vl0+btoY=","J4orKb3lS14dD4chbeSPUdTfooRVXr1/5/Pd3CNNGls=","EPXEsCr1CHd8TNPNDGwR9NZ5+zsNelJphZO/UM8gPLQ=","LWlTJPiFRFhA9Sa3HlGfKVz7Cm5PJBRflS2Lr4Vy9XM=","GBE1J1NkNLYx+zd3rHM6slDdvpcdpQ8T+mzybJ4FvR4=","BAcw42hOOR1aFmtUh+8vpCqe/BVGKc5BPJie/iyHhZI=","Hrsh2uavTcfYC9K7k4mCwhXKEksV4Hl4g68qgK3sShI=","DGgCLrY8s6c4WbV3tZsX5vg2F2xZXGof2hJKBezvwQ4=","CI9KmvXWaEdbuqNWEL+sV5DhA+9TuaGzq9u+KT5W9a4=","EyXi6E4oHKrof5Bd9xnrZlFz/ILPzkN0PrPw0fzMmLQ=","Lz6joipW25cMu+2q/p2F8U8CRWiJtkq3EkskeZeO0+4=","BVVkt4Maz9j0bflu+BliKkRiv+goGwXpVVdZgWfunzA=","CMKemiLsfwJEknOjUTaUm3PeZoNOPwFfRokEOqs0EBU=","ISplSSxuKZJIQWDl4vb+j+x1gSVmE7BbjNQjfqWW3aM=","IOYpu1tsHvB++i/B+PY7EqqSv7QuOOSDNds63yZ0Fvw=","BAhv1sISixGlqlj6Kosl7V5Xxbaj32U0g5qBcpnOdxM=","BlJFz1kUjvPPkj0oZubx9h6lTmoOZQtquMm/lNzx6aM=","C2wbG63ADmDcfihr8bdhmOYaBjz9wmMPdWUGSvF5+lQ=","Ajo4Kd785E3igZ2+3c2b0XzBzCTV79lDRTUtFTyJgJc=","G1HVC58qHOA54b8zpDlfaT4Sy6mqXOr1/AxiZepEa98=","Ctori/BpsKhiK+hb7FzBUCR1vMmVpWhwI+oz06lJOC0=","CDJiCjVeExpHnRY71wLi6WqrNoj4GLVK03h2SuGi08w=","Ad189REC6osQSNPfymSTCNWfZfTzcL4Acmz1yOOnL8U=","Is+erdlYCTXwLNiniJeMU7tM14CyYseqC+tn3vXRl14=","F+O1YFUW2xG2JRI0j45/IGwucf1Xp72f6Wgyr2v3IVs=","Gq0cvdGFvForvc7vVw7bmGUg65K84rJlq4hkxRrEidM=","KNXs7Z2eVRXQwpuADjM79mZiqLW5g5hW5AlCIt+049M=","FWYNjJNuHu7tsQQ3xMrlRNvBub4P3WOf7/0CRqMT6IY=","H16PP3Fcug26bxJx4cyJQLNzBSRv6mKqfhbDAcif4+Y=","A7w6ExvOpbL03bXNWPcaksVJc9pn87au65wrKx7TJig=","EJicIYFegV42lbHobqwK1eaEaPNwZhQtBC2VGvoBNgk=","E6FHlr4sYr/O84msy1CVKkbHVp4AkgGWXxMiOnf+/4g=","DzBxSLdp1aOqDXC1RRTR3lCY4HDauYbALNkQBcN6k4U=","HnIMVCuDGpeIYOyogK1SIhBWWgZYhLgv3Zq67T0iS5k=","E2mB/E83pd29V6KEOOsAPKf/AQmzScKzEURHv+ZCDV8=","I8D03KeXp//u1hhbYnAEWulg+A4f+97SNJ94V978xeY=","DK3sNTLu9uQ1ZWQ2vffsVoU+3y7MHcqzPlhdf58z8hU=","HT/QzdypZ0nA52sQlHR/ZugiuwehoBFQbRmOuAuDFCE=","D6S/V1HgXLGHmn6dG+GMDPsHCuLlQ2UDe/FStFrAhe8=","CAHEUApRG1+bbwvLbestCJij7p2XJ88Ce7F7zteZImM=","E7JXyLcZTwzPzYWbA/dFHN6DFHmBFawd5Zgcy+6ljlY=","DI6MsTXdOBEgCHN2oDw4bmeHEADaKxvAK+lRMw96VnA=","FldirIuuZvPzgH3ZJaQzTocKm4hWKMt7wLi3y5QcBw8=","BCVDVWwyWljjrHU/SlrsQNPHOSbp47CmK5KluSDEfMA=","EIhBN+hmAL3wb4HXkEXqxsNPWK1oe3mchJ0tEq+ysAU=","JDqpp9NHjrc/xcEQezm+zZgIxuXkVTOjsmfOphKjvBA=","DVbNT1grVxmjMBvnhzFCzb26w5AcM8cfSQop8ZjPg38=","Ab+3nrNyZNZ8ErxLIU/XKNat+E0CoIFl7MmChoYS5QQ=","CCs4A3uWpH9U/qVPT4UUMPfHFnZstYwU89uO4dqnB7M=","HZLvC2fUapkd5gPIKRejK3sJEUCPjIqyg702/Bxiung=","HoW8yRky+coHs1mEpBxL/cokOhUUQeG3WMWkwK5roYE=","JeMPbYTamJ4NTQ24TPV3Oe2dHzVMjjqvzAG0eALFejQ=","Ee4N0wjGXtyIzirS7eyim2YA/68wn8bF46PWMYypjIM=","GPPKdRiP/1J0IkzeNsLYUhGwlMIPU9njpDUYluPRocA=","BbayHB9wgDKRG24NxOV9Ho7cvdFEECsoyGF+U7EeTns=","AOt5sHvL3y0iWBd7/RW6Q7xW2TYuSfE9ACOU9sY18g8=","HZY1cc5zE6FxELF9ZNRQAbNtILSGn/zuRO5XjSPWSI0=","KMRRROrc40X4c3i0MrzzDp/bQOL/z2H1uRjjrULM8VM=","J3ZTCZOhH7flIi7g31Bb5eV827Y1L/eFPmaAB3FL1xg=","IQpwBEVqTH5WZC55QCMIQv1Ut/vbjDN8sUk1Yed4/o8=","DMHLUZhqsaD2KMEtfGZWqdhJXbkdkOXa6PDdJk2fGbo=","E9Hgy9ng9CFibI2wndJN+SwnBojnAklSMdBXx2dvsd0=","HCta1Fz0GBYR7aZwYKBJDY1q480bEKFXCwC/C9Oibgk=","Je3BHTtebpaMqaJ8NAz5NQdE0okg9XYmh9LTHfrhQjU=","IwyOesP/Kzna66J4gRnNWKOpCpwkw+2CHq/Qg4PziaA=","KTfLM8kwrEvnh7bokOZ/igjMksFR9+Zz/7zCeyXNCx8=","KKOsZ3tvGazmnj0GBJVX/eKpJHbBmeHIGckHzkVoEuU=","Lew0Hu11JKJre5G6swAyM0cDjAEgbg94A0nlwsokcHY=","DoPJ9oxf60IQ1jOCHMhAvR+8vth+/96fI9RAPZuLA+U=","ES+yEYVZjnhb/w8PfkghKJIyQD+ysxtI5+yQIt8reXE=","H6piHwwDn9yAJMvd9MqBdYHG4/Jr3ieLE8NM1lG9h4I=","BOPSat/LTvfMMi7lV4eGBupbU3+h+IBEXGR+jRLJjJE=","GnDCAVvxxd+mN+jev491njCfRsN+U18MZEhplepbkGE=","Io9g3ltfOuilK87ez3s4MNW2h5/tfu2VIxxnTAFsf+o=","Dk3cUS/fg5rEi33bA+dl6c9eMgdFVypdT3AJfBB0QGo=","H45XLi4LSPm2vcR0IQocjfZVyl4Z99E7WomhhfOjzqE=","A6GDITFRwz1sWLZjHK+gwFMA913rn/lx+v01RB9crHg=","G32pgIKASKdJjN0rSewIvjutfUMnyXVLXj/WdOAsgoY=","KF3Zw73nw2GhbL8Uv7C1p42PTORDPUHxOjcuksNeIbU=","BvlS1m1gzRiUnsCKXCA3B/9FLj3zLVCk4iHnKnk8ugY=","L2hD2giPZ16nc6A3fs/O4zyWAa2luCVrSfLCJZq4q98=","G+5NnhaKxganPXmpkMWQkAASqv8DKRdHVTeBOEwo2AA=","DIyFwDINaRGrZaUN6ysoJdPjOSGkZSLlTMtrgG5V8ZI=","EZ/8buSgAOyLa9F1vJlxjatlCOmZV42F9X/iKUYSDVU=","MA0OhoHxF/tJGCf6EhASBiVOz+WnCwhxbRlQtmNc/wY=","BPQkwmRxkGCG2tLeVFKzFIqUgKZE5psNLGqONXIHAYE=","Ku6ghDvm0mNwBnLEJumCDBbwlv3q3ve+scQjwE7d3lU=","JwqgrlxaXd9oW8QytHyZburZ6x7YmiW+0rs1jLTttvQ=","C6T0L6Q7AF4x/i+/J64d8Bf/bRHyfPlSQ2ODrJAb0X8=","GJrJ9Y0lmR0QymIzsa2MxYPMHCR5lnkEqAH5LE2wiBg=","CsfCA7WwbktvVt5F+9nlAteWYrPvTBIvc/ejOD+1KvU=","LtSCvMtKfIp139MaRDt00eTvUiolBmA0TCGoMgpHjP4=","D06trpLM8HHc231nJB24IoagtTQ2Il2NbQbDCU0DK+g=","Lz7kp2cVs7w/63TlKJSP8VLQtpyueqow7T0lS6iTGnM=","CmZsy/pu0JxX9Y7iljQHI2uOvhk1cp6BFomzmKnde0A=","Kr+LnlUzeci/aPvGemfe5aIt+XOTZzFFIR0P6fXvyiQ=","Hg5KUqL+AR6vqs6D1UuS5thXY0tFEBAZWOfYBobuknQ=","E+5z9lJazFIKCYfBYeUZVyO0eF17pqAxyDV/1V6nVA8=","CU/ywkz9KFnvZsT2Jpb83H7bk6uSEnymInpsAp3hnhE=","Am/dQJK+NwkvoT4C0Ds8k9q7f7e7rPMSk0QGGQlVbMc=","Bgyw6/IJBnkAmNJg7QCnVwTojjM4b0PichVIiNVv7+Y=","CrD6jM0oCATFN9LgmuxMEwaxp7R5xmI+kSg2TZKX990=","E90i5h/16eM4f5BIgDfgbEjPnse4/ECy946DHpd/PRM=","JMYq8h1hzCd+0+7La1PaQPgkpryGGfgwpaW/hoRsHUE=","KgJceIjLDsaiM4pL5XGnxnvff33PXAd1t4Wixeo6DGA=","A1wf8HewFrgGnARKK/XMCYA+lO4BEMF6W75ZTLsnDhQ=","LyllBb8TU7I6ZyeRpO4yWiip4bId2wInjki3yP01TRg=","E7FsPMDKRwx1vCrXv9bL8LZpx2K/BBEBAJnBFi4mqac=","LTyQC6mp1UlPztXXDopArLaPR6C9JSHzgT74MfaQ9a8=","DOnl8x/rCo0g6xq6iQCDzDCSc4v8GW4Q24zDSzHxry0=","DaQTvGxkpS0Gi7xmqiUXwyPOLgDsNlI1yrsiNcMsk9E=","GJeuGiPfD5n4wc1NSAlYuVnTJ4FuannYP2TxHyn5om4=","DRFt/lNiEjaEU51oQYJadkwFPe5ttrK7XTWWZ2CiMtA=","IeJZUumPlhW2lrTNxUA818xDKDWo54rHJ6ZGdLNOQxQ=","Gj2tV+euIFpI86AkmExNoFAbVEr8Y66igwImQtO3RSg=","Gb0++gpgkpUe5xsxPBts0rAW8d7LW1HY3BSSfsdw8YY=","Jm78QqMM0E1nePUKP71cUdvPzvtutAD4WnoniuGE44E=","HI2Q2F72S/S+3eYJlX/03QB6oF6yotBOB7AwE9fJC2o=","AqwG1M29MIR6n84URyrjIOHzYlJocifggvITshnnJwM=","BSLyybCHbSc4i4tSpRAC5f4GafM9oHAU27jAqOKehc8=","Jr90RiTOV1RhxGYnDDx8sJ71wLg0LYZZhf8i0XtHI5s=","I3UQD4aPBuxhTg3tbZn3FKGzFZ+BBJPIRu7CXMLfKFQ=","C/RhFGtGs+c+Dt1JNpifQEzqH52aBYKXuUzerHdYMlw=","Dpg3btZBQl4nFvrv2O11RLFzxaOmaTYgnkr2Ka5nccQ=","L5xNlgVqE5HYnyhyCiDQoefLWaXJOoff5gabX07KJxA=","GS8gC/O1VbuseXgZuyG5kLcp1lpNKKJ9bT8A8aAqojo=","K/iYS1YmrM8Qt2Z/T9zNt8tgWgrjTW0gSsHLyAy0kSY=","C8ohwSRkJHJEsqGf0w/tZfjjq7+DNbSSBcH8wfaqwao=","FAeNTuEfRjRxpJUWw8hfmiZvjED217H4ax0ZNbCfFfg=","C7igTs+fmOFpfTMOki0Mir3gAAtQtapXxYANUt9N4BE=","IVJhIcBeCaCr0spu/ltC6/fpEVOCIhyqrmKKM0kXsDU=","APakQ7Dn67C/d3URUS9mxeW74ETJZl2WEJAY2XKchPQ=","EAknUelPtrXkm+oVigFL2ZB4VCRYrxS6TL2SWLis0jY=","ApOJkD0NPCmhc930UqZrSr0278ZCywtX2PEIGdXA9fQ=","K20g5sx8qRb1QmaHJBedjQ/wdBw9UfdFReITkRIXc3Y=","KQC0J3+zoP+DtMWPrHmohh4wXV6zE/LPV9uwWTkDZVg=","EK/cAGbdqbZL3UO4bQ7WK5s5OAB8xQ9WmSUCQM0u4ak=","MB7RVm9SIOF/vUCDpXv0LBLBWmZHroED7conL71fjxE=","J/GDMinDpZmGhpA+gkuz4+ELyWnxNCqw0C3mNf3a/xE=","DE7zX/n5BtC+pInSAcIQxTq71HoVGp5O+9uSICn7ZK8=","C6Wrkkavcjv/RXq4IovgZISvPjVF27TJMspJEV+VfSc=","IcVyvUJk2CHF4q75kwBkmciLMkXO6Vk/AsJQFJroesA=","BNHMR5UAhxkyb4EGyc6aSw3eT03gHSQpojURsf0P0XE=","CjeffW7tynxPB7td8tjqDdh/Hu/irCJxNwp/O+JwZc8=","KNrvfTekPyukQGXyITkS6rbIxg4/dWD8qZC+D/RjlyA=","KQbomWRYUE8sBE8FPErSTTWw4O03OyfgLlI1o9NPZcM=","Jgc4s9CnRvsGEtym21O7loxVIhOy+aE03zQbrz4TecM=","BfF3roxu7IuXEs+gQndmkOkkv0IkMAEe8nr4LfCrsjc=","JoEQJ/RF6GwZLorjcdLoP7c1YcjP0Qu/Wymnf1ax2V8=","Et717lnBtKlrUKs942F1ZAy3A2P++JmV80km7oS+UU8=","BptYpqpBmUoRzH3TpCj2xM5iG1sGeT9elbQDTi736bs=","DbsWL84YEr8qFq62qsfxc38tJ2YMpM3255Eh+/u2xeY=","KHuoSqUIfYzJ+JRQ8f45HMOoTyiiSyYc0dzasDmjCfg=","HoeKHy/HfL4jKup2g9RtiZbeu5ywavADhJ/QmenFBOk=","HI0e8kbddfQt4Txb/gacCNavmUPNfyM28xyJZFbLovE=","B08aZ4ywKUiDVty0d6iDA9De1fLV7OVHafFavBmUU4w=","J2blWBcqxwsfPdhfTIBRe6bhhVa/UdIPaHtmnngV1H0=","IGNjU+KfrOuu5fBO3kL8Pq0NB3J+3nqArxxQXG/11TQ=","Ee2XWqPT+brB4LqxIwQWcfjbaV/gdgH+WnHg/MqRa0Y=","GBABYEGP2Fjz5P6NXWuA4u83Zhi/5aVW8kvDJHCZxEE=","KryhjZs/JSLiHuV6HGY07BJ3TQQeZe+EMCJM8x+WDxQ=","FmJSQVM8WCubV/bglj37uppwJhOdqrMXT75xsNlSLI0=","G9PPG9MSSrqmJ4UP93pneOjYLQfKJGVdlMWie1fHgLc=","CE566KUVu+b9g3DnwT59CYNcN0ntIcKELnxGtL+tTjg=","AQW2T9sPApiHMrWOBtuACy3wmnGltaFlrSAR6/SKZEc=","BD7UNta5r1Z6rH4kIGE3+qCG0YjoREyr1SNJg5BLzvE=","JFHLel3sH5P9Kz+Ll8Sx3S/OfIfQqSyfaZvFUAMqCns=","GPN8Yk6W75xJTS8Ba7HtlW75UfO1dCCkbHFgvfqldsE=","G/hNbXDHSMzZgcIbGdVVznw4QfNCIMEHl6929i4liYA=","C/mwUfICHziilOrf0IEfBcCIUnIL3HSeH5picg9icZo=","GfH9IZnjqsiMfM192FjRWMLvEOgjbSzWanCj8NGHmIo=","GvnWOs5tt6iuIKBLd2+jneNLeVOUIxIUMX8DbllU7qQ=","GzotCNHDdjt2eLnZ3h/uEM2oCTf9fXTyfW5VA4b1RD4="],M:[["Cx55fu4/FbiM46H6/siNodYymsPDRxLbVw3ohs9WkJg=","L+Qp24Bo5huCYk8ldmJzzZ/mNo/wl+q5eqoJvkxjDic=","LnUIZ5QkOQgzZdIf52DH3+yeNZPGfeEqQlXGsBZItpA=","IyN5halrF3/3wBSGqw1gPSmZG4Mkq9awfbuW9cIboX8=","FczshXslk0/9Qpr5LJENsx0A3Bw/uDdFox2BMepbqoU=","FxAq0tmAQ+VQnnbDMeayLV+2LQdHYIBqpnV2RmDrVtI=","Ck7Kq96dHqEcgdr6jV1Iab7nrQv063g5e3G4+YnPmBI=","DsGCFkj93ESKFRKuzIrDdxSSOYGUD1VCc3pGjU2IfI8=","JVpJOqS+zZ0TfrdpQcQSB4TBIz9sX99dZcCDKvVD5BU=","Eg9EZwMBsUNSSSlNmDPVngFoKvTIZYcZcnZ4/Zq37y4="],["GruVtuMyQ6BQ5WO1xP0FneVRPsKJlKb2DlfJjTvI9YY=","CltgTJWLyQBxrRBhixdyWZ4Mjd37ZBEx/vOdqlijmSM=","JOgt9Yc5U3krrKNFt8GfYQOa3rEZBZK8oYz0+QfBpv4=","EOM0nu/ToRJBfhEP2egyB45UtfRTfNAYruPfu5BUFYE=","FlrevgDHugGUmQGMlvXFhw7KVnnJDIQ9lScYSlJfzKA=","AfuBIY/u7fTn4OM92Oy+YtZca31CM/MuBzVx/4YticM=","G+KAL76lEAOq+ugv9EmdEVg3exCPiwIMgrhGCo1gOvo=","BBgIHejClYNVoeReKO5RuixmytBINfT72B5pbeY5h2k=","Hz6TerKfOojG/kOGmKcZilIJqmrJ8UExnzuyAef9ZxY=","ARPpaHabDqMst7X/cEhKrMlvE9woJ6jl5hFpXgeX/Dw="],["EQ0hOoNkeKowG8H9Tt04hQfYd0Wzq/ulvygq/SH3JCo=","LN7gxjWk/NlUnw+RtPSptiiqcxni6qCUppOzi1z5okI=","ANYPBYV1XUhXe0ZXRt6OKG5JklFQ8XhPKftrltvY8Ow=","IWjc8hbYNppibMxhRTI2o4nQJRnzBS6H7/nMuKopnEY=","A1MN2WLvI9wW95sowfwd2v6UWL4VF0y7vzqAbeX2PO8=","HO3G1OFHZ0HBCZVX5Y5kLEKJKqNuLQp5P2cHgaIbDb0=","JpyME5pPYeFr+q6ei7scaYCMkHEIOwoznf+eSQS0Q9Y=","Dqe8UlA+IDnSd5EuAi/W0N7VvGh8b/lxlJdvOii9MMY=","IYC56xVuszytGqdQ6g+j3b+kEnKW5Jf4bmRB4FKiO0U=","GM0UcUMK2tMeRbUpSU/Ip+MZvS/AYZyZIH36zbZXu/c="],["GO2y0QW7U7dorgE3hQ3C0r9tEwOh+O5Krfdtj4GZBYg=","LJYtfVSpjDqCpjjYyCRQgT9CBxoXxsBfRwtElY9X7xU=","H0lekwFDFJiNrOXk6Gf1EJ4J+gD86Hkp0eDs6VpEk0U=","JikD82rPDcBV9hA5ffB5T7wwkn7xhcY1a8M+XDH6758=","G36SKz3VA+ZEGtqWbIs7p7kIyyuYtfvh5ML7mCRVuqI=","GoiuL94SujLl9OzKzxHCW8Fjve2qqIJEdMrlhp5ewg8=","I0B3KCaccP5xKwIZFQWdyNwhJK5kjiy1Sfx2NivCuX0=","EqsxhibVEcI9KLqp+1tYAuCrlePLF67bqiX00ITP2lc=","HMadjzTuh3g4lQ4gqdTEvT6ayvPWk6pkyuBPqiJaLh4=","I9D6ll6SDfxTC1JnCx4y4tX8KCH8kYwIRKADtxQYJa0="],["HlPpLfbFPs7EwN5bB9xMmgxVRfKrzB+r9My4SgpuLCc=","K8dhGF9Z77e2e88dPlTaANrqBn/knj8dkzTlRwQ4tFQ=","EkMx4Oyx2YCKHZHvqpiVCr6TDEb+5aMNWtB5dqW8AmM=","AEaIdyTykyGJXC74vAz1Rd93PAS6oJfDUqQWU5XMp4Y=","JHRgrUWAoYY56tppuQTJGxn31Dh0NXB2lsQLrDv73TM=","JlQSpOO1Vgq6UC0g7YM97/cHt9QlujwJ87Y5K28fQzk=","Aq0G/J+BaEVC4EWKrhnAp8GL6U8d4/zmo+XSM1oB6Q4=","DR40GSND1m/BtlkctqOwYCsINaQDxyJ9vL1y/YAAxvI=","C1ZReYh+4w44FjHY5d01fHDuLrtBBhfSMh9thTf5iXA=","LqazKvN812XXKN3vowkYkCoh4ZspFACFT1Y5PFbWlGA="],["EPy4F+EPafcHTmTDk7gHzd3zPISotc/jP0S3P+GMDjY=","LkUNH+d3PJiJoL5V5ERTvMhEyUtW/Au4BuuZgqxVNCg=","L0Ifz1TXfdOJMM1pB2+bqt09PxlHNxIVpmyJTWN+ibk=","EydggdsBLR1PS33S2KL4pRgNLswzhUzdNfnOsHv0DVM=","FE1b441Exb+PPFc1M0+xoHwTcC2Grzm6C0Ig7Jp1aKI=","EmkbWZ0y7cSK6Zx6c6vVnlsY9L93P6EFHKvSxJqqv2s=","BXilXw/aKZCbn4UMPXS+ZmjkRErGkXZPFkSmJkmCGOQ=","EuOwSSSyz25Ae9JrPNR7ymHW/89++hrqHC4NikneZL4=","EWKlbtO7u0tnYKFqMAunICEwCG2k1ViKcJJkI/+MJC8=","AzQMrLBNWoVhTqzEvjNSk4uqP8cUwldaqdhfc5ETxQs="],["Kx2MEfxlLFk1Q7b5gAu30Mk3He25bwi7vM/9xsxE25g=","JcD4fJRvN140H3L2qN1jqU6G9K0YJxW8/L8rKN9rSg0=","BUOyvGbzstk9TBiCA53bN8cMC0N6wjrFu5ho5t8kSF4=","LdEXIYU46KywMB60Ct+iQ19b/6gCj/Uvlqmdd/6ScGY=","JpsGsx6J/xMtrrwgDv3IqwaBNvzmXy/FWh3Lk5t/xvU=","INRAHLv5KHfs9hbX0oVRywrsVS+ulRjc+SGMOMGgvJA=","LuLaJLf45wNftzsIw0FIM/+jjhSx+qwZioYKV2fS/u0=","Bt2J+r+SVGhHucE7Oja7x+Z5xbsN14VAPz/0m75hyOc=","E2D3GQNFcrWUEMUptipiqpRWVlRZfkJ3nzNADx0X1lI=","Ff+CfgNMAqkHZ/AVKEDn/G25g+SW6gUZwP9B3qgYBig="],["GfRz5AwFZ21fjVHhEzbpxlyzKCjDl8yBJfHcZntsrfc=","C/5vwI4qLhuJEa4GW5hTiPzRBaSQpKuUOyVVjPPQVLY=","ID2e5kYqWGkU/n2/wb+il3O3+bPWOupBIMYBEpwWZg8=","G5Eqvy4WSa1INMpbKjgxzJwgfU0I5L8nSnncqA5S/iQ=","BiyqPJ/Tm2mGT69wHcikWIVxyzG/1cnDxZ39l+mfcBo=","E4wDouzqGDy48mXuzX6TJ1sLuYKXwVRachl9xt3ZM18=","EViZWfwkkykvtsUHMOdJlK181tNTPDsApX2ugzzHAeU=","F7n6zb50fXxRY8oA47C4JdAS7UNXYE5xhXUNZ3xrNX8=","DGA9A/koYNqKaMbcsZJNGkUJmupQ8aNi7bLyp93+kP8=","BdVvDIRNFpJIUDE15N65/9YynVTPzu1LlH14pWhoEUc="],["D886TZxsM5LeG9/iXPuGgX7LgMUb4X1H95dQIB8fzQE=","DBguQ4JXxK1+e3nDto1gmE5QesWXy0fcMdkTp6VA/Zo=","Aloey9fniT9kbzXT4H7pl8lDVHN4hP5sJq6BVXYNuKo=","IBNf8mOGf3CO4CdRcMyXiGicCIspM6Nhx3XPQwdI7x8=","IOFg93KZii99AGTH76FYhOvG2LcYIc1TNuLfFDQcle4=","FQ3xEpG2gOO6kloEccf7sw5wSrS1VOpdjAe3CyuWICo=","F1cgKejolyAtDmXCFyxXHUuRyoVuetPxGK2SISe4cFQ=","Cv8VZQuAW/9vizUV1eKc+RS3NJr4kk55YAn4pPG3Jkw=","GpGPwRfZpkReNj7lgz3AFBEDS5U4TZju5HrolvkqfWc=","LlYYQR7+owzH3jENSHJZfQh8HhIuAuuxF9sMLf8E/Aw="],["I7AtAP4mNIiWc6fQRzb+Fbn2JlKxwGJqGa+NYIXXCCI=","L/TQuHmKgmZ3k1M3MAg8JSI9WJzdB5Ni8ejC4B1UR2o=","HYl/YOh/zlzu2Np/L0pj/e5/+dzxecCOBenlzdgjisc=","C6bUzu4hgtPyqy5KOtCPwx9/TMD+yRrVPpK/ito+J48=","Bc6UuOmmCyiUdxBGHYfHdXJGJmro+l068+qBd2tbjAc=","DDRrBGrwPLkEjCk1PhEH1rdeWQuy1CLqg8CaXaG6DGU=","L7+Mxux++zAQZCPy5nsKqUAzYOVuiLbFy67DSoC9x/Q=","DQZOckSe/BHR6QuXdJ3jkJSQuRK7H3L1QvQdYqsthHo=","AqiODDVhdmXzzC/HfZCvx6jRABxx3rzyczygxxoZ4eo=","Fe6z4FQbzwENoMR62xL231QLl01DnJPhnqTQL5l11EY="]]};_9.default=_default$7;Object.defineProperty(poseidon9$1,"__esModule",{value:!0});poseidon9$1.poseidon9=poseidon9;var _poseidon$7=_interopRequireDefault$7(poseidon_1),_unstringify$7=_interopRequireDefault$7(unstringify),_$c=_interopRequireDefault$7(_9);function _interopRequireDefault$7(he){return he&&he.__esModule?he:{default:he}}const c$d=(0,_unstringify$7.default)(_$c.default);function poseidon9(he){return(0,_poseidon$7.default)(he,c$d)}var poseidon10$1={},_10={};Object.defineProperty(_10,"__esModule",{value:!0});_10.default=void 0;var _default$6={C:["B1KvPG/cyvOGgnZoXwppuXSeFwaoKRe2TsLvhH+ARVk=","BpUD1BfiX0Vox4WLqDNDAcD6GcGzSLx+GKTBrOHRVBg=","JcGxIfM/TPezCOxGMPJ7YD0iqoHKNZXoAcX6fZdwoJY=","I9a1UUW9sygnwUVq9Ne+TC0hPoJcHS8Mn/mbInN1H24=","GzV7zj7z8rdq/CtYBIBa2xTPa/N/4jV8eap9azKsrso=","KOxawIgcHmQmukmUCYlKbzwnb+Vonyw1yQJ+gJRId9k=","LJhiUkrIoHtH0hHJxQTIsL05jQKKz2kOS47UAF3Qbu0=","H25vCsSut6UjQ/MEGAeLQGRM1D4pDaC67pKJHEwGWsg=","A9s1F+Iz+KdtIbL7I8hfp8rMV3dp7eoJquOUB7mvL90=","D8Mz3KQYPatHnFli6wXuS3morG4Mzp6bCiFCJHv9CHc=","Hu0oGXioOVwEKJuGGXZzsPK2XhoTUmRSfiUKXN+ZrKQ=","JWi99lEQNDQ/tdXQIeBS0wgJVP7jV9yjb6XXjzO1vj8=","Ha+t43TmMlHeypcFkdpKKFpj0Rz+ZGYfrdmgAd/4IzA=","CvJceBq/VvpM1oM1gOl8emDqqX8dwytiLold86aRWzk=","E1AUUct9Pgzzy1d0H76N1ZdXyTZ/zEj6Ed6xNUJ8XBw=","GXBF/NzxW82yR9j79shcgPLQZfkjEIVZoXMNccc+Vs4=","GjkNcoE3X6wkm5hV+MZ6J16P+KCoIdGzBcTNsTE8hmE=","F/Bwb34S+wItFflCl8e0WUd1Xl6Ex7mVdlm+HeZLc3w=","Co9fA/GdSXmbb7plDAbkrvJR/8dSQ6jXruiSTVY/fkk=","JMnmw19PgZ9bwe8mV24W0sfHIGoFmARKzwwY/FBC8OI=","ACQFynDVFVDcFKv+4Y44I7npeQcjMNVHEzoUsl5GH9U=","HqtM1W8UdLJw1QKUViHZPkRmPK+PHTHYaxVuEH/vOMs=","BmuXUPc/RWHt5Vk5QH50tJfU3u9Zi4c8S0ofMq5CXQA=","HuPfpZb12HAwpsnSfWHdF1snEXlAgjXxO7P4TqKOekI=","HqlLmsb8G94p1Yk/3LZg7WH/eyxltjikBG6rIXwCquM=","ExOINR8HltR1POVk51RZHLG64Cot1Uh4KBrG56PAac0=","GkWgF/2+U2GaKdjTHyfkCPZL4QvwXOFskK89HxOIai0=","G0oNaOVDErn6Z1UMXA/w2I/leCLd351Y2dIhUFeqlK8=","HUXTaewDmZBbsCndn+C5elztHSnHtaOdo1itImaR27A=","JhVMnFHfgFl0W7LZfZqbjMjz09gT3Er0FK3OHWmSDo8=","K3SK09pDxcuUEsxkMTyNRxElGnCA7FtZIG56yMcBcw4=","F6VGj9seX9rNnJ/Qp/X7dW4F8vL7QQSyy0jYMP7RN1g=","Jpel4iVCEj8JI7hrFSmlQF74Cd4D7kEpsrruXLO9lOY=","CbB61DNw/Ev5reYQ4a3dONnZYuhNjdsQnv26aZFt1Ik=","BpwZS1ufIwG8SNY2PI5a+kp1yi+KAJ4VrUyhGhfIGh4=","Ghl0rUGMs3LVVeya8PNIuXKc3uaB6w5EebkLtyD1Qsk=","GKnY00zyxjMTip656ymCDIW3CYiVgm7N8uG/BA3PAoc=","LgVUg53XCkuZmP2RUyf64UaF7KYj1mJYUYbS8SS6i7A=","Hm0CFsi2eL2eiQzNctI7wmeUith/qyWupiV/jLcBKAM=","CSCTKmxAWx7oca4XOUlzHmFpokRC2PjJ7XnMx6JKSV0=","FCxC3mq//1gFT2pL2o66X38Qzzn76vuNOa7zDohPo7g=","FBjt2I5k092tA/M8oJNhckRLsHEtZGqLzmey5FHuDYE=","BcXc8r1eBOplZU+0c8TUaS6ZWKWZmr1+XN1wbLfggrE=","EURkMR/foR7sFm0gKu78YB5NFpWeyTap6PGy+X/TXd8=","IbcTsP2yOPOwU/bVlsrwciOyqdH8ynWDIaHZF1wyfvU=","Fe9nyuWDilC8Zxpep46HtIvJjjzXv3bV+gMwk93JdYE=","C/iJF8t8Vw9os5Qp2P7g/P5YMwamymkzjDSQJv5mv+k=","GIHwEppkt/hhCF9rNmnc71flaNY0l5gngHcLS8O0N/k=","IFXrcypy03ytqD8E73QXhTaNZI0Jy1AUJXVDChEOic4=","GbhIwzs4drsWiEbROJfN5rC54rKZVDlbOZRqT18m0AM=","AeGXlyMpZM1fJq6KLgS9ez3BvaJbVB89SgWbSPyVLaY=","AouN146HEuFySGpLJ4rI4WaxmWVSx0vS+kv7y6ORNFc=","H7HP9zGW0TTDA1naFaUwsaV0GqDgV4ip1PsgMq/w1YY=","I70zAfWb1lUiX4XEKpRmvNfGSqk2N+4nrv7N8ogyYDk=","Dira6yrH1pROKH3HyDMBUxPT8r6rol6kwdxvDj+8jjQ=","L10IVI73PWXChTF4y8vIpwxIADwNE4bbcogmDSmlLQo=","L1XA6W3nSmH8l03w2oWxGsVEtchUSuWa12y8A4ieebQ=","GIhfc5qcPf7tOc63yO73f9Y1rVLjKU0+EmqSpkxaRUM=","EmfKzpzsPBqW+9pfIN8wnfiPnt9WhKBb/KyxEWeYMII=","KkXASERI2jGyU7Yy85w9T2xq+OPjmd3Tk7ggzexm+QI=","ImAnnDMlg6NgEZc6p2JtToHWOClnhoqWQ6duU6KyUxY=","KOyCRGrouyF4P1TNTa8H4nm8Dq0E16MTdp9mLI50oOs=","FuE1cN7/s76+EYlYsthkcFeMsRKWm8bu86EyG+/aybA=","IojoO+t5RZgHy3dAjJu9vdB35iAnmYb04vCz5frKq9U=","LbWwbxECtyzkmUYITXXyEJrZcHhagynejiJaQQ4kM4k=","L845oZ6hFfOpFwQf2yZ8G1EDtYh+XWPEju39xTNpl1g=","LGXvBVso+0FwfDJKNqiUxq2fhi/R+X2lRFnF2wvaVa8=","KeY6JMkSNdwApncLnlcjWMGKkGOjQGb4tvVmg8/0j/4=","BUIRxWz5ze5kt9qnZ3/p8jXitcmcXYtV3iDZqmEscsM=","EI6Og0M/fLFyhyODft6U0HMDKrZuLg+225eHs5VZ1zs=","D/m/tBkU4ZmlU+Bw7tlDj/8DPNMUdliRSanmDVBYEU4=","BpE7wuNyMNS29WtEaX1vgEGNfBGh0g2EhOlbBn+TW/A=","MA07dzuaQe+Bj90SIC9JnV2945U4ioHFzjvDzItIgJk=","KfmyiXIf4wAZN/bEh7sw40KzRMcd3Q+VfQLZKV+r5ZQ=","FN4Nu1Cgqv/7OZR2LRSWz1FEk1C1386wZQZn99t/M/w=","BFzx03Yp3ukon8vkgjUZ3rhX72bLOcxmMKOsYVfp4O0=","Hn3kb90jxq65St32y5mYVjItOtbVgDzviLZpPtE1kKA=","LAM/3FcjLmhavprrGKWVDln2ZlmKCpAyr89Yrqdyk5s=","EX6uZf/mY0JBJlNI2YRyB06Jyr49j59Vy8dN29mEPks=","KYjoGptdwiyLPHqdATREIvJIM2TBiZlryrB5kS0lmT0=","Db6lkbZqJEj7+4htELiZ1lb92+pOZmwPFEZeCcyt3/U=","Ht9CS7bKCKyMTN/JjW0/0EAA7ExqhijV4rOxJjI0dV0=","IUMGwBBfNj1SWeIUHpe32kG51RFQSNGshIP8aIpwNLE=","JC4AtpML5YNapQJ0k9OxHjEYdyZacCEOASFjKEUv3Jg=","KRVNASjMZQmJ2ruMoLGN1b6x66wPY/pHvpbjgyASGXo=","JdItVNnILXz7icYapiyhUFBqK/q10wDbeE0l0mCCfQs=","LyPwuimfXAl2wW6zuIMGiSYShzkj7ojqotuMwQEI9cY=","C3Q6iRO9jn5wnmgxGjWF77CWcIMVqYEgOfIViZ9ClMA=","Jk76AJKVRstOwwpiHDxvZhMlhyhk/9+E1a22Gvjbs9A=","HEnXZmOjWDh3YtII3IVADnrPG2X7sT7bNG3x8qEKzjc=","L0ByXR61GK5FYu4lygiz5W2sqlEb34LQmfvu5RELaC0=","JlG785IV1tZjKmUqzm/1EYVVrP99TIvn7j4gb0TufAA=","IZjzsKP70L+rB1eNQNf6A+UHYbqPHysBhhPWWwkfPq8=","GNTEaZ99AfoA7a3EPI4fENkqT325bC2ROb3W+xH+pAg=","BZ7bxVNJHsa5QjPVO1MopdJLbkn0VxkLz9BipYIpV8w=","EpphYUtOnkIeZmfaqbhf4UvqqCKzlU5VEohWS9KxRVI=","Liv+TXsyNN9rYmiL3LLIdnWX6j97d5L7RDd+ceHsnxY=","Afg5fP2OruukeY6YY3N+xUVy9qNV7kfNuCen8g3Dick=","EX25zJFA5GcLx05/06b+mbh+F4HSrhkdARxtZOAtz4s=","EeDM41to3vfe1VIvQ0xIbyh9sLa648r7Ix3PlRWY+J8=","Jb9K4wxE3fyHAOI2mu1/VomAxtSOM7bGNzfIL5QrkjA=","EVP1wW1WCKF9z6L8xf+S0KQdD9E4C1jS93wFgzmIb28=","BBvtOcKa+3AEzumT/CImBc3f5kH6OglsgBPzi1zYW38=","BHzVxbDCpgSumchCVA+jfUTmq+w2V2maEWuE/EKtXT0=","FU7yXmcUhtuOiCGBozGCba57lzny62yPdIowZJqkGA4=","G0g+dPQcJlj6/QgbnLdwnfKImZRUSWoppJLu5577liI=","EtuINC0BS1b9v5Pb+dnAghlss04M7d/soKQJBOK4yy0=","CUQmP8rXY1p+jt529P46+yBc+DX0KpXAM23mxC6lqZA=","LnrG+p3/r4Op67aWbvVGTkQpuYt4uPFBZcUBVGlwtzQ=","BLygehW1hc0neQdoyqOC6Z0Uz/j6V+L9qhFaRy3U7BI=","CiMKtIXngUaP2/7fMkE6pADIOeqFWlDxkWsDxnYcA0s=","FiHcPIw9uG+oMFn0o8QSmK7I7ZPEnFO90lhzObIW7HQ=","G05LxPAo/e0NqlwaCU/soNBQlPr+vWYZNI4d2fzhaMo=","GnOeVcpkTpyg/ygGIyCXfZc4s1cof+bYcn4Q/0RSx5k=","KSgA6EUqVmbNArF1aVD4BIw2eiQ5reo9lC7jwxhc/ZI=","H6Nx2RBrgapmTBH1DNQdJIGpFDmjnA+hMR/8KMRITdg=","KnhpQbirYxpFXx8L270+uaGc2l12xGO/9O8SIAvWzfE=","FSHzA/1BUJ4SLWt2YdYskR+67u6CH6LhHinnDIQ/yFk=","JCr3oQfMe9nBxbJTfl7reUxneCfFZjQYu5osnc7ykVc=","HMMNSBO7/0uRdAzIuiC9Bq+p0hfqASzhLRTgJxMB530=","I70pIrQlr02L21h7HMCMzf8BCrAwQxZkiZpKMjspc18=","FQ+rWYbu9b0f76kqq1ACUw2fVMt+ZWM81cMQVV4LOQw=","GLQ8sGS788g/wvFYrnhaq8cw335cauO7yu9hO8CucHo=","E7tC605zeHBgiJvhdQGLjy5aKKEYHXd+KqwcmTrNZpg=","GribVm3/NqlfgFDoQ0lHQLo0zTs10LfJe9LXBe+EKrs=","LV/ZDnF9ivjVsQ9zhExspQ0AWUCvCVRt6ONP+ZFDX7Y=","C4NtDVgZFCGNsOk8hZiziJcqR5s1yTPMrZhKC2zpS8k=","AuzfsVD6Luz0w0x21W6ymkSpQAOZb+PH+51k1y01Ljo=","I1eNfV7I7TGy1+t5RWTTiQJf79AGUhldrRIrQApRlrU=","HM+4tNk+XgjHxMTzBjVwb8nfdZN1//poNaTBwn8iJ5Y=","HAy3NTRhZLqTMIiB1Tb1iIhz1EQeMIN16Oa3OKHAz9M=","C3Plt44NI/d7D9/QAXOBkcMwKcBtu/b0EHdPJC0AI+M=","BEcVwA5fy5nENRicHsJLPOm4MRQh9bHzhISrdpLGxjI=","HTs2R7jqNF6SzChvG8GLbqOzqFUdC/GluVIUzyMQ9wA=","EES5FaM5olgqbn+2pm8rl71hgvmUatoeXT92TOGrDOA=","GBPbIlHj2QTQ0wu4a+LXxYA6krhzdd/Wj5dvRiKlFTQ=","KAgVL1aFv+V3yU/KnXCWLloI4Pb82Nkhgt9/s7Kzkk4=","LalAoejImm+YPj+Yik55dZtcaYe6EfP1HZpT0/0dQBE=","IPsdhpzRksh+NCVOS0jyIvmXtFJqPT+cn+31HNFnAmk=","G9Se7qrDkn0ZgoKQZaTbQmmMD11f68/UjsO8EFmVnxo=","E1ESs3RIBkIxG2sUJwTyFoTdAk4K1VrgJyisMiaJ5m0=","LJ4kXHGDLGkKfKPbHNqtzdfN05VwvtwUqHrOX3Jv/qw=","GjGaWrOyqelesMEaWhK3noVpKRhqHuPrKHKthr5z9WQ=","GhI8MfmdXqVbxC7jIrfAcPTMwfwmvs6fTz60S5BROAg=","CyP/3qBlyOdeoNO/2Wbf8TbWYCr6lDKEOVkP8+IA73Y=","HIH44BSrJbjtecXhvb+Gn7G+Hq7dh1p1OWeARr0aMxQ=","Ab/AkvRwHUyu/27TJgXMDzVD71I4WL996SI2M1SsM3A=","FgaPyJsziP5b1UGnLuvyl2idHm+XiSXe7VbyrabQH+w=","A72dwSHn6YtUlEG88HO1ZNWp1A4wIN5NGnEDnvJjAzY=","HQu7k9nJJ6YJ7/dsPKlaxulOGJPIjvKlRPtfYpXacsI=","IOni3IiupFiD4T2yBiIuTCHU6OuVQgLyuQwhHKyWycg=","CmnewM2KOZ//EZAqNK/poTMfUa0Tp+5ace/X64WU2uU=","CGfJEIUNLyMPfloDs88NwDJk1bbyZhEFtnXF/0FXXIk=","FFYD+PtaDPVr9xueb//4MSfC0Ls2jeI8afx6lMhExAQ=","K4u3bc6v3UoSvh/JQ3udQG/+IUS3vkbZpWpBDRfadcQ=","CJvFzg/UHZCxqmWd54NG4F6sfQVPH6X6fbkcB/s/p9Y=","J7rXi4z95HomTLY0gbWgOI8TOcsh8swykF2C/rTpP5M=","BwQ+5wPSsbarhkH8/67NEHvLzANKvP1G/pZ9hBf9NyA=","BPXM30A2u3iIkzX2hjP+CR4No3DS8H5vhU9nBJ5UwMw=","FbH/4SFH7nHjQBszNeeGgcU0vMWPqfgKgTBQncCCAlY=","EJsFSO7wf7uSMOkrTPt0QYc6RO29Jl/BUtZQGHg81XM=","DwfFiqclrrcxtq8IfnxczsWjeWrXTIcqdCb763/s6H0=","HRNC3c5uRGn3CpSM4QkQjTsedbNzPOfJojekxeUnRRQ=","BjW+nn6EQ9OyiG0VQ0TSQ9qpV4yCo44lKIXE87sTixA=","G9SSKsdYwPTFC7MDW37UtWGK0LcUq0aLXquYjP2MKVk=","LhoOb4TJM0K01Sn4gYRVSXbiHsYYDFgOSlhjSnt0dZ0=","LxWJvloSdpikeDukhyLkyakIjHye3Zqt+RUrndg58rU=","Jz269kXxGFRmv8mbZ2xhh/hBW5+i4d1vxkNfCj7zVSY=","HBG3bfBCOFzrbQ/iac+hUGlZGeBHtIB71umjzUtOCiI=","FqCYjUI07LCQ8J22veea81OUybPM/GoLtETfxseGc1k=","IV0CVzCtoXiOICTM4n8qU86ASpOi/GBFKgz5SPsDqLM=","LN/bCEfegJntipQYIrFe+ekfz2QyWvIgLeQurJK73yE=","CUbb6ZmN7FQdo5qdjqVEp+RJ4mpPmqh8KMfi8RiWE0I=","D5WJgrQ/j9wsN4XErD5jHVyJ+5TgxySnplwcMhi2fkA=","GFAhsZInSxthlSrSGcq2Gsw7Nv02GIobjBLlbZmMXoQ=","JNVrTVK0f5vG3LetNT7sknwOfUISoubeDqxEohAmCzU=","EJjVj+e1NSPu6BUQsIP9rcoAS1SUaMvSAbCjHIt+HRc=","JKmbxISBBoOQvEgzDBE7eSHM/wKK1QRYOXbn4w78PIg=","Eqf9Cnpu2cDqyjRlrlV88xhwUUb3L3tOSrJJNNu0xnM=","DUKt7kR9aupmNlvwHltgfFKEgImoRdH8/66fR+BxaxY=","ANXRCd4lefTlyidjo30TEJMN3e9pwgI7Fn/+pUsMSqo=","Lv5+dEovDkUGk1B3MdnASSoHfRlKAiEAIqzFnn6kadQ=","HcN2RLvs3CT4W3E/0Zr1W2/K0xG3e1/jAwqW1TNLuDM=","JDEVVo2jZILQBACBdqdUJ/2jZsnQe89Wx7D0ghwmN2Q=","KskQbl2C1OIAslewsiLLMJVzJ76umDT8QoBGoPWSbnE=","FrhSlEVwKH1uAsNaYwA5JjWCDOSIP9CTgmD4VVXGwLU=","Kd+kABYbZh9SZLQVhGDUd28+hit7gjURlDD3Z4oqKnQ=","JZCKXPscIQ86/Nbo1jFzptedznU1rtxXqu6ZQybDhrM=","FID1azpo70Hl6kTf8lSq3dvxnVDw6ZCWX8yJvcO/NUY=","LBSQ+TNeFNv66sZnVZX2sQgHvPo+Sadu/JAy9fU69bg=","GDPwzl3FKdNXan+0gdj3D6biFw0xwQMaJVzYAPyyYrE=","JtNkYaHJ86NlNZDoJzVU+B/VHMQw8lvuLMz1Xi52JzM=","KQJ/D7OBMY+OrBSvJPduFwfca+0nEDYiVvFtvaaakK4=","Ckzejz1C7Uj7Pap1iQNvSZQXbN8HouzD2vtU+dRdmwM=","H77BL+/+CInMSjH8rn2BnOxIJ4XhkN2iU24sQBHahwQ=","GybyOMe7hjZ4K8DuSKkxowknRoQBTOcnFABdmLjYxmY=","CP9N8MAn6IgHuLblXmv35kP6YMZtdKM9yETsHDRZjuk=","IgfBMY6VnkoAKtUBXTgbKZFd4iYpphKhtto4mrhvvCQ=","CfywfoIZNTm3HQoFLTl3mWoJ+EIWvMHkbxGshNXXXvU=","GWn1wg6A8Q5x/0L+Wve+xH7nUzFTZ43S7zPx6R+/mM8=","B7ZdaodPVwYoJHnOMj82vyO9+8NHaeEaw07ySU8r/4U=","CemsTFG2HOraLIYeJ2ocBmXxsGkULxRPgMRmSaZbxCU=","CLdOuQsOWzATNHUV+8/pTY/qz9Wu+5VG4eWt9Zq0rPc=","GTUXFM49Lj6T7JAVwC4PoFb2js+NHH+rpRneoRbgIXo=","A8ShW8l0iBOc4cuSj0dFBa1bx4k6U7PPHJuiHVGwBBA=","DYt3c98zW2qc8piwhyHWQCkKCxfVBg8CIvJjx0F9Jcw=","HhTCEvt2eWdq9Qw3EbGRfWWZ9iBlK4vf0kQlFmeu2c4=","IYbMbNxScSkamxEbmL3lDGKigEPZCu9lQXG7cOQp+t4=","B2jb1LkHS0NUZ5J9EYc3jEsXRoWu7KNXiN5mXygSoZU=","Bj9aiIt7zT+K5Aa6QOESB74BNhitX4Ecwxf8HlWMedo=","F4B83C5y8Fszcfzpj97l81U+tM6S6TmNcC+TjPnudB8=","JfPdC+O9+OYyr9y9QxvnrmYBVJMER1ylgNE3QeKn/ZI=","InSkXi1pBkvOZ+LrZk20Wu9PHZ3MzRV73O73quFF9tU=","CH7nk23rd6l7jXRz9TQ2zz+xzoXfB6tooCi0beqEFwE=","Cq7A915TCH25N6l07esy6r62M+zhGA8fhDeryQmd8b4=","EM3wHoxhJjtEbD96EMwp/QHtkfrZiR+cb8t7XOQ4upU=","F2YnqSBy+iu2TdXf+cxKDVvtzz8iyR/pkcxlaKT7VM4=","DqsOFY4vZyxop6CkgyjiEXmkF+sMZbG2F2ROHFLEtCU=","Lt8eoc2X0akf55AeZMDy0S95ZXQdpafH+r7iXqw7R+4=","H8BxN4Y7HTN7tdrBitkSN3OWgKae7V2gvzUGL01MrME=","A3vf9oAlvdy+1VTOrD32ap6ymJZteTCK5BTTQieq+GI=","F39olXugfaZxud2RnyQz3+XzY7dKPBYWlIHFfFtcB6M=","BtR7mSHiUCwquwE407ECiwK4X49CNiz0NnG2Cmnp5go=","Ex1Yy4pBp1PnZ+HpfO9g0AA+ScjNHw9RAchhsXdxXaU=","I2ynYjXZ5pRyyZhfhC5ibzOz/U/V9UOBCgxdIUPtTJw=","L+f4WleZFlRZB/KgIgK4Npa2TR9h6BNzDOvAbQaFN/I=","BJUjJr0m7+1kY31PwPeku1KOOjQSYBJViOdaqoj2LXE=","AMLftXe3ja0Yg3u3DI4pkPMjJbtBj09mJjorY/P5g4Q=","EixoIpO0iS1RJVmR+c+vluJRQL1rNzN+p9+tXhJCMoo=","Ed3FQNShEOSCokVRErpn/7PKPuVHEUmNsaNyucwj0UU=","L2vXH2svOvPUaIIMgKqtcu5Iozfx/j184Bu4kkIQahs=","DWoW0Tbud8NfIW8aoMqeCb3CWecVhIzgR74FakoJ94c=","LnxgE9G+YqeLTAAVRl+wspOgfUYF3KZCIQkJYWSyKyw=","DWu/GLfraErexBJxNXDTv7Nv0PVp+zZHT2lLEbKUi6U=","EkA8+Id65RC3MUt8datbD7f83i5qtIEhKI3ATVtR5ZQ=","FRs6z0zjKX2G6COnIGfHFxc4IVDAgMo/gBK7C6L+1Hs=","KhOWcCBjxi4HxRK51NGB1x2ItWgafkf9EUz7aC+vT5g=","JcxJ81CPyhhzpvhbZVC24QQdkM5TXGONK1I6Yd14acY=","H9GDJ6BILDlHI7FSyQVEcpz0BAvM7ZToo34cnjB2g+E=","CydWbOAr1M0ic/1TEzbA6/5lpbDaEjyzG7yJUz5Rizs=","Gp4VPOgr8qb6DXHRiJwktfER0mLILPNFD5yoBgjsFf8=","B8p5TVrE9A8P7E1p46PNH0csdEbk4n/B+kzc3IYFrMc=","L9r0THB9gonak3NTam9htmSU+p6eeC4OQQQF77r1BK0=","FU18fpTuBqQ2/fWbUBt2O+jcfxKu7AdSt5F5Jn1kOnQ=","LHU7d3mjkJ+gywaVqfM6ZzUyv1zzlPQLuNtexft6ZO4=","FE70DfeiYv9BeV0JWQES1j/q51w1M8CrS7muQ9YSAag=","IsaNbNS7GBY3kSdKKLozsNE44UjW2AtGnW6VGX0WSIM=","J8o4y+iy7IqSe2+gEemCMj5W2pMsJNcwlRd/5/iql5s=","A2mUwWlz6gEkQduueS+z0GsTmt3XzMDA81O+M9iHPqA=","JC19G7jtNlgDUDS1Xii0MTjFbH+pwFhpeAVqp33s/To=","GUV2VHAnxCJOnPbedipRacpcGKxduQEIvXYCG7mwzvI=","DoI6oRYk7lcfI9oCHU15kFY/yYmKfQzmhOU1/sefzdg=","CChYpNsoORm1bAvAi4k4ZyS5CGikuhcLscz14RIgXEw=","AheCJnWvrD2kqRN+CxclMohKpnDxQtpolWnbJPWw1lA=","J0xhTC45LO6Ja3hQqntv6VK3aBlZ+/15E7Q68PWFi7Y=","J9NVcoldYe93mUWS/HUlH0QOXRIBMyUgSThe4b4lquM=","KzkazJyORSs18xyRvH3ifgDT5iVBPSf21gw50Ax0v3o=","G2MgzIrNmMksqEmls65S8t42hHTc5yegBp6XzApUa1w=","IoYHXmqW8aVfum+Es8pJdOhwFoZK7WJzX/DUKMCskfQ=","GKraFxgi6OHcPadpF/7RY6Uju/ghI9yY9MCX4X4R3qo=","D8P6tF1AX6cV7jrEonnHADiF5SAj5uNuXXHwXPXzA1o=","HOmVCa8k4EiSXqrSbSlM1VXNEuHWWIF3fs2mlKXlKjI=","LibBfJIRY7W7Oq0j/63UfdDcREm5TJDqPrTk/vE49yc=","FRFqfJLm2dRvt/tRre5ahiqi+nYsaQmRgErqffXP0/U=","GKJqCAD88oiqfpjwRzFyEOZlbIe+kDvxmpLnwqSZw5Y=","ItekDn5MHnbb+8zhYBwiRpt/v90FWj+VPPz+60eoXHs=","CudxSI60vxB82jBC3aNJWJnsX8Q3khUI/SnVvyGAev4=","FxBOBECoEqM/gl/lfamd3hPBvT4Q3o7JZ6Xe7iNM1wE=","JoDkr8k/u+uXLYQvGPo6NeHOgizgKmKcNpbizbKJSl4=","DWT9qTq6XDhOs5v8FEvqV7E9EbJ9iTI9KuJ0j9VPFtk=","CurMY1E5AJZG24lBQQyBngh6vGAXCbH5I/BOpntfWPM=","Coou0rIVj+ZEO8OxF1TBRSHbGTM1YWx4Wgc/ac8Vvzg=","B7EzogFznuIEyB33iyChPgD9jAo4aUJ5TCkYeqtic7w=","EY+8drf4YeAumuW6UWlgyRFCrXxK8RVj4a3/l/hjzrU=","J1S0/0c2gfMGnt+r4h3HX0EjoMytVZfUJ3moEg9U8CI=","GQNgoDZmhxSDdnX35Z/fFfpXY09NsMLCSoDSaVHB3cI=","Iiki82cLX2XPNLKyZltAoYfzwwPHa+1SAXBzoKGNv1M=","EJ6fwgrPzs89R8BK/fupJvMOEXKl1QbRJBgYrunMfFU=","FiE7Qtyd1MnvkVAK3y74cIhReHN03O7k1FpmRaOmmzA=","JAI+pooqKwCKy8XUoV/NCUK2fOlSsOGgOtF1Bm91WSA=","JHQExI+qBubHKx0FC5Bfo+vXdFlrTP5rtNV6w4BwhZ4=","HYaCMeLfEz3AISxiSBec6hfLD3HEzYJ/U1OAYjDYkWs=","DDFHSVWcE0iG/BK6Eybk/9wzAo2OrNNB9RDx3qK+N64=","DMHDO1MgyRG0fu4DxNluorJbzSbjcR0oyxUsvFuH0s4=","BfTDYF6gnUtzeyn+6H4cK6dNMyvBnm0+i6lH8Os5maw=","Bb185EGjpyeGMS5jhmu5hq28uEewZHb5jGt/i48EJFc=","E/xMDpUCge9OluymA1UVL3wLM14PNrwc3eXzlS3twTI=","FTwvidZoHn+U31Ebnxk+KHaIT67hvTrsJruTSToGTwM=","Fvz9bd0kK+jNSYJnjLq69AEL5Hl4dk7k0U6VLcSjoRg=","FVQ10CszzkW5w7bz8QkJMPwKn6mXiJJ+UEch6gZoz3w=","Bmn6fUQOOgbbb7gMh2o2JFu2k7t5YGRkIWIfwsORxcE=","K1ffk6CW541/FOsReppcXvadls9FvIB+Vdib+YDorHY=","Hop9GaZ2syY/hahILZXQ8+dr4LblyawQehL7nmVchxM=","Km3gve0rvitYZoAfiA5H5r+mkAWgwYWJfHLvtWvZioc=","CZ7Toq4/D20KZ6H3m1WhNb0GbMMuWUKj+iVy3hNI+EA=","Hn184IRlQhNWXW7iG/Hyez2AJ6L6qBBRfvvf3KmX+/c=","LnA9+9yG9Vhu36AiHIG7aJkUMhC72MZoR3ZKpPY8Zbk=","BQWww9+fkpWaQfs2xy2Fu4JtVnJ5j+dIJXK19B83GU0=","JtH8kgq2DX/E6CYFb30Zx4J1CH/5EW41b94wKED/06w=","KzQ5wWsa8nvXpMjZ3caTTnufXhCq58zkDOapN1BtUQo=","HkXYa8GE8OCGAg3q405Tqw7nEjs6EZBHXG4l4G+DIVQ=","I/Pi9JyhyVQ0sDQhVhcuZdvGyfgyHMdenxWmbDvLCcA=","HYwuUdtZ1ulu5p9oSA0fjkjAO8h2zXkV2Ii1sKEaIaM=","Hh3DVGqGAyzfi4v3+UpEcwtmL4pWrYYuoSR7oqsPPSs=","EUfoLADfReGC1Ba4M4/64pkXjaX5LY+fkVPGleeFlEc=","C+lEVrmgPGy/q52KNLQR6R0gyxH1Yk+us/ePOCR+kLk=","DEvZo6qpI/ZJuc0cvXh5V0smb/L3wMBjtcRNa0jMo/c=","BhmMH+QS4liHEVtU/4frTx4ocdTPN3lpyhUf7V17Te4=","HukKrmimvaQsNKeX1NMfeWec60G1h/YZ1iDh9RCLg50=","EapTYLWGwhRHcRtJch6fT93GtsmLV7hHctb8a4vgF8o=","GkGmc5D5IvEM26qgzl6u9h1mtnMIJeuYok0lmH6Hvlg=","JKKZfIMvulSWGJJq+8rQDOkgeIOT3xKPilQW0mIxYVw=","BnA2yvi1fapZrUUUdziY4bIvjojUVLwfjvDILMk6J3I=","LxjoU/m3t8SxtMPw0aJXCwNf0rQjGlhBOa23oRIhvDM=","Gzh0FEkjlDvrZsqLeY0LuPK+f43Z3trG2R/FueUxhqE=","DvWEn/RYoR3EE6LYq+qYiMYiQcPCha/jobFM9xV0w/4=","GWo2ojF1P/0MCUZC4n2AuiAaVJr1hP+ppwqAJoF8pmg=","LgL8Ii3Vb+ZWijRa3TwdV3iYo2GEfli2dXbxLjA0qMY=","I4O76v05HZaq8Lp0gUZ4Z8Z605Nm7YxDtCUgxikkUsE=","IN4s1c5zPqAKfxZ/aGrmcZJjcyHMnw9KpyFHkGdqP3U=","HxvOM0Oa+426sTVLRqW5zrGYC4NRQJXWXlE7eTUamQc=","BXuN6djtWTtdIUMCzojuCPGBLvU87G4FuuwWDAVNZ0c=","Jnd6y9iOkyslUveBPmLzaKuLHWJraFUCJToQyAUKSlU=","AVick54uPv64y2wQNHaHkQH+x6Uwyhj+S9Lwlv9Er0A=","Kja3nYfJY7H0dZDsxM1pFCNGpUrki8P1c633GbTglxk=","Du2HcItbAKQq8+beWNTN2vIieL4O5jRPKndRMv4Qeg0=","K/hP7WOhFpW2OXJ+GBEawgg9k2zmS9UaMt+p8bDnEyU=","FkpgmAdZQcZGcxnCNyRjw+x626b225pYrVmmePjxijk=","IFB16jVYoXsMUa46EH2JhgnjzV2C+N+MP3SxtzsIlz4=","Hx48dvxp/YrPo6m/0K9pXBDCvNzm2PTR97dtUEGbQ3Y=","AGmYKpslvXWBQ5e208ipB4Hhczvlf3Vz8v5E3TVhjFQ=","LxdYKUFIG1SJIRvv1LwNykPUQyzhEVOg/nNeVUdKI5M=","FkUx6rOAv4H2MT8y9cJVqbrb1O23dn+ZDEaw/b6fspc=","Ax9GqLRFX/EhvBhKHDVR1FB6F8iIkx8+mdNWqaBu+Kw=","ETNNuqb39BQNFJO9GIx3Yo3MeCxf+C8ev0HKCUgVdBo=","Ahix04pv0R1lZqUv4TbiyC3iKWmOVBSza+iZfwYOiRM=","Lv/KNpzzT3QkjjeuO8dCmRh+FqdfLr5ARnBgUA65PDE=","B+VBOPgowkuYs1ETkoYa6cWHZVD/Dud2Zjw5l6jxoRY=","KX4ft9pUl9Pb0HmKFG0vq5rFsOeQbYWII4GHt5UAH7E=","FJAWpxf9hcx99/A5ymsbiwalvb2jZaM7sK4iiQDlOzE=","D556IhJL9Q2U25Ix1jaFEi+S21JorSFIulNNyFO/xU8=","GjUZpi+mkrNxbRG4jp1iqqDkO88Dx+qBlwsdgCqGe4g=","K7Z8XWxIz0WKKT1pstHUT6fCxgiOe3+a3s4/hz3t+5U=","H6cT3eOQPkHmjwmsLzTJsSN6RF1RlcXjYcW8ox7fqXI=","IBmqkq33teeV8OU5aC5LObTjK7ZSDHERAq690MFRaEM=","IlO5Iz0EevoBjEDEn+n/H5mUMqnH3wZiGyUEpG8SDNo=","HOoIxJMo9fBTxrR8u8lVkiS+HYE1SRGhiSapjgR72uE=","EjrSOWakLHKXEwlPw1LkZuJkavmtqsIP2OWPMI0nNuE=","HvWafiZkd6ZEUn6+zwu7z5LOX4DSKA2vgmYZt+vfeaU=","GewddNfzZy+bxmvprED1vnAre6yAtOM+zrWS+G1d46E=","JCZGxD1/KM84yayvjGOxsz/wfHeMKuaMVdSJOpJ6OkU=","DiyKYEVT2zuBmA/kDYAcrMz7y9eZkkMPy1CwSkLL6bM=","LnfaMnyGm2P63zgk1xiYPyzR9/iuZMiPXopQCjQFau4=","GRyjvp6sxr5ICLwWaNgUSZdCoRZ3kuM9cNNbX9CsJzY=","KibhC3FMjJLEIzE2hzYBiFC0ig5d55NrLPJe7kZjGWQ=","BaprLiW3zkwXBCcIGgEZDyNkhy0B5R6WmxTZhJMMEPA=","B6yzkE4szYesXZ17a3t7vN44UEkzceGxC870zzL/IIU=","BaqcpfIN/BBMhesrzYDf57/mnULRukQAvPDYrVOhjAk=","BBGgtusJ//vpZodmg+hquWUoAYaYX3L6xtoxDoAXXdk=","HhZWgqVitt0pzvhQsnWev4Ysr3HjSLQgJ1U6sefwzR4=","K2XpKh+R44sufxkuvwvGDNIk7HwcZ7ENHl9jT99Sa3Q=","IgjqfR/GN2ex090ef8/UsTy/qssPn1MbNrC8dNNkgR8=","GscYoocQX91ty91uOp+DN5Hnw0WJG2q0dg5uK7YgWbQ=","CYCQ9yPep7kn7cNqjuz4RjDJLQE4+Q3FVfakiXH1Dms=","Hb4A+qM0Ov9y03swImAUO/tdTlv6Sgs9CmIiPtZrTW4=","BkLDZRgcouw+Qj1s504UUGikP4jOBTV1ouvK9xiGCZg=","JFYR0NgEeiTbPXgTG97cZ+NF774+p/bHpPy9PGQiRus=","CR/+PVGVJboIDh+rVGcJstxioXk+OBHsUWHIALSH9U4=","KmF+1YhyLTrPSQCz3FAVckt8jO9FjPnbSU14aia2nk4=","EwKGipqztqNsztD4D1PxoTykNuLXwPmtqQBAr/ugqMw=","HZA9r0MAdVvgrKr567RBR5W8P7N35ZA/ie6bPvrAUqs=","D2cXkuxri70JNqu8A50qho9SOgBQ3AEi9dlmmyY0d3A=","EEWkJBZnqM04B4BnlwsC3OnDUFSjb6Uc2JLV0hM88nE=","KNc495wHs10t93LVYtVDRt16Qb0HCWw2wiBDIKZ2Cys=","LSRbXBwacy+Cg0Ru3n6EbzW+nUnLTz87tOXh/NF4nVE=","JaSZyhkHY4NR7byDbBSYunyPLhS/mfC8K4uGu4m07qE=","G+P012Y7lJQCMHuCuCihX5Qj+b4RXKmsRYTUrHUpa90=","G2frUfrO9YFKMM9XlKldStEVFGmtTYUdDDNm7WuZMgo=","Bq1pIB+UjkdJ75CVcH/cZZECLHjLb6BH+CWkHdPklcI=","CkuCiFSNX7Pd589LvRoIgeXmHZmx1S0Pgug3FQllQRk=","DrSpNC6J2c8PSCxBzmbkD/fH2PmtHejR2NSKmLAFTJM=","GmRaIjRx4s93a+G/23BgGF5aWKa2UaEqiWmtWg362X4=","AwLESZ1B4ln/dh3bMFo2bz58KwHEZXd7zq4aZ+a0EsE=","LBfgt/kBuTYwydqZuu88XC9aZE3OpkRDV6EhvCqkJ0w=","Cw422oM14kPcf9WcwjZZdNDg/6JHxU75YXqA921Blcw=","Ep5zPB3aLt6NOW2F/Wu4tuYTmfIxHAkzHH7y+b6rIrs=","LN6n6xj2FGtnxDfzfBP4Vu7QHV5GTohwRHxci0vvxP8=","KtTwIWAzAY59KlUMLggkMmFPQH+2AJfUUFzPyzHWd0U=","KqxPVCVoNbrZbuwlZkGhD8RNDWP9WGD9R1zoGCdmkfY=","F+JRMsCerY397WkbkIG1gfH3bEqG8v2cnCnSQz9NIos=","LtleSTrJeaCRu20o6BZy7F4fHjnxY+X0uZSN5bS+MpY=","FhzmPVlt5pRD1/VC//Ns08EQwzz7tEXJzztw2QgeTwo=","GT78d+p2AQVHxbzGAKEfHVqAvdd5ams9mg2vZqC4pLs=","FEmjipOM7jtW9QXxuiMlsYbiyiKoQ18kHPpEPGAA9+E=","IGDs+aox2zEgIBgn/N9rXufxu5PVUBh8otu9SkIFp9I=","BI283+L7bFCWjoJalYNXZGd5VGyTNAdI7y4FeUtIqx4=","AwL76bE6Pu2RqCOwtNPjYhQTQISX5sPC+knZyKo29Ag=","A+gZJaP9XyUIFTLymGUH4O2RJ2y69M4IYIF6x7uDjps=","HFSYeRONQ0zzFDUX3ZvyoyIiTXa6Wz5N40t+xJBAdEA=","CBIMfsNW4WlF2U5V6DXufi6R5BAxXc80dfgtJw0W0O8=","EwZGQAYzAFFoweFO4nq40jjYunUUyQOqpZHc3nv8GGM=","I+m03T0fMMN8/fs6g9ReUk9Uq6HAZ6we8azggqtDR5w=","KFs4qrogw4sEWfSkiEMSK2RzFilWJHiUcR7HZ5lPw74=","JVn99Y08IgDIPtH7Tx7tVowiSMoI5XlIBtGEHzoIGEw=","DjPHNiarHtdB5HrFK+Tp9/eRO12B19oar+IDpJ7LmDs=","BR1BI2Mkl6oyQleuUqUeL8H5uokBqSXcRMDcZ3n/VJY=","H7q+0oIIF4d4JBBSsjbwvHrpiT0kfKnNBWcumv9hMUg=","HC90E5U4vSU8PdRaL/uWFzVQpRzb/ip2gnI3+4W+7H0=","FXdn4qf98lwYR1Wy9HNp8s6STlra7lo3ONT5QrsL+VY=","D98efIaJgETds5f+tI5e3p49JPulQg26jR6m0Q2/R/c=","B2noTtF+bB6sQLXgDM0tggQoEBsshLWI7kCkQ6yeCLA=","LyoPUN7R5qs09g+MVpBKUW2vyBU3IbRPGzVhiQwC6Fw=","Cx3AT+ddyzbeC/4Vyi1a1b8lOK7RMz31bhsthhko4sQ=","F67Y0RfCd+0NHYiLNexL09wLgjsq8DfTYj6hA6IHiyQ=","FTFAqmZYbO4jGo8/2GBZdubTLd9DH/M+4FufQpwMlIE=","Kuki4R701Bt7hNUquDX1vIAnvOneJcHOWwu4i2oX0ao=","D4GCQ8w/rst8c9/CHClovmO36TkLrAd3R7u+FnoFW1U=","H2KDijC61u7U7eKrUoZttRVRN8zjJ6J/S2biIEB1AA4=","L9l5V7lGDTQUAIyuglu2EPAYxbUzCf/Sbzns8ef3lbU=","JpLRHmRpXg0hA3S0gqRyZ8wA3y0bkFVyJ81J/DfsK1E=","D8qniYijUgJof/DdppGwNbTpVApTCMluJYI9h4eloEA=","GnQrLM4hyD15Q/5rSSqbiPr/OZDkiGZnD1Kh2zPWkcw=","BzpZ4snBrrKiu4mx+5tk/EKhv+/x2FtuehY7jDv6ggM=","BMYE13s1a0hdIVqf335ew/KWSPyQoYbJflEhQM/F2WY=","HTgKrWODvZ9cS5+0sSfgdV0RmOo6lp7+XjvPEtFniCo=","DLB8vyAZSTCI4X0Wzp0U/EIE9nDWuOKxtQHR8bP9eVE=","Fm62rVhV39PEXiffkVSFPUsIdBEsRIn/eqAFDkH7uhs=","A3KjvrnbNgMbfwxyuvHlPpxyIHgLJHrtgu4gee+t7tw=","Bb1lUgTVXMa2OQvBZQMBlXpnb309YBfGSWrQMf1fezQ=","FEF5GZ26E1zF+ekbdogPNCpOdLjuZhwn1bZR9FZWAhs=","Dm/oyWzpjzzJfBGZO1CHtV895wvtYycw+SKZs8Mroco=","B6LrWIY3VRfTmb+r5MfOXAPt6DbESsK1G7PjWqlXbU4=","B2TsiWuno3T1/VocvtiivmK64NVyY54Xv/rSRZDDuJ8=","B7qexngctHT6TWIpCPCaAXZ6B4XDoUrFuikyjE2l9PI=","DDJbSYll43cCQwEtr6DdT7A2pAE/L2fzUPP8nnQEkWA=","IZ3TyjyY0WEzk4OMc8iKbGUCyiOzyFtbiVmilpHjQnE=","DrK0X9UY9U4bDUglAm//3XZIn2JgOAr0Ddq1/8HFsz4=","IwW4tav/3FUs2WlW6/pFajazXSAL0+Q84WXrOHEaZ+o=","GnyxHqlGP2OQq7cHmHYVzr5ZTPIy+16JFEB6Q65XuYI=","HmfOBSTRB5IIqU3CVIPZ5rdCjUDDYwW74Ik+GUolsyU=","AP/FOahTd4lwQy2GMbwP2wz2AgtHJLSe8DEZDcS7ESA=","KZRcnKTDnUVUDANcEGeKPy9Ryty/GbMy91zh9GtZeK0=","GctAEyPb0/2L4dqVTAKR1nEkh8aH3ZZkpLFn3AGARFI=","KF/YatshkIzERBJJ/QBcsa3Qsqv3Bsr/QhknUGYZ3Eg=","L6q/0JtjqBwc9Nv8ZDI9jBJ65VLQAzmx3ExZscx6tO4=","L8dTnEBrzib75hUXubjv02FxEMjNSyuztKKzOemFfUw=","EpbNCJ1HUOVcHAHXaLXo8h0rwfrXa4QpQPKT7AvCrJU=","IaDD2q9X/c8uiOvU0dGkTqpGWkDPYLB8wmVJtXeh8ig=","Gs+X9MrMl9iI5OO1rQLdmo7lEUdeIemC+hzlBGdRGrc=","CzVWue72noRH0YadEobg0VSCES0j0OvX+LvWHENd9hI=","C4LPXi24uIsys3l4sRdvKmTaK+pxiUAF9KyxzmpoS3A=","LIrRrMdjb2WhK/g85orJKr3p9FHsoVBRQT82u1Za4+c=","L9zEZJnPsRAvVUCAeTZYIoySrkntfYFHAK0eE+tb74k=","LI17kyP+MOwh63uOC4gkj73HDwR7W5Fm492KYL0qjQw=","DR6/lzydJqZDYmIOZbDKn1nJ6XH8l1Bjca+Uid6T6Rg=","G92SkhahBbE1HGBHtDxT15hmoLZT0PRnAjPp9ZzWMNs=","Fiq6JGdQ3NhWyXWppHOnySG2JWmSApNLCh0p/9A4/pc=","LmgdsOdMO2zEmamvviIpyK/eKTLksVIoZ5tUD/ReLqo=","L8wjUTR5L7SoHaDB/9gITLjNgJkpPDoSlQSAjT7jm9E=","HrZmGtu7Chd0xs8WN/oeXiQ5n2aQpVQW3vMkHO7OdKA=","F0BFxy9oSIOLKginoBF1YJew8+0lTP+rKSbOFZ6fVic=","AqBXXwnzKC+gfptc9VOJk/x0xO6GIclfuyyi5fLcOhE=","KC9irrFn71lj2mxvqoZxEjIlrZGyJ7iGtrmBrv2soMY=","G5q7uBvP9fFwRjLe9tmJ5Qz9vuHSSYAyOOrCRDUdfrk=","GPikZp+vnP8R3Rnz1zw3dI+0Ym0YM5wHegblxcgQutw=","Ia8N5N38RJNo21m+npJBGFxJyElu6G0Rdb23pDEIaoQ=","C5oeyf0hy5Xck8CsGRETWzpo03LObanUVdgKeAsV+Lc=","G0E/cJNYAI9Ew+YId9gQoIHZCETzZ+PdCnu5zBGNxQI=","JLTvtQKFdYiP61uLWdQONJj//OofNQgmNZv/t/1PMdI=","KxHt7zUFqdrWAAYH/8vdAniMe1gCM5vpzXTSuldiARc=","ICJ5cGCWzUL5BiOcQMZxPovYnv2fY3QSmd/1N0Xe6N4=","IH7Z9/9XuxfSePgzthz2ePUsjjIcxrzjrwgEp8FZIF4=","BQQcCI1OY3QxsqSbqjdyqbBEPzFh/kZRWujTrAsOVR0=","ABt8e8FWgiWa0IgdzLzgpkoCWcWeo8XgEvmVNPwCN0o=","HsGXEWI+vEnvTYVzJaqd1++1+jzXrVDz9EzMqZEoyE4=","Bssb51F5wZ+ImSDqkxht/5I+LCFMUKFFUYg3orAcqQA=","JxKoIDl2kxfCGyJaTgukXfY8r7SCEwNmTVszHSIhjYM=","HX0JaHOHNNBxCuhRN340DbsQFCjXIAtzGt87HCIPOwI=","GAUCuuLaA52F9TchK63j7bVvs7alVn+rHkBhuG+j5m0=","HD8aMp8A9vcRWl+ru3Ome910ys6sDlpMzyWuA3PpITo=","C4iAOL8eivouREufR86/KPQoVNGpFgjjnbzahyvelgw=","KgNucOKYfYVFPtej2aaNV0rfVurhIU3HdLqhBliWLBI=","A/EavVUeRNm2oPRED0cAbpjNkAFFnJZy5vlqkuUCPTw=","Hw+gS81jt6K/3IcO+7NpZvVD4jXJ3Vs3HF6lwmqnuc4=","AVTiu9eWaSuJQtw3q9lTTEhrpwvHe+IedMThU4Hhy0w=","CgUls/lqdQeJDn9l57WTiG0YyxR09duGUBpNsfugSwo=","BKRzky5ST8DmBNXunPO6nvjVtGOhN5/NfWrxTb3rVNw=","IRUNEccjL2FWKOc5L2oMk0jHARWhoHuIc20ErrheD40=","DHGxKo6KfY/StOqbWH8ccie+HE6XQNs2z3x8Xo8xMIc=","LZTNvgT393xa8tNsN7u4FynZUav715H+4Ko6MjIaxmE=","FORcXisJ1tYxzGDFn7XCSwpXBBqsZLSoLbC2NgD1WBo=","CrxcXISJeAKDwTnDbd36OfiO4GAWNu09bkzBS7Ox3/U=","C5N7oVE12+9zZEb7SSMgbIQDpCqADCbmKEqTuyM9XDk=","E4aa/O+DCb/UN1JhADG9DRVfD40Rv+mnFURS4r8IQFc=","BtQs71ri7DTkl8WWE57x1QSgzaJA8XYjNfAtzVjDg5U=","FVQwjMcSTMvcBP+xu5f+HoJ3s4b2XM8si1YU40MDGjE=","Hk+8TD5PV+kK1QvG56ELRo/PmgqHopDEhziX5JeRORw=","CNLKW88A6Xad/IaNHIbyiOQKMcqDloUvOXc2mvJNcLc=","H1u+vkoYhDSsaZM/uN9QULqJBwh5l4+kt3h7+uf4O1Y=","EaLc9F10BEXdHoLviIKYE1Vaz3aiGQJMpwAlASQKDkM=","KooS5osfy6EOCm0ahsFKENJuPHQW821izmIXz5Z+HGc=","BFKEjTwMAP5g1yE4BlDISc7Sz3nTBEgggSIj4UZkfzU=","KkelT1n/InRVl6z2AHVHWRE8p9uvEdnAj1B8Rqmqyb4=","GFv1dHJWLMpF+HrBsa6BIq7FjO24MSgcUfN5nwfnK40=","Ds72SJ5wmtXFh2NrO92ce26FdCF1/4br38U6tYjW2NY=","Fgiz4mJP/CwAkeR+kOWsPJlicTxqE2g/1VMXI8uziJo=","DT9gdGvKV+XJaDcuwOmHUQpkfy59NEFbo3mJ2vqUxgo=","CY7PBIThJ6pnlSPK0UjqInI3qNn/ndjY85+1gWLDvWE=","MC8Q4RwT83ZyI7xQGl+d0TD+UXtifwJI94n7ezCsEF0=","CSRxf+e6v+lUGzOG+kBFWgF3xpcxuvIsCYLPdieImeI=","FzgpZbp75wnVTXDKPhP+yiOyK55uWpGKnwCPR82/qIU=","INMAENl3+dkSvnlzd3UXiqhB2XISiqqV63sn4WDC0rE=","BZS9t4s7aZk0SWCThqJR+hSsU2w37QFghImsHHIcBwY=","LO7GwTwRu9R2ZIRDIMz97uQC4K8uyAaHlsfDdTMwr/Y=","J5+tqD+DDf2XtyiOZwRZ3AeMds8GN6iYPAYX8ntLNHI=","Ap1ZOjESw79X7Iq2h9g5j8J2/PHUYqaCKJJzhTP7RQ4=","BxdRgfBVTab/6kqGDAMSS41Qw65bWaFn5YR7oz0ZwFA=","EoDLe96brBw9f1V/J6Ws6tbkp3vl3D6CIQh+SmziPq0=","GplJWNRMND9ZSJBWuM1yVJH/VRwPRJaXtUbI3Py5C/w=","HwBANOiBDB8d5Qe37thCmDQSq4Rz4rAPx1WT604/VQk=","BAX8x7dZuMow6Sc4FO+zUMHlJULTOPJMR/2ZqUIHgAo=","C4clRctczHPSILu+Af45lA56iSmwhGAlQSMIB9r7PIs=","KBn6zKLNbMFqauoxkfgzwtNynUd8c4NepVO+WHPOJzA=","Iucl9s7PFldUzhpS/7rqd02OSF1my6eZcjJTsmtoxT8=","AdEi5GVIYcSz92w7xJUpqMVzx7DU0+ecSOOkv71izRw=","HtT1ZNFH8/qjgzagmFAi1TfTRSG1Eck2C9zRsp+JovI=","L62ZEsTK6l1EBRfw5WiGlaTRaw53s9w/2H+GnIPludw=","K1qFYfDcWG1uO7g+1ewySO0MCfmzA1JHHysLgDId6uE=","GG9NY7AU3oyep6sBp5q+W5vjgI5sqDRBMvYPVZWjPVc=","GuXpQPxdEpXTJFeoQFgcO4u9oBFbZvf3ykKYJPruTRY=","FK/giArZL4FikqRSzQEThGMtZOoYOZedPWfUBa8yd4w=","Gshp51S+iwcaPunGSvSQlkObmPRLFajG9PWui3WjhJ0=","LcKaGjF0mbQ6Wkuhs2ysFQj3lbzEQxv7DqcCjvL9Mqk=","LujQOv5DwriFmfCjW5CSauZRBjficzrA9pRtkI3lExI=","Jm2A+1wQsmVeFBd3CXBARzzVpN7akiW4UlyUg23VHrk=","Lk1m9lWUg/dvH1VoLR7bVsjD4U2vtr6zoCOQVE5Swi0=","EBI67VFCWA3GdAjjN9THc3idk+R55PtEvXMhjPPbdQA=","GVJvJbfr4sRhOV5m+Gb/uAspktU4gxAPDb/GfxMqWpE=","LnfZaoc25sOPtnuTWlWDK1EaStjYZiH5uzEyIt031lY=","CfLGyWnUjsKRV2u82Rf9YiwrmOwhu/ot9dVzJP+7Sxg=","DdNgBYFxsCMmyeTEYYyOGUmZ1sRIAIH6c4h4w+GxHlc=","GYpSuCgsrX66OjgAtZp5SixwlJ7ZZshrop2bzDfyk2U=","F+uMjoAD1rk3g+Z70U0SqUVWhM3qTsWNdqg6B7Qo3Ec=","H7nBYLCXl+nU7sx5xQ4mWOwQ0POOzvwePoeGuV/fliY=","AgLDtklaivid3G4/v01m1z5t0T+Kq4kxdMDK/XjIpRA=","EUun8SwOGjsSwrUpG9gUG9UN/HAARlCEpwH0exV2MIM=","AZrT6GrYKjdlqmTqAi0RF+HCMMAqaskAN4lXKPgrM0c=","JU/47J7KTT+ybHLNY6fU6Ym7G566DYv893E9q/f2TgE=","C+jJta7jfvqT7nm1/8AOi3cnQsYBv48jAlKSWtLJpwI=","DHF3U0GpiskJuh8mrOQN6KVjMJMTNqvnFdLB632TG6I=","C4M+yDBcLLUAK1m+ueWCFqJ6tpu8cYjkMCEx4g/une4=","F0ruMcNrgaYhK51EYGWviACmDMpeqhsW/shcLi/5dOE=","F4Md1AbHeFpTZNOTknfanrW23/Hlb6Nf8YUGxksqi5U=","Eh4cG9t+SjV0v9HDpMs5lKxJNv9UsHyqCnylPMCdxEU=","D7LKXTcGb9cpJHiRdJj4eIvuM9PtSQRSWkFFvONf/xs=","HBMc+KHVRAM3+hPllc9tQsMBYEn/rAmVfmnQtFAef/Q=","Bw7ksvepCt0TVfnNvDpVf4SqzGSGNLD/SPg95PdqWFY=","CsBcmxPR8oKBBTsSrxmHdvPJE11I+V1nyTFLLEjuDdo=","DJWhdr+bN+Du+SQmzPrdKWlUwLynlJKSJc/cQniWFXQ=","FmNaE1EocLcvqB5GSEIaIhDAspv6GjzJ9BRwqRiERF8=","DNwz6xnyEBe+ikzws3trEvgB6lxM23ejTPF2rYW/pu0=","DodkWXcBCb0xX9ky6nxpyWzzFONAPQ+T/bOv1koVBHI=","HyagC/1ne/5XuHnHHLxUypE6R5HUsE4wQ3Zwlm2EADc=","IpoXaSyM8zdyJUJs4Mul1h7V99u1ox3WA+rfoWW8z40=","Ia5xQJQ5XfZSZ6y2VJ1YAhnESb+Gwz6095PgdHpkRfo=","KvvdI1x5Vlvi9uLNsdUnvVaa3/7ODLOf4IvJ0OwuotY=","CpXBGvPvegxYXr0gaL36sqEymCGhe69lpqB0azikrFY=","LtgiQBpIWmIe4LBPb3tQrfeW0iXj6qWHvL+HxOwKGak=","EPUiacDEfj2KTIeLp3sJjRp+kT/NWPihvNSvtSCuAbU=","C6tJANwhnRpzexHGG95dpq83XTZAHBIej/6FNdq2dII=","Dw+FMPAxDLL2yZnuLcaUMpqVeUayx2HIUF7OzLL/Ijc=","IBXLjzKszqsUTZaBNuh9Z8wlF1KpNkt3WYiOsYAKJUo=","BmAZTYguN4oWe4cM5wleWtEZ9m/5dGXcySnLAq62AtY=","AxK62Sdaxn8rs0YQv988aYnonvGL/rOlr1o96tq94Og=","BcvGjlsFofw+eEVp7zJQEfg52tOA6OB3QtwK9RSASTg=","I+ZoithGkLL8wdFm+mchEF02lmzpo4Sg9lmrAqe74B0=","JiAXEweNNn1oozzm67gqtVtsEW5TTIUEP+RYz00fkSA=","KtF3ROB5tw4xde8MyG69cjjMzSgRSAOEmMR8czuu8/A=","ACJ7JFay3zgB7WQEdGQlDoGzvB0g8/t5/vNNOPqjl3M=","GTbCWreOVKlHp0Ut1lwEc59S3zJMtIHrmhMGc2Sg/dA=","KqnTU7ivrr/6u6jtCSIKgSHvjNYa0sIMyk/o1dZXcto=","LDfehEXOsObhZVGgglH9R3pXw21JNwj48VAzRuIk7HM=","C2AWtBMGj9gRlgOsCuCv35QoSRarlYJzJYSFcxL8Yig=","HC2kw/ywIVrvgudfZ7YttX9+JheS+2kZU4K4q1ZbKBQ=","DZAZ4Ge4ot1IEpmskEoUy1FqwN2qF3g5WBdwonYWBB4=","Ct2PLhKZliXWZefsgEwlmGK5l2aZeidUSY8cEMcI9RY=","GwTJT7oBYPrxppriiQH25Y8mUTfE5ur/AD3DTMBq6aI=","GbWMOKNo0b+0neiqsUU2gSOBfhXQa/HYh8oh/u5IG4I=","JoUSphkVeb5MUcyLuLncrNRmP2nmDyle11BDD29/19E=","E9JotCwzhbaMVPK8ufckV9ftkTj+38hRgaBIly004bQ=","LLCplEjjiOBPXeTJy6Uvl7nEt8dIbfMjbI+S4WIAlB8=","HwEBMo2J2Mk01yyjbIPeDwye7gbKNsVR2PvuolXNGM4=","FCYvobM/euPXZmcZkA9koThxA+1LPh2ZX9ztZnYHILw=","ATZBIbPW1kxMzbEFhLS8aw90e7tm8w12TQ5gp5bTCl4=","L/2l7T6hiEfs2Pu7lR6DYoRi4VwkY3pqX8RDzGRFAys=","G2qfnHwJNUu48gb5/kqcqOlcbkGy3ylF0u/t7TGZ78M=","KVQYJ4K4qcKqrmdeXYyBo43J0upkYvXobQgXcL6/0qo=","DK1X7BuIBZvabUHZV/FxeL64qTKim2FiZ1pv7n2uFXQ=","Kdb2Bsr1qteF6Wd/uqH4cVsTDpCKp6XW2I4Is7hxZJI=","MDpof1We1udwyahBFa5yZkP6FvSp7FwkD4mBaZ8vjHs=","IxilqADeRnrHQGhI0iun4vKt4f5n3yVc1ionza0YgIY=","Io6p7687GHAdOuvwDHQy0TpnYOc3Z8umfb/qxGHQqKg=","LtTEK/BK63hzwvoU1WRlhTNVPQzINXz9LE3PVDsim+Q=","Ha/FOh3uh9wGHhJDXJMq4fTU9szlfY5PAw63wO00e4Y=","GB+ICSFxH2Eo4t+rVEQMIIetfQI1vspJbcYa6uI12zo=","FD+6zIuUj/Vh1hz/IQ6K+CoKUAhS2ErinYQQ5NLcfhw=","BsTgZ56LTRuCSeCbriI4uRYWpCCUxpvoOTlXCkdR4JM=","FPfNqJu7zXzdd4/4eMjfZuKZfO0/7TCR+gslnHQzR80=","IbQL2z2xeK+5fmyPUJo6VOSXDHAqPJbipoCjvZzRFZ4=","AiM6+jRW9HLN/j9hDQYS8NdK2YQtCtCLgmkW06O0O6w=","GVg4zXYsKgrCN8a7ER0nS/gJAP9rSVZoC95BrfyQEQ0=","CYK4gCIWQi9G8pwJhZZxAgSLQ7U+PI0eVYss6BYn8NI=","ARy8dBwb9I9wgPSRwm0RZ2aovFHZz7bNCBY+Vp5fVG0=","BMJncL/TC+fwhsnHB/KeOKIqtlQf3V2UkdYT0/w21ko=","Idor2D7oAXDUyxI+Mi+GxKovLr+Fy5e7GejXNAzPpVY=","E4CqWbA7WMaNN39i7gs73AbBst8MaNUD+LCpXBcjm6M=","ITCc7GEgsyBBR1upust6pQdXj8fUKLsBD8BvDqNtB2I=","CHksz4jPbkUNE37XtUlilfP5zWN2RUNG+uRxf3mA5VQ=","Cu8PkIbJ6UJDIgDotZVVaVpPUx4xn9DVfxiBpV46A34=","Dgt0jVhWk2s/2PLrHrTCzSuLi+TWMYqCytPgusUFdm8=","Fy+tMlk8N0zu8aQqu9cIVl01kegDLFF+RZXzBkFVro4=","JvX5zk1yFF0+csQsl0/9/ImkjFEb12Cz2dsDubEFxLg=","EOBTM2k0kE/217Zyo70spYco5RSalYKnLBwwnvz3pAc=","HwGpiTTd3lHzANVC0frY//QRdHHKsBXUFGsF8d6wQRY=","CHzXqV/fX7nX8EMaBGZiXNtC3GI3//539boUxt+hs5M=","H5ro73HbzQ1IoSS9Jl03zAwQGMoLRee0N5awRfZaelU=","FXGisKJRWMDF0pejl3FbAL0cVDXSaGwxYY1BKMU48Mg=","IyL98nYeRffPJl5NYnJRlibeCLv15xrxcGnfKUl6WDg=","LKiYD5/c2xs1Ai4C9r5i8ZNVykuerJsv3MN98u0CZPk=","GoiBwzTzlCDUZyxQUPRdkoFCTrYVRXgqbBcEDcfTgEg=","HzGaDcD5t0KePum+1XqWoPL2fLX82SscnNyXoV93Yb8=","JBkzbybcXUmPJ5r5W019EhETfGCO7Sm1yVEGleGkZ8Y=","H1FNIvZyy7FjY776VmeHeCCb0lfKEXtRQbKeBuS9V5g=","KANKbJAc7ExWZ1MR3vEPvNgIjy9o95XTs1UZux+/Gh0=","JsK5IRjNJwQGMkH7kZgGoP75gUyHsHHVoR78LLEQPPI=","A9U56i3cs1h2OGF5HMQ00e7+cxrTJi7ahXxWoG2c+N8=","Igb0lDZAnovo9UKSbZ4pkSG0MhDnHdeXD7QoMzfSQcc=","DfJVmGB3cQOf71d6b227YQzuryBOqsegm5atIt5oNGc=","KDqJjeWiFGXMoyE69YS39WQTqehLUkQxQ20LE2aVZk4=","JqsmTolhEDncnP1LIW30Rwm1TyQY32ZUXDDLk4FORGo=","IhDX8u9D4inFYx1OcB74n/3xrKZDUXkeD+fu1ChJPI4=","B9oK/7R9ZLftxoLavlxtsiR0O1o4XQSiR01S/+ir/Qk=","Aq2CgK5c+Ck2Bp9y5JAQ+NFkPNwpnxKsCW/UTFAf+a8=","JnuJ+E9IReOSRWX88aVOijJX/oru9RX4bMHABW9G9qo=","LUb1w15agc2QL0GLS5PyWr+ALTLVLaBUpe3u4nYUjKo=","IK6OcVcPiuXmVetCpPJ0ZQImrx/hYKlrF3hU1zbyvSo=","AgubKaVkR5CloxqgpyT7V482UFkN3RZM5a9ZP0PHmPQ=","E5DB2VmRlys7jvoaNnODq5f0cUOWY16HkTlZNwEO8KI=","BJc7Q2Px9V2hLU6rmFAS0yvYC8CtuQIWrtlXTanpfFg=","JfemU/xarcSvD+U0lTvIgweiDpQdfGhrxTu+Mk0YTNM=","Ek14EIIfR3gv5r9kp8XqzwPVWXdqJeL2neKDYr4YC8k=","L28EkJ3DYNGt1QOVPBFkj3JusPYS9wOsHjeGA9MzCag=","E8LPGyG3hiOPqpO/v/XAkhiZ7xqylUiCijdeS8AKG1I=","CEwgDxDv9Zv0PPPMOlBt5QDtaOWbzlzd8RN+x9YaTqQ=","BTta1ZAt+1yjbXay+YCQaxTr3EchVGofXx6XQWRPKRM=","I71EmLTAyfJIgi8VtciLx6eNUo070+PTsnr2Azr+EmI=","K1/2Gw4f4YzYTjUsQXq1uDZoPyjfHBbijAi8T9JpqZ4=","KPd0t5NrxQled+tlUAWrh2eq0HbAmLj7uoUh8YokhbQ=","DH9tLq1oN3JWWYSsgZ3CyDJsxNOxj2M5ElYhJiEoyEU=","HgNTLjURFWUXP3a2funHE5U3VwN7Jys2mxS7XSKrZDM=","HNrhaC8sEORA3jLrUXJtnbdtB7ZClnW/rX53jMC+4HY=","JN5AZm9Z3pfe7/bTTIc7fCSY8CK4VsVR+0um/gM+Tho=","D90BZtFcD0Jm7XKW26S2OQQM6qaRBoPuRNN7CGefSCU=","AxjuIlTDiIzkU02QkESLeoYq+9/71EcNq1XJ+iT1CoU=","B6jRmhl5yPo0Ab/pZO1dPz7vGdfk0LoAfzhUtJBMXzc=","KEbxWhIUVvD3S1ByESqQ7MVqSNmKegfzDrVTQkoAsno=","EpWtLeaOBbETAx3oVJWdmFj6z0SMoQFAVAeq/B/lBJY=","J0UhDswlMwF6QzBfzRMHjWlEPQ3aNb4upQ/Ehf+PHIg=","DcJ/CzX+wOD/jL4THH7kKiKNiJy4JUxJAMtW6nhJGbI=","CXgJJc2xQpzBfB5wsLQ3VeLnBgKZTpddNMP8McrBmDk=","LvieyuEAaiD3OapNpph7uGbWmT+onkovvMu5zijtWK0=","D2/qsyFRVqw/h4zmfFlT28Tlqz0THulYJ1Mm/5TSmlQ=","IEnBvLA1y1miNQvOzCpi9P22WBCPBZvDjBQJhXGofSI=","CcUpj2aWg2sqZUTJyhwPZEjg5uTg1KjDqn5jWu0g2kU=","HUjsjXhr4o9xvXGZTaBPeH3Et3kv4lglWvdCs0jk6mQ=","B2a6PzYPnLjSdZPO4diQ9XNQwjUJbZ0FYzmS1HfvJWc=","GIk5Vs5gBzRxTM/rxE9nA29RxlKCK8DCN5fXOpPUdJM=","ADrF5qPANzxYN5vzjIcWXXFqygXhTORynskUltx0od4=","Fx9LPQSm6vfbC4bbC6W+fURRtOoKEzO/qjG+j1DaEqo=","GBlVo/7U/xnZDZR8LxV/BQ2zTIR/WfX2OsbAO1U4OqA=","FeUDrmbNN7OlisZVSaod5ZIo9eWq3qcDUWm5gB5YqAA=","D+64rsbJY3dLJ/hqVbRZTVS0swlV41hJDqFpc4+eYWk=","DdlTH3o08aAB1OvHTLTqR3K5VRkyXSmJ/JMwNcaK030=","IZ+1msIhdHlyvOZveMozybrjgwXhGrNIGuvbndtLLLg=","H9YNwMR23vO2JMIZswVTc9cyE92SXpQL9VztiCMc4J8=","H40H7z4Wy+uniSQZViEc+llUUoAfCMh2wlJdxQTFILk=","BRV0FUjro5fRTmJpsyVmYV0JRHFVurABrG7iBWmPFuw=","JTCzfS3RthZgOfKfsdeOkOkDTLbptlP+dCjXaPjpstU=","FgLoadULKAlR7Ms85xcVYomA1kg5Domv9Q5VobvK1LU=","IziHIXr2crus2HPxKFo2EnlrDL94kEY+3lSIL8d0zH4=","GEmzqp5wU8jpUlKFiYCr6PFkLsZoBHU/Av9j8P8h1kg=","GgBJeAiF4IJ0R6+bqeueZY/9Yqy6yZj2wagN3lrtwaM=","HKnL+oCMqchVWUJa8xwK7D5ZNLarUaLqJUn7wudWKRM=","KKKg8GIsKo5PFvLgNltytIExLY1Qh+LliuibNLjMk6E=","IdG+7RC/+Wyp9hW97ZlnSnMxpS+zVmlT5t357KKAFT4=","GHEU8ru6mpkyl710DCc17wG4WrvbW0fEHObs8vx+2+M=","EdCjhndcbmcKNgpv2VfEA7Q0uhP3LO3DnRQIv6c/wGw=","D/TvL0ar7yTKFdizieAs05RNEpYTG20tzpVN0R1yT2U=","IDOOR7Ug0oFEjz+L8AiqdD90xbY/mKYwoAEIRkuyiSU=","JW+g/vWFPcEK76hlxWUxaTl9VF8HWE6uZeGz5Q+2phY=","FEujYZ1fydhPBjLfKW6N6lAXMpVzZhtpiAw4ykWuMYk=","KYSYyN8x3TFTgLNlH+nH7VqvSklQpmE0vItgKUcqNWQ=","GMr54mSjLbyiPaUaNRT7qS+2L3jswthEVXNV7IpDsME=","GUyBKCjxzb8MTwsEhq+0xdlszCGLO5DQS8XxyGZf9kE=","I/k+HEQRm6hWoQOAwjMxkbMQX1AqYeq92LGryAPASuI=","JdLMmI5HznD6mc8YEFAA0wRnF9g5r1R+3D3pMZaawAY=","HRCDYAAjzM3H2u6+sZeDqsxulCJtAMfKRNr9dVYUqA4=","GUOp74Eav+ZX//klBPKokU8J391bl5kRBHvuS2mABM8=","AfltsTkqOuXL/uTBhj8L3f2VplKZPI8XzhiGnCYbxsc=","EtSBTrsxUzHU+6nfwu+QnNd7HnEmyeYlijyYIdZj13g=","J6KtabnrVpe4W0MeuoXbsZhD88dRgSGqSVFaZe5VLjA=","Bm9/KYHsxMRBXaYuq9MjBCSr/tNWcSH2VugZGnjF3fA=","FuKY9gsmXwb47JIn5U6LvPK0gjkh3rRPBjySQw/EChI=","HBCrOcsEzgK6ctmWBJrWiJYfYPjZgh0XFsWmov4KlzQ=","LNfIp43Zmu3BjI1HRStNWy6cWyEo6zc7ggyovuyXCnM=","IzkayfKcGpntb72bv75ytIhWm/miB63b1OMKOouXMR8=","MEHFWZpR7aM6Y5jrMSMlGXl7AHJnAqmKMZx8y6n+0vI=","BOZJCNefNe13+oGW8HqUjISFErU02b9PMO8JPHl0A64=","GSUekH16kDv6e+2H6wS9kh3BkGLk7Dq8noK3+k4lvm8=","GzloHCwSXK6NOMxe9vrCUvT4I3T9W5BZYU7ME08rKdU=","IXpU3Wjc1T4zbOpJ2Jkl/RKP7mW9yhMWWdMkrmNmlrA=","LAVL9vkXdgIN4/uXBbop4N8X1+Gv5h4R7ajK94dirzw=","H4hhHWwCh85TVD2H7YGCukdfbiI5ie2jXRq3RidfpOk=","IE1amCnVcOIDveSRuGKpaXnXHkgOv/uxPEyzr1Zjcc8=","DqyVxoivqnc6zkhWJSeIFwurppphgQcdHRpODdMgtLU=","IkWgln13esUWAIJWPVgVtE7Q/55DBcZcUD4P/rrl3S8=","G3MpBUZq2SGrJDDL33cqgW0c7U3qaBjcPO38Z//l/74=","CMrxpM2CbRnhwn+XDK0FstSZMbrjabgsMAEQQYefKJQ=","J9gTRCPNmHskn0vtx3c/t7cxToyD2XJ/OiHQ8WLFYc0=","CaLqN7PXOdzXCGLOYqiDfdJnwiop6wUO8kbt2E9I+fo=","Gtz7Q2sjj3RhdXqWZdLcz+occ1LFnlrqqO0kuFML37Y=","KiNU21Nf66CACtZll2HymqsxwUJxbhZ3lYPBfTy81wA=","AQMbh2/HBMMpa7OBELh0dviPVyGhEyunG6DcQWhxmm0=","C4Xp+2ZMw7TuU5k2+IWIWuVDxgb9oAeu0gJXyOTuNZc=","GAZ70IXGDaYwqyTN9Bmv2gl3iRLVx26/2d9+z/YgcYY=","A3cdvlwzQP0omRfW+smhVLbVXWNVevE9m+pxGq/F4ds=","A6EgOBsVlnzeGjOTn8p4MMqhrx+61tbL1GI1khAfH3c=","BAMk+61zkL2Yw1UyMs6mgdSxi+hXkxIY+70dOU1n94E=","KUqTeKzPcjwmJm34m/8aK9txDxmN4WiJDf1zrPeGzZg=","ID2GQEZjMs4MSTOWcxojuF93zdlYgMRX3ZzUbpm/DyU=","DTOUgc9Sqx9lLsiWeol3bpK2qhIFZ5TJ3IVvwn7JHvg=","FYvkIXdHB2ooqm9hfH7MYEXIzlxISq2hl5lLYYs3y6A=","LaoXs1rC6iHto2uwbbQKf6gf5gzaVW1zEh2/F8igXr0=","Gi95A71kPGHMXraEVSAvZhPJwDvDxZqM1/jRCwx3khA=","HKeDX08cXzWqHgBUr7EUdpqCR0svn3cSJ/Ai+nYrpWo=","BDqzyVtkzvp/l+Hoq/nbJdZMIhO/RLAbAAX+4GeAS+s=","Du0WlAhs3W3YQALGk2USDMIxgoMibrfb2cEVTlvndKI=","AxtyaqXdpFb/rCnNOLZJJr5XobbB/Fk6UOfpzThPfvM=","JlLPv5ARD3cndQ1o7qt6SThYhpU/dYMr43XDfqmtZ1A=","JKWNCHrzgabyewZV3nlbanvnNPBaT07e8FcieaKKO9g=","GwTT6Sozj2vuuAkTgtkxQbO7PQMylEE6OY2iRGQnKkI=","KQue4Co6Ke2pTOCKZ1IZHDwpbMLARO274JEXI2CyTB8=","KgEtL0QVRckU0l0M0o+oEEzaKggIRcecx9DzkUaws1g=","AdTlvBgM7cuO8KWdJUmKVC4yTPD3Eo9wfEM+rB7e1H8=","BUZZ8BLsi3V7HSoXWp+mQ+ljI4w0ImSun8OaaddUYqg=","GfwDBeHlsq/LhqdCFSuolasCSsWce1flNSJP+4B9xyA=","IdH9DCr/zmdKsBZmGiFvBhW1ux8/w5henXTdceqGrWY=","JpVtk/AXdtI7x/HjRkmSWBrd20gXa8uwPvqFOrCcOxc=","JAMSDlpoeJW8vle1sR+6DZY+sMhj2Kq3QRL1Eu2K2eI=","JmhPqblUiwiseeehS8KPjUdlAxLwYppAu8zbWQopjPM=","IWlpwiG9w9qhwq25vkVsoZ/LlI3pcl/Fl6xiaWhxXBg=","BtTlQ2LV3HzUie9GZxPBuKcDh2Bi7QNmpHWumsB3bA0=","EMIev2QtOKrz3hWsSg3jtxq5eItZBKeDJu8Jmh65U/o=","CkuOkbAtqUqmIaz/FrvdRPB50psgNKnh3YvicOfjqAM=","KxpbUrXxxzn44WeoVht8WlZ/1Em2HkqqKWXzF3ut978=","HoWKHtsJfxaPELkTDlHVpPO1Xaf61olimPFLt69OY1Y=","KDYsP/ar5PsBdFDH3TRL1OCBAK/loJywGHcmWWeq/NM=","IE4BfULmsyz/IJE2jjRCAUQIVHYaDNRjdmBB1+ONzUQ=","GCMHqm4Gvxsgy+U0kToLVh4xAxbiNUDzXxvJ7kN+kqo=","HuQArtK58e1nqBFkOMy3vbjReYaMH9am3ZSXdE75up0=","KIWQrNMx9Eme/C5+iqJlbmTL8KaMfZKMIiDbZD251BA=","AIY09kmz0lAiohJfXzANLM4svhIt9PHFEpbmtl//F5U=","A8Riz8tFFp2c6tHQcVyM7P/sd+pEmiCIKur6Su4nTmo=","GP1U1JhqLngEy8t35oEsBue44oylGuMj5W2QlHgqMM0=","Abnv4EqAmkPGJMcm6SlL3NO9HpfL3tdC4hc9P+nkKf4=","EJylkbk1DHGn8ohsblViizggYiOlfAeypEkHcckh4uo=","D5gTTpB3Updo5Ow9zktiymuvgZnXjH419FGRKoD7G/o=","IgWDSrHIpm3hvHZq3uGOr2iaUr6uhlmtTQtDe+wilSY=","KSpsq6Bxuf2PtfDkbd5NcRu0oRitDGfnenY3VEvGwh0=","DyGKxjqJ2W6jfWLqA4fBRd8vFJV7z1x7Wyy5MXqHF0A=","ITk+Xy4RIRNqJfBxRly4WwKy/hJKjk6oMYGJGnELClA=","BuItaUZITa0/StDaQb4R2iqlRR/H9M9sxYmCeKZ0e7k=","HsgRfFWQB0opoBkUDv0cYntxX8Rk8desnUfwl5pMWcc=","Dm9dLvgpRd+zkuRHE4vJTDK923JIMFWgVjREoOT23XA=","Fpq/yz7pbX4C+XEercCp4kpHovn7ESHPjG2s2RpbMso=","LR3NgljSxVlTXsYoYXiN6mDdQtf+4MzNIKauQhTSGZA=","H4pGzsRlu6lkSW0lyvmjUb59CaYo/5fqxPzu17/tXEU=","DdrldTAV58HzsH2uS+d0c5jJuYZnqhP4D3aKIgRiCyg=","HZYSBGlyeSA/RyHdCFgkTyzGTFy/GkvxB3oELr8Rr4E=","JhG78ZrduX9Ldhq8pDmZpLmNdYvHTtNxm/ZbFyY1q70=","LJPFxbBX9SwLPVQzhlnwXRVm0CjBgWv7/PkANZO5gZA=","KpJv0+Bmqft192/QKqmZaZmgkEUNEe4ah6Hg5lzSh/g=","IR3O4P7j+Fcf2W8rXFXeETmAf6afvnkhZWP2xXCfcuQ=","K33cKLK8LScY6da0x5DVWDS3eQbeLUzoswGsNdM712E=","F7pRWTIaGA3e/pa8nQ+at/RL8uVRdLagkCm54/2D4Nw=","JeErYyYhOWleUKHpa2SANTpt1qG7mAwg+R/VnlGKAw4=","CV7KNILigFe1QRjabEWj8PWuU9Z77MT7DKLpbiQQFrA=","ERKuuWIr0uADBt+nYIi6h+jZz+uD11a0CstEVOd+OrQ=","G2lQfeg0Us45d6g+AWSBFK/A9Bl0prqWL3fafuA7I1M=","GMNqIn8wuovoNQIs2giR1RsgSdzstSYcAkQzY0JoEoM=","Ay3/ZQKtvz6uHtsKoqFCwjhyFt1QGsqhijVlESw87zA=","Bn6bLfEORj/05l+iHRi457XFXSF5QSB4UNmEwmTqZLk=","GGqMHd/Z+2cxJDpsGQ10wlgHYlT8TYUbtnwVyFXaaMk=","JfEuCQSvcw7GiSASLo1+g+bbfg04GNgqs/UXllKs8aQ=","KSoFO+kBPzdBVkVHJzKcowxQeBt/aDcesIKXSRTML4o=","EoZ7tUHqF8UyzeFX6+L/bwo9PoO5VuYZlRzJmvIuPXs=","Cd0qdXJqJl6Yq0LKDQE+e6LhWyYQBRbg6rc3+3AEm1Y=","E3z9AFTbrmtjW05PnmF1Im5clcReWyVBM0+U39k7Ig8=","DRRjbXt6/RGG8LnVyPjvVRvqx7stNrJUNvBL99y2Dec=","HbyBAC2KXK4f2RBTLwikMjw1eBwrkBvXIrq+Cl9txhM=","JBBXsNmXfqpQ4Euok3AroYLNsziMxjKQf0wggYNNjaU=","B8p1ydUcZb/CypnJx3O8orrXtJg3C11Q4nWojLawYzk=","Ffq280ro0ive3XYGEN1GPYgc74zoL+SgwPhgUC9tPMU=","DPhG5nq4Fbe/slUAhzP4tF2Dk45usNvRnm1TfqpYHgA="],M:[["Am26WK3ozaGI9J5S/OcWe48hnb2STXeGsPmPt5n++i4=","ARoTGjd4w3dCM7xUCWQZ1GPTq7rhgyKn53pRGIFmX5M=","KhirTcR3fhPLg1jBxCMVNXDRy5CVRCQ6vazUVHyOw6o=","FuvXgsvPbWPDi4eyfbKkpa9YR6mmCInEz2qjGNaGax4=","ArftR/rCddNPhC8JsB75QhAU3gQMJqWRWVsie6e8b7I=","DF5J4xn7lTUHPwf54FWsyvPj8ko13LRsq2ffxkjvrzA=","AWHkrlstJM1ji6XDK8Ixe/kNQE434APxBV2aluQG0w0=","Ijx/xtJPxT0bQo7bjxxS0gzuxZIYfSx6awsUe2KSuB4=","GuBg45szjQmEXi6evrcL+3TNSvkmIX9XMr4rbLf+cqY=","BGGRq0HpOSnqUfGQ/U53OsjVCDMo1LLwSCjco+aQmMM=","FLobU4Pjczxj0Awywrv/2OVFB+0zv3VEyGOIGR7KPkA="],["AJgTyAP/hKNpTu2vSxwhcmFSddwYymVMeZpwRAlGzPA=","FJWvA9yRgMiG8OG9r50Y4y5rDRuANw58vldF2vxDNSM=","DZXoz4pmtWwy59EeAQfkHhKXEi0azEEzLxtJiVo8l/w=","CwXxYQjEYWqXOwHYLlDU/J3NzOZ9LSH4UoFr0jTphys=","IwtiMVswvEnXPf+KneecYg4Dx0exTEMvFwcV5YjWBao=","FdIXoxeEdBBI8ybhVa+W6QtarnNPBneeaYhkA5yS4SM=","CvmvvsrhdhzBfUS1HKZtHb3q80HoXxCClY+cty97VdQ=","HaT048Z5CuG4nEEYhh2MoqUMyCpOfx7TxbqMuUS6Rok=","KGCqUtwvlnwMGguUKsgeAhidAxQwwRqRmlqolbz7YVE=","Fv8z1nyFEhvO59gc/xYYkn8ckrTR0hwqB7auGLK3ubc=","G6DoNfR2JrDYJCaQDEkXCovinDnZAzeqX8EHZOIyGhs="],["ACApc/f7pb0h7Vi/5xVteykBDUEJD2PxuykMHV2hrWA=","EZNExTcH8AJDmDxtAk/Umg+K+A5YcZM+WP+Hw6H0i5M=","B8IvlvL1VlPQTtxjFQVnp6BGCbC3nuz6yxSF3Ot7yHM=","LzlM/T5EJQPDoiUSqkt2uVt0PHB2ykEVqfu7fGsH7l0=","IGNRdQA3vckNTz55GGGfxpDCtYV/i/vYbXwAHkzyyhg=","GszqCcK/0X9AYXJccS/Rl2oH53PlTZBtoWYhUgGlgTY=","BeUsD/jASo5ePH6vodCQL+Y+NYmJNLAPQzOzj+YU+RM=","LnCLqviUvFg15f6oEif6jPrvmQhtErCjp/P4W7ymHSg=","CsI/AP8BW6qxyL6akJQ8PHLReBi+etQnxF6z/xgocn0=","AhNHmPTKf7mSgBLJN/N96HQyuGZa7t83Pn/6b+DBPQA=","Ahn14opfpSaJ0re+QyYkKAyUDJv5iDwfsP6Sn3iHPBs="],["EjBerfZNrCSnkTpi2Vrv1F9INVV2xnHlb96cx8g0T/0=","AKkr1qkZ0WBWFXhvLv6AdDylfBDsgM+5JnIrW+1Ai3k=","D3FsVN5BkgxAGmLfj5GG4ZuVI+mGN6WxE9YczDC6AhM=","ChV+JE+TkSXVf5yOZvfYjsD7PAW5D1JrrAhxvKhGd/U=","Ihi+hh1STq8DuUILE2jpxap87+5y0ObvgHMu6dfm4sA=","L5vRnQyMOIen/AFz+GPwdeZrGDrYnxNwSTBBbh1ct+w=","FOtAHBCEqd3NXQCS5dGimaoPVcNRVFx4FwPAHOh9ayk=","E/4jviQmG6W5LTY5ifWOF/zu1KhY0cYfws8rcdvbaTY=","Ay+i8WZiLwV/YalAXJJWIjyrK6gslJVgeSF1WrAY9pA=","Ku3b+iRXVq0eFlhin3R7jadZOxlcyVAyT5Xtye2kKq8=","EjpgVWgQI7FlcMcPzfOujjh6lzaQueZ2G+IvmUHX73Y="],["JceDrWbWofxshHcL1jf2IHCX3/sDeNfgOV+MC4a1Bfk=","HH06ksqkNc3ZdFILtvtsrIFjTMm/TlNN93c24G12jDw=","LNaPwxtn3EX7axb0K164nboq5+mqUMXxkVJ1qBiHGQo=","HUVnwS22SNSpxBMkwDKTJbdqB3MPrXLvnkkKdIZ0mFw=","Bp7k6yC0hg1K+Rr+F4Ezj1OqNUVi7Nhz4OYlr3B0byY=","BsrQwr1DjE26LtZLv3UGbnMUhMNtH2c4tumGAen7SY0=","Hg4WbXNKphTGtT209pEXmEGjP4EFQwo+5wq8qDum7G4=","HIeclCjhlgfWR/XvFBXnb3xZ/QHlKvuASGCBhR+aUoQ=","IVwM1OPxvbSCuT5XGHnXkxvpACPXoiDo+TshyK3UH/o=","H0H8Z8oTIrN7eqAbYx/RkQUoH2xqTTf79o/BtfYoAsY=","Hc42Bir35LAJj1WQYiztevnyjojUds3hOR6zBAjV0mY="],["Ii3rYG8TzyjHOmchbYixb1lY1dKSuhDvO8LBD1oLYT8=","EvuIoPb3SdaNqSUNWt7PCIRCgnJI1n+Yn9FLXJzU1Mc=","AGYpLmTmosZGc67TZctQ971OHTtScPay6ZglkMP4QA4=","CpSi18QJPGOII7CVcz83F21+dHuiRkW1FawqJB/92oE=","CiJhKNodm9WzKfVfUsdWgt7zNpqxM1nct9IS7vyoYik=","G12oOWY2FYbogQ/tAyQ1yqgKm0dtshKQR07Rl3/O8i8=","L6dd7tKB23NPq6W3Dq9Xli+T4u6h09zuNMgasen8wO4=","EoyzFQsVy8T6qxS/fWdu82grUsq/yNNBnf2YEJ0Z7MA=","BScAsZ721C6jkuBEoJTL/DCO6h9y8qNCix5yG/wyxq0=","ItHmTU7hXmDEWdhR7580lek39akJkDgsl4Z8RbeUAHE=","JS50dGZ3/XWEzrD4qmk2vQT5Uo72AHN+mRP+S1aY6yg="],["FhTQJUcncf2HCp6dQis1ccVJTn1nmCTY/hISF31fouw=","L2xOCXu1hRvhK74scSwvqQbzELeASNaVtKrTAf/A0mg=","CKHvZfUhKOs7It8rasowUJsK+K8veIju52bAwkhxGIs=","L28UUC8g2Vip/yO2lsrDriSWdReuiy6Vktr0UYQLuY4=","F860KhnebdMuOzjMKZDmQnO1KlYYJj7r+knYRRjqO+8=","KtveXHtz6afiK5E/meQNleaJxlxCjCOXzSc5I89o3b0=","FL/jMRXfKTZwOT4dyNpNaUesxLYCSeWxyMrjdmZc1YA=","K/UjzYqjviDOfYkfhyensktypNSDhITehCrMeC/YvTI=","AzuTpc8V/7r6JybyUngkoRr45C4B06fuFZsnPKCmUgw=","JJ9Bb65atSpDXWUgEAbdiujVQmbk1WQzB1UZAkI/fMY=","GakHmpiXojcHQlJ2eRK+17djWujKDt4t06QqdcHGuBo="],["ATWL3Wt6UbH1tdCU29juCGzNz7nCf6rQgG6O9xjQ4rE=","HAbHgvvAmAueSTsppeSgSu/GaM1CVdbP4gjp58i5ocQ=","JFKWOOvN8m3ogWKH/sY3BhThEuEMA5GQwQOnXO0RtCY=","EmQcw89Qyme8k7yMGe2J1GE+nigaUc3zE8vIERkiJCw=","KQEt7/sRLrFANBWcWRYvhm1KGAO00ZKkMpNZ8PkDJm8=","GouK0ey2y4iCc6kL74saLPwD3UTgsosY4QdOQEqeD0w=","F+oZjzqyYdoAAVLyaw6w6+CIpwnosGoYo9whCMIJaGQ=","BFqqmc4eBqPAIVCASpEIf1ekO3l5d3PoMhbKlp6HM4A=","JU46zbx1rFkmebAytlqckdLgkqteVxlVG12mNbE+lHE=","EqmWq8hXcCGseIDBbwWNngbpURGH8Krf9rtkDkMW0mw=","B3ft702RUg/NSQoi3Faal+VAoP21J7Sxo6hU/jRrjn8="],["HCAH66TRYphGu2lASsyEVl3l0kYg91z82fEf7us/N0g=","IRhlt/nBx5GjPXA60ygPaXVjJDSa/IkSoZuD3izQagw=","EuS1QI9IZBlRc56iflIQZyQLgqpRpC3i1NwegiWQgYc=","AhhcekrYyyHxkAk5bxNKLD/WFNMF5HXd0Z8m9tSz+c4=","CcSy9hrfJFJmFozJGOlvf438Nb0997I/xkHvAbzHHM4=","KB7KFLvDkgkZ4AEVBFHD5E/xjh3RFxQS/15mPXSgc8E=","BTPopFS4zW341I+psKnLKVKTPhprHUI8vFTQUzpyWZs=","KEzPcIWVR/y5w8e2TPCtYuUXJuyBtY6wHBofjsep63A=","BPpWIKLAV9xVKln97+UKkBBoGQ/cPfh2GZHKtQoBpEk=","LSZAp07emvbJiI5faKhPrJKxMzfa2PxhUvqzS1VBmQg=","Eho3ZCaf01zfHmIcPcYxj0e4YjgLoANXhJ2IQAWUY+4="],["IvSdckQHfkH0CcCzU6/RaW46oV/9tKC9uIP/56Gochc=","JVQuB8HBOXm7FPjU7pPat6PcdQgGzzfywC/1O0u55m0=","AIS4ixzkWYtwHPlqM3mgKjFX1Bk8io8RV0WfajTsMvs=","L22jhUUJEc0nLhNgHnzmbCuR2AkwdJL37leK401vX7Q=","GAK5flS/Ool4Yyy+EOQpcFsDaAMl0m6hkMDx68c2LqM=","AFTMgcfR1ZWB680msWzL3L8ZaNd/h6IIHRMFT1ERj3w=","GWgbQkLRHiiqclMM8zp9FXGfGoiP/2JeBGUsd+4rLeM=","Gr/ksc9dsp1AeOUom7FDSYq7vcmvVnIEcKJqPforqFU=","HSJ5Zz9sq/ChxLjuv46ceDYWgLLlnX7Bk0iBn1s9WhQ=","DyRtL7tOEhfwljH7yHcIJ8NnUeatjW+xaBDjOVFDrYA=","L4DKFRsHe1B2coHqXUwfdFf42kRN2hbYFJu2wQYe0Ko="],["GVFSOkJwxUQD3+Mhj9PUzO+kMRTxsZ+ywoIaQ3Rxi50=","ErWgnh6V4NAfvNI0+tRz2O4rqXb6IoJ/+m3QPIslpk8=","LBhOkE17/TaNRJW54wJ/mva5MTyPGT+SmsniTRDXo28=","FvxI5V1k2DAQrVczd+okIjl/w6fmyIr4CKVm3gIj8MA=","LbGsTCscI6AAJ/3PD2Y6+JbYdBW7A1sUnSitPamMb8w=","FwwFpfilXVyf3F6COLNnvjWJF6GaKLTEfkbz5z1CoIU=","Hrf25VICFcFeJ0NVsZu/cau/BKpCbNB9pTbLP5Cfblc=","FBEadL0kcwyDNpnrQbOPHU7Rb88P7MFlW3byQ31KDJo=","LUa0jlCQwMVqOQ3jc/TJogCNsxH+MQY89P7VRikRNYU=","FfMOvfuLjuZEJBA5omtAjceo3nfyzG/tdUtwPqkt3lM=","HulQxFoML0pLZGiKeTXtK2PU/ltBSvoFwaKEZ0QJ8WU="]]};_10.default=_default$6;Object.defineProperty(poseidon10$1,"__esModule",{value:!0});poseidon10$1.poseidon10=poseidon10;var _poseidon$6=_interopRequireDefault$6(poseidon_1),_unstringify$6=_interopRequireDefault$6(unstringify),_$b=_interopRequireDefault$6(_10);function _interopRequireDefault$6(he){return he&&he.__esModule?he:{default:he}}const c$c=(0,_unstringify$6.default)(_$b.default);function poseidon10(he){return(0,_poseidon$6.default)(he,c$c)}var poseidon11$1={},_11={};Object.defineProperty(_11,"__esModule",{value:!0});_11.default=void 0;var _default$5={C:["FRLfATW2aSWJ8HEUCmB0nPd1xkKzANovtK1cbiOtTl8=","KxCa4DftMDYc9lRLL0zljzVliYltaohJSC7T+bZuEZg=","Alhb7OBu/1U9SFR4oZ6xSeIRGuTh7LHWH8EM/hwHfzQ=","Af+Jb0wGYvSyrZJnQbSB0DuBOozDQ7nC0rxIGccLLzw=","GwyvAvQ0+j1M1PuxPTEWrItzhqWv1sZwduy8NwSqRdw=","D8t8nxPIVRengFiUrIK1fAby8VOm9R9g+OUIaE3+W80=","LcK99/Q4EuOc7yEOQukrSWiti/VUVBGCNUUE0yy/mVQ=","Ba3Z3yDBiY2ka790WUQ4vrB8mmVjXJD0XAoI/rrRNmQ=","IcraZkFmTaqZf9VazouIGRzcQZT727bKWJVEfIpYhZ8=","GWI1BFiaYPBYsESJsVMyTRbtZmZ6BN9XKxA1kLhIvwQ=","F3ZELYUKQ2oAXgLGR1ty/S1fhEUokMREFihI7h1X3sI=","BsFpH9bS7pg5ZhDzyGjXCHTyTv+FOTjYf6zokjSgmpg=","IsOroV86Fwob0RdhzCF5Snr7NIpF2F4wvFIniBST9Fs=","H3exjwbhRYh3wrGMrk6SwZbAvg93m55jsGxI6QsCdPo=","Imw9/npqZzGcHa3aG07wTkX2uAp43bC9Z+Nj5juFxUY=","BW7746reaOaIarkumKPSimjKidL7dXBvaUagCB8B9iE=","KWQGRR8gHA0JWHt/TgCn0OGUAmDUgxPegH/C3w91XX8=","IADgtgErIPCd+O7SWwlb8i514qnIfkeCh3ALWTNW+Es=","In83ZrZkLUTG2DahfDDOz/ZUtUSuhjaBjbjifbEkrTE=","JARkGy9drZciVCvxUdSX6RmYBySbiGyXXyY4XfslSnQ=","A3STrGTR3rNLm4NJDzUXDEIS0sMJJtTk7+5XuqZSun8=","GOoHSI8CxpJfSwHQG4CcmmMl7MfZx5CSK2jOXnlBWV0=","EZUr/LoGRCs8Hr2Vnx1MUfmC8h+ZThBcJXj8Sv/5HJE=","Er4qMvJ6TiA1F6sgKOZblJ+JbFvs/lfiTArwT6xyBUQ=","I+gJf2m75F8C+uxeJtxSOgIVO5756LucXxed/jA2w1g=","B2P8S32pS629l7qTNhPDU07yFTaucIXhI8jT4jI1E24=","J6T70cQ+CsFerJdODOLiU0TEbDIy7nExQZOMsBmz+Qc=","Le5K2lk9dWZU3sErhr+wQa14WlZwdhH8SEX02Enn+G0=","C1FR0N32GyKRdy65Ok4+IR9SEkM4zHDz0e2VsOnaM1U=","IRbibHCG5wyAZgWhZxOX18BzvQFtNwqzzOfGlafu+Ws=","CUGEkUerLNjRicT4sXtalzHlXy0UPwp20AAjo45O/l4=","K6B6b4TS0twvGxfiNS3qvbXR47kuQkzWWXx32f5nLpE=","Gq/vei0vBRa074zuM7To+joXdv0pVah4710ifSFagHE=","GUNMyG4vU+XbPOv9LbUrQC+ibinBO8E/MVeG0Q6gHa0=","B1UZwL16bm/kv732Gt3elNuEJ1gBk+KshRc0mAW2Yjs=","EhZdR1zxxLr2Yrxs2HRPmqSRSh2eU0d7IR6FPu+94C8=","C69DT1bLa70IoKWHE7lJtUxEHt5T7rDE+aakBHva58I=","LilbBrvvdabXbdEO26Hrk7KHJhvIRW7ZHCu9CZhETq0=","FGVnknGAysCncdWDDxQx0UzSRF9doWz5NEQuc2WEfk8=","Ix0m59PtlFeRpSAT9G0C9fTkbBfDBHrK/qvkrQLLxEw=","AaL1zkQGJG+9QqV+bVrjsiGSYeNkz8Hyo5KUj6+uHnY=","AGYcyKOdYL6bPIvNgdkfqOv5rr+YKcJTOFz58OPnazk=","H1Zdpw8E+W8ms7NiZfl33aCbQ7zImIkw27IHn7KR/LM=","Ev1G2TXUWlyEia4MsCwvwCFLQNLQ885EKijXZKn7CCE=","KSQVPc9HoVvh+mf43fAOxcgWhoyOkbAp9K+9RfxS7Q8=","HU5h+MZFWAnhm1Y9FotLu4epJnQ0b5/WKOpdIOug/0w=","LE56zsrKji6p/YSb5WLU1dlVhk0VL/M58rLHzMtOw+s=","CAMAhJ8CK1ctYvp4dYO2ybHqdSDzzEJQq/qLS2AKyYY=","GTo3+/02cdv+dZOZ0BjfZM3kX3WxdzMpTodZajBIeM4=","JeJWNoiVfPYReKXwBzq33SjGvNEuu7mj8GVuoOu4fJg=","Hg2RmAxZplJGXOcC5Ojec/nrQhfq4lFFZqOdtEoJ1RY=","E5GyWNr+xZR5nfqBdUToqQf6eUr0pBH4m/V1LzZWH7k=","EsMNX1k9SwuA/IyWfCpQxEgopBdRleR6l8vq1g0CaSU=","IJrIoqu3DrM/INXuK0TvcfL7MXpMvwBMieVanjeqmt4=","C8etCamLWd0Wd6swMC/fDJDlRQa1CExciWkaNk0mjqk=","GnRizSNTo1cBWSocVP02N0fTAizYVIq4yDjIwWNAGmQ=","DiUdxv3Xa9vr6/cICNBSUEIE+rVMTvYxWdBk1o7F820=","KqqFdx6DVZmxPmxDwCKBZ/zMs4Cq98jom0YQ5Yb4+fw=","LEKcNSGawDPKn/VDb//EnDugGk6ycCWfbpo/HD+2FBQ=","ARpanjiTSlkSu+5J1QlWTJlL6dLj62FUaLIqcvwyTao=","IqckAp8AnHW4pDWKp2NtE+rr03zHlYdJe+j/1YtLbA4=","IpI2wVuxkyfSREV6MR1p8HAnzZX8FSqEtuADuEHDN78=","ME5LiglQo5qylDw7aOtvFoUKjO5Fgv5KiCgpY1aBFpY=","CDQXinXQg6Ex6tCUJLPj6WneU7stIPlAEIg/g3yZ+eQ=","EFzEBey0CuP3nPW5vXan+XoD+aB2+KGiLBD0SSBjBJ8=","Kje0tl8IyK3bU+jwJMB+R7KIWgZaNSpGo2FUnh+Poog=","EHjA7ghd0b0k/nH65CbX1rlpfZThenJYdXknqGTPybo=","G+SburcO9npdThcGYkoihgzaKG3sfDosmcC18jXtfi0=","BoyoLRiz59u8dpopVZsdh+3QgiOE0tTOmw7+LGMxbz8=","LYmJNzpVZjnjPymPsEmCSWmhooS2AFPtuXKgWRNq1x0=","DT5BbArhKv9Z2N1c1dxQmt3T9jkNshZ0LFF/LfcVgd8=","FLKmcYH72cgTx7q8nR96fx/r+fUSwSq9DfNGaim0m70=","Is/pMEiUz3moTLsbbgtXfWg7Ak8NWoVdDIahvLQyvY0=","Gt/ppk6AKTMevS+j3vKWH1yVX1lW1hs0wC0LBivdKo8=","J1Gy2n24cbpf20DgvNp8q1sVe1VVFoIgzzt5adYTz3Y=","BX+QpMCBMEGCULeQI28j8yCeiP/ivcaiQKgS87Vxq6E=","CtdO8JdxCZwEDCxUZxl4PDnrr9XsKlX8g5mwSrkig54=","CwDC+nYTtS4l5KbPYzozNVut6kNcu/72dSPjs7G3PvM=","J5U4G+aU4JkaNp6ObOdeffGNOMQ68bxYjNxl7Y6He4Q=","CRd9GMv/Wc5n7nbT0Q198S+gux3qZgw86wBqajAh3is=","G8d+VxiCbvzlKoa4YQ2UgAdGR79LO5+jcHtoHBqFWkM=","Ly0Si0LTIQLQV2EkCBfsu8qgPS+kXFyy+CwaDASM67E=","IVv9JY68eTUqek+qusswhA9+s1ft0haZ1bMmG1diiAs=","DmszK0rluV1Rjmrrt6B/tPwJI103pBM6Ub4X++n4J0s=","Jyk2dz/Bo4qoL30xcqJHe2AeEBWsAZjcKICiG7rGVCA=","JrxNQqF6D/yTeYv78uK1YcFadGDhr9nCOvesKm3gNCc=","LQk2If1Aq3bvFv30mnkj0tEsAij47bm4aVloRhE2f/0=","AnW6DioqTDsfXXGLW4y43MS7+6G3BktrODMNlQy6DoQ=","HtY4TKneeIwjXH+/DDGlm4YaUr/yhHryqyJZJIeHnao=","LDN8gIv+DSyrVEvZrwHwj5FtlLfOBymgjMTvue7vmOw=","LT4JNKQ3FITJWN8el+fw85hLVmdTn9EMPo5xJGra0Jo=","BU5CWqAq2s/rcpyunfGQfkFhMCKJRnyTJ+0I41dVzBM=","AklX+p1I+UIHPvkKVMsGMsiaQz7LI20Y9X2sWv+F75Y=","GUtWGpEzS9DdTq7PuU8D66uSf+V4fxcjwlNZRLL+aXE=","H187t3pIeQXj05smVrkeCoIjImo8wMekc8/EpSx0rAM=","Gzo6/tegghpoT8DQ+a2d+jtVfGVCv3u8XPAb0zacugY=","K5Zhndw7KikvzrB+KqgMhq1jbqfW1Lq+jSlH4Gk5BzY=","C6MeLR6Ac3SnEM2/gfBa9Pqtzojq0KFliwtIFAZhMXc=","JdfVvct0uSt0pgTW+rOy86IorSM2Dk3vORkUboxE+lI=","HKn5EfCwjRpiBZJc3nql/TiwYQlWIRUuir0BZUOA+ts=","GpDU4JCqq/ZSBTQ1483qXepkUn5chB6pNYgl4hkbSLc=","DKrzt2kJsLHhx/TsST8nUB9ebwg2noo26sQG8px4VOQ=","HI+UKG4ykGnR6AtFeHyzCM4hSwSZmzuZUx0QP9JXfNk=","Gs1DJx1LBJdttexCcA6D+xUTWfnyYKW5dwhz48uYqQA=","BGy91N/ojGd5G7DFrHSbXN9Eo6h+hfx7vBm3g5ZHpwQ=","K0sDz7RIfBoZ18BcoVEzvinJ0/MFHksB+k3Fc+7rwq8=","GpoB8AQKO+phJJRqd+Z/06pPxv8h/1+0nIUqxZtl5cc=","CeteB3p9ARBnOmF+WTaYMKzf7lDeWCOuBojmBxQpK28=","DQBs58GH7GRyVi0hLfwp9hXF0RkFfODHIWIK9uRmb6Q=","BUvI1lmzEAGipSn0VkCpmNyq8uzx/4/T8gb+NPqEci4=","HKH/JExRBuqIBFEWCBwgHGMjaYxraHOBZq+Ofz+N2bs=","BPJU3oCT8/szMN10I9nZ4XNXzLNKPBjpQBlidhDKsds=","GPpq+TQQDNoBI/7gtWNraTaS2RzIMvh8dsBLsglQFT0=","C8F1zWoK1UbTMpjSfSzhj/xplfFT9r8FxZwJpO7qsUI=","Lit5KrtrYxDizVsYj9zPUwKNbKcGBONlaLFfNAjuphg=","Ehb8D256yPDqWb94QPxyCzeEjm3LDHfyU+LNaDOqOvY=","FTgSdQdBc1Qs0lC6fNptG+bBLESvKgChH88Hh0IdigI=","JapWLE37CjjdkuAgtNb5snaTQfOB3pwnrw7aFFMYO88=","GayeNUn/IJCUiKtyim6I0QoPY093F0KlF+ALwsx8vjw=","E8AjOUYtCC8T7Mje1rK8smqABamrVe9pqR+EfnYL8wI=","H+8NzY9YWPJAyJhgA+V3onajUmxrRfdUA+gUoLxiCh0=","Ax2b4hJCSmQ8bJvxRNgaBub8nWhjegk4ic88f+5ePqY=","GmzKB+8w00MUBHIU8ahylyi43+jA5VvqNWSSiwfeQvE=","LTue2pbPGG+OC14URlQygZMbJgo/8EPGbPIy9JCcEqY=","B9pYMlllvsJLTRLWBvtFY6I6Ew6Y7uf3dmpKNVi11q8=","JlVXHCP38c0b5nuyTUxOfMZ0uIS5xY6oFl0pNJMNb/w=","LlupXkos5cQz8VqwoCaxq8Kyy6JWxhcGtpl/61d6QtI=","MADHlZ3zHuS/0RGMeuIpBtqNgC2cR4VQUBF5JjQryoc=","EOE9CIHSewjPW2TO73LEKO8QhGebU5sFjIGhcAar4FM=","K+KpOzcr5mTuv4Cd2HPHQSKss89auqbCFYcWAbiI9Ik=","ITECGCF6cmzIUMCn3JGdKf+oth/2BjkLLrDsqV1EZaw=","FNkH9HBwdUIgW/143ydL3yTYl4lZtE2+nfen5SEUp+U=","Baz6HoV9gAHOMR/TtdnrOhyS/G5drCRmwK8LJ3gWo94=","Ej/+YdF8vWYj7Uhq8OuOdtBN46d6SDxmKwtcuYzUSdo=","JjaKopR0ZF7doeFVpc8N8e7JX06JVlCBCqd/S6cCevc=","IQUOIGDc7rVjZ1Eq8/oR89LmvptycxJVsFvl/ueT+IA=","Iu4NkMfXFTJqA4PHq/aCS52TavKWdWEpV0vHmvL+8KQ=","DkV0Z7rowTL2h/wGI1+pKguyw/3h67vubvg3KfJfPCw=","HfucsAAqVuOLc5E2NvpW4mo7TedRk51esJo0MqPiljg=","BsX2BIDADKYMAW80qK4Wa2k0MZuBq0snvrRKEzg53BY=","AShJBBV8BxSOYeVil/8E/a05SmmQ1OR6YUoAmZ5Ljng=","E9EDAKw5HHj5whXbxdLUYbYs+lo6xwppvUcL5dgs8y0=","Bj1lhEuIBdqo/XcbB8J4QExyi2ZesXICKXJmxCKpYYg=","FeO/F8UoMO0yVc1cEUnzYYZB1uf+30aMMF0IIg28ijg=","Er9d1cPKrRLgh15X4ZsQdS2WUeOl3aBcD2blv4+qPfA=","JDw7eX6DGlUEauiRYVj+U2SOIek5QA+fXrZ9bAzAlMc=","AB4o+ps0wsYVW4Qh7dTeWMmdHl6B6SNF9iMZq5bfA+U=","KtHbpVBu4GQGSWNSe97NgjzOBJSobqRS2bQDNiPzhrw=","IxN4eaAky8G0gQ7lTH+bhQRnNBRfM0p8weSlfHQMjYI=","B09vpilylo4iGJOEVj1nUuMCNdoidUgbxsOwVpN8dzw=","IrEKUlNxbRZaZwc27iQ94GJ2GTeO2/dRtGvaCxLczPU=","DBkAQPHk6qEbT8cEaZWYloCEkXfs57/ve0RlE/nr4RI=","MBh1hSya0lYhG3+fMc7Y4iVhiNMsMHLFGdcGmw0Q23Y=","HA9n0F6/1lDSLerXoREwMivBJy766YuFyBXbazGN2kI=","KG6aFzZPNpRqPSx7oGEv7z+sYLDa626XOqvrzlh6ePk=","K3KUaBJuqhAfQjO6qgmdAtsU/jXEhYDrMWXGHdvOtS8=","HzD3FAal2pjpKQYstI4KNORz6DL8DOgRwo8Jox1UFvo=","JZVG+EGfoVl4qzYAhP4KEyKfwR3GmNuLuByCLiyDIXM=","BuNhJBIa+soZiHp8pCjhLA7I+qr11zPsxpYL16pdfes=","EPHOC/V8B3i/TeYKHiusiJLea3tu8vjekR9zFJQmC+I=","F3/JUfY5/MJ0tO4o8/f/Vg1soNn5MPU9OrtV5tda0QM=","HzQDKqRswI1oVVu8JGmmai77ojxW7D3dxYNuLpGc1hA=","JpzQt3T4Yl9d51Gb5hhXzJ6+BtEGENyR2fTMVxEeq0E=","B09DeCgUD8+xrgCzjCmlCA8ND+65nUaI/4hx9jSfPGY=","A5by/OjNWrPSYB03+A/Zd1ql6fVrQG8BXZsJX+GQWUU=","LgOvv/c/sF8y9QI5kH9IquGrqBCmMSSAzOND7GY/IQ8=","KuiZRVpqfEmZfIK742Bm7x1sIthCavVNLHSXCzOtKpA=","K/7e4+r3NAoQ/Alx7wAD3IfLmXzWh++ff4izDD3vJpA=","K1CzmkPPnx2f6vBKHxADEeeJMqaAUeeSwjqZ/5UTmgA=","JNFusfye45Ni3GYzjqDSdRR/inq0tizrJtw+KxbDu74=","FTnU9heNoQIARjWQxu+xynMFu7qTXlp97JQOI226L3E=","Cehd3LAr/gcJAh3JufTvuiynoEB1p4wb/Snd28e+dSg=","Af5/d7osAYKCBzq00iKVk1H3zBbKx+HGeUYR7tBqOBM=","HTIgz3zroZeJnnkv0rUWWAeoN4LfVUOMyPzuaudWWfk=","E2S7Rv58ebyRVqE6jIa3fTQlOR9+0SSgNblBM0BFF9g=","C3DuoPqVlxxStMkf2c9v+13pfmPjZAKPDAsZBLB1sG4=","Kpq5a03jP4zP3M2OhlEOjMcx/mc+sonRWjdOsNBV0hc=","LserTUOeItHZfv8lAelFd2kdKGmEQOe0EZCouODJhSU=","HBtZ/5ISIkQilo52Fs6ucVc7BcmeS8smITEm/k27XeQ=","H9+qTaVA5Q0rzRoqCXU1D5aeNJJYQIX33T//nYgUzUk=","DMjvaj3CUNekyUu4kL55e5HwiGmpk5HK9w4u/99/CGY=","CeWV+uyFBnAKQqWkEZDLa595+um2AcxlZ1aejuniSBM=","BgR83A/4vZTGq2Dj/+ohkS8BAaYL9sLpY3G+VOY9c0Y=","LkAoikpoHh/1MY+/t5bot/Cy+s+lyeaRocSST/+6SVA=","EmFpkr9vr1FEyM5YNV7CtuIKfSXH37E0YLByJoFZaAc=","CnhCXVY3KvmV2JMNSM1kWm5rRUhbTAb8OOBSgYtbPK8=","D+nGCmTc6LRbU0YspuaL4yXYF00GdHEpWpg867HJoPo=","LnqpzudiT3H6SQKXHQfNMDMZv0EAe9xOoP6kDvl8uh0=","EEaQzwSgZm9JIaTvn4CPuaO+5hkt8ObNsVtvMC9HbI0=","LmPEISpAIoTe3fnvJgvP56OVAC4iyaYVWTBTOymVlHE=","I94MlSfU7eUWuVbJIAMVhmN4UQYVgVNRvFjTtdateCY=","JUOe0XN0QNeeS+AJQDlJ7J0yoLpszX/FFY7JfJ0yxEc=","FONQgOjakLF+crb7//4Sawnd8MDL0LIm31SVjmgK/pA=","Lg6HygogkNmuGCTOyKOJ4AGzwK/3PoG9JYR/8KRdH6Y=","Exng9gihL6Abd0Co4UBmuIDwtlCDHY9CS2rz+zYcbes=","JiuC8dHQe7GLmSBZfDklpBwKYUNrcdJO53I8f7iHWvk=","J3c9euftAIKWpXKttk9PtcIpc1slnAPUxDnsKuRot38=","BaZRiKxtZGfgKNvkuUG6xagSQOgIN6UZFS1lQqX0B0w=","AKKosHcZ7PsslOkPjgRbGOxFX2cyUyTEURnAMpGV784=","Eswxamac7QKQvslnV26OKp6bYIG7Cb/aZFbc0/2AJaI=","JaBbqaP33MKaQ99F78QEvtQIdJt9IWUDjXArMD6/EDc=","Br1F2bE68o4wk0jRwGzxU7Bh4NsSbsWaivCVoxDChNg=","L1X92i3I+vLPgwhnWMe8d6GjgpNOcWjDCh6dqtK5b7s=","GkaKGLGF3DQqxrjr5T7yZcaRkXWeVT7rvmdO6XY7GQA=","AxsPm2/8tFHyYX7pFc1tr+F6yZaJQXsdkmmGB+4AUUI=","KPldbrdUfnq+JdJIQZO7+qNsZXaxnDb74GtEVezSDzc=","BPcMNAsWboNAgK/ESuRE6h71aqjQhLIwHmLwjgd3Qgs=","D9ch0UMFsv2bIJdXdfVObE6AaeLHH9ZjqcnNDRMIYWU=","DnnrUT6r2Mo/xhCWUFBRCHnA0sdVt+Wdp3JtDVSUN4M=","LjY2oPjDAU/ZY/8c/vzIRKF2O/st4jNS6lWqXde7j10=","Dt6vNfRPM52vtX4wgMmcdMEH9h4+Dem4tMI0oyGnVYk=","IOQ5E1BlTQRjtuoWzGjSxBG/jJfa8dr8SuYQbrs0dkM=","GqC5q6tcdyWbJLpt8DW/hkx+bVc0gKtLLYWSbpWwudY=","K1gq5+APPG3VFj8+RPiuH46qkyTmNHrp/KfCo68rla8=","EQfpEtJtDEJTSWNS8UsmOjCgmyCtsx29T8v6wOTKk7U=","Ex3sKKuw66Dpgh/855gLzKBgRsEvAUE60AoZuEV/gEw=","MA7YD0kV/LXcjUIK2s3GtUF8jONdkH2VN2dW0jI2u2Y=","GI4hHiFd7ZyGHToh9D8VeJd5OKUzW+dDJeBmnn7bVR0=","F9MhhV0coDA9x7CygHxD3hiAu2b9azq/5cwsOo5qInw=","FSjglvvSfg4JAEYL4ippt/gsoaoIpt7z81JWkUsFAhA=","JxZy+7Upp98n3SDoiL8zH13e9cB/9OcgYEdUc5/VY4E=","LX1QjfEo+pbaeRFsFJHW1NTYeort+Xsk3i8y6GhV9dE=","AsEq4GSQNE1lhFUzigulV+Kh2tvYyZFaxALyN4mUs+4=","Hvf1cdfarFraL1uU3hN0Ar6KgfnJ/e+UKP8/Rr7YG3A=","GGIT5tml7MhRkteQOI6v7VU13DY02DWecwaFodfrhmY=","A3DrbS6YKCzn6r2N+tvEa3S+6g8Fq6r2evFpirPQJeU=","EE//+/8iWLHUosZh0tDL94luBTmO83MIi8hjJ7N7wQM=","IG051a9eHlC0d+RsYlNCALwEPKmFzuF/C/0+aLyJeuQ=","AaqiCTHV3lkxc06AVGyWa4uvitbCeVWN4WlrLospB98=","H0qheEokA/PAsxLiD//Cn3fk0B5xLUOjW59ULWSUiPk=","JwGgsJ54Ws2XEeXm/2IyvGSX6pemzrgtOUdQi7tSAuY=","B+ma1fMxfBrOGbSny5S1CQAxn2RbK5VqNAVjVdOzAEc=","IlBFVnDerlCHX3Wul3mmAIyfz+UwtBfeTUI6oCypj1k=","Jg1iiT4lSr0Q8OT4vje1Ih0VKS/wCoaE9eKLXySVl54=","Fau80uDEQkSSdeyl5JEdFXy23ARaWVQXg0vznFWPnyY=","CXUfeTIYI/S/uTgEkZxk5crBkH0DEIX/jaqe/aleQZo=","CLPYLPvsjME/dfd8OmGEiqDLwNzkzvjXLOOllAey4lo=","GXa8DbvYOhom+eFKpDHiSnKK9Oj1zf19KZQ9/CmnssU=","BPWdIB27Jj3QTSwvo5axK6CKSJidwkZLO9WXZTTrOOk=","K7IyQ+hBxWTnrdLXtSjZrwP+dYgOmrdutNRqAgym4w0=","L2a5YUTvbFyuW/0lEd0kVqHW41SFaavsfXpJ4eBHSYM=","KbVp8vZ/HANj9gSTbNWcMplFPYIz55aiUHXEH6fhnUM=","GqthAxBL1Q86ZetCu/kBeS556znUR1bK7yWSaKBtJ04=","EAlV8+Vr0XpOr/b3m2l3QtBlU3GFm8cE3Opez8iF6iM=","Jxs2PE9E9PqvoC2ydS3MGS9O31w5wXrVp7j0eQUnEeo=","ECHqqPogC7DT1+9QLF1+7fKmyjbmOje1zt2Yoxin+3Y=","E8aiAzIRcMBG19ROJfIcRwj1hATfbCtXhGL0rBgcXho=","BmaRoCdU29Aq2igdpBiT/uvmhwg/TsKZYAyEZX7yvJ8=","Fjea83wnTmY7fjwErQZe4wmZwwoF+93xpDA3qNvU8Zk=","LgHPmBMlKlFxYkpJY9Vy4bbmWiuTqcmQ9qU7p9V3VpY=","BaTsd6IcoV+ASu2HuY3D1fySrtecNySz6c/PXI01v3c=","ADLzurBpq9SmaqmEXoSj6h05CjwrCUGXpVkcawwptLI=","BWQWMoz21H09KRzXJZSBRDIVt9KQTHxWMbtLcug959k=","FsBonUgoyTXq/ar6wI5NkJ2nvId2x2xdzGtL1JxyF/0=","HY0j7R3WpT0sGPkVN1ZOtwbsETm6IkC3M606y4R/eZI=","GqGiHjeEuXhD7GIMqJYejGLV4SuOPv+6sqTu2biljeQ=","C7VEOdTG+BKnBYGrfB2lbZigiRYEjWtI+VQLRRt+Ztw=","JEIbc+6vYxNLRsKWRsKyTdesuGChiLCKbtHQDLkLPD4=","MEXCAS90RYkPefFWcGDDyTWWWs0OpVGmcfG2JeaE19Q=","COyGOZGgU/7tqlKBCYr8Axt1VRBl1tAfbesExjECyb0=","JQyyq51VeaJKV/qqh/fIKMlJUs+ySMxG2S7mC4xMla8=","DyW2O17rwxmBIsYGsKWy3hXm9f0s0PST+WJlNpZC+T0=","LvarxasCyEMd6PemS6NpnHnh3wyPLZ1ejWW3ktvDbQ0=","HoSJd2aqneBWu12Xxnl73pPDsFklEjQCBmNTMrXCKxE=","CJI/BbBQ5uD+wO/vTepQD/OuwwVNSysKH7rrNWOE1w4=","EWh6wF4k9Q2wYzXhh123PY83nbOlwcO59XtyWx/YQ3o=","J1WDe4BUmtq6R+CYCQdZEin1ppce4PM6yTD1vhOxVKY=","CfgMgjC8WngTj5lSumtkzmI+EtoBlGA2Okn15e/AdsU=","EEAJdG1hwLtmQ+ZN3+qi1PMIcqkkFlUqHftLddQJLUs=","GW6CH2U4Y7FLcrGaBoqsQ0pgE1mL9zso7rNsQedvxUo=","LIqKheJhhFKo0KnqWSvElaUGclIlNux2Y4afdYrHIMc=","B71N4q7Fp6z6ZmeHVO+V7qhA3Jf9FnnmU9X6MritYZU=","JGShf0NTp22RHMg0n13QLL8rLFiht96iXwAOua3KOW8=","JoMSlOM49ERArc9d0cpNFBKlzEHJOiA3mF7s9ML75KU=","Ftae465rIN3WLdGhPSedTX2nSyB7xXoVrJrJLK4uz6s=","FrVaeS8bGdzOa59Mm2G+DgRXqZgOYFDaJQCkCUFfIHs=","DUnjHifhxxwW1SSyqK2wpkhDrqXaL6TmhvGDvpXUFwo=","Gv+4/YskPWLV1Kewe2JPmgRSeT0dGhHq07uChOtl+Xo=","J9p7oQy4bAZ1jFXn6Kx23Jq6LoY8LeuPrnUl5CyWzrs=","J+G+DbH91zbSGEQ/VtBph0Q3BNGMQqlvP9y3xFNvugk=","L7HdH3Rh11+jweJd9nDBRCsAG5J15nDXPIHrYf4CgyI=","D18MyaPU0wZsmRlP6yKfDjGDHc8IC/9C/x0Ul0+C/+Y=","K80jWFQBsPf+M/42bOkuOs2IGKI1UPN1Peyx7CRAX/4=","AFxVKgLio5rw4hyJRLnE9W4VtDjPNGUWuiFHNWkE8B0=","A2KoooZaKy/pAoMcgETFSwypS5X8t5tl8UdTxYIitKw=","Apuxg6aikbk/CYl0YQXjPMZpkHJQ/XBkho/TE4EPqik=","Bgj2IhSHFXjtWKEtzE0cFSr5cOblBF95E89MQMpt8Yw=","H4pM9TL16DVwTtfKg+/7UXV5AGyiLs10IlEcA5G1xO4=","ITiCuzEpHbw0bK5Y+/3PA5eBUuFbNEiSqUxE4vCxszg=","KXEl9nKLZfGJ+rYcOJYBa+sKly3TR2SRDwWVCNfoYiw=","D3YCnMP/CGHgSKYB61KhHPG/xp8t1u4VFqRuSGW3x64=","BaUG7XOC21GFHCJNUhPHzmoisZx/96f8zGI3rxFCuxc=","FX3bb7bUJ7l7pp6HmPOVDWiI5Exg3+wKmLcmKpd3RKE=","J3qjmeVcPly0nEvYeJ9lUTUdpUDK4Dfro3VDsEXpHq8=","FJkJGujcVn+NBQoINers9LmVtTQdKcVI2gg5Hm8UU6U=","IAva4+9wp1oSl5BBzeM6F47AKxEKvTecLSbL6pFntvg=","Lmg13kSVcTDdckoKxjNbfDXor61qy7pqqxb0VZOdx3o=","CeMCIiwBzbLEXlw6kg7dgto8uoVeFf9jSJMgm7/lXTo=","CltBLMzOCjcWF9raJnvHg8oZzsBo8VXWlU0nnzlZzZk=","L/sDS/K6Yp6tb4pgIuIzl3nmjvLIvznv2hoDMuY968Q=","Hzqz+/X9JIWTgKtZqPcsxS3BqyR5oQ8z18W3EhxYF2s=","CDA9jqbErwUKkGrrrkkuMgEOzmCbWyxusTfvXcJ2myg=","GfCUXZ9xlQ9sKymK08ZG5PuemZOdwXDHNfQHFIx5JTI=","GmIaWyR1i7A2NEY55CfAPzPSWvf3cRw+2ZmV2YPEw6Q=","IYp7dF819Je0Qo5hw7eVY3UupvjIdjYdMnMpV5M5kos=","Fuzr6+WN/1mnsLpAaTqkMbiZyndptEWnOH2xGAiJY/s=","Ha7kbPy71jQ1+m+HkbNqT8ZZ9SNuiWpNRHqz2mgoD6w=","Jgh1yh6Y6JXGNds77VANOTlAtWVNNpxhFW2ykn3l7Rg=","HL9x4OvrwtFRlmrMK+ERFniIFWFL7Gb2hzWRTDuK3jU=","A7KjIOrd9I6lcOZD+J7yJyu+vbHK7zKq2tsiqRioqZ8=","By9TS/B7pVVCYVLDfiEMwdNti3zELh3WSoMIE1cYn28=","F/5iqTqe+xI2AS4soQZLG5PYZ7Daow3TNO5coI0wSwc=","LtO123rS/Ag3NPthRxYpRj1Glt3YyNzbHS/dRgq0zR0=","Jug7mop8e9aSnyICH+p4CIA3wlxyCUJbqD6ZgRUzXBk=","F1j95eLYuIhq4hNJQ0B9i+zrpL5RegHlGlGpwRwVEKs=","Iz4i/4W//LV881B3/GyBljWQ9n40hKZ9hGvBz/LL4dU=","K91zSi2KdfXhzacRSoxBi/UGQ5gEXcepqPMWaSgs6S4=","IcLijVRzOQa9E4OG1/BbHMQvZgTfiTUJpinDUfV7ldk=","A+w9tBm3ibmhOBHfosUYQNOgGWHl+IQUirP2r77Mo/k=","BEUs67DNlPcWMmaqs2WzZm0qMp1jTsU9sAnfvjMQYvo=","I3TnzTSS3eQKIaQRGzIxPfWk0dSD/zjEsM1JIUsS7io=","GKrOFjmcf9bp0hl8XXh5WY0rcr1QjgXW+Lzrfz/GaKM=","BB1Gn4W/reyWwH93VqZzX0F716iC5Guga6B1cx9WtWM=","ELPBzqMC+2sa7v56cBiQzuA1i7Rd/NbbZPkN+WTLkuU=","CG3/A50icYldCozflE11ulQoSJfRSy6qAJQAqNd6S+s=","By5y2Gd/alH0wjhuLoMNZkjEUzpyhR/bo0pQg/AIAu8=","E97dV0WQ82K4NcBRUdbXwachBixQ8URT+/zhKBLexHc=","D3tzC59avDW4dLIk6/Eg1Gm8uIPUtOdX6OtSvCaVgIQ=","I/Lf0CQuDdnd92tXVWPmmGjhPCzzmCxSd35sUzlHIIM=","JkAyyETavLAlVFMVWItFCeJ3F7jpZPYEBNKpjoxECO0=","KlBcaD7QCbhOoJ5wWxySVhh6SO6WBk0/CU0VqTHAnWU=","EhlftTFOXcptu1MBoLqzdBUiqs2SYsVQPeygntO1v6U=","K5Z0jLthR+9IYPDX2Twh5CqE2ipdJMB/LmmQF142ITg=","Fo3E369v7NSISIH9Xw/rJ5mtsEHG4WcH+fhwHKNTW94=","KT/fXpdBhRtu/dIWQYlOq6rk571LS5HXJ6gM6FBYVDk=","EI1BIv+kqb7Uhtib+c5xiOU+AWGyM3vFv72BxmgUTmA=","HTTvkPH165vppxjC9Yk/5N1CIgOjBvlhcHtKF56KgJY=","LW22L5GUnxLdffCEbH1z3p0T9XHt0yoaOx5X78eWcEk=","GLpzeD9m6PlmFiIfSVmlpt8GzrW9PTYvrEsQYRHuLVI=","ChdgPSKZu/mQ7hqVtazAia7RFkb/5pbuBlvC6mUM9uk=","D8nua1EMAL8s+qXmEituaMqGb84R3630J/t3DYwl0vw=","KCIuCJlck+OMg4m9MvOdvMID0O/EARRHxUPQUWVhIsw=","B9J6i7pzSd1xbRzyqVlXQN1BMTuTmJ3n5en6q5fOm0Y=","FEmLR8S48mY+Qi9xcbSjwHPTqheJWzMbzNCfGJJ4iow=","C9jndvO6dVOTNhn2BxEYToXBxrWWtyq7y9DR7w8Gf80=","IPrfOFQOHkbaIq5Wt1MktJgwMbnI9RmNMsUNXyWwOgE=","JpmX7q675Ytuqfnn/XnRhbrHFYUHOSinTqb1lN0uoFw=","KH2RyOsNLQiC/Fdk2rVATIqP/xaF5932Vt68ezthkNU=","CHjTNEp9FH/7TAR7fW36hahk3qpMFqZ1PB5yRUwsYwo=","LjxKzKBhERLCmxjg+bWTV/fF3Kt6jV+avpLXsrKqZ+o=","HiiNN8yj0LpVit5JzFIg72Ke9UNnmVlO3K1gVcW8aUM=","Gh1/ZVmEYMB591unJDidURjRQg+Vi+A0j+127E9wV4Y=","DxpsWH8VTLngkixcTY0nfmZnmsN+q1sn3f9mhhXMrYg=","LXgnkuPPqEEc9iM+W+MN7A3yLTbJ0gfahd28pex0cZc=","G/TcWbMcAcqd0tmnBSCsCdG4Y7TnZHHaAVRPBteKm+A=","KavhTUSnch/+tSg2BmKEIWKxcIGBBuVE7xRykQR8P8U=","AvSwIO32AgTI3HWrz7B2BRc8vGjE2TXQ9+ZU8QRpb6g=","HGkqEhS7auLFs0grluxGeML3lWqCgZ46nIU99GBrmp4=","JcuQNDRf00XHmCQGmluaBbd7lPvcJOtXgtVWItta/SA=","FbplsyNlvvovfLDFIQ65AapAlonJx0v90lONeAJaYyw=","MBoC1F+ro8Fh+CUKLn4oDVYJD0zsAjRIrhGZ/LxYqog=","LpXG8qZ6E29RJDReOkPvIu3PqAar1zHJGkwwA/og81U=","Ch3B2pDxd606vMs1E+G7dEDY5pXyzwgPu4PmHtKF6HE=","Jv6xBTOouZDczp7ALoe3zTB1N1DRFWpSIHuCzmOpLFE=","GQ6vkUIy+WzdHeS73hN6K4qnuoF9bUsdzl3T8DqEHUs=","HUQcP8R/53oYg+BpZsiYDlhGh46XBx7g6Z5WDv/1iyM=","JwKKgZaVUI5wiC3VagIukS44bbRtvg2AZOEciudKISI=","Cia7/VCmj/nxYi40TiC/iQwqGYtqWL2CLHIvfkLuLFM=","JVHjURwRQDXfSY4H2DVMBC3zGwvT7lAsjCCri8qCb9c=","F8YgPesKgDJyBD1bqSe1mEwHjACikALmVTpiXvzwsKw=","DepNTFK97CFO5OC4i87wPgYu4t3attBQsUUMC5WlHH4=","BeZgsVUtNP8/YtvFsatn6OEVbfUGw5wKsdbasfb5piw=","C5hwwtF7yyu4siWeyy5U7hYjYs+bGCQ8iGQhqQpkbDA=","DYPvk79VFVBDTcB2PP61wKthTUfLDLPHkYDOVRhJmTo=","K9RIRYmNiaAF9cG7v19bjphdSOkWKFpk5naoEdVzO6A=","JVch4S+8giNeZKEGcxwSkQkgxxv+s5vmvIIpHTIufzQ=","EbQZEO0zrgFsfQWaNzZX9Wqx7Tr6iE9q6qw+hle1LW8=","FjSv4buuF2a3/3sRsBHvn4j/Df2INPywhZaKNYcMls0=","F+mSKENZ6SNTbu1BvWHjCChTmaErbB3yL2VwvQDlojc=","GYCMflQ2iMokNxnfwtoTAUcSew1EHYjf9TRD09fbnZA=","KqGcFFSKT87hcMAZbTY+iGUGS/yYIiXVlGx+v/eUWXk=","LmorAjrHZudIW9g8uroBahMMAKcxE0v2ZpLNXXRgYW0=","BOEyEwl8skoqizgZAZoLZ2vLyB0v9Jr02ox8sM6NUSU=","BDbbiLT2beOEuupzxQW4ccecI1JgD1hZsw4hjwcyatg=","AMl+lWiO4H/6eQVngW4x1qt7sObo+dPpzQmpsbFqkJQ=","LwTIxyyKABgK5tDCny36vYPQ1mDr615688YCTT5Xd0c=","FQcM3Zm5tc3AaUaFvbBkicVvLJmWHhrplmCFFs/Qh5E=","E0444YwfQrhXuiFL51zktdMxVboQ+YNOlfOpbiXi9w4=","FxFikFPVAhuvoRGsIKyFFhzeyFT8FwoGS+dFRxq13u4=","DQcuHI/xchOyeEhVekJnAarYvzUBxqVe8B3UshrPAX4=","DWy6gYzJsPTiMjoHOGnE1LTl3ZX9BGEP/ieplof6mKA=","G7fscgEHBltddfxFObO5GvDZXuwLUc4G9q47QPEKVN4=","D0sZivKq5MHxUDWv+90wZHrQSGHePmU6dn76UDa8WaU=","Jr1dTmoV7W4q1Mr4d2Ko4lMxWMaJ7S5rFPU39/ivSJE=","Hbdiw+GLxsANroEk6xOSE1epzbKn2NWviZzlyKME70s=","JCHy54gpR+BotZBJPfRT3SKjrEH5qB4Ej9XIARn/Ytg=","C9nXFpfWyS43aFBJO6aHKD6Eg7UppXvWuPMkCUcxDNw=","Jk5RDlp+tY/jfIkRlOcihzfiwKwv2efsQW6Eu0SDUCU=","Gijv4V5bprwu5gLqhYgp1UsatxVM+Uu5SBcf8JLwhKU=","FKIGZC+ppsvnjWmU1Ecq7C1m6b3P7KTPwTOFVmKgrhU=","KRlfb16ylgXrtRNIrbcrhuGE1a8qVZeehdjDfV+jd8M=","K+y9GqL8HWoMuHp0MroYBw1NjYfHxQhcxXo2hyzc9JY=","LrMRx9lq8bu+7cgR3NDPOw86C5MtqrgFgO8Z8uyk3H4=","BrE7Dsae/sDdqA3eBaIpguRQ2ktxnq3ALo5vCuipyL4=","KVFWlYbEUuV6Ft7/7WZDuQcyergw+kPHYWxrvXszf6U=","D4CRPWqY1o59IDFJCDQhWYeQvRf7caujvmgjXaMfrpo=","D2xuvBUscUI1XzZQVhCMonUqk5ND9S1M+qGtD56oBic=","JlGjVF1VoXm5XB1eyfR5AJTM7+mRtDSC06zMGl5rxBs=","Gf/taXvpkL0iwzoxUvG2HZJKiPJaaCpgSBSrD4P92mQ=","BRT1ERKyEx/3RGvcjmA1+KFWMwQeMcrM2uV6LPLm4w8=","J7JQ7t6hJ4ew50xn/SnuPW8xAyBLDsFTveGzEK2KuWA=","A047CSru7Pn8vgEiUAcbfYb1Dd/Gi1v1nlfF+Txx4ck=","FFOqvUqzCc4R3wYLNpBvIh407EV/PhGG4eozab5Lkjo=","EWgLGcD2IsOuzjcBPZ2cawlNy150wI4i8XD9p0TuF8Y=","JRIbpKCt6ai03avcM3sJZF7mxCw/u2wwug+0V7yjPZk=","MBDB0lzOZPbdNjVYkc+mgdxuLu1trrNo9meMy0Gwg1A=","HVDJfi/IUBcEDMGS0ZnOlsrPpUGJttZq9ddZ/La9p54=","Fc3LscUxcZIoHfYCZwCKnOjbhm/vPs3MzDz60p56sqo=","C66GKS0AS2HeqR2rWt3s2EUuTcD2ZMxgDSy2ljt9+Hw=","CWbgrntuUv0YGFJmxEmsoTnXYEg2FZLThjKiDI0CRvc=","HK6S/ob5p++DugQZomHcg6oSoSZWJQv2zbkpCahRCGc=","AKLLg6BUmIzuGnqEfCKMgAZobqYqbxPdlTXbokj8vUc=","FBfQt0n9oFvIo29B8/cUAl8uSs8C9vYWBxS7TYbYp8Q=","BSxacHI0QhNONTKAblfSg6FCBG0qgykdp5LPpUsjR4I=","IqjJ098lkFx7+ZwGl+E5iCYJwIJ2oXHIjcAuhdtJrs0=","HDiCYeB2oGQ9VHkYfLbtJDG14fUx+RzbUSe6+JyDxzw=","CrJiwyFdkCY/AtnPGiNQ2dWrARShrHgmRg80Y1pVx7E=","IaqGXNAkzQIQTaF2IVREGI+ZKuybU7ZbnP9jkLKKwsw=","CwSOBa76D7LBkuxVaQ0W6mqWnSR1diudIf3/itpKC84=","HPtmT6xIsBNy+G8QeGA5jAE8I2HcVnG5jxOFXBVzKuY=","HGOXjYKYSo9bEF1ZfWWkN8gpj7QHTuFAYi6cvfOctHk=","Bocn3ex4Ki0MAgKPyjdX+oXmHzOvz1zTWYZzIhZQnHc=","DYkFgswhU0DTR2tQvY0iJh28tj7nxs4ZpBHoCbcxpWM=","GEzY5n0zRrCx7VEyJd9PiBHyKyUhmsbK3Ai9J0RMWfU=","Ea7c1JD8dwr0UbtUppjdvUo84mZxXqhbmQ8BAnkQAA8=","KW2m5eMsIK7caadD9qReS7jV9mBIl7HMdRvEJqzg3oM=","C6V2lw2jksVEdxWKvSWWi2A4cVjKz18IKIlU4REz+Ls=","GX6dUSnXE+OCrlzmZs0SdviN2q591Q2/qwcBm8Ql9t8=","KYUpIwyO/KEm8uXxJ+tXfB+N/eT2Ey5hsmkzcmzXFi4=","CX7DLh4QywGfpbqHp44xtPVjh98tzyEGOcnZYj77UEE=","Cmlq0ZmmHf+lIQ9aZ+95eVGyWWDv3ROuR3hSmT2XQ/s=","IOaRECRoYVZSA/Kz/v/+aGZ4k82IG70K27BzBr3fTtY=","J4kPMiv9D6vJaCv2BiDR/AQ0R1OU7BINdwiAQ1E6ELA=","Gd9ht7jb6BUsV6jZUkYJrV/Fi5XZ3Lxqrg/lDlo/BnE=","HxWaAJLo4TdT2aRwgsz9TpziM4j6f0jQNB4YS+7U32k=","A++K+zbdur3O+ptD0eVVfokVlXblTHsaF3/qWgk7v8s=","HM3/o6j5GM0zi4UUawV/h/hhajIVmEL1V0TM7Y+0Y7A=","EMbOWAdwtJHgTPIiIc7OXscQ+dxwSKmAY/vKmw6e46E=","FVFUNExEu65IiCq2geHkAvcmWFimpJmST5YeQkHX6hw=","Fo8o0oonl5Ree057WF3KsZKx/Ac/aw5ir6jMkWF0jAo=","JdmcCAqDbs8Kp+EpmnV898XQqWtYElR5abPwkHPTOm0=","CVWtGrEHTbEoDHh1PqQ0OtBe7kLQuvvzISxlbDBexV8=","CNRm1kuJSeS9F1OS5CGZIpc+r8v72WXLJFXtPyGG8zw=","E0mSNCZ0lDO34AFOgns1QMA8OnMj56JaT4q/wU1JK2g=","FXkrvipvhBR/AI+EtZG1g+ZGXLYjjvVAGJ9eaUEt2ck=","BhpoW07QW2WEOkHCSyNqKnty/9BgIDC2O3g8HiOSMJY=","Jdfw3D4KnnEJDHK0iwUbjY++2jk9lb2OnPvqoZ7+tkI=","IwHAwxnP1VILx/lytmRmYRNbKsbNgrDo+/fIFKnzivg=","LWmS8t97VryfoU5l0AcHY9+lxtcL8v2I5CitHfc/tSM=","AeZiGpjGXvfr6ydfaW0REQ2DyoAxAUV2uqEOz9hBECQ=","BpDljtokZleZoqFWaYbwWzw0I0CihVrnRqmqbX0L4ug=","KCkkrSq0MdUNR5wtQ5QLRxNShQ8y/Ht1ZHpTcYnpgec=","A5g6/t5I+BB9PEPY7yAFAHHmk+FPdYNefOOq/PIJnXI=","LT4s890XQF+qnKvaxVnKtcS4jAU8z4iBYacC2dCDFNc=","CkEYyxHjWvCcgKditmXP2RX7nMEFpkOYWejQnGquOzI=","H08qy/eGigmcDPMOz88lQhDAqbbdlSCQAn9lrth8JwE=","EnRWyc9LBMZOoygPGLSrnhuWQHYnBMk0PFyTyibb/i8=","IvYGGHrekdzTj5zH/7zVF1NxPUMcMvJrtQ8aBo2Stw4=","IxzGLyX2Fp1XCXY4UTJyTNWq/aNPlV8vtVeMjrb60uk=","D8l9DmX3rqs5fK/DaWar3qkiFX1n3M3q0bIxXR8AjLI=","KgfMQ0PqGziYKCC8nz2N8BS9K+WLn51VaqG3VRHMi3o=","IFYSy8El0AtKJtWix0jLe2f3905cGjr5nStTsh+QRSc=","ETuU+guzenziDnR2lOGcThl68/6wPiflXOG22ox/gVE=","E19XyIiQsQkWSx8Zk0sOMHcAGqPDmbRsvks9RVhK7LY=","Ev7FI6d74HWsDEeGLysYzF5fXKodvvPZB8kmJSUuJwI=","JPhkvjXvYFfeB4qF0elqa21l9fdgQv5GyKAoAWyZFj4=","ADKiiNJwGFvBZ7vCG/Q71pVXjPxNrE9ZrSat/wO0HfM=","ASp6Iptt4ynPQNYd4VEY1gULmyNdYHRWXJOTjPm15WQ=","BYtjZF45Y769tutjkQbE4WwP3vK+gmPiO4YD/iAEJBo=","GaWvDCsAsdoHudS1Nbu73fBS/dCQM1QWg/xU+nzs380=","CiUS//lOvQBXHQVnBNXNSj2LAkw26y8poD0KamnUcvo=","F3df5y0XhavhG3Y3m9s1QciN/Wu+yjfSweas8ooA5aU=","FEd3NRMgsTaXkX27ocJSMV/4X8ueXBD2QsQfkGyMLLQ=","DM6HCI02nqJc8gMV23MjmzHfiXkVtws4AJ0IMRHt77Y=","HINgQxj3jBh6gMeLji72a0iIKgkTgFg/PBSleXw+v70=","GVsQURAu1pPiYob670B0afDCM+po+3S+W4uAHfT+OXI=","JFT1O6T/HAmyplDN/MMnNRBcAxFrJUwgvYoZYoXPbuM=","AtD+FUqFW9aD1GdsNgd3TFBa4zsGVkJeLdIaYQRcSqk=","Gpwapl0F6QdjI3toalny1zisHuv0M5k+JzdrzcbaOY8=","A4DG/+w12RsmgFLoV1By2lELX6l2QAIhET3wrcIoPgo=","L0g1t8iTjm49Wo2FPNpeJMh5peDnp5tjqK+OPAI1l2k=","EngRHbuqRquUR5SFaD5HPv30W+JJCDw/ZXYtre212rc=","L20OIFkWkZzXxTgauSY+m/2XWqfPpFzp60tnmf+QNTg=","CYe3lWHQ0kxfzWxr8RibE/E6oKr++5imwRMF5waPmhU=","IKH5TqOdlnS+sOI3t02ScGuPG+/1j0IP6xoGKZOOpEo=","BGYklE9nKBpggtMOMaLXgiXeoAv6Vf8uvWtLaku8+g0=","Dsht9OJAS01MXBx/K3z0/8riuq7JbxyTtXGMRuMvS14=","F6mIti80MxvCPFxm/lVV3Cr2gPkXXE6VJp/yZWQafCg=","L5M6QAnDhAbBA4dM3pHsAtYiBnx8rFaJBAPHRAih78M=","KcYKbufiLAuNilHPhyFdTj3VLCPIxROoyFwhIFra9OI=","Hi483XEsasA5rrPU3KTpLeUSShqSiTqPG4tt0X3QINU=","HMDPG1pne7Vq+pKNcITJ4x1PVGkam5Ci9IIg+yb7U04=","A/X1PLNMpbZHb2HUtMwB4dEjuQ3/mOBEfIAQB+ZASGU=","Jk9SNAegdrBPcuJoNM6L1FuMkNxKkV+lUfOuVtUNtQM=","F5Axl0X3kyr8gm+MKW+SssD39rPP20v9x2PQofKPNws=","AwmacqnDU7MpobxLqrt4RQHJA3unNsSYBvHaSCkQQbU=","FgSqpBvOBy9Etq28wHV1QuTKq8rxCer3r3GOussJD+U=","EO61mhb6E5Jn48Rc7wG1POfcqPiAjMwkj9tXKKeZ22c=","Euq4z/zAbO+NESu+Xfun51U09kxEYdFi/LO6BnFZR+U=","DFjgRlPYi7px6fU5tQMLk32tJAXSJaMLWnXaiuGcI7A=","GxV/LtdAzb95ivCSquWDO/UuORsROYXKajDu1YjLpPk=","DQg30JfO4AIDRdA402Vt4U7kwoM7uc0Noa/yOZ2kNuY=","CkIlpdNn4M54oSVcmmmqYm7SIkh2PRkO2d0PPTWTQVQ=","H2ooGaZ+IBoldvCv/LCUlu1/7KC4UFhBHQmm51b/6OQ=","HGdKm5/bSfyWbgZLo9oywawtS2obTQa5b3XjFgXDjLM=","IIRM1Heikh6OyybuwjHYxtm4RtupPbXv8iAKzOPcUxI=","Co+mtlaseXvnl/QuKUs6xNnqfT1SEluf13+NRMtymGQ=","JllH/gh3xz4MZa9U9kOw84RKS3TecJ/fdxVvTDOMgAc=","HwTkZj8vmTfPB9PC/l8G6FQUuWDcd6GejW44xbztfUg=","BtAg8D2d2RjJhfHn1c05+tY/ZFkFX4XhuNZcJXrWQEY=","D0+4JjvIExkMRMOD1Uh0GyRNIT30NEw9y855eWmHOVE=","Djseat+gVFCvunz76Oigi7/2u+wJnGjVdV8JYHXCECU=","Ivt8AAQuXkuktRLvuQAiS8a81TyxIk88zNQlMx/W+DE=","GTdd2Qnl7CbnJ0v7i0AsXVjKGTF1Bb1EaugN2lU6xx0=","EdCVJGHtudJMa7CK/TaWkhc6ct7Ch/axk1PDu1QN004=","HaCHKs87Ne2gmczJ6aX/JHeIm/oSK1vFS0vgXomHAqg=","GnSjst6aFsFMAmucURFSzBF0C5udmba++fRMv3V7c3Y=","Ihs0W6S0ncuq1J/lGRfZKMUzzeu0SwlQgAZKk+bO7MM=","DeUp7zJAQRb8DdYEHIqdP3mAljFDw+J18p7GOGycK9s=","HfA0F+cLyKWBKac/K/7UdfWc9pQLpIdXyGDk1a/pErw=","AaamxeQd18oWIxKTX/pMqm4WgXabECkfpl+8NixX98Q=","Jr5KuFXvosOVoLrVEzjiQoOIOXPQ3+sthYS7OUH3uS0=","AfHH0ieYblqaMpusGaI/x99SYJNg02bgr85ZE6gJ+TI=","B1hSrghQEaNCDu9vxNUciBDUD1fOTFRWngNJvd5k8l8=","LmnKFVHkipMAkxmu9A/M14uKsOs+anWqOnzcLqlRDhg=","IdHYGD5UMK6xvnc2IFBLqZTB307VUKh1Bf1oibvHCUA=","EYZti7uM+P5YXeGdgW9EQJew1euIBxwnhaw6dX6lqXM=","GOs/0PZ5OgG05KNQUFVaef1Dx9mzBfQum2du14VQhv4=","KHThYpNYUOsrHnqZhH2+SLOXJr91oYqZiSsrttuxQa4=","BDFk5cDWGK91H5RYrWEHzCwYtOJJaGFNqpCfOmZPyJg=","HH+tdUdteWYxTaqSbhiKwDO8PA6ddU23R2WdmEUoXxU=","AByvpgmGZFlpBzrYwOKdjUbEkRszNr0Vo4leENCjk3g=","BZs5qEvqqzvRbmSRFNUHrKi0l0DdvEx+cJryUfflwAI=","LvftFHVdQ+cepuum1HjkGXxTaMydf/fEJ+PJetzq+qU=","B+Ji9DlHw+Q4C+1ZibNTaPbuEBhekR4pkYRXMN8qzXg=","D1TvgNlmSHbnuenPjOMAuf2CkpJ0+O9LpQMJZ1IINRc=","F7GaDNdZfAuVqdGx86o4/t4FZeNOuu58mVdpb5Kj+uM=","I3JNsHj9QQ9JTlOBiGooSGGP/UqMCI/VETOwvnhEF9s=","CH9gKRWc93zyKMnPE30l+k2EKghP6kL82y0KFtxMs6k=","LJG0NuIiA/XN87HCGIYmAHMSt+gP/CxwJk/wZWDz9S0=","CLl5PPI/tbDuvSZH0rx9TMkB1wdHFbRFsU+2SlXkO84=","IUFD+EIRdK1w00Me/p1AvtNhggYz4nuRzwUFqJULO+0=","HVuIVgUXF2ckqFMl9ieevZEwov+ijNALByhv46mCIU0=","FMlXfAY9TfqryO7XwyuZoYcCjYZuK5kZdObmOw+Dj6Q=","BGJzN1v0Nb7d5ZDLK6yI7+6Jra6MbiewH3eSSTB0uzQ=","H9ifBjImmQOHsBfr6YX1XU9rHlulor/W8ic9LWu2qBs=","BQIIHzsSUFVa71h8tbSzB9cwwbzRUa3sqlMwL8Lue/0=","ELqmwxjH5qOjYodWrULspmqSvlH0des4b5bAJncuHLU=","Ad/kUB6LLvQYThpNDwycx2qJSXZmNjCLAsZqyYI+3GU=","GnLTIPrq8F4M9E25ML29ju0loJvBR1RmXn+18o6j/L0=","JmszNAqL9mE255mbpHNFW9kPiqU/RVNDM57VtTILBpE=","AkSOUuBpxrREAtWVc4IsO1cDCQIW1gfeS/tnjhNXuVg=","KqJeRZBlUytlqyeAtjz28D2HLqdZZke/lResYot5oiY=","ALHVTniYtjo62v7m46NrKquB45vzoVqbH0ebdJmy79c=","JG9/fY5e6AAi1FNIpa7bqGEsPPRiOmJg3ckxlSUSxM8=","AnkHrTafxLg3LHjmqznUo/qkRVHwC4PSSp4z4B3we6A=","K2e9J3vcTAjHkIuxWtOXJW78YuAyUyf4GQx62bCepeg=","CKXpSNHbFF4gvwq/1BnnBwiyAX6PixFwRZwsdnp+41Q=","BJHJOBE4G78IDN3aIDV7vQF1XVDrhprFDr+3dbSVmf0=","C75YEMM5UF8ZFlnFH+6sTW3YvIOW8wweSz2JiEA1lGw=","A7BlvSkeKIoXfxYeNcNlLFfvcORuF0LvdQzmPSKySBA=","EfJbhduEH/dkj/DjWsC2xGPHFPsrxfKIlwYIqzU6au0=","LxT3USMhDPadOPLzK4M8rgqjEOdjSGEm0NNsKeaAFK4=","JnF58fBQqiTRd340ipnazkWq2/FkINgo6R99i6XWtqs=","AtdgqczZWPcj4ILIBN/CkGhgdnzDq6iLNdR9lVUaEoM=","BCVAEz/CVIdpZ9JznxAUk0aVdh2kZH0zCxgHKNnbl8E=","ANT81YYTUyaXXhIFfN4ZMkTK0VBMThRxFWEMOv+wZVc=","J6I1L4xfiPZD1t6nJRsCfNOqBDZPrmDj5xT2hNBaiWY=","HH6VXH3qPeFEmeGwDGRRKx0N9gPFSS8ddXRxYcIRLs8=","BQ57y/2fqcHE0pQVsDwNAKUcK8zvWxxEHYMB/cczWVY=","Grtqjq3vCUBwTWEVA8nylXFcPE6+Ajq8YIqP83BEE8s=","BlYgORSZX3j0odXyVGOH736LUUl/V5ZSGZm/Dg0egKQ=","Gippx2c/ByrrLsxedQyBvQr1ZcccvQ0zZ++nd56t7LU=","FZliK1sLdfxmzNnvIOxVm78/UaSkrOhW2PaH9oRciSY=","DrVN/CNxB0avEC3EF6NkX1sbh9iIv421yM+0tF6wOiI=","GeGm+R6X3rGt8NJcuqsJofcgBu6So261nzLPME2ImGQ=","IBCBUpQTpvH0nz1S3N38dKzxRsazL4W+s1FJR5yJHUo=","IMOTWE4oV/V8I+/reCAYalBEDJNb00pKF/Klu/8ofxs=","F5zwRhyYqZ9wxDP3T2D7pQ58L8m/2+UAoKUS9r6TaTQ=","E4y3bTeA1ClCv+AEPWJb3U1ukcg75M7D2ghb8lDBjYE=","DnBESvAZOcYqjKX/Pdzkbimx5FrGqrfTcpfezyBj/c4=","FCsQ9YIEvvTLFRExNv7leVE8EmoWhIjDdsIa22KCeWE=","EkyMYHYStfvSr4SsN77hA+7hGk63EeEfrncA68Y4f7A=","FD/ecN1r3osmoIWc2lEtr1V8RS+l92tUJCa5+8lPdEY=","JGlN5ToTmmQ17PcWtBOevQHLQDotOG1Y7HM3NswhaSw=","FoYYRmIR8F6IobdxrIlZ/OOmNSy2R9RzRgFLxIb5wPI=","G5vnEFJmJF5wekbiuj3oMi1KjnvcpDRIqwWnJ1505D4=","D8LI4fVOFmBJ1f839rX615rnbX8Gn5j4/PjzZ8D7O4g=","DG9YMyMGQM6OcK9NymdIIc7nIGkL00nmRfDY9ZaErEg=","JFYOSvSf8IoiJqfwleRIkFGcm5l2rvo1FMCwZaBS40A=","DWHwYXYmhCMcX0ae4Kwz9B0xSt1qedVTxkLc7jY+oEc=","Gt+lf07EQ+SX3jBG9k0Ymnzb4IbZjJTLHQA6WSZdQN4=","CfwiiFqwGXW6mqTIaSoE115Qlx99y3c4YpUFUyJyZRo=","HAG/j4XIvMA1zOkprq4g5byV4dNhYOKG9aNzAyy7Sfg=","LfvMSNckGmZ0gDqmQlO8syENs3ry6cA2xHl4yYQq56k=","J7lF1DmNt8aNE1dqiSiqyZrKiKGAsxvphbhfqJ0KvUk=","J3VyvwspAQY4DEv1iVnaIX+eaJlA2dsP2+ecGhVKf4k=","CDHRuIr4VhwO7mlkvXIMN30ENh+a9lztfwMp5963FaE=","EZRZyjOeXIobNlk6igkbvp3nyGGf+DqNMqVmwrFTNqQ=","J+hIm8jO1qnyCb/oP25mT9JVOuhGMqjd6Fd0+GpxT5Q=","EPtsj6trE116UMVPix+1dOsFQsBbm9hKr0rokyjW9T0=","Ha04ZIFmZso6XR/LDf8HvxLTUvCKrdHUoUufqbKsBXo=","JDmv0lQqnFZLhfpo/sb5/UjVTDmM3+FO7LftfZ4JZC8=","K+pAWHlNi9clcF5lCHXaIVO4KdwkWXAIJ3CgNUZjak0=","KScS7NCNNJvAP+YQ7CoOfZuDg+PfPBOvflc2W0jZhdw=","JBwfdyGdF41NYfUIOKabbXApyhs20+s0igsaC2TENTA=","IZGReNDKmHTJD4dUB+bedC/WR6dnlomXLPAsKGPbbgA=","MD15bVKGfplCIa9RshIP84Is2KBjfJCW7+Lpqj0se1M=","Hw8wJDIS60vsa/not5SYmrrdrxNX99gbefInMU6aqEM=","DBJYGu2WOhaf8cM3Fsi6/GvpqLbbE6JYiSGCI/hQ3no=","EUWd38D1krJkJpcGUBwEznvZmFR5eSU+zcvMqj9UAHw=","Dys3FGoKBKxT57Ywhx2yUqHdhDMajTnqApYfk4te+ho=","Ie/K5ll5Bna12RFLgdYEkOtVHWsh9l82Lwggjq++TT0=","HhtWxvduPMJihLBKQrWgLFudubhCJyEAJF2758h2GE0=","EIe+TQxHvPIKgV9gzoA9X7khbx0LR0p4HIXo7RR47KY=","IMeiwQHjQnD8GLTwXSsvWloSmKJZLb8/m2mOSnkdkxE=","LUiG8gC5nFf08JwMNi/TU1rpBqEc8BHiYfr0hzSjsH4=","LebaFVG18dF43k3YidA67uRkAk/Ck2CXIVwF7hSST1w=","ANkDSL10XlzXeaamtcS2JeG4ZVnXHFWhO0qSq6IYeqQ=","FBwwhARNK8/pWU2mv4F1uVCrNrRDOn5huBW2EBpbtwM=","BnwyQXmePIlALRBIujADAoO1B1U6BsprN6OHIABBLig=","FI85/TWla8fSC6HIki5K1cIVZg2tjURrD1l+3EKh/gc=","HdH9YIvkdk7h3OBQZ4md5T//xrAPvkdaLgIipjxoxU8=","FbsPht0KN4ArEVqB1OP2j5odP+WJ5YSLu8X1pdd77vQ=","JkL99d8fr3qmovN7M6Zl8WOn33DIatqth9+rBkk+xys=","JccmuyChugjHOAjgD4Kb0/2VOB54yIux0/NH3H3FQ6o=","HKWAjD1otRr8WG7UT0QYmk9NDlbLSWzRD13jaJZrhns=","HNquoXoteDhaVumYSWN+3X512FVr/Y8kGhH9kDr0+oc=","JVsG1IUj+X0tML3K6TzpgDJWoHI+wWG5h87wYod5SK8=","HLP/IPdDqEXENf0+LRDpMS9h2kE3Q8SnnmerbDLbr8Y=","BHoyI4Uyp6c03auxUCS4oVRFX8JIHTHDVI0eclSIZR4=","CZWyEBMZEPAd+Jdq50LpXgpatJCkq+sw/ONI5U3MTng=","G/Fu5TDJyUpAjy/9Sazn3eY1CZvP3cHuQd7x2Gra3Jg=","ExB6XqKjQGrNtlY6Xj8ICaHGt+qaBJKFMyZidfpvUh8=","LVYswGUAKN9uMMB72+wH9z7r52ahktEwpsc3/Jzj2zk=","Lv0SteT6EC+9YL7cEgsdwCL4xDovzoZCiTaY31PCNSk=","EQCYyRa1IyEeGLmF+PzH6KgEvLx2K/62wlyBDO1VIWI=","IKnVIWyqwX21q0X8trRd/s1gpwgpH1yGq4TaIspZatM=","BIyCVAkJTQViWd08p+FaCFlL6C9IjWb5G0OvZg3POLY=","GYRHn/ymtko7lQNydHwbkmrDan3U9w5H4Yi/e0EN7SA=","IJzsfuN9R6ilb4SEuU9dsgU1tVLBHV/azIAwX9glyPg=","LammkrCJFbe2GTDwEfdrCb637c/WoZxIzedC6ZzUkwg=","MC9Q7OSvoX1VI3Ck4Swlo7AVGkPjmC715xo4x0w271k=","G0bggedWxCx4MVP3OmQFT/SYUHO5pzIVOrackpRwKD4=","FRA+OYjQuvYmv53lTXWwMBotOSfGXXC3I5GwYt98tPQ=","FWTnAGLtbDs/8nLeqA/z3FfKHeaIsd5IHnwHJjdq7tI=","HlRfOIueBaRt7lFgyHBtqAz4B8bBAmDIXOBKw9Qe/F4=","CIzUB/Blf8i26Kzz7isEc+UOcr9Y9U6pHspA34AXPcY=","CLjkL6HEEERn1nx6PjhKPABD4cHVN9Br7tmX4LUqvMU=","FPGz+ecgMbp04uAygE2nho03vexlx7TDMTPc4rGZCEY=","FhnA7MoULtFC+Iov4LA4EiCxDT/1wg+2ema62r7vAYo=","EPYgqGLH7JhsPufpLuQxyqTo0xgr7yIXXSlUJ5bJmSU=","Ly9z85U69uzqhvXvKQdfxOAb3Ag8A/5u+JhCy4H1eTY=","EkrpP9sbMnVANhlkKFGcg1DmmcEK54O47+wE9tDk1A8=","I7uo/ZwdiIzJ8yaPxU7v314Y1gtB9XlBF8gA6pVk9Xk=","HaJI9NkOAFa2g+Kokodv3Y7+R0+1EfRpVa0xRTQeDTM=","L9gjRRHlSWbQDz6kpl388KaqB9CTI/mUM5tDvNmO5nA=","HPg0UNI8X9ZOpe1gA+1lA3N9/iSe+/8tBfbMKFtK278=","BzAChwO2OID6R6oLlIoqlWWQ+dLeAiKYwDUGNlht17A=","Ku45pRZpwUdjCU+4xC1kkGSYX/HhddiCj04CUukIEQ0=","I2pI/sf0hx4qD8YwW07TUWm5QvnoApc03JpfRQsKQLw=","JpF9dNtxZYAOuwuwWv2M3Hm0cMHVSl6x3trYdKSness=","IXJ5ydmtVov94ZlSJ26KdXAhmFssbBln3NjDpBmKOKo=","H4SiZgL4OXCjiv36M150DiS4+5dN2diwMZx89tNJHhI=","FCn8mlOmk38VFWIoMybZ+ZVKKtgkKF5WO2fSg45dwmU=","JTJk5bRyWZOAf3mdawZtOFAjLs0Q27wB6aDVL4G7t6M=","Hxk94FDh5vxVk544yGkD6gMlK0iRINCnTuKqIDtYfyM=","Cxeen881mEAM6YgnhCH3pettWtw2kX+lFklTc5a9+Zo=","DdPP0udKxkQ/EInEwIhKiQgBxgjBpTtQPrphU4GfkBY=","EeT0PnPBjfUGaD2JpRG0k/r7xP7hTDSoND6wPRwZeM4=","B+lhP1z2VRqX7NzCTYgQ43jJtUK7WdeUYaTCVJNXHuw=","CPJQqrryt7tYoJxs2VjhPAuGyAbDPmD0zfBnic0CQcM=","EHanhV87fR7NW9x8CGA5HFeuHq01COqZTDFTDinFokI=","G1dga/1xq447LqnNMqeFadAOioNrii+U4WUUkAWiIEs=","FqD+yOK9dVWWOW8dHPt5IQeWuFvTve2CvMK45tSmHF8=","L6k5t4/TWJFguwmzWu3d60PBDdQMKsZHFZjErRNoiaw=","L+xKp1Vj97jONprC0jlIan4uWTxMv3R0/CDlFUIn2R4=","DhFY5jybffMtfD8yqX6OQVND9Uxil34o9r4wFBjYw94=","DhGJPDLmO0KnS+2B3XHmNIqby1W/WDUzVYC+Hqqy/uQ=","D8BwG5Q1swW2EMf+DGZ7M957vTMMqUDXHVzNtzMkUtA=","D+5KpwqXWApzldZ6N/VTMLkIRw+4A/0ATUNK5mR2X8Q=","FGdC9FMfpJxISAQGSYxlQWANKjA92NrJcbe5IHFO4TE=","JvFF3FKDQMuTNcu2+x5w0MhxhJ50def5wIkLkH+fa9c=","DjB6PSC9FjgeLLnQuAIEbz0zAmU18bK3wDqwdbaBz7k=","A3UY46D9R8mh4zqRjDD+n9zk3QTcDpOBYtLDpUE5Tlw=","BSDE9r3DdbqO9eT01V7nOUk4aoE8YHGNsIyj6KrmgLc=","Gl7gkbdNzHw5YlkNMEJIa7Q5kQdgDF9mZLFFt+uMmi8=","GYYlZCQIT7eXUpz6tAOyy/C2Ym1JMKvOF7GmTa4DYxQ=","A4Z8cdPPqAOatkB6tGBTq0t0BSdvSD3JgxkEe5UaFW4=","BtVjBQ9Ql3dORWQFuMQNH2W4oKneFOKwUgOXAL26I/s=","EHZ+Vogr5ICTKKWNdHxtP/hd5lE9UNCcLjN9IusRwgs=","EBcXZnT5PUggfiOWdNme45ts2JPr+5A6KkHyj/C1YzI=","DufmzjWSVCR5MvTgPTETwuom5RqDMT5MFknM4iNms88=","Jv+CxlvkN0/M11syOFNN+lRMsEIouLF/3mi/VKeR1j0=","B+iKb85gHEjVzS7FlF4kCA+4QMWsdQhBRtS6Gmpv1hc=","EpuMaehRi9FmNqsPGj1+Oa2iil3nnqX7oban0TVQuF0=","DXlPCGvE5F7qYzfNHmU5EEnVw9P+6JRwMsQAaa7v9oo=","JiK0+o+wciZTK3eekE7qRPb5CUiM9RYFa9gdr8/WCgc=","JWMMjRBGk+el/kGuZds1/T9MY/j1HvnQlI6iWV8ViiY=","KQI/xPM8kCjN+jAFADN/Zo3ipUOEemGbam3PfGRxG1o=","LAVnLpp2PqIJuqD3wx7Fbrq7NMRbJLcJfIQbs8vatG0=","H1AcAMG6iq7Rc1JL4vKyF9a2ugCsJi7lj/YiAWe6IB8=","GboIWzZ5WlXb8EDlTDVucDIbgfrim+DXHXd9ScT0u40=","GbUdL+eIMUJw4U0bwkjAkNqGBaQPdVkhb7hkgv5pAi0=","E1Vl/dbT5lEZHX7RqwEEM3gvmwekHb4UYpurcTwiljU=","IkYe17pEWWvzp0Atyu1cJHsJg1xTSoGrNlFI4Uj9Eyc=","DgnDmTVlB3OXWkEbwJNxjax36NeHdmaoWsPaFYBc34o=","CEq4UxRAKgtozTAh4a5nkLJ2hsaw/y5JSKrk7my1B34=","FDtd6DgUgUvBVTvH7JvEdWu9250xhDqdr7wpNvyMv2k=","Kpuc4m8LhyG+BtqF7hR0cnWAsCN82wgTW67uYQpGBSI=","Cqs+py9D0AZLd2pHRupuKxibfgb+jUnr9FLKRiejh9c=","Flb/owwDesRXO4oHJoiNmSKK2DJFSr78pZjCMYo+xlM=","AUoqoqWYsuI3DRQhDatcXrdYsMkXjOt/8/poHaXJvN0=","FTyT3iTgHAfM11I25OySm276DalsaHtdwSX2gYUFZ+s=","FBcHvcdpg5jln0rQTsRPq4t/T3sgCW94Ag6Uh3ipD1U=","AhOBJZ2c0YqDfcNPuVAXo/Mnhb2RzJGFidrkISr3uXk=","HV0QwTIisXFteh3vazhNcnlIsP3rGecjsr+hKS2XVH8=","E2/57bnAVozVhbJZqqVizj4kswpsRmCswLUpDTCg2oA=","Lzq0QYuwy3uFlnW5/86MSI8WzdjOpEwU3gQy5uKIFGQ=","LwNyfQiUp03JfmDL/nTHxzEbBdAgyoeHGNv1YduL6jk=","BN34i+uRamYo5gp9qYF4HfsKXhB2KFskNX8ikSj+Ja0=","CBhRnqK3H77Gxr//h8l4r0Qn57zFdt+lwVvE/J/tJjs=","EVTRqjRFhcTs+e6TkMhGaNzpkjHA9CfoYprJBSNOnrU=","AwQpjGteIUSumlCM1Mn0yBYMN6+kd7OCmv1J1qSfywA=","E2UKWNyp/a6AbnZFTJSiGYvtJN821pSnpTMUdUitAjQ=","B8zxnIuHFLGNKApMDKDozGjiF1FtHFTbb/c1gr9NMmM=","GyhHbjTfFGtPnVMLb1nNA6vigb4psyRqUP7e1kcIPTI=","HFg0emT9W+YtR4yp2P44Or6z+jDYdr1QJezwcBJXtz8=","HMkALUEZWWr/l0MQ2lvGJyGRUJJQQSam/ztoQ4P56q4=","E9md50i0/tRHa7LW6aTscriwSISH1lgiiVpSZ7NaV3I=","IaeAq7Lvr85h9NZ9p7i9+sSUg56MOE8JBgWpTns5bag=","DZ3Ii/OGH3Bbmq8fgt+dU4cKDT+N5P2LjJZc2vZXGIY=","B4868tE+v4VehAqMhYo/LxQxauUgqxL+YTgcDS1KBGk=","Bi9bV3gEpCP/Okc5Usr38FLyLItDjwDDKsiI0AyZcTs=","JajDPXrbfd1qGd2DB6k12RSPLpYkdfJB7WcFG+w4vHs=","BDFlKwPJQzOg7XbDbxlo1Qmsc7iRDfQHsDQ7ndA/tWw=","IhI605kQhio6JTlzKePcFJtQKJ+QleciSoHV8tOZh8A=","K0MzR0P8OMG9zHzH02zkQas74BZ03kSbFTSadcuTez8=","LQoLyS4QnF/XCvvbhxvOwXimn9HiRBleLdrq71yhDdA=","KZ21+eSfSs63YKSqw2q8N69y5QmtbSH2rxomfS/vxrM=","DIE/beCBvyWAhlbViBGoi469X9pbE2WlT3k6wr1NwPg=","DjJnOmi6lqqVmyXmVblCLZhxxtW2FdFNqXjRBBMvqTg=","Gp6dw97C5xLalS+0zn9k6ZHMWQoKP88kY9zvkrXtw4k=","FZrnLoCxtl9DtQdN3GZCN54JxGdp1wKLnWjpeav1lEI=","JHmyEa2egfgYD6LUTQZ1+N42BG3yFuJU3anAQ7NNB2s=","Bi+LMS85uy5fEaeG6muwUeU3N2MyndkExRmeoZ41R90=","IpY8A2Vh3OyOHc/tbOUKcnCssuQV+zQ83c/Mt3kG2lU=","BEQPsyNUf0bGc9DeWk+xmM/IuUtk4Md2RC+x8YmtI7Q=","K9bgj5bHgB0+xzwE7HBuOlbhDpCQTCmloJZU1WzDn4g=","BTHQ1tymLtLLR5zCSQIIRzznji1josHW3rahX37vSTs=","FhHDjQfLzitRV3tkBzM49Qr2r4p9TpmSiUK2poc0Dtw=","FIYE/SNNL1Qkd8egxzpZ/ZoZxVJ+n+tBZeT3EdBNhK8=","D/sB60dSdBsFtRtjMcKxoDvK+tStv1f7Yh+P/j7sjgI=","FK9kftNr5OFlk/ioEzUwBFlyHX3J666xyd4kULx9IZk=","AR4qK/FrS3DZFUb+PpdBUY8U4rbuddWWQP1i8GBtbJg=","H8L93mxawlf0BS8BIDNUB+Uzcw2SeAmHneDQI3Jv5PQ=","BJ6JIEW42STXV+7O9mYCmHwxe6VbeQm1+6pK31apoHU=","AYuExZ6LW9yeTFWukUV75KZjMrWGmpv0koEk4XDqpsE=","Jjx75WREY+Eu/nFxV5k/1YdRzXVa0xo6dbf1JCAgix0=","DLJ80jnqXW+Yis+0t96albDqqwrQzslsm7oOai5Fmvc=","A2NIMeiw5zu0V4dJp4dfV2Q5FN9HiuwMRX9i6NFVACc=","Ihypox6KEXiAF1kesGex+HvDWzYuEEc4Y3jYXCTSaks=","CNXcz9LSFkwAhvvauRanVScVa4KrRTYSCrZUjcma3vo=","HqIvgmRp8ENPnf5nSUJ/0VeBVkNhre6iVIUEWK1IJWA=","FiWZed6eE7eaqsarigLsDvJrCxaQ5oLsqlSIZ/0WGic=","JWFhM+6R53KwINTExZU8BajOogiwFiyCtX+dB6W2vN0=","EJRR/37o+/2VY7jC59+DT3JCLN1o+TcnWcOjG1FNhwQ=","KenrYdDOM8iZVLBTC6VXcfO2UKnKANC1K2Eg2kvZeIU=","F2sja3eaqWPebig7wG9NQLIRn98ia7zE1W+TN+6UDfg=","FqAz1sJmCbBi+cNpsG6+HtrDZuhTSjO2LQ7JGYVVIMM=","J81moy3Zabqf2wOCAXQsgGJQfsrWLolHZY9GbyrLu8I=","D5ADh3nnLpiAM//LH+yrCH8wLvYXUaaoSUbJl+Y0N10=","IF9wuW1uf+10Sf8PcL5pjLW4BcdXPXcI4saOS93oUfw=","G6icJ8CRz4X5l7oOPfu4S6ldRj0aWJgm+ZO/YNhnAGE=","GC6i2QVjBWcTb4OuZxrGMVjbnvqucbW9PuCj3pqfnuw=","BlCaiF/hFrlnrSzJmZ1EIQay8JZ7v/8CyEnFJyoQBIE=","Aig/fTG8dejsPI8dtM04PATALa/kKmzIMgXAwWU6qFU=","F/ryTSOyQLw6QwZtIY24odiShxRkHnK0G3T+v/A31Ow=","CgOp/HqlCNoyYULmLH1IGPWT38UOFLi4NKuJNDGipiA=","Bxza0JDdBs6kUETyWmrbUpcVlPPhYfYvQSngtyp6lAc=","EfF2WJuCRPVVYAlqGEI+xDRR1umd4WWil3Xx4Fa647Q=","JZ9QwToXb4UT2ndE/DGv7K4OmkECprv4kxeL7ialPQg=","JoBwwX9m6CoSGfFE6XrBqfb5JtjWBrvmbCvHwFHqU4o=","L+sepkgNbKqtCiWjtmDQFjtwGTG39zdR1ehqSPCu9Ww=","JnqABMCkpltKwzuGWLG2g1ee14RkezeHcrS2bMTBifk=","JdZ6dg8qF6lDXluk10hrznoAEPdx6QncOMtAEX5AEwg=","HhTC0yCdQ+c/clJO/aOWDhbI0W2sbfuuc8fnUYnyDRE=","HBJBDQmzNkNArFcbQLwddKm0KrEAH564nNyDoyZWtEg=","J5e3nGekjE5SEOk0Avf3OdHk9ENmTmmB3xtCMqmRb1U=","L2/ueArFpYza+2U/8lCsluAsZxP9xT7lMBERMa/S3KM=","AJbYddd2QlecqRcIxbzO9hrNafyUHOLhJsOsOUylsaM=","CckYsfEoThI69KQnlZja5cROXCAUdasIPaqicOQ1maA=","FMCwYZaVvwdaI3lHvEJa3xfDW+ddRE5UKIo83IW47Rk=","JtjynMQarD4OOeNUVHxTswYn7Cbk+6M72NYJeb4ny3Q=","CdnwQ5S0svW6XC5Pg+Tw9j5MF5HvARFIyyGWkB3scM8=","FwTECFg+kt62NlXDa5DLpqmixAMmH6IgG0/muhDc3LA=","AwcCtk0KdssMnmUetXkmNxizXP5i4TZHLghhaTj/Dsc=","Gd7Pg97ONQBTCYl6PrgdXiXLzk614v7+xc9o2QODKX8=","A4xiX1Tk0uxJw4EcNwY6HRCMDVN2z5eUTKEHSWT36pU=","DNcm0IWaVcgGMFbYNWrSm0ELHh3R7Q4oKuSE1rlMM+o=","DpoNsUoYKC1DmUfvdBL+Hmru/MlrSsUOf0MNmAtH+9I=","HTsA5nASWR8/5b3cHrNldN56A1ehvig1nBUY0H1c+YU=","CXRexdJM8YN2lvWoZ8PGEpoNRMA32WYS6ZuC7vPb2Hw=","LdXi6kFYjbewHMYRUohQEUrfyFE7N7F/sqRvKwm/axs=","Cz2tcxuR7Uwq7rEEEMUabpJTYMvKsgw93s+D26p+TJc=","BJmYspT4rru/L7vsaV5NLVapkE7gUchLDuH+yXmM+0I="],M:[["LLExedbopK0bn+w3N2JTz2Q4atkF4kBXX8qGU5snLcY=","D9VHhA86MKUzqZTR/bP2CuUHP0SE80vpUe4Wonb965o=","BQGWcb2gJmcMf/qQgXlRBZY/Vs4yf894RR+6K9s6wcY=","KVLBjBVVjymyrnf8OeUaOV8XOpCX20BNt2WrApBrJ9w=","I1OmCva9YeXqwsmkJj1FH60HOAZU1HkjeNr3UuXMM/o=","DtajvUgXTjcLTyZLN0iLA6Xj9MD2HPMtMVetPjuG9r0=","IRA6eqIMjRVQG+jCNQTGqRLGEAxdiAhcwuQqUjAvRIM=","L7IyVz6F1oxTbRAMOm6pFyiERR5new0c0PtNxMJ1Nrc=","MCoIW+BA/5pwmtDHMjiw0eEeHRdAmrqjT8Rd4ptUFTU=","BoPmQOYVTvc8PNax0PD9huv34pLmP6hM8KiDwvH6qLo=","Hwnz+wf39kdvrJiUa3N1CV4BSyjyOgesn8cHcUSsOXk=","BZjDjS4seN/kkHx06CMlyxkdUmCJVbWD5YJuvr0YV7U="],["H5MFV6KEmYIl9fTk37z1rCEfGxLZGwVi7T1jKF16cUo=","BMQGGCDNqb9HLfP2TWr6AE8ehiPQpPYULMofGaTCdfs=","Dbwiw+VMkkqILCIACVEjnMJjdV38s4sn70+IDiAstfo=","L7scWenomZ2RxA9NRCMxIqs1/8l17ftDxT7Qfb8NnHY=","C49A0sTSjEcghSA6DkYK9zu+zsOys6Y/JwKPLKinElE=","AowBqfAWAbtGQX7UZr5gCFlQUveC5GhX2BIp5k5r2gI=","I86OQCk5zM82F2pb2DGDoNVKJO5sq+T8f4FN+/Jvheo=","Dbgqu806G1b3/I0RbLVMVP4mJDcCvT1X5x984NRwpA8=","LnA+qa+ZFhrPmUnaevsY1GLYW2cWVtYcLN7jpyOQIT8=","FlEsFQwdL7cjXv0tTw+tX914+NDN5TpmvJAgbILEtZc=","ApiqXVpEVlt172jfkC15HQHZinXoIu9VOxdhxY1v3zI=","ID/SB4qyqPiLdgZUMUXuNNrqsq78oxvASkdgZWl8q/g="],["AY6CIvaQfaV0Xuuc1KnmLyi4txCqhf5yn56nOj7wCZ0=","EHdX6wwHmfeBMI2D0uBX74EG9rZWtF52NhgeETos3zI=","CWaiG5YVryt1Y9/kG4ufwGA5US3JyOEZaJHrd/hWtgg=","CCBGCBSY7uY8KHxvo+/N7+uhtScqd7upz921avpTyC0=","LH7L8UstYEmmQ50PKfEOJuyXWsw+Pt23fIMaUJr1kZY=","FEAi5+B3/yKizj3+mSMQfVrvBG0KHyy182GRqwTq5O0=","FwQD1BQUj0aBuCE1UJUeI47cAJ9GsAaTzj2cWAD63Qo=","KZfZKl6bxmyE9jXoy/CA63IOzUyj5Cw6uNCIYRiAhho=","IUJ7Opos3x4ubGKJBrIeJCcdcsGLAmG+aMykSGXezhE=","JLulgIanhUGo6/1TXBB8NpRteLpssm0ifmFRMfcdM30=","Af1abrpS6eods4mh/I3T0Cg9c3wY6wbgkLb9LciOChQ=","EnZELZODxS1Q/Jtaw0RCpOyOnNeu5tbOrMGm9SGq5KQ="],["GA6STXV9C+QGb+sUbtViEuOKz530lXQyZT83D5Bbiwc=","Ks0544kqxCntgShj76Be2nRrVbuXRpSk53uaGau1UAE=","F7GGIdvWHfCF2kz4oDOV43ACacffTZjOSFH5Cry7NjE=","AqQpwtBtzzTTRzDDr4vBmwSr1lJGjeWoW11cv9nCPm4=","GX37ZBicCarvlKH1QtjDSuon//unBCAtUobWK9Du03I=","D9O9t5ytkTQyt9OCjgctrcJs9JA9VriXYgByOEbGV34=","Kbn/4F2yxS3dG/DlxTLu/nBJfH30uX2y8GJINldqayk=","CioAbjsIa/UCxbFUDqrsFLnBW/iEccttR5+0Vj8BZJc=","I3qeAgkIzQ7b2erodyNQ4Ocx4yKLiS/F9k/fqbnapnA=","AG00nWGC7DDWjJvgEFh8cH9+HhdcDTJOat3tYzenLCs=","Cqu6OdIg8wYE0MRN1Hw8cN47efW6pwo6egygKuGwgMU=","Fu6YCixn3iT6GjQILxHHG3xFlmpui8aqGh28fvapurI="],["L30HFdE5EZDnsUoSQrZ5nqwxQuIfCMoCwhdV6ud6Vbw=","KXiLts2Ufqnvru/Q7rf9Vj/MLkC9Yj6iskQrVdmNxaY=","EswnRkf8Vyu3kDW/wzMqTlZqKAEfad0IdPAcVrxEw+I=","LvWEw6ru274rSxA6YelO1AqXKUFWrX3fDeQ7hFJJ9TQ=","BfmmqNZMyhJyXdFREPdK7Pmd0w5Xp9mYKc2HV7dbdy8=","KXnRrq/fl5iFYNTrus+m4rfz0CaUaru51Tl2ReboGCU=","FTiRBS/KEpD7+DJA0zT9TOBd54rfqiyWhkiODEfOH8A=","G4x+sE01Gv9Odq9/n6ERT+Rartr960LBwjUDsSJjnHs=","LYEl2+9gK9lw0R+tfP4Gw8ZPVoewm5YKuSsU9p776lc=","EJJIB/b9xOnlhnkuOs4wAfFrwC6EraXfUde9NyQ+4e4=","IwkYkZtoJvqnEkxb0V0QwDbVZeEAtpajvnr67bKrums=","HbkiuMJJ/3v5YSHq6dlVXvd3Dz3XsFYZGumrOKXM9u0="],["Aig+2NXm+UcLP09Jp3EGHkpPx9rGg978wDSKiGLGznE=","BquGcsk2BwoQdXrbRQMaXiki8PuLX6s6T144cvtYLtM=","LH1Ti55tKy4G5y+KqrJtvd6tH+9qdAoR6ZU/jo6e4Fc=","KORiDSEFNryqQu5Gsc3LIb8hWTO65O7GOe+9UfS7ZVc=","AP4N73C/ukBnmu+NWiObOhtaUv6P1+23VK7isYLWS2Y=","Iq4CNSCXl0HlxY+wT9JdEtyPX8tq0VIjpdp+D5HHtPU=","EFwLJGZgxL2Kbxs2/Dz/hqLEMsDckyHLUKu5ihDNG64=","Klq6O0XnnrJgaypbR+uQdYSuz7/AtM1QzaHOSFQzhZc=","I6OyPV7fXLZhYP0lI7OjgxQikcDg7mZmgulGsdV5N9Y=","JmNfTfcXIQfa1rfDBo0tQ4v79IZHEDn55lqchGKiycI=","K7KO9C9fratqb/1WVbNlgN6wY64wgdWHuxWYh4WQ8cw=","CW3UOoMqto415XyY17AfKi5ZNoB3BFk6xyx0ABOD9+I="],["IfYO+xMrYpCZkLn5lPOBqcAqvDzLVMXI6MnFZkxpE9Y=","HbmKVi/NGl5EluYSZKrV6jtFX0bqvYlXumcenDHlCSs=","LzCADA7kYQEFadNrYGhaOLApEqAgvEcIWYhU9lgi8Vw=","HjKx4ua1knOhE9YJZjr2swyVs2iE/l+vNx3j1WQhPDs=","GxUjRjpFopgoiQSGgaQiwC6jc/i4wb8Wx0o3XVBgxmI=","BSRu54VLLiDoYS2gIbMHmOXw0Cpb/V550/msbHn6YJs=","Bs34BVQ5rIQkxDXn6b6j8K6T6rFxrDg+0s7bRg/LBMQ=","L5pc23lkXjRUxhfXendP6vJO9gNFTAIHb8TJ11SMxFU=","AbFiXXV3hqGak7N6338iyopQKqRGLKePfaLXwis31/k=","KL9UiKUl9VFEANznIkMCh/6OTIEBVAVusPTW/mEJHPU=","IYkb7jH7e9ifDkQis8j1s5MpmvDZgl25vnPnsgCXkjw=","IoLoat6FhV1OoGV8St0gYlxtqpC8k5Q7Waktu3e2NoE="],["HN6CrO5guEQk6bzuSaVGTuBdHPC3BGkgimdWNaxxVJU=","HE3eB9D5TRqqgyrC9XEtQ4tOGAS1IJzlWULXr7JMZAE=","EWxF5NiM6uRWXA6U2oROryd11fW0NdlNLT04tYP6eEE=","GIIDZIBNIhGTR7coE1tAmVb3kz3voQWdY0uXfZ06vN4=","DISdB7HZ5uy6xRf8GSN/9zQkoGePlGmbI/dpUq+kUUw=","K2Ck1D0SzzEHbgaQ6TFxbEeobncow0stPLDLz5W7t08=","AxYde5ThsEEfwB3PvXSKbfMVb/BFNrPdMQH3suvDgRs=","BkOOiwIgRkA5p7gCLwa+ruUCxd4mnbgvkdiP4bcoNPo=","FImLq8iBDLxiZohTFRGoRz7YmiJWnUe6WGwoTkW9CuA=","AJDfzAMnpUFnLPwmx+E3BYPF+SFBdwkwEP0/vyear9Q=","A44MLinHnM9GteobxYknauyVt06LuC5DhcBYVjfIhfg=","KDMdDTHKhnWtR2fEkCYbv+W4SttMosVZmofzMZCBMPQ="],["EYokUQohU/gY8KmWyH3pE1h4BfFs2xk52UBpQflY6OE=","LPyCcS7Z1x/0/fY+5K0Rb6wZV5T42RAobBUu/Z+Vm+4=","L/zLxAAx66/s/DqXKEvQ9txNRezri4mY8aZnvuNp7WI=","CbbACjffJ3DOwPG/Yqaqw704DGzp9PluDwh5I3/6UQs=","LEA2YWwVYAYzd3HB41X8Dy8jjmTL1p0Giqu0tYEWiG8=","BBuQmmWNE2mTs/UJqenVATi6ykj2tmOZrFxknmjdOqQ=","JcB1tB6i2CeklVtkadudQXYPr4hfLG6cCUB+uxxNwnQ=","EVqRhnIzzHXRyQakKTDpPLnBavztOQzBRDXlz++06W4=","L4+zcXi1JXWL9qpSfyV3Ph68+OFCU3lQDIJFx0G6P8Q=","KaFNxLrApMUr8wqva5uOBUU9DXlyRrZHMtUPF2p8olc=","LIncdWK5HY8vfaogm3VgUgtrxi7GMdtBzF7awfsUK+Q=","FJcr/IXeA3sH5VMy5rxbTwjzntTripch3/xKWG3Zod8="],["FkVnsN4Wt6VVD8oim6x8sHeVJDJeTKXnioYHiIFmAmQ=","GLSbdz9XmYiOmr4/aIPXBjMzg1ts3TM1gLK0v0jzsn4=","IAdCSxKa3iGUxz5uLJ15Ng0TYMT7uMXzEzD5OFWLOs4=","BEXibib5FwfaLfXBiLr4DqL0jHA2FJgPp5iXHNjsYPU=","F2gE7Bz4XTUpg1EkXTIjZUaDjZuYz0JC1gHH6OUBtJs=","JbbmXpD/v5ENGf464j0Df49k2p/j30g/xPSXfKNqexw=","L6KveXDhMffv46fHiIkKuGD3Z1HlW0/2NN1GzE3mYNg=","DI/U7OXCBRkM9shC0Wg0RAeb9Jg11ci437sRr5VsyvM=","DpkvREY+Lf0mfmpKHDMD6noRhiUu/Wyfrp5fDB9tgmY=","AmCf+X71dP1o0Wo94IcsO1mluSgljdFGmCahkdy/W9A=","FdxXh5y0HWAV2piB+Ui0DSDw4D+th3RthXWvAJyWAz0=","BtA5tk6C15dd0ho3te55MI8g6C4jSJOC7C0XYZBYeJY="],["GI/zAxlBEqcDRSfMndC03rCWDJwQbOEVF43XCH5OjAI=","CzAN5bmcJ9MyCR+PsNl88EqGpR1NIDd4jg1POOj06rI=","LFPWZ21NTIfZ6vXU2gjR6Y0QOjOI1Zp8DD3lHiYjqjo=","GfUQFxUWKXZ2bitXpYZ0vFjhuivhilmwegfkqT4DgHU=","L1hVqHajf3u71hBKzPyuUH6d3NKnIZtIenaxfFJbUMo=","LA3kSKiN/qrMm88oULb/T3AeGlONaQmLyUCHzDWTCWY=","DOWHBm6uDDRcM2jFPf8hcM2wgb7lKyQ6Hm3m1PgkUdc=","LOqYzGSr2Sbflj2lfy70xDQUHLU6xjEbJWbtuVeYJxM=","LHrkddkMR19zwNKb6IidDEuFNv7mwDiZhL+eTbsarm0=","IyOP2hQXMC3QPOVGB3SWECkpRb3b1YckFxT9OWSvXxA=","HGdP8urSfOAC9L78etXw9RI+WXk8D+IQdegZzlbOHoM=","Jie+aNnNDM2jgo1RYhukCfms8J8anMUDop7DBvhgauc="],["CD2DKt+btKJfaGq+2p8W6/UyY9z570MReB0Jkg0JTq0=","BUGva5ZSRmIITRII1xtrKo1m2RF5dFshNnnCorvJSWg=","LPLJksAqNjNP9dyFFkbufaBLROtUTuPA+tuNxe7ypYU=","BsXfj9Yeyi+0kj8KRt1OQWo6O0jBDe0TEz/+q2/RU+M=","GiM8fOv7DG63Lf0HqitTfM8pHoQJOq42zGgAL/uDY5s=","BfbWL1RRjwOeeapya/FaWYNYPspAYkBUAKzKWMqdIjU=","Kwnek8bjFIz3/1cxyOFE3rtmyoluy+QInS0iy9sJd34=","Ajns2SUXglF095Y0XbKWViIjdg+xuBwJG3SmpKgpaKQ=","KUXLheNFMuOiL8V2cDeXiTzikNAVZDCo3OYcnfiai9U=","ANO+alsSvPG8cFwgww8yC4iBxsLsAOhXaFwFmSYqPPA=","Eee8SjnScwGWtsM0+ZdQ3lu15PvKXWoZ63/hSr6EXb0=","DHyduVKGX7lHD4qhQCU2yzuCJ22eKICCrH+DsQvLbRc="]]};_11.default=_default$5;Object.defineProperty(poseidon11$1,"__esModule",{value:!0});poseidon11$1.poseidon11=poseidon11;var _poseidon$5=_interopRequireDefault$5(poseidon_1),_unstringify$5=_interopRequireDefault$5(unstringify),_$a=_interopRequireDefault$5(_11);function _interopRequireDefault$5(he){return he&&he.__esModule?he:{default:he}}const c$b=(0,_unstringify$5.default)(_$a.default);function poseidon11(he){return(0,_poseidon$5.default)(he,c$b)}var poseidon12$1={},_12={};Object.defineProperty(_12,"__esModule",{value:!0});_12.default=void 0;var _default$4={C:["E3PHcc3xUSGiJPMw2EtmiO+f4AOKO8JqKOMZZXigAA0=","Kfn72jyZmDYBf3bhIa86ylzni7SPqGemqV5bnbOHUzo=","HH61EWogB1wWm3htnchqJO56JSW1ZbvCYiCajNpJBSg=","IaVJ61VPD4WfYdaPG2u+mqNEmmI4VGu98qHDCMnMUuY=","C1P/9wE0fRud+YtGF1gA4NMlCsbUoa+nGjSe0ZWHNQg=","AhKaxHQkFcAg2yRzmZs039urujytRxNxj5XmNG4Vg7c=","AdKPMF6LDsiNo3yCUbDI0jC2i+qUAaFfUSTWTFRUvCk=","HtMB4C4/yTCZn85tN0TCNZZwDANyBwWTnWHO5FH6/5M=","LtsYMpZuNOru4JA4WK/tsT27qffIAsg+5ihTDQ4mrhs=","Ej2q3ckwxl/Ge8d8qL9BI/6B+9BQHo+JrDGmmHVth9k=","K8w2NiyQIQrPZ9X+IdUxBOnVR40FcUHTsXJZ/tjkqPw=","H6koyrWTggfomOYdmcfWFiaRRPeQCBWxcJX3/3bjydU=","KcLxz6cqD7j1OmMehM/fXMGPtCbCVPWpBf0+gx/HyDc=","F6cyrRPxtqGv9CZkw5C5AXxBghAnPH0Ei/MAqnvpxl4=","DBjG53PqfrQ7mMrGZyLenRNUhMbPoITCpRLqGXemAmg=","GVTFwjjYowyfG6T7lj4JGsrLw+17SY3PZgD1MLZUXkk=","JZGrd4E/NNig4LewyqzW7xed0xRZfP3ni3SGnXTa1gA=","F525+4qrRhnmemqGZ8e0sy9A7YSNjjO3VsmnlLWTL+w=","MF0BQhS0EHwR/YOHBFhzjgT7jcTnRwd8DkYvUdHFlXU=","KYcj1waUV4/ikWNYmHYrzryprEVjsSuQ4f7092+be78=","ArM26bOLUExBKmgzCa6AJNCAKkXQbmSaXlNxmqspqRM=","CGh+aZtSexNB+at/FxE9ng7KBEMlHvNfCpBXBPFV0zk=","Cl/599RbPKm3mxjXnbQwfufErE3eqajaGjarO+BXyb0=","IORHR2ATGSI1NfRWbNyGylQyTFZXJlNTrdfb9PJQRlY=","AlTcMeOv0wToXJ74+rwaHNGkx7m8hgzpzkNsM6ICqW0=","Ec1kktxSDFfcPlXjP4o4fLwe2joUkLakvOvZTgdCy/A=","L5ixAmWjBHW7A0jUp4fPtmAxGaGk/hXDbcmGy0+MfPE=","FT2BTk5VrXgrzO+ZjJdCUMBzRl73B3VQJG9pxYupifo=","BNsRqeoBSu0u0I5GwGMG6HExdE1l0onlmWT5MNE7ntY=","Dpqabe6TOfXecTXKMiL9IjDD8/PgHu3TYz5gaqCxod0=","Dm2ORkv824+e5g+x8vMweZEeegc4VvrueDmIEcuXZ1c=","Ajf+IVEYZDehzxkBEGriWqwW6YRvnUH9aHlteijtcoo=","Hj09HuqLdhWpiX74Yil3bL2h2EiqWmgJNYJec/H1qoQ=","CXJBRMekrsDdy7qfmp6eybzfaIyj9YcPHubhdBeftEA=","EROZh+EUdGfZJ9sl7siPDB4CMuNIbNmgFL4/yM8GYSk=","FSTlvs73LCaX40yAVeyBl0rwSRLXyh34PmWggOqWJp0=","Bk0SmbEbGmu1Cz5ax1kqBU/XI4CvpMCSzijsjDHoDJk=","Etn70nviTrYgt3Q8/FKWVny0gECRoYA92Xd4ip9Yjkw=","CI0ibmnhsnProx1NqFdghcwP0NquFUa+8wB5+EtlG8M=","FRJt4YchPrtA3OXaGrOtxYoxOZIMGUl8P0cRm6pQZw8=","EWnB/nObxSjqwWpSY9It7kpmqZYfAe71FoTveSEmhZ0=","KnAGxoMJT2+E0SKtV3StLwyfqAtslj4vo6Hq09dPOqo=","JgfCLKmu/ozeow//BbBcT+x+2OkwLQ+VDNlAWulLslg=","JFMLCG9EHjg082wrEevAqAnb392DF6OERlkxwcWMJjg=","BjVOAtjE3peoEUgeOQwm5ck/wpoqGoSCSs5QRnyaplI=","H2+6s+LqJ5HJT1/0PKEolDZAaSFRspXc9CysDYqwdXs=","F0fKRbcoLvCZKPdkn1zIM3U34oNObIkFwa5pAI33C/0=","A+/UubTUGXTjaITjsQVacFq07D+xyOdvguA1mRIApjM=","LZzRidR7CxsyyaJBLbalmxtHXckevS1oXJazScIgtLY=","AcmYJlCqzRpEntBGBb1l/XXOOT1CTJdRgU/QNUG0dWs=","JD/+qoLzwDhIHoS3KLRZ6yITWYUa4ibBxtanuhsf/bQ=","BlDar9ADvtC+0iutoxvqcJSRqDtVyv8wAzmIVIHcZeg=","FtIMYZZ0Iot2f8YlqsZQuq4tDNFcH50BZFRwgrMJnfk=","Be6NXWYdOfFb6SP6KUTvKynaP0gx6x5PLxwSMM9dFJs=","I+vI/ED+7FJALhj4gerOv+RB3iVic//lUe7g7X5NrXM=","KSu1nnpscBFq17fhGVHDuLaxsTDzW8bEKKlTPAA6cOg=","Ez1C2fg9BU20PkNU0b1+w6ibjPlHA/3BKVDZ88IaY+o=","H9a+0NNHqI5G/LQvM5eusM8HqOcUZ+YRC5TJD5MjdF4=","AjsJGgwfCCLIFWdHqQfIp5uMH8q0o0IGIlEchn9513Y=","B1/HO8tuosFY5yGpqmw/HE0Tm1zxt1LIfZb0RCBRLu8=","AX47y6Cy0i0nzau8s2DIAg5WwBwHnLVQ4/Fp+yqaRRs=","GUKZ8Pt5UagKzplKPqMSPm4Mty1cRv7ilupvjnOtGII=","BvDlIpJKTPJdkBHUd6J0bHfozHcVC4e0LIwRjxRztRQ=","DMkcGMX+4bV52gkA8E5abDbWXw/Jd5kyA9SzEcv10O8=","Gr2UwqWyjmYTEOMxW2etv1Y/2waSa23E5Nk9BBZe0wk=","JBQskAGnv/82Pz9n9KK9Eo77cuhG47oQNE/65lXlby4=","GTG51FI8s/eL+89rHd5oxGASqnR9zXo684LteBJS5Hg=","LOO9EWGgEqVyg26X6o8GlPk8lS0R/RGo6Pmknf+d+F4=","FaCfo3MEHCOegUllfJi086ow0ZLIfAPM5HorJFPVpIw=","Cx3Dj3SnG32Qnlzn/lYBdoc4QXpXhomNoxb1KJmK9mU=","E+oi+TFrtWlNaQJP7iy5XuZDxUVJbfC9HCVJDjTQ8fY=","H/5YvRSxK5+v3DZecIGjlalhTgIvf017x9/JdLCq1x0=","Ebqx8YbNoDwB6F3+3UC8XUBuJMpYswWmJXt8dyvOJEc=","FAB+stFEC3uOCTbHlnIFGub1yp/UBVtBfwDJYyq+MOw=","EDfwGT1A9oLtliOnct5nnwQxhz6OC1AEofJCrJY/7nI=","ILGL52DofXxhSbgQ/klqv3eg+EDuV+vP4c93I2M4+r0=","Heg15mI/QmcRJ23eeiocIKYbkQv2/c0zs0Noz5bpWi0=","IRw4BQsHxKdHxdxEk5zh92sIIMS18HpH6LELBeepnU8=","A3L8LNgyAV4RnCoS02Iv1yEqSIfkvRJ1wgX64uF/RS4=","AUON7newgly+9rD0EumnJ31OXcFhzpgW8CCuTRQQ0L4=","B/Ls4WwSyXV6qmCVPe3XCcUT9vgzfiKWimXNULDZkhE=","DFemnQlXXY4fUl4BLXNym8iWSbW8QmDXPkMkhIRSUQ8=","HI0Knbd/FPg1MJ8tPGghuZIaNmRooNFe+zCPV85lhRM=","Fp2gk+els5vwiCdwctT9WNgCFbacomLMLRKl6zDAC44=","LzA0qyCvD9g6xgsCNmloZvglC/LXZbENbaLj7x4teHs=","DjG0+mJ90OXy2srxBYZad3gVQ2IPPrKP99wQJlZYMHM=","KpAHEm9n4WMdKVEvQzpqC8uMlaNr4WS+X6hr6f64pZQ=","CAr0AhW2B4voT7R6zXm1nszv6KkramAz53LCIYO9wNc=","DeiiNNIIhh67Bas4EuXE/dOeetqQR8km77iOHL8uu1I=","IqryTA8eP5QWBqUnN23f+RzGsK3AYu/mQfluMAWvNlk=","H09bdwnPWEvwcEhh6UI0zYkJhR47ISxkoLMFH/qi62Y=","EpbUZCfrLjiBal6BcTNWXU9t7U63K10KtVm9V2Z6ovE=","A/qGdnwfote060W0olWxKYxV0EXGlif12K3rloOhKb4=","CAIoBavgK611MG0iZHjknSX6z7yv9kk2Q1LUqI2Sjzg=","HVizOiqWOLoYDNNgKTCKLovn7Sc0QdXSgEVrLTuNigo=","H4yuc1nIAPMHpiW2b/IVTGxDZOhcqOAZEaY0qkrWV6c=","A5ymby/X+AwXFxpO2Mgq48O/BGLRRRqfWlh0iVhxe/I=","B09+E+dPK3sxajg5lW9L8lQerySXZTttsakzXabIgtw=","H2PPEUjA76ZW1a+FDNAqDYea14hs/K/h7FX+a/StXLA=","HZv268BGS5y0dYNJSie0V2PXpiKW7MoX776pc1anPiM=","B2SSh0YDsCGJLlwqA8cGl5vlV/1O4uBAeS2hbii8isY=","BwEjOMXGJuJn921Cg4iUC5AOAIXHhRZtJ7fsiWCCUjg=","CcKQWeIBPQzizOCyTjlGdlqV8EBSbDySJNKAGhvU/4E=","Hy3gNQmBqzdMm6fqGmnYGyh8LJ+tkJUgWrIVgroOpkE=","DFK6uG4lmjvYwGEZcCiHO4AbTFbqgDb/laZ/Q087dCU=","LyYuBheGcMT/hh9nDHtR755ikhOmQiAy38smdgQmo+U=","KvaqIzVAARRFNDXpcBDb5weGppGl2XLqIRrxLUzjhMI=","GMrWVWfwMi/W8GJstcr1Z6RvqhItMMNzgLVLa10Bqz4=","FFZn4ZBn3dvUJp22ynbQwNflfxlF7qJR+KythuhJhY4=","Lrqn4QGUzSlXoT0aNY/JPOVNi9Pb7QbiFbK/JiOyGEc=","KLhblZguvHbEdiZU+TLbAx/9U3ahKZtFuoBcS04HVNA=","F8sMRzhB7S6x8aHd8CG3T3PzQXLgZbJMloTdPP/DQKU=","JPRuy4WDypfFsBhzbSJ/3nw50ZeMpjyX456gZYjbB7A=","J0tcQJ6pgJv38Ep8te5NMi0alahsHQlhsV1KJKcYXew=","LLqJYNVD/ZhGN3NI6lW30EKzNIUk12EBg2ZGYn3tRHc=","J/AuQW3XC0SQf5fX7LlFzrurHU3HPIoYwAz7H7JGmYg=","KrIYZWkSKfpEC2UorXw5xBaTsbk57Anb7t8m83ckoVE=","KRDakW5DjASDfOeZuBsOl5LB6tAI2S/PnKhnsWX14nU=","DwPOmDZhEd4SzL5aESHJ+DCVGaflIwDjl9nZA2ggevo=","I2sDcefOlyE9iutmg/AvRARKH+2so9FR7dMSGkT6GeE=","LFDKtqhnsegBo2/7zuUhuDr7xYC+GJfcTFts1d87NQ8=","DL+MjczYN9HbrAkVHk7jePk+hUjZI9iknm34G5w/J3w=","HRip+wASRcGmoX980k7YILDb7envR5gw0K5IM0blS+Q=","FHa7HDBgP3+UST0uAWvuYyg7Kn79mZ1ZCQxDTIiDftM=","JNVl+1eN0lL1anoNXY1NHF1yfVI0rEvZqWAEVcy1rVg=","DGjn6VZ96rjouVBRp3iEQ0OOD1++DX3kNvo8+tWWNp4=","HOWyWlOdPhwMXc0evQ9O5xaEDUTDrhCaZp6s3cSjVhE=","LTIQ5mQH9sND7vKPu3uuWfYm23O+xdn/BrqdQ7qE4gg=","EYqzQndH7xpFpgnN9+cQKvrm1BE5LeJU07cvHUUK0vk=","C0XHDShWx+Wz/W+PD94af8sUoqzOT93f5Qs5+5dCO10=","LOfCutVggVPF0eQO4XzDPvF4PZsc8BU+SikYiU+qRrM=","CFS9Rv72wuZICzsJmCFfVfTgkKPpngOlpkdC+Y3OWvg=","Fcd+dgDfcR9Y8vD6iLfUNXcBBKGWB2t05vXXqWyOaT0=","Kgo+447f2gdhu5swF5JNCTCUeLFnpgmeVNL1oiFyTtg=","DowU/UO5rOK36Y4axlZZzTf43pQZiu5C9b5mWXZaStk=","FjJ26DbE7mq5RmYTxh/Gkk+u2c/cCkWLyVtZ/zgeIeQ=","I9FYSlywt0wABxxofN2stKYysQTeQVnA4AxTUtB4zP0=","FWhbyQOhxMAxzgFsCThgoq4q76v6R9HykOtaYoUi9aA=","GzP1DpDpC13KyxoVhkHWMxGXJFfv2UhYNLg/D6BCYKU=","KDgMVc1meJTGOGR+aqFLhX0/McAxWrMV1qlFcwTyHcE=","KdEIVB87RRlD6s9yOsxohqqxjI5EhYCPSx5VpzzaYkY=","HUwsulnVVRvD/pdq5awJ5bco0wW72hk6/CWcmZMvlfA=","FqjWmXBWEANlAzeqvl5OXd+ktxwbnbjMe4J4A1nHDTM=","KJ5QwfCwvd7cmLfoo1vmLxT1bdXXNFv6atDS5Dv5LkM=","CkF2WlNS7L4LMnyngnqfxklee2wULf/KAD9YODxt/2U=","JMDUI3igyKYTwEAu3m3pvTUn7yuCzupgBuf3G/d2ZtQ=","J3yuUFfVtaznLEfmDMS44RPtcGtdkepPubE/0Z+k1Hs=","CjA1Z8v5SWgJBDiiPi/SzLin9xYiv/3BwWhOiVjDdl0=","H37YwmeimmnZRQ3HSvr3aKiE5Cw34Ob7TUOFywJ6uUk=","CGxLgwFla2rLinNQGVVqJ4pgMTBA8jboFf0i6Ec7vGU=","J7Y/vClZR2Db/++NMP70mv793xUEvUh/1igtnj1uMzc=","ALnApFYhcW+YSa+KPJB1t6uDnCgoge3osOWp5yN2bXA=","G1ui+87ZIsN5bVe0li/SU/WrbiuRNV0sCo0iYEBlI5U=","LhrVfr35MmA/Ubsd2rIE3AJuE9xJhnkfVMQDDKxvGTg=","L4ZeHfEWmjV3H2FwRkhfj7F6/eOyuX0er6+9GGKsbhY=","AGKs5b44DF5DYbIJuAvv3K0FIUa4adUN1YCF6mXZ0UE=","Lby7G06gjjdphEvtUiuS7gH+zVs/I3nCS0XVmEJTYzc=","HOPZADTf2hHpv32Stl+BBIPEiybMoJJ0e0zq8Hx7qEc=","CGWDpZSXR0sNHrDDzsTx31lq7z22OP7hiV0/WlhFJSw=","K5hNXJG3syD38pe93Wh4nvbKiM/tOVfSxeim/A5412w=","CO3q+d3NJacwdRsyzUPGMNqDEQHrMQOZNW5LUt8R/Cg=","KN85zH+WZyVpz4buNzYj2p8cWP8f1m2TDMI0p+lZxB8=","Fa9qhMaxQurMWBN/s3F5m/Ov8XgEVcMtjTWYz7kbJN8=","Gc8NyiJ4GpvVYXNJHr69GOyERtZxdWO9OoDMUqG+aWE=","BODgtSkjv/i2exIQ8joRJ3M3mWzlAYDrqXd1YYsANVg=","FasKX9orUZHMK9BIWjDC51tUC8OXw0NtLmS2otqaxJ4=","AY6D96a79Ff957i6T8U61IEO4HGUGWn4e2K2xuqPVe8=","FxsFOc8dboUZeJ++sxKStr5gw/k+K0UwmrVZqFTmM1U=","LqdqFODRd/NV9oHIIt4rNxQq5uk3EkkiZdKZJHPaECE=","FEKSYntkO1GAxxDrptdKB2zaXT/4NldumD2pt9k1ZLM=","B60r83zh70qPrFtEMF8aXSEn2Mb/Fz7ELw5CHqU/fBw=","BVUU3JsBSArle6JP1d0S8im7VZftz/yhRRVq8zJLDYQ=","CwWkW7k3fhWXUH/eDbv6LWQvbDWOIz7LjtfldexqNKU=","GYs2nwJKBWGvmtegz3rBBwQrQvkwG6/i4bTCrZ5G+oY=","JT+CshrdqoZyRne61KTEZKxex1x4dV++xvRtnvc8LwQ=","DvJW6dXp49ofVtfSEV/fEO12dOPOy8yc28tGx8+8dCk=","LYkmVwsIAmAWTmtmr6+609klpGTpldeh0C+QxyZPezg=","Gc5MNsUSEHh/ccuwgMw0Dy+3MswZFhjVJUALL9xRaJY=","BZ35B8n+UknUhBg/LonxAuH5l4WFyItXuah+jYzfxss=","KvwnpBgy4L072OlHKE2azRrHBQKVs4i2tcwxeahC+AM=","BulgpbI4VBdCnfqJzRTXeHwHeOTFQh26LrppSwhUohs=","Hot5DKLQgWJEhqz9YTJF79cQ56epCKIz7Fr+EUhHYJg=","L2jXjfTgiyPJb6lZere6WheFMpo3AFMwDXkqBCHPOuk=","Ci6C8ML540Vomy8tohCNAYzOMITuhdyD1Xk3+s8+VsM=","EIsq9l2KK474FDTXNkbP9sJf6Ou4i7do3ENcqhkUMRE=","DC+Q63f7KFXTm3RahdPJYMPQwe50DYd3lxyTbdziZgE=","A9rdxZA949UwLHoH1MVGA5+oTD2mz06snCucvJTbAFw=","AQ9NSBiIBdMSZzjSSXbvTIBZazxjgO/7I8s7PqyVQTQ=","BnATF3CGWc50UV9i+RKOqaHP8nluGOuer+nC7E+eQoA=","LdA0nw8O9S13YCA3ohHlxWXgCR4BBy7whjAFbZB/xtk=","GxWVfYyHdAdt8W1J14ixGlrUaQy9gCJDf0AqayXrVDY=","AqkqH1DEZYtofytsivtTI8m4490X/c1cQOF9tziidZI=","DUyzFvBy/I4kY6SkLRaNbcBOCxN/pLVyFtHyul5krVY=","HPD5v5DiB/Ogql/BCFOMZBxA4JUsb2bmAk+tvSJI4Ww=","C4HAPmgGpJqKXt/D20v3j9S+uAZ00MiN3e71Q9NgCug=","Hb0y0El2TWq29ne4nECPn00/KbWhgUjMjVdA5I7MnTU=","FtUrv4OESLDkTCvwUinD90G5ZnkEOKKZe+nMZgEDrZA=","LI74gNV4jlNZuX0b5VQwXgz1vVXCk5kSgb/lQBueNd4=","HwB+8WfJuZ6UgAfdgGCFcZK53JkhJ8I1rsRqKzI/LxE=","DNM2g+wIIHxWqAIQ2ZKXMdIDUmQ5SEGytvZcYVGc2EI=","CvGw9w+Tu49Td9tlF8RIKsk9369gUeaP5znxYbQ4D9k=","JNA9UiEY5UTATUnTiv/qeJ5J0usv3dFxYT5p9OsHu0A=","Lx8OS/mtzSpPGu5c70wtPyfJtIJHlpUwJQJ6N5QkKOs=","JIpBLyh807NEiTChA5qzIoGVj5mi7sDC8aUqZbPlibY=","IeN0tF2lXB09icbSFz4RRpmSuBvrLT1M1NFgONy6sjE=","HC+FxC9qMxCSygM7SuBqtmfNir7yS1RY6xDlM0ZpSmU=","KetVXd1MdKuQMQhBJ7/CUDbxd76O1i0y7TWXPT3pTnY=","B9MBAd9xHyU2SpVacAL+SPR+wKfArNVLoMtVHJEuxuM=","Kvrtx6ZXlByed+co8gLVaOStEjD5HTaalhtNzU4Vo28=","La9CamXTfMgRJcPRzKUnyynpRRvgpay35PyBsq+uWoM=","DHdOgSeVIO7KcPins9d5m97oNxqfz5AtQ1M+ZJx79I0=","AwghKgpWysmVYVFcg/Adw2hL6KN6JRl7RnrN02fuAws=","IPqUR+kuT2gCXhvsUfEV+2UyNaukhPoNq5ysSqdE0pU=","L09kfvRQzcSzlUrRTHyxw+CNFAVJvDbIL3OSk86LYkU=","JabQJCK54AscpeEVa4e0zdpWy7s0H4K0pj7NQa/Hm9g=","BWWDTHzwPI5ULxwyiABrqfNcVslUcLuGuWaNAGPQlcw=","JKb4jV1wkLJKFRxort6fNH/t/6pYSqQxstDpDaPNT70=","AUsNRN31zqV2y4LTmcjkpT54IltkbSXJe1BOY9ukzOo=","JR0yC3YDwchrYQJJMhnLH3N+T/m4TO9wUON0VujwOs8=","I4wr7Gz604jUd8VcDd6rLTJoFV8zY7ze/TzYrl9jdms=","EzfXeL8PC8ABrZ2/mZk3nMCN4O1WdWhEjKPAw1Vdqdo=","JprjX36zhK0ZZbgvjJ6LT2XTzs/XZ+1ECKAlrHupdEg=","KwHYeXz7lhbjRxkhthDceMZK6asv5IcBuu5eeFPqGJE=","Gsxfid/CSgNFgVb/exVrIvQnB0aQDXE2ix6K/ppoTNI=","CmbW+Rn33OcUTsj2bOzo2+3GIyfgQHq9x71xBg+NW3g=","F5eOeaVcwHfUvJKzjuXTV6tKbGIUayqErNmvUJVOjKg=","Ecu75mu02VeBNAgAmEOyyWzXsC/UtEnbGJXIM6ZK0E8=","C8eENSnhPb4wQhCSKulRWi+BSOr16DvQaGES3GRvyTo=","I9ZE+rAdgGNh3mZci8bpctlljSmjXpYgi/U/j7TKdww=","BINxxiALkjsaCtPwCDENvDUOHjxHDSTTrSPrQePZOzw=","ISB7HUekusUro66QeMJl5c07EaEmVH8hROUBwYplb2Y=","Grhu2mGmvJYG5l9FXDxI1BNrA9jNzmledQwlcQRWRwQ=","BHG0HGQYtq+t8MlRc2mwH2K6eNVhlBxL6qHemCdnZEQ=","H2erPXFkbAOc4J7nIyCyrXVf+9cYfrQ9WuCFDJI85vw=","HXjaVaTAw/147zS0MW7d1/NtXY22VRvNvINrpxl9r/k=","FLNyV8H4hSrtRIA2r+WbOhIVm4mvpeLss1BjqpHDt5E=","ALkEseBoy3cSu2Oxch2/Wt9bZxfmsN6u//HyqYizpaE=","L8EA7LeWk66pHGEYtwIJ+0RcX+rk9tHFiGAYoO/kqNA=","Cp13vI9DAjO1n2c3ucAZeuzik5o7Y8WsJMrTG8xwB0s=","H0vcaFiCrhFJr/x0+h5MphTNlJnXUCemynIAAApTm5w=","DdEbG+/ikxEMxPa1wN5vrjpn7axOhLI4+suKRF+3P9M=","IQEoZKRLZHnUS9seLpd2QGffaeB20eHDEN6Sm8weu7U=","FCzqk+WUnAbDfayItmTtNqi/4avMtLMUXQCHQQpc+P4=","JdB04x3Qk9Q/o6OmtcBEF31Dznc5rLnlgYroM56TNeM=","FSNo6N1y6b0/APpHrQGXCWWZu1uj9jQBrps2ifWvuUM=","IkRQpvJN2EJ9jW+d2YVjAxPspX1XR57JjtPuvjoj5Q0=","CO6L7RpTOBEzCKMs9LjwpCucEiy46pN83B4xh4VUyBs=","BoRx90V1hnDK2n8jAUDgmssKz8I3z38x4GNVO6sVbdU=","F9zu2ahhraKXAxj/i53BMHShET8wdu193uZ4RWYtVZQ=","IclRsoSfUTNtoS4ZMMuyzUB8XKC9+c9uLuiKjmzzbhw=","CusVvdM9CceA6xq2hI3LwaGKXGofJQzuh89QbUbDbjY=","A35m4L97fH97ALtcBnIVViIgBEyUv3iMQLSAb+hqCOs=","JwXSl9tKtpOmXUzHPtgM6sOm4Q1XEjcBpSdpCVZHuwA=","DfghsaOH54+OI4jK4ClOiNDC3/gRQlqUCmDgKFpxs8M=","KVn/ypRkJ2akbNg0DbCOya2pFdI1QGiK0fJeNKmuOv4=","Doa4ZVMGu94BdIF1tW5myjZBD3WOG8Akc+QlXYgSCkM=","CPlNwSB24b05AHBeiAJFphSe04+Huv/aCm9LFCZLX88=","KWjkdi6p5u5QE9lrq7JQ2V8wD9gNhtIswJXelRRZBQY=","FVbCZloOdMwFb9RUqFo/vstXojqHncHMlbmNm8SXAY4=","DOhqSMBdQpvkgLnLzCIPOinG7IZb7RCgeDXG/mvuNOE=","Iea16aWlxXFW37jPWoeF0hF1mcJHr2/rV3u0TnUkU04=","BETGVZ8VpdbzeBvDkuiOisWC5IfWDeEs28NXyWI+SsQ=","F82wg9shccdiEZj1G30YkRergOSqq4F2VjQuGws9wfQ=","DE/NMvu7z7J75BqUkuxVQllpyRQvNlNRx9I0eP1os/Q=","A3pHoY3qb8dl5s5s571Z49EQOracv5IG0cL/TsA4lXY=","LBS6sXp4ugAVN+N6YwNXq+Buy9vSr3QkzhIl1KRBS1o=","EL2M+6zVBf/Veiv6p1etPkX2PvN+Z91UHvB+lXmE5/k=","DyoLamZIa1X9gnOkU+9iL0wdTj2XXDTVOMvYRAo86cg=","KXtOtIQ03FNC5MmiYsIAMxSAoCEJFjhjgFu3D8epJhQ=","Is08xVK4MQlUtiti1PepGGTmts959V8kTThIBJRqd7Q=","Bc9Jbq3I6gzLNlAvRDyZs0e/cCPy1/vOUS4cWARfuyo=","HgrosILTcmGQpoePS4iJ4LYpfSfePxg6qanyyyq7kNQ=","Kygv/vieHDqQw1m8fIATO59jQhXDDB24KglQEnk8fBs=","E7rn6DjGOKQamWGrgVIPQIyZIQcNmgKn/lv9HaHa3Ew=","DNwyDurXC/DbV5ZbKfnMoogm9sRNgk9/Ei5DCqTnRs0=","G5TtiR46c+G81rep+jNrSFpag+UtXbCLcEr9jUgTZlc=","Lo12WnD9OVM/HEVtsStCDKwNewhr8ZWWxgzWQGsHbGc=","L2kiD9kgm7QbDvlCv+sxE3CI/5ozjtKD3p7DqIUOlr4=","FQbp/ewUqdwD6xWdAR8Lq6ZS2zZLACDzSF2kDvgHnr8=","LkMJOgYKWV3BMhOuchHAQbKdOUAdu9Tn/LA0GRRJKgg=","F0JusCQV8daCc1OCRQ78dqBcagIYZx7E+j7y0DmA2yE=","Iqio9HUpQzy0cay7ztqbbdTp5XEhdFuGV32o0QYXHj0=","ENBmrwTncI5RKjgjEL2aEMutdRpyHGYO0PgH8Wk9aCY=","EyLKvSG4+YJtqEgW81mfIKMyS/R7RKvso9jmomv2TI8=","DpAzKYt/uoEGmtcIpAHMrKcTwSKnkHudLuw57B5YNNM=","J3oGnT/FcBJJASoPwtltcMWLjwu0Wh05MgUdRUHJvos=","K2pNK0RkZRbgUR0DWVuU9fMbU4yERVYqX3h8t5FiON4=","Hpt+iX9jbChqx1khgRNbMGHPAt5etMM0TysyRvF0Wdk=","CJ1Vdr8Gd5QOyFMeM3YWUKOO2uZptz7l9wTAGDEEWL0=","EdkctqfJHzo3eKRXv7y6l3so6wi4UORyYNuz0gWtpj4=","B568M0qjd82vK7BXAXt3atFQresnrZUDHB5tbkWFuaE=","DuzrZvuv4lUiEkZ/vX7ixTUkRkLIfFTvrtQ74ZNE7vo=","EYm7GBV1keWCY3J1E57/H/GAIXQ5ur8DaafWr9pTrwA=","ChBOG8Wu9bozYnc7FdFSo0u2b8rVFpBh5MdPQvgILtQ=","Eq6rxV8KCnOUhEByQy6fEJWnnip7h2XA5/k3IfXrj+s=","LV+n5EjroPP3W4LRVdK/tGfBE2FTbWHPrB6err+fmWA=","Ebw4KtbzmYrhJ2F2Tic+jlfeUkQAiWTdwc59iHs+oV0=","L53lLhFk1XgkQwHcD1LAnc+3sSSZrXaKTJGvN/H+mZ8=","JKFg3Ts/GQcfIxEYQmUV5/df0/1NmEedhV6IzEDyoUY=","JWLasBly3NIwdBf4NWywluWlKzmJjXcAyQgv5mGrWqc=","DHH8hUTYv+HrV+uLGTRIJfKADncoh0wNSu7gnTf8gBg=","HDjO5wnqV6VDPvBdTz2P6F0nWVq1871bHoGKdrF+3Is=","FgIhOBbGDMIA6LKu5QnaTeiVLKb3dfaVGqF2psx40Qo=","CaBGxnuYAlVNMVgh2hw9EzgxGsqikYIiZFVoWzpqGgQ=","CirHOjtA8ujZO4iOFa2WlaB9VvAtFy+v3DJume2UR18=","Jkl/HLPtg/YcMnlfVGDiMgoLBWEX/i1IaL/LaRrMnSM=","GxqIa5V7W3rzYIMzw02hJMaOE3aX7gguIdbp9TSt2j4=","Ghzsl7PmN2NhDz/unl+IQxPWbz/aGTmF//+iY4iotTY=","JOtYZcI5P36dbaegRg+f4KERLEETcAf3H/xT6Q/SzV4=","Ba1zn0rnOF0YrpYZkP247T6AjeAQjK50PXmVojI5v+0=","IOpN9kPDGzrsDIwstET/7A8jUYQYJ6ghA6Nv74HCtaM=","B+Qm18+40O2PFQ124RxCvX0NC+ho98yAdA0U1rbZheM=","DChBcBOaPTL+uJPi45O+IvxXErSxNOEXycv5HAbHoVY=","GY6JLgtulpQnefwjrIbtPq9caMefj4gTON37OBvKs+w=","BPcnS0xGDMDV141jkXAKtwaxiNaky8vcxspjHGF6QUY=","JXogfJrwF/UMJMgobpmgBvWpoGaZf+pNY8vER50VPP4=","L5GV6HeSzt4x+CfdQIFgaXwXSoSpzdB81ptEQ6RfDIE=","AsMkV/HIpIEI8cFkkejaHnSuH7WYZCrOu3bQIQ0K998=","DRYGLqmltRhK4CLFaOiH4v0xwtLxMgrNkVuE3xzXfD0=","JzghtZ/CP1hfQj4WxdlXHni0KORGrarnicFZhmwVqao=","KNWBOMqOHh9BAUbshAF5b3yr9J1B5Z9LiulC3G/grDI=","DLurSiKWPtUBUK436K6cwTk1X4PeTzjwEXlzVjOuP4U=","Lym4OftXWSctFRmhffAzEOua+rElQGk7eByTl8DaSJw=","ISUF8dtzra396mNTs4uFdP1S3oqzy+MxD1JiqUlqV14=","BRFxftEEGY0LZzh7V2sCC2tkXZTyBfcAXrsEFh6glZw=","LNF6P9/xsu4VO2VVT8BqTtq3yy2HDBzawOllHCFZPYA=","JCHs7WXkD1vXt84UerCEWIiFPOnZ6QJC7w7L5N+U9Kk=","K3uxwTpgXgYiYnGxVn2AcFdrcfvPvg6KDObtmmC+S2A=","IN6TsJsQ9vQNKWDzrn9wPUr/fU4qMJSBY1aT/B57V8s=","FfOdppR9BwADYJARG5RjzTInEvX8DbOKgJir1NP97UM=","BVoQxbLhw9Osl4U9N6zHrDIBw/abp3DJBzblmRAplIY=","D4b4WFfy87+l+kB2eDWcXkvX9o5PjkryIxTfXqFwywU=","LVdoDe4QTraIfHc0Xsp6jBMQIqRHH4jFTU25v3oY9HU=","AdJecXDmuSsrvO/tmPfM+UwguXpUZAjZYuSPat/e7VU=","Ed3omANN9dClChBn/jpbbp1Ua0JoBD9ZmL78qYAnHgc=","DZbkUdodU1HThIZDzYKsgqkdKX26YQ4ZaZLQgEXvxWU=","HsUOLwWvi9FpVWErfdCiKuBG22kqNA8LgUtHLOvvx/k=","EuelZeZF4YX3yeAPBq3nFzbZkAUucsl1QNeTkSJMgqU=","J31evzPRR1DOyKXfSE/Ns5LbeYFVmqNQ4rpws1ZWMq4=","InqMXGsfGiWdX861fX3INCVzF6jBuUIJw/uG/ZSEaok=","K8xBSnIMhaQvbtFL99Hiyn06pffWHE/10b0e7c7An38=","H3hkpynnD3fMG1zYbBk8uqlBAHCGPV2jd0LWZeLeMYg=","Kt1TOhwUtK0qTs14A5c5GsnZrIBoWEw65p9WqeTXLr4=","FhmNlYFAUzShPhCbBNnR9WOKffJ4MA5WBZUI9u9lRg0=","CgYKJZnraWtD0nXEPqsLOwS0YcxMQ2z+ixdI1l0UM3k=","MC57bAq79PRLHXmXka4MyFcAeyijdIeYlly0soGCKzo=","K4lxVH/xcoGpOUPd7LSJ9sCR6WzlBbe6MMFI4DazCWM=","IfZ8QGeAV40eE8AB6zak3CtWJNw/ErPkpqAlcLPoTNg=","DK61BBuFMqcj2caKmQwIOQmrlNqGXmcxIPSIRqx3v7Y=","DVdqXdrGk5nwb9XiR0F923P7R7UzQAvHmjXhjwpRrYY=","BtzE0g2nIE5+ist0BLa3Gc0VNq82FumUiHsDMSVhTVM=","DQroDSwD0n721qxu3Vf6r7iK2xjLQ8s6NAUskqig1rU=","AiF7JM2eVzyPy6RtMEbYMMz9vo9p5D7uMVZkxGX7a1o=","GwN9Rleys8QTb/g/LedGofMU3KM+4rkqgGY26FCWlM0=","K+fYUmaJL6TUl2LOZO+EV1+ju2IS35lLqfvU4sNZH0U=","LC7Giz/b5LEMo0rR8cnuUpbk5BgTK/2C/Lr0NyEN1Bc=","A1auDud41CfWqEVFvyQaaE/VYt6pLNMLC3W9mniA/PY=","DqZ7zQKpNe1WMRlPBpaENPyYIt95H/b2rWxAKgvq8YQ=","GIu6RnTC4aK40fHbTCs956wvVy6YSASs1Xnzwi4OTOg=","DYIeYFBG4Lfvxifh8t2EF3pm5il0u3vTynnhQvcHQu8=","Gbu0QGTayTPRB06+q5kXkMY3pKNMM9HJyg7MlVmAhlk=","Cz81GzvM2Wu8o0U7q20QvyUjgKHjs6woZ7IU0GOwLU0=","H2V4OKTd8rBjmWHJJhnur2VgJDwBFRUlh/o7YzvHsUw=","FzlmsDI2ySGxtuTk53+6Q5A/K2i/g//SsAspdMxPTCQ=","JVrfzPTaz9lDOT/ZCCL7PpIpKxUK4iBfnuO2g3xofJQ=","Ktm2R/osXZfWQRpWhO8YMSzt9vaf3vj2iv5DREJIeio=","JsgVr5uurfCYyL5lqbZpNtiKkPR8h45G1VqkH7I6APg=","IVMAMW2Y+zvCIM03nLz0tUEz5hO6QvqLSJhGZ++uEFM=","BRrC4Deoy4RElzgEDLXZK+wev2ThplE4x/LYYqr7u+o=","Gwz6TJ97SuycanCaEG0Xf62P/GrDZJFKq/M2J9HeajI=","AIT1uAzTgGv9QPfRiL3g9VJt7Ep3vKBEnxEB8AqtSk0=","L9aAPlFuhzfEW/L0BzaDHr7Stufn5kPg1MZ7XlEJnRc=","Cxf3MsbZOKx+hbzPmo3UASctfW1iOo5Z7D6mfiqqUmw=","AbP7iPbKuA86+XTdSWyfpfkF2poHkBe8UpkIDh1dT2Q=","Ixn1cnmYHQoSsG8vdUGCav/E5RpE4ZkPswFd35oYNxU=","L03CibXn8jo3Cw9hBTvYL+TL/H0dEdE/KJ77o6PFQSE=","G2ebc06rvm+MQq0Y2rVN4IHInWjHCKgfj+YUOJBMKrY=","CjRTwIhC7zCAs6907o55m/ojZ5DP2gAjtYjspGbxkhY=","EcidL1SYp4hBbQBCzvoNVELb5V8hImCVBFFoE5NE8KI=","Cz8smMowYfYnITdgUG/nb/3YjudVZDeIg3wY2/+2jOE=","JXXHH7isq8XLUTv2bb1KSUb04hp7LxpAYpcqCEJaA7Q=","HewJRN/dyc/7tVwZAvhFcly5LglUV0nePxoRjUGAFWA=","JTK5aotQgozGGd3OgKLpkw3Y3sZYj1LtXD4ZgO4DBkI=","AOs+By6fwr6prqA89F60gcTmvWcJH1n/ofRgL8OZ8hs=","KKbnRm2rH0k7/KGZG/uIbC75IHcKzKvsSGuWQiaYYSw=","GLcq1sNyu4s7Us61xl6deMBIFONxO6qBMj8qGVaVe48=","L6mOSHlP3UzbqOEdDN4YzlssydDbf2WqG2yGCZGLLGM=","Ai1tBau6tAOxMn7c4zAk/JGDqlFPadFnLUndv8ngY/c=","Is4KI4eiIyKKCoa5QvE1pZ1rvunxuW0/s6FRAjpn+3M=","ClWedR3+FBXkDQIn17PdHxiNmdk1WW097CwDPeWiLS8=","EyAjYPElyiLCgaGOIaesELGWFTI2+GxZaLMatQwoIFY=","HoW6o3aYUBW6Y8OjjngXqwo5zSjiNyM/TBvjVjL8ctQ=","JFCxmLBF5PDNVAsLdN5cpW2F2l/lmBavMIBt0uA2xcw=","G/BHlaeXlTOIb3+0fVoLft0u3MEJElWqy5bvqsZxK24=","DxJu2UkLaZNb6XEQxHYRjQDIsHxYa6BM+BrmmWB+Yu8=","CH7UdSBGwiWZRzJRxT9puBewipD0MUF9m86Hzk/SvAo=","ABUYUDDBLYzKQvIIct5pmYmQHiVWmGOktbP6JoLb+cw=","G0JLlUbYfubKKPuBl6IYa24AFVawjhkAIpjgXxZk3IQ=","IUuiOmeiIq6eM7RhWjHnsJ+pEeGIgLw3nf0g7RF36y4=","GG4O3AlsYlOxeRAqfJ7hSW3bYGDJk/qeg2FqfapsIkM=","FRvJU07F82y6zde99hdqYMm7e2z7JoWce8wNH3vE3Q8=","KBkvYq2XMj5srfy7mpn1utpord26w6TdwY5puVI5sWY=","CCWxIy5oMWePaR5+HrJ4iEOeEue6/4TbPRi3vUUXKxg=","CZ6TUAtisQEnYJBx519MVMrXhzK0hZbRa0Tq5Fmln8c=","DdXNOmRzH4A9p4cwV+sKSaKsFb1wV0hbQ9RzQKICq7o=","HUzxYmUQZ/gvwhJPbWdNrvA63D2nWCK+0rDYtpC2o0o=","I6hrRA1e+7CianapmTtuwBwztGkkw/YB7Xmof5xGQGg=","LJgzAqxAomy7Mj7Kho6adX4qZgU7sIG8pV9VY1FoiE4=","BumNO6+9tC29LqL8uWmCc5gL0cgI8ffeeZYyqQ/wmzY=","Dy67kRkidsp1IQhM/3oCX+U+FOuISYk4HXnAb5+pCEo=","C2eIWtnf2sX1Np9uMYG8x5CBmB62F32yfl1vbYUdUCE=","HDLiEJW+t5HhvHhQQ7szzZR4S2Ix/4+Fqe3/kvkb5Lg=","EhgY36dtmFicMnT+LXAtqDrYjO2d9EliZQa+Hu74MmQ=","KDKsm7ILV+zJabpP9ccTxAYi+mtOvtBmxlW+IdoCQQo=","CRcYD716GYFuj8OkX9Q7Q1usay3hn1FrN2QaaxxCNDQ=","G9hfTEsRrnFfRaF7oh3b3H0cO6aA+5eKGyrDJb7UEac=","DQ8qhvsNSN6ogEnSvLZnAwop1yHkwXdtQteDu8/SKvE=","BGCviPbRGvtdGR5IhxL9ecuWEWhESRtCd6wLXvGbRDI=","C8F4PDasyt1Puj1jTp9yxekCX3eEvT77jccgluLFYDI=","Du+4ePbrFYnXpofpSBPZ2EI/pQ2zTejV66rBMC5vRdY=","AaxAMZZQHwBU+o1LVmz/23+B9ClTjbm0CKPcILksEdU=","HVvd59ZKY7rMJYW4oUCC2NNfO6jB6FffH3KcUuan5dw=","B5nfr/Ln1jBBSn3bD97qED4bw86vPMzgd8hzOGnlK3U=","D+D4Fu/XSn66XI3V56iUOImWJJLxQ1Phr8eO+sUO2W4=","ByVhxnrS/AeTghtQUY1LXYrDOvJtptLOd86/gCkr0n4=","KJE1KsYP+wnpyIZguESd75mG+UY/WoHGFafLn0vgcks=","IG6e/MRsriz8foZsraCkxywp8jXwRNVsgkSpLogvRks=","LnxEk+dwBfSUB/LVy0bN1tBPIqBhrI/K4E0tk9fI39I=","C56UTVus2Im+71kJoTn157fyOhznoeVabEucOCpRFSQ=","JjW4RxEmUjRI0LG85dj1T/W8mIoKb+U9ynITBPj2Iss=","EN9zv92rmUzcB5IWy1heqFMME9pY1jga4MUX8t3IjgI=","LaVPenv9ePQMmObsrbZl8mRLCpU5sndl3yProkH//Xo=","Gc41xqEE7jl11KlJCPWx4ERNdwm9p8X8WaUnyywWZQk=","GkfbveLVAEob4O18IfV6OIochvi0Zm1NEY7pmrwRWj0=","LwN+c8eIjO+dcEbljZmIg3vo+so0xYvFDwIehzTFOZ8=","J6tycZjZt6YuDZmy0REnEBAkZMP1+o3v8nYq+Khpnnw=","MBF2NZvptmWryN2meD0713MMS0k2ob2DzFV0xpQIBmg=","Aw6HIEzOQD7k6S4FB+jpnK4wlZnc4YkpqUMBAPxcCGk=","IY6GU3YWlM9JofPideziiGam6ZY8PubupGwrGTaI07E=","KyGWh6RUnrF+KdufzLV5ahHdtvsnG1pUeUbw3jJpijY=","Ih54STnSnrVEL9FhKzCli55VWjmLrpbWotbZphbs4Ks=","CA+9ubxLToqDsq2JODslUm4zBnjAV/fDSZPyfu0uFMQ=","FgHmV6IriigNRFLVJ77M/bnYw+38t70DctDfQ+k+kSM=","BlLR2Hja2df4VOSAZlMf/9R3PopcYTAfWBZRtQ41l1E=","ENuIFojj21i7YI7Jk9NuyFMa06tYDmXVN/Tzfk2iYCc=","HYoGtRkn8DeSUOc1n52rk6qcz692TdcKzM7HF3pMcDc=","GcvC6lC3v78An3CdFZqp7yosD2ily60fXhyZ6iyiYj8=","GlJ544iDtT8xP4aufrsH17sM1li+WQqjrDtBNBX+Po4=","GvE21TzfZ2woQQBwXQSpdmRSNPQ5cUD9haLYikhOqws=","Dbivdk7vULsd3M/gWD/3MAiPPpwsVVJ4o8mnN2qJMjI=","FhPBS8hvleJeBfjscsj/aqIHvbqjP5EoCKxpPxN9XVE=","D8R++S8Q950zZVCrPgp1RcdNLT4rn5e8xD5Hg9HZjPk=","Dyy/QLNEcHzOEB53l9E3qeiwEXl8Zv5vsEdNK3ESQds=","Lv1Xd/jKImeIOaxgwaMIcDCUqdK+RBPIF8dR3PVtjhw=","KrTjQTeVrZppWwRpXbMbawrQvtkb/DNzkmW73CgFsYA=","LjtthYTkJmaCnA4ZVXHFDX+nv6zsErrXr6JCdE4AwDk=","GDPxUd5b2GymjSZNXeXTU7gSipbjgT7SzQDjItyRyNY=","DqgsJS2NVUma1jxhxHQZyOjkIyV3Mvn2hvaxBtfa8Oo=","CYV4dEImk3BafJgGNAxtoHd/RXHpIXTV+CwHuR8shb4=","J3KseSivCnmTH4iofmNN1h+szPYQy5R3JOeiEQ1QFEk=","LmIjm3kFMHVsoynGPm9DOOJjHvTizGfoBG/i6Ib2dpo=","AmW+9rks2WIphiHiYJyQFi3Vh/iBObxg10vzY8ZxJig=","JEhMDCkTeZF9L9i0hDn7PXCwWxVei88zCla1Anz9vDA=","Ky1Emjq1Wrfud9N3WdtYrbyR0NUJNlOM+wFzNgor2M8=","I2Y9GVb88acjCFglzGfKyC0+u/0BNPhhq1Up4qTH3lc=","KPyuwPts9DpXMmHRDtMsHbtLmXVkP63gBTLBvR6g5BE=","AUXG4kGBhanrxyzY3Q9T3FN4UetaQu3cBMqlLLOuir0=","FnN2oEIJnvrhzYmI4Cxm6M/aN4+qZOhWJr/kY288WAo=","DLc13g5hKmFXWVKOsnixs0EHxKjfWOpnTuf7cZ0Nq5k=","LWe6xmFswEZNT+kH5faPDs7QcLiBG+cpBb93WPPr6IQ=","ANvSovjX+/OsQDsRFVIxErfwEKCt9spYTXrgP5R9IWs=","EamS1+ggV1euNrurtUToQ7AQ/dx71auqgt/dyrP4XHo=","Iw00NBJG+3FbeEeX6d2LtzB6TEbi9EcNLDGTQP2+ACU=","Cf7v/CGKr6YU6Pt9xOx4btJRUOwdNQezpxcLkmb/aUE=","Egj/lPEiO9JJ2qTjoCZuB5cx98P5mLf6cH3Z/lODP4I=","JgyjzIIPhzljzSbfG4/+xM80n6vhboHy+XNmNGaALak=","EmVeLJitNexEShNOVc9o3N5o8Up7c0s4NHJTCGCbyFQ=","KQCX8sBHo91mALcGN30OHEYUXzqengum18za97fgXvk=","AsYuW9ZTgeCXJBTOAJCpbCKwVVv374sq6uG5hICNT4E=","IzxkIwjb94NwFCB4ixkVPc8IimPo2nZcUYJklCSSb7s=","K3Mo42jtS3pi/tucv1AQRVe2w9m+XQwnRbzHZHb4zlA=","FzjqlM1DMce2CfQvJ8TdV9jbeLcKldoMI5TE7xiZKFU=","LpAtGCof4fPUDaKMNYx+iQdtLdre+A4xuYle7QLKIbg=","FoP/foSlpPHayyBvxE/JIXnmZkUMWmX1Q1S76GdvWF0=","EylYRU4Bwf0rxD4CQk4SlrVLVdPdPtHhy884J5DWJU8=","DetIt99zeSZrEj4LbYOh/gMYB/HuN/dnNzhDiupk6wA=","LGg0ibMGXkrl1xBuGPRVN2LVjM3gBu6WvWkfFAsV84Y=","HXwXtSHhWK1CDJ1pI39LpugVJUHYeOJIdkFVcnNMzzI=","Bk3ufwTPVkMz+9xhCri/aBBjKe7qwbGllhRyZWHbW+8=","IelOXZra2d/8wYbgMQrFT/OLCinThJ/jhHd9AEir1mA=","Fu4KC0UXDYnF2RVX6tCyU8OahC24BBlr+gcESubitNw=","CnAJ+CW2+hgEVf3oqQHUKiglDplIgH4kpigFOIzug2s=","CNWjSFPd+wmfsP4d90YM5KjklSoUjaZB0OFfce/Sz2g=","D7GYUxvK17yRSJq68TRaPrxfXe1bIcHRcjfMz5saSBI=","CpH1DHKkIvPwwGz7FAHcrebLmcKFsHBVQv2q1A4LUSQ=","LbM7NOXZqYivNVAa9OE3xHF0gbZzKSJG2Y53KKE7ySQ=","G3Rf+cblPCddN48KadbA1V1ZhUnO+8dmm7Y6PUEA7U8=","EUVU46/JbfO2Y8YiQwReJ/aiSlwmuHXnNEAUsqmFgyc=","Gu+WjbR2W0UPCY1OGmIQtxZcU+8zaz2W9V+6xYpUK9w=","JL317E67FttHg3GJFy6KVbNgOMUL8fOM95BVJ5IlvlI=","KufEoWVZdaxwUtEB0TRu+hD8pbDxO6vd1i3++pgP948=","FlzUKaOWbRvO2mFLBtRZ56Dgz75G1j8lUhya90AoqPA=","G7PUsvZ0QKX75BB1aUW3vdyi/x3tP+IQjRJWeQl7B34=","GGlfAYVECl81rXSlRR2mM37aBJ1QuaXXuyhNUvkDPSs=","Ausb206qP92qYlNE6mUK/EYDBuDj1Lxhj4Hp7XO0Og0=","Heh05xPlxo0vVtUY+OqidSKf2PyKfhEtfRok5gTT74M=","Hlpv603O/CtopbLD0GZNqrsfBzX/Ki0raEMPTTmxCfg=","J6QoTuDG9z3a0C+dSZvpD+3TLr16+G9ErFDjVPdDx4I=","AJnY6VRv2JG7q1R6DsHcg4z2ISZ4jYWydZd02d5153c=","MEOn6onR5P4U8fkbWE0Aw7p5gx7Y2GSbW6/PdaAM91k=","DnquBNq/o0hZAk0HWjAU54yQljY2kPU+sOmbfWKIl+8=","EP4KEcQDDe9yXOdoT9hyTgbWzw0pXbCbQZnrO2qfBrg=","Fozfa69elw4ea9eAmTHUh2VLQuntXY2SpI8dro0rTCM=","DSQdM8VSyFVW5ip6/knlpxKP6KohB3K7rllXy2CiOcU=","HiXA4A23fGm4fVvLlcupNLd27CM5LYzOtsOSr+WWHz8=","IrDlL3ZqcCr8OMLGAWHjUtiAP5IEMaz5QQ9/0R6dfTI=","EuybkfOV8WZVZzGL0/ztenUsoB7goIgTjEBUmjEWT7Y=","KZyP3KiRjCTa+HaBIlinVSfxtdF0Gr1xqC6sDh+/INA=","D0KL+R1NMRhPNddwpUdd6/Q1POfcqbwidjtplDNE8jU=","G+BUmlRwyUKfDhtvlILzxOdS6JwgPCW2JIF/Ujp56ek=","D9zDzgKOlrIfkbyHrQUteORMpslheerWQ3jNNW3SrMY=","E2pqmEP+EEg43AhZksDrjjCf09Fpr2ivgFjdi2BeqhM=","BYREFYHOY6TtIXTbNTZbywG5Oy7AL+1bbO1zFKEn5ms=","G/mrkLH1z2yp8Blb1DNuaBNaWuJrazURzJBhVrYhzBM=","Kwv2s8yc8CO6E9xlAfAKdC1E0mtm6b173Zar+7M8x7g=","GdGGGbtzVIWQwAx9AuyUtSu4u/GqXC7gbh+Oh1mROX8=","FJCfjIkg951GhqFKGqbgOnG4TT2Raft2czF6prKEM/o=","I5fzEfWY0knmzNua9q5b628Jf1o1CIbNrwaR0Kir2PY=","CsL3o8Lkpv1Y+eUC+d/PyQRgh2PWm5TqUCiN17Y7OEI=","Cr42pwSKNNkRCkY8/y+iO1qglmo8WNMIbsr6ES9QAdE=","JFrkeQEHr8m5vR8Uwg8Q2KdF8HfrFalg5devN5oY29w=","FK4RCygpEmJQ4daU8IQ27gxW0jC0idCNMrw1A+c79OA=","IKBXbr3vCNviGRYP3Rp+ddg4dwx4CmKLHMcg8Cf2HGw=","I6Bcpbch5I2lfTc983bFJS9m6fljxpfX2OTs21Xvgzo=","KBPYmoqQYcMANIzvqUR/GpY0PzKfZcThZbWxOHxMZMc=","K/fuVC4y4oCB+r7dkvSxgZG7rkikNic9wEkWrgmmRVM=","JcFI+ybP5MPZd7F9oGj9Z+qJzFEHn7XQzTZUqRiLE4U=","HT3SPmBIhm8IVXQZA3ZYQnVqYniXz0fZH58rHsirK70=","CveZbPpLURY7Tqj/Se0uv4peVqRGh6jeNR78Fyyb31A=","A3DfvZinPiSVLwII635b+oOsd2HYwLS1PsZpxpNphzA=","E6rNv+BaBkf8FYoTBoA8vR6/jZldWye8XDqS0EOCQPg=","BQ+0/yP1Z31/QrDIGEwiS7adTzBXmmuOnaXSKk97+yY=","DLL1zuhcxuD5vss5G37dQsr/98NDgqqeGd5HOixn45M=","ChRkMKmKhfkG0x6Mp7J1dXCZbbz0CnqotnUGZ7lqLvI=","Ix77I93XzDSFuLyoEomK78gJUHjlRxUWYqu6DM4fYn0=","LrzACO0OzVUYKWVsc7a6jYsO74ca77lKIaPrrINWE1A=","HSkC6LYnwEQ76p+K6lYBsh3ApB3/2YoVFnYdQA97N54=","J3NY2+CcO7lXCIkpP3lcQdnCyQQlvfGipWb55O5GgZo=","H79pLofaIAvE/9SJiJPO+2WkP8pQT29nUZP41jxgObs=","DzuIH7ZbMPsvhJYg50oNv1k68zu4ChXrf7iKCdl+D6o=","ChFvoyyXYQhms6k745GQgCGb5gV6S3W8o6e9e++Iuuo=","MDhKMbgMUy7MoS0sYc5OuYCYp1QHmmmw5E+qCjvv8j4=","FAPnKYFK3bz4CeSaVGXta6bk8DVKmGzSfp0Dqmqf0YE=","EXlGJ+YSWsRl/y7XHZWcMYYKotjqw/pBG2gVK8OBzSQ=","BwNU43E4mbOK10p/XjFU7KqicxS0f4V3O24Gb9TmPbo=","LR4B/ntJZg7O/Qk7WrJpriAw/Xgn1kMMK8xT0oAGMbA=","EaAVM+NxPh84+Uw5BoQzI8DIi/q4A+E1BCuhuLzu2jw=","BY5Ly090Y7xtAtbEDX6Fiw4KrPw6iNwyAYfYxaAV0Vk=","GyrTh2LGkYIB4JPSvDk/n8UP1fRe2UOo8Rsml4MzXnQ=","BaudOTpLt+7gByPo3maLJAShYqDhdXem5VuAJbGBSwo=","BAWK3rWt6anJ49hp7bcDIieLCc4SGbpFaFv49tac7Xc=","IaHHxiy47OjTvUNPh5NsOhhCQy8vGmxmEBsayNEcmhk=","ICjvudROWvOMDB7TX5y4Q/OBhO4PufHEISEhBUKwAQA=","JLB5LWnrMTZM3It0wQkiPBwtJEQExkpB1RYHarAkDKA=","IXn/UuogMu/ZWsTno3qcDOUDTTytNmEFNB4W7HSD2hk=","Kcuts393PG3FgMwMLr8pJtWYoZ+kH4geEs9KXt+voT0=","K4kvCeqfYP1yBIUva7mV4gw1EGSL3EALl9+3zE1/vfI=","E7rb0JU+CWFaThPUs0D04b8qA6LfXmuPr2nYaXmQyVs=","K4/t+MNmKwoQV2ztvXIM7Wn4YhJP62LuyDxxUNmTZBE=","ArPWLW7+oKIuLZaPkZqL6lZ5Gje58h0D+VGF2ZJscuA=","BwN7rItmkHlN0JB/fjFbqlJe3HKYM8icZgQG3yG/tlI=","LPnqR0k8t4Z7hpQuNTSHzU9Ms80z4xDp/UvDw+a1JC0=","MD9aj6rypq6teA8qE5N9df20YF2PWmVSJCZEKQbtrCU=","CRtii9/U1JMzwqnthKuj7C6rM2qNkaYFud7prwr0TyY=","AfRo9u9cNdPJVZLiex3nohOHimU2hav7DSly+w9/njI=","H1kjcl2ZGzbehVfSmc/ifYsHbGQMxM//zlfpx0d7iaA=","DdXXsdDVImbDh8fhEfq46sRASyB7xeIWq2S34QQUpr0=","Juo9xcvQG+HAbOwE7zKKfSZq/jP3a7sm2oRX6WY1FEQ=","BnIxh1o9U2tFEdCgsht9JJWKS/HNHuxMWXwl46AKyzY=","ByS9TVI6cAVMmVJBtn9K6k5mlFit2aZ3nYnPPTvdnag=","HMnb+KrUXWcXjFuRoKpEcBYoskEgmQ/m4pAmoLIem6k=","K1hBRTpmU/0wwF0lgdv7+sW6ib2niEIgjiSgPEb9MqE=","JaG9ksnKECJrz3+9mx2OKyJ7wt1OPUbhM64mgVRnT4s=","AcNS+9kickiXq3mmDkflu/PEtxSpB8Y/TvzFvVzG6Cc=","BeRIMOwXCkpd/Z3oRufkIq6cuYxvSZu2doH89g9+grU=","B3wnNqwtCgcKGhxuReqcxSYgHWaO5AQJa2nchQhuqcI=","AwPzT2qiKaUij+yVlUT4Me5xoRN97bakt2RDAR7sMUk=","JzARVZ0jkWDUY6K5iQCWukVY7/e2Y3KRCCxeqp/7FT4=","DE3F7+AWSY6oI/rV4S0uAD8stOyqp/DgKRliblivp9Y=","HLmQ2An86j2qjQOzvN8Uemkv96DY8MEU9qCA2qWjrBI=","Ggo9OGwmw9Rn9QunM+bXkBpZt0U6SjQFbpLncbbdT2w=","INgWGMDmrl7DA8/eVDRicQQWNMs88iIZ+ZmlS8UDO34=","Cjm6j1fHk/5ltmkHzGVql/9SOBfPzsy8LC3lu7jewMs=","DeBW+zGVJt/sFdUCFzSD6jXmBX5klJ+252kNPCWSP24=","A/gqwS1b5jmXR5T7PCMiv25homLHtHCsXpfSCkpNiuw=","CDWsYQAep5UNgOMvzCC8DHGX0Sq7C17Zk5IQE5DeKkY=","Eg79nAZj4O87bFlkFPAYpzy1UyZvvLFWRFLfkBa7SXU=","Ba/DYC4CORvU4sXr3aKACF7CwfNWo6XNL9I3K+bz8lk=","D4hYKTWAJPwp0EHrKaQxMOxAOSLER5xVqzs0ZTasFZ8=","CXUsIeKpx9bVuJY0KI4RmgxkBqvp53tK0bjzbJ7Mjxw=","HWuzLUFLj5hYOElpSterV4XYjscL3kvNdQKHAWr87rE=","B9RVzWmtAOk7CaxEkV9kp9XqPEwbPRdrtRhZY5+SS1Q=","EYiGiQ99Pd6a8SBKlZDhB1DJpgNeZrmLutH7YlGBq6s=","JF57NkOndmVmOV795uR2Aar+MHN4/QANoI+swz27BD0=","LOthdgc6mKZhO0D3aGVNrY0RmuZO3WzITks0Nw+UCdo=","G05NQQYTroN7f2p/UgagPp7KZpL6lwKHpTMXmQzoEUg=","CABXuOZkrVgOpfOFEFdm/A46IiZSDPUjYElz2idNENg=","ETHsONiWBWen+pvZbfp/1Qg+FPKEMBKrNulG1LkBsKs=","HSeOYsWPPBfhR2n+Pb1sa5+v8R3vfQAwZtjmsP5/saQ=","BxBDH6iOA28YDw5NRujteKfmNhojmr14e2zi9UYVzLE=","MB6GsGk8B99g+KwVrGscqnbxPvUXVTXY+XYAuM/jteY=","JYcDeMC3BoBBuSp/RLSFYFRIRYxNLnqHomzalMpAme0=","EXYhjUjDnOe2z0bnYNNIhxJmAFywB0uYhussS+9b4Js=","Hh78OwP++xyXKJFAlDLAL7D06bb24ys/wQlCOHqagSU=","AZLOT7l+7HaGByEKKo+xyymCjUvYQCNvFDJ+GG05Rs4=","CdlEkDRWzEOkPpgnNodVuTijHUKkfMbZEMoLBO4Q/Y8=","GOQXk1dYjyMKuI5vphDYgkQqiVGcpxvxDYumT7KqvzQ=","JdD3v/Iqnpl3XY84inTU/9cPnfcdl3oH2TQ3n+5ik3g=","BWzg1HQY4sHtfqY9ewbct+cGir95R44rU/QC1YT4AUw=","IN15STB7ws5TMjAi/LZ2U3nJU+hVH4eMS3EgU4ehe0E=","BLl81aR4dJKOjjrW3mRCJkk8o6h6GbGC6uiYEts6oGA=","CTdKEKpssLLK2qIenxBFn3k3b4rQ/QeDAEW28elFJgA=","IRS18DjNQA0klZkW+D0MyCc/f3pRlVvbpZ3z7l6kyVs=","J1HYEkBfE9IcTVk30gqYHbfNWTOCISQYlhVhH/S6LZE=","DNkKiCJ26iuKcnPtoVWm/Z1j3QlLllAkQRKBriurv3c=","AoO9rMFHV+KDmOZ9bnkhUplR7a8MmHIZRFYZXpeBWB4=","FvF51NxPIQHOqNEnptwJ5PJez+T3n6PgKFH8BhCP1Jg=","KG+R0bednmgdbFQL0Ur4MpnP5SVNmhs6pjTlRWr7cA0=","FczfrTTSkiadZzTBc+JB35ji/XXobmHGE2nG9Zq0e/E=","Csa5DGt6R6HtqdSm1Gayrf4HjcQcnG7dCjkDA6nfIQs=","JUl8pRXa/DfBJe/c5+5mByyNTBUqKjD4Hhlf2+x2SYI=","KAlIz+PsoZ4c0Pu6pf0jo45nKFR+ZI/oC6lHxHWCfis=","DNsbZBK225fcWSvJZsbhpn/acCMurZoVfyf2AUiFRz0=","DEONWr71BCoKY7pDGNeJEf7FNz+6cr7G/S9SvLOGaC0=","IZ7Fgsknjnjkh5gCPFNA1SKg9+Y5hY3kygEZnERSBgs=","A6CScwzDse6opadhJZ3SvqT1husJp77rF8KaYlu6gXM=","EOu/w1Iz181jG2IEzcibpP2TKuBYGoVqOVqKUmYjOaM=","Is4IkNnvTysO9OaYJ9+2jzpupsMKJKZ11RueGZttfDA=","GJSPWANbsQlWvfbUZnwuFs4YRCoZuMKB1JsuJlNP2K4=","JhnO7cuDS6QAiFOutqjWFE4oG3rjZ48dUtNS8EqfDfE=","AkTHTXk/Ghbxl6L7ABvdMemG8JSoPgnVjyvFrtLIvrk=","Fuvt1LI9RoufNsvbNeABh967FWaMGAyKsznuW1nIfL4=","K8Qcnu2fY1IyRfS0EiFnFdKb7PUdZgyGva84gJZ3utA=","AJ7b9TR0X4xzWsh6YC2Aa5ncaAEut9bCwdTDigZz6iM=","GNrMjRMgK/IyYW86F1vAIRiaJaKW78mXeIB4KzFAeYk=","CyYAoHJj6DrAdrscSwf0jywqPPa/e+SvdyYtORc1Tuk=","J/bSD84OdHz+Q3dDMaGc/kwjTpnRgDMok/cFhKF/EWs=","EFC6IMj015ehruyd5G/H95TLaRqbFoaKLe/+7Ruz9io=","B93SEVoeNTEbBSSUucBe1H/4/i1BgXjsYASHrI5l2iA=","FSpltUeOD5LsP8NgFD5qHLg9bplmgWj+vtNxYK3aiiw=","Id5E6+SEUjwXqc4WL0L826px7UQ3+M3riF49SiBcNww=","G+N2RKHTo5e2tUmBBWjsdjahvk16ZK4j983wfsk6ARE=","GOexEmkyIyYKJd0Xxx5DG+XtSoq3N/N3XvYUiSmPh1k=","ACP39xC8BXd0AqIb7ENy47ZIRz83R/HrKKeMfgOj29U=","JHDeI2d6AWoABMbvKSBkzux5zRLLH6SZkqO5vNCiXeU=","HR+/iy5BAAgD72pQvkCZh8b1LYtTthfEBVvSTn0nv+w=","An9f4fS+2wZEc75Lbqwez9ZWrSCGq8MRtn86yLjJ82c=","LVOvARnfp3wo3RArKCj+6Ar5rmUdsQFMPzn6W5uP+FI=","EvGZR8JkX0SByJET9FFGQfSvt0qMQ+A2YDboBUmnH9g=","LwBzZ0v0/XnSSWOOxkeGqURftZDxCI6+Sk8B/l9MJRM=","KO1FtH4MRcKavwOyZdn7dQADepVlTu1LbPShhdHJrro=","KSFC3HZwY5LzAGuPW0WkUfPDfsutn2mycRIRF4aDvls=","F+qp7vPcmnBZv2zjpRzqSkX/A7fMYFy4sFw+3yudZ/0=","GhZ9Ik9wO4PyCprh3JC+d1Fql35vLtB9qFsGkQplvlY=","CE7r52axQdei7Pz/CHULBL1v6oBTWyoOMK6JM9mAJso=","LsD0AsbLlwnm44F+KzZCheGMq+KQv4uDh+nR/o3tyi0=","FlfibGGg62+LynTFu/NKlHdy/9bCwPm2KDah6P9vR4A=","H4gnvrfayGlY7d3qOLKPmedxgPPDuVmXk3jEd3ZharU=","IXoH1lkvwAAfwkC+RPccAX84cAYTG4PyN/pMlmjtT9M=","BZbZ1shPdFRw/JmXxaHOnU45BOF/FvE54fxvC/J62ks=","C9Lx5hp+1HcmSC3nauSw17QXOOsGyemP8Cd/6hbCsPs=","FOTxSyp7v53Yw6G1Jgw4RFGcO9XRObc0Rnj3Sjb05Ko=","CYCws9gHEKFn3xR/nUdaKNyvkYpqo8lnpbtV2XqPbaw=","Jabe8fGnno1jVmcd8cozUN+FUGn6G15+hvJ7r97mCsE=","LLJCopckdA5j2EiK19rWxdN+nl0JFVguenHFPlNrZOY=","BrMtwECLF4LAUrulh8N5zrNS+ylXmyHGGAzT+zmrevo=","CfIKE3X1bmvuUyasdWNwm/9ukBgqwJLxIUXKCI/fP0c=","MEAoHEfTtu24MUGCpZWh8+Z2TmYswOyHi2OIJt09t/g=","AHLtoWBoPDupyg3Lsn8AhQXoOoXrWsdTt6Z6I9JFUY0=","HQxAa9QLuP6ADKc31QHhnxWPogXZ9jowtIfmFfRyFAA=","LhtvcB3744RiBhqR1fZBq8x0BqX0Y4IrcX3nk0TIqds=","KRjT/TMjcjoc513BsfgpSNKY2hRjZs8BZ60IL1r7Kqs=","BKjt6C6gxWFEOFj+CNLJBdzURfUbEa/UH0Z2Zz10rwo=","Ji929a+/3ITCQOaGNi8lzR80l9GVx5pAzJlyJaQ0koA=","Dpg70gKkJPJKg/gXNzfavyxxHswFIE4dJrT3fx8QdSY=","GoyKOxODekplfCbQ+ATKfvg6rH51FhhLTCLrev76UWk=","BaFvJ/RgcZ+LdcScHNrzSHOataIWp4MDm8BV7G8K7xU=","EJpOICpdbulDshONxePIaBiLArpXqxWKRuAzWQ3rHQI=","EUvmNuEgYNMXp/CMRLhWFE6IPcigevH2LK8wDSNBLd4=","H+zvroYHrrLxCSOeBh0YOd/KEmNKSwAb6h0RkOTsgCk=","HPtQBrYoEUewXcuKCKpUp/z+mxIfEr026YnS9Hz4Cc0=","LC4xyicZdZC7DUZoKsENIAnttX4KiLR5DXMcs06SbYI=","GPKgsAtUSfS7gmXZvCsDoxoc5quuXq/Z7sLzdFvlYbo=","BDG2xinOvc5ESwr3ffCAhQYQb3ZXIJqclsc/a0TaawI=","DPM/wv3h4XG+FR7jRFlXBe7J0JMDQUia3GQz/bmUH5M=","CgdDh3sooqZ1lm5q1uLK8y94++gwvLAYerpMIf59knU=","GVudKFpY3q4wdYoXfiCkz2Y1DPS+zYEmu1uJ5nLTn8o=","LD6sXVL69bRvylS158Fs2VA79i/x4/fK+VFJAhVER28=","EACDlu1+Jgl9Y4Rxbd8pkxv6jPiNDxVAa30+MBRrzCw=","CdYSDYzv2NuZopBiaPwRb10xM5wRkIJS7Aj9Oa7mbHs=","KfYP374Nd8FkGCW0meJFL1/KPftCe+B6MiAbyzgBkYc=","KnfZiEM9rd36MXzxqGwlA/4BlPwVlef4QnwLg/kLQYA=","DJZQ8UnJlGcMu5ZvOQPlKmN+lWtXkvtpoNc3bnMugRM=","DL+heyNH5oIfeI6aRCVcE/UDJZjR4hWoIuPn7Zt1fLo=","FnxMmV9aIDV0lmePwawz4IQxEnrvkqmgBkTGHv+t0Hk=","F7CTeNqa2Pp3tdENtsx7Ui35Vmb7IEr/I8C5qeujeVE=","FURLNGou7kAiDVq72jAyT9QisSvQYlB4h6F0nJ2+q9E=","A9CKJvhsl/McTNmgGn9o/sjCCNQuyqftLP9zt03BhlY=","HFOckkF+DhGyY9maD62Pxh/RwGXnA5mv9RLYd3188bQ=","GbkgnhBV9ARkfS8L1IF+eYlyln4fdoiHf06FdAD/hSY=","AU5zJT47XSyQ8ZmVnr8HGxiTJvOdF3KYbeG6edty8KE=","D3aqignNBCVZ4h7fZElVV+gGWSodct/oyj1YOgT+vQY=","B+l+GXf4c6BYHtp1eVXJMnSodFSmXm3++UQLvhLwFIk=","L9U0r53zEQnJSNWl2TNrjXvFGJXDS/zerEj4tW2ss2I=","G3lxxkS3/VFwM7jfIyXfgvoio7eanuADMje7Q/34dyM=","DIMJacqR74e+EJr0bQrWLJPoCxypMH1ycJUIyx/qZKI=","H9uG80Euuxh1Sh+c9N8wlssRuonnmJYilcyiVMVl8ug=","LJpcgkgcrc3qa/vaMDQ9mBUiHimuYXow+VDSmDStJlQ=","I7GavB2+NKl5NTfx85o9gZRNG4z8TyawY5yk+uzZjSs=","DNaSLzMEpNA4gzxpewd0FHlyUWvcj5ZWeymmR2lxVIM=","GDIS8uQn/BCAwje/rkID7xJHKgbIJ/k9ul1a8k7DNqY=","BEF6DdbT2M1tLvgcyDMzItcPJk9RAIdKTBYD0db4OdA=","Huf9hq5r/pFvvYfPCnKkvkM9TT9bO5ZwftoMR6Qiw6I=","Djht3dhw+AQd/mGdTdju+FGmORz0nu728fFEPuoXPRA=","CzGknpV6w7x/8PZe5v27TPSxRd2KI08NfmwGOb6gB0c=","F77fnxOrnOim4oGQR5k5zSeGO4kv/NrgVHighZx+7cE=","HCj7M9md0bOuN/iE81UlRqT1r65WL0hi/h6S5wJAnhU=","FcbQo5QWaWfLw5KAUF65UozasOpS8VlcXnhxgV/9Asw=","I2MDFQ+edlA8zxvlyQw6SF+Q98H/rrscT8uqgqBRm80=","H7vgdHvSu8PMu3Us7ZiXcxlC952adh06ukoWloHjD+A=","FHFG+m9GT35YoTBEQdK39kMz4hd5zXH4gJYqUOpjhbo=","IX4CySiUFRb1qaeOulFGjZO/snjRx5Bh5mbfSjIJLAM=","JGATtCPMiToWtowiiwG5OAtHsK++Tb6xtDQPWAG6TBw=","K1IlSWweb6zVt08ScFyg1Ke3fDDByDEcPIGDcWerRe8=","CpUPVydJtvrW1sMk9AVo1yGedaiE+bv5QbIO6BtCwCI=","GnGIjmZNK6m7paoi+8OA8pgQ0JJ9KGr1kRB2nwf5l24=","FcXHIO9vpbApNjdsKYOUu+3OWYJNbKn8Jg9e3I6l+rw=","HISYPKsy+5bM0CdtJfy1qXjt7mk1IMCxygl3ksvRdC8=","EHWbenROgTIvg2j/+mhFEChn4hymiT2XtGMJTscqHiQ=","GrQ/Gs8odjdn5YdUKj85nwmYtNIPUy0fWzk17yyj/Go=","HTLy4MVkJ1gN6WLxR2M4ma5yN/TM/N1S4Nm3sDfOIM8=","IUdQbgD74PZFgRUSbfnusa5MMxpKOBkVzBlb7JSIjWU=","BOle2NilVGlfKoRBwXXyLGGrBBqk0n5IIQYrAveimrE=","LMGB+U3lcZ/izvIiJ3fdmKranUy80Haizss+p4+L/q4=","FhX21YJsqqZ4xOXAHO9JtEJEgVfSxlHjscmdMrLFHAs=","BUsOJJHT69F/f+4LDc5nuCNG0iSqqkd9XZj94r9d9dM=","IQUv4X8/gzkK2Kquzki3kk5UuAcLYwT0tOirn4lJNxM=","Gx2NkFxxOVjdMVsMhKZdR59vuNhphjDn8JY0K+TxKb4=","CHZd+SFBzHtRvQhz+1JZqKzVqbUIKImuVQvz/x6M/Dk=","HdHiwGi2UyA1Qv6jdGMp7KlUueKP3L2JWHCzLzSBEFQ=","BQWCr/38Tlw85z10ZoC4MKhDk5VhIWdn5O5jQlAuKhg=","FRVyptH1feL6nkqqVF/7hCuxhK0+CwveKScbVXMuotM=","GNCqOAw3mo5wAFMqZtVhQQ6NEY0ur7bA1tP68tyOhb4=","JCSlhrtXwIg+5MpOxzGWnHQiUCyKIZy5XO06EgmwX90=","AXTWZDzLYyoUsRFi/DVwBgTFk5nToAf1+JFQS899d80=","GCEEyUFmBS/cdI1JeZAROHkVspngSoDjPmEnQHBuemo=","C3DBGFIw4i3LlIQozt3p19ycln69Ra9NnNYtoHvVIvU=","HbRLbgFCuuEHD3NFIrwdQLmc/FHmL/ba04n95dxo7KA=","I3eVmBGfr5IzNqLp/hWnoy1GAKix97vHPN3xD8qBqrI=","DTENCNSMBNx4vaaH1IoAWYu5Y/CbGN87i40xYpt7ioI=","Kov04tUkduxIgpqZ+lO0fLEEW8P8zr6yUiGBhhYcezw=","E8uw84Gm5mCcP+QHfc4NoyE4lm57ooEolgAYN1hbLqw=","KuQSZS5EFycz4ZOf0y63gEZH0pdop0szUDayRVNXG0A=","A/Qmpcdwen2hqDSPnmwObVstUHu+mKAG9xW/LyjBQzM=","CS/R/T2cW/zL0VgbShbsCoCRXtL1aj1AmbI5qbREnNA=","ALHoFt+4OaizHdzlGWPzUhExpayhz8s9IEkvn6T/K4o=","DNqjpjeugexfxrT1krXgT3/Y8fZ7kV1/y5XJxb89fHM=","Ef7Vuec2Vik4pXGq1sG/mHiVvSXVPvtek6iVidY40Ps=","DQa5A49dBBqe3RFLPWNGrV4R2IF9+j50A0+4L8+8hjI=","IvebPZ30JW/INfI9XhbI+WPrD4DXa5DEevRjt+5Jry8=","K7Ls10vjyEfH3xShyDk3+LJKO6J0SVmi83M91Mt3fms=","EL0dYRcH6+SoLSypYuAFS7K3Yx3oXjRo+vAFre3CuTE=","L0A1/bFiLSPRucuC2mT59wcdCXMs8XpTzoQuqkLzZcQ=","D6fYwX+nAYrRTwieuFZLyafBV3ALvQfDpkuiWLjnkg0=","C4ypNoi/t8GuNlrrNEYwwZ0PHnS2Zt7CsAQ29Ja8xdY=","ENaFYUqZpAVBPjVZ2CYXUgWgP//ZsDfO2QvvCvDbGnI=","Bo4WLGoCyu4CHW9EYftOHKHWCSqF2QBEw+sU4HxOSoM=","L21qDE7iEpZJb2mpZcuP4jm5HqgXZ8uCBkqKpeJ7zFY=","DGpDmu2OyGtbpfKkoEX68v5Iu0Qtn3UhvvSY0FfCE3w=","HmsNS4jjk6nZFcATtP2lp8O1iYcsBt/dogfh1mQari0=","GyEW+KfeaYHplCVEbBtyDLRJVd1L1G/MbFIjYOHGvYs=","BQE/AMhnc945wBujzO6lwM2w2ILxmVafqzfEQOJajlY=","CD1DDEiexoTBZN/b/FoFVt2Qq7sRqLoQN7kufDzkLNM=","Gw36XC8PpzmwOwv/QGFsm1qyRsKWlEc9biO6XF3ZgoY=","BVP9zqFJjyipxKWG1HsCl7I35ZwsDnA0RZ95y6SykEU=","FkwnLELh+Qe6n8evYuWp3INunnEk6sxtvFz+7jt05eE=","Lu7pSTgrdCKaOl+GQgxZa4IkIg7pwdCTz5ZcIAPHc9s=","Gqe4mdtCi2SfoeRnJYGQnxWgkcMBxSfsSlTDwJPtYAM=","KERmcJJWUVfyqIoFWEUK3MOI5hSNJBfKw9/5Xr1wcwM=","JHwNhljGpX7Egq3F6e5rtnlI2Wx4GtmDEeJ5uB9n7zU=","IWIaOzxkiZkbAA0e/NxpsKVA0JaASX1h6WKE5mjJq60=","La6qsSWf9lltCe5LVnzaZKsPuIoxeDJm5dFASBGOYvk=","GQbK/n309Kg1mkgYpO1bZ2nK2gouBG4tYTi/j4RAn00=","AMKttRYAu6kvxT3CFl+A9wU6E1C+UPYmjb4YsQ66KzE=","JrKFFpIlZY+MzDBAzYXDzh9Efkfut76OO23zjfPUS8s=","HCt+LbVk7vCQncd1NgSkzF1F1kM1XjxgMh0kqA7WzK0=","Ldo+n8CdLC5tUqdr2oTfEG7SNv+VbxJ6gE/HAlv83fg=","EZGbj0eX4O6J8F4EKPV4M9i150EEgUpqtmTeikWIfvY=","EnuywehVKUBYID3npz8FXG9CYBokdbHXX5OVmTraex8=","LFkxjPQyuOSZqZoIY8kU6MeDaiOzG8dYAoGC+DKD9hs=","E7JGd+aK37hz7Q8jsAJbtXR6X8dENTAl0hKNRHAXrH4=","Jij+JrTSvF+OkGefeYzZ3lpHvS8EhlFLbbTHDPPCR8M=","I3zRYKHWrjDvIMk0dsnODWBmwOelq9Jh+qpLzM6v6rs=","HhrVhKtnXVtaSu08pbgE1iwpczV0y5ya2iV32Ha5nCQ=","D77XMaghdN576eBHmFZzWAq2zEGUiTiEyfUeoR/+j1g=","C0QcjxQjoppxsdyxb9rQMW1TNKKY/USAEl5ghdz/EHg=","IU5XOmxX/32jlsCqFe+qIfwJMMWZhM+cjHTa3jr5YfU=","G25DZFduM6PPVL8hwQqRxI9+3b2RBrUFlkro4LSKXb4=","LLYNwwqvw6mfH0Oes0w46KerJl3kb0UAPPJgDzpGGaU=","CBwLXFZxHlQb3qwVCwZEp87iVRAqRiLdmQ80ENFoU8Y=","GSD4R66Dlpr1vjlaRZg4mEoNt3MQssjFM+tgKQgyFEQ=","G9FMtbCVDTtHg8U9LHM6KubpFOxgFVFwORKLFUdGrvc=","LKFnAOZxNL4O7zKfVh+wV4Z6sMZqf6Ha1s1g6zwNMvo=","I6S9a+9/TSHCYZJHVUckVmP73TolGvyidjbtHe3pU2U=","AJAgTL5VCjbxHJ0SsqVqauc5nP/LwWgtdknN+hK1s6I=","GumUVtDosjhRalIGdVnlmSB9ooXQN77Vx0jzmm+UoEs=","LBizoPxL81vrmkAGSmnH2Xbv9FuuLBaRAFy4NawH9E8=","LcqUS5EBHqnyJP5eBhLsICHi4xHfrY2NUjdrYN0pY68=","LqkM5/NMhkWWYX/sVitM2foKy3EWFlWVetRhXr30ZFo=","B9Khb615XzgmeZmnDr3ZsrJN6FqtEsq+EIVcK9cb2i8=","I2RBX8hk30w0Go5CZ6Hz6DLqUUOk4mhuDYRAwET/hiw=","L1yIuWrthUzABJqbpHamumF4nlaSzy19jZp8x7nQy7E=","KZAqrr8+OPDvOcN9615PsPMvzyO3RRGmIUaz95wl9u8=","DhkOBX688CzgNg92/Vsnmk/iuoBkbtacx9VoQR6By1E=","Iwl7gsDHXlPLgISGnlFAC/+eHw11tSUumIq+NWJwL38=","MBgOF1MLhgkBsf3K8jsu+8E+vUlXTmmqbfFZ1KnchVM=","EbpgWVmvtd6S0KDPaJRbXmYKWebJ3S7kg4qeUt03oJ4=","Gfi+6zYpyhdyDoMmnAECeCMaMwMZvqvnk+mvQVGKNMo=","J485iXzINhAzDbJl9vlZ7Jg/oTg4uoj3aq0DTC+QFRs=","I0nKvag64r9VhC5yuASzZDWkngsvhQHwCFZgXiTew4I=","ByebdfenwSEAXDtit9GdrKtuFUPxK9NmXDGBjF8seqE=","AGpJzsBQDAWb9hlw06A8TsoHnzvqdr22UsnBPrOlfyY=","AId9wptQQBlkRIVXZnDzjKUxSWlbWqzFxNUBCOJoMQk=","KUlKSZ/XzE40cwxIsipimyTXSnKDAGlvUjvvrYoyn3c=","BiCGo6JPPdByGbOJdcRRtIQJ40M+yobAgyBwyC9tuqA=","KwDTnu4rQQanDqYYTZXcGZkaD8IcRycXdAwydqmpBRw=","JceI3t7jazgZJVA9wb/IHwmHY2S3ZJifhrmpZCyS7Os=","CjOdfDOZ6wCQ+cqIcZb1Xlkn3ehoLDf8noUAXQyhTl0=","AQ/d1NYo7sxrtV7E7VY8nJ+9du9FxZHCIeCLZvRMlXU=","CMrX8J/NbQp2OxU6a6E9CeT7kQ6Yp0VwcJXEKsMvfNU=","K6jPOgcTjAhkMmPi1O3PmkpHMov9oTft1BFboLMnTXg=","KAxarbkvGGPAqyDKFLAbACAbId+3HB7TKVmyEt3o6K8=","JDxDvmJYhb+6V1S+/9uMTicYvRrji6w5tmiDogMkVH0=","H7in25bYgHW3qzbnFmlWixqIwLzFcqsceAMDxWnkEIo=","D3rfaifrl50KFHtBclUFjj3TmfJU4dFXHlpgJdhdWT8=","Kpwgv7AjTdIZrFkz52FgQP+Y1vCZtTzp27dreiHGVek=","LbEaddhkmSpt9Wy7HrVp2jaSf0M2Lpg94St2YaqR9GU=","Kc1j71f/iXrFt987qO1y1Dok/xigPKpNmfHlMZDNI5o=","FNBSGTLoc7bbheajqrABRpoWjpeO60wak4YZDddO3nE=","Amo+g0BUy0c2cj0dFaJBhp+PI0ddN35p5KNzFonN7RY=","CL2Cd0WejgqDWe5TI1QbzBRlsnuWhfzw135Kpz9KXqI=","GfahtagCK9Ek0mKndJliERTIexvcjorHFfDZBrX1cfA=","H5lHfbUDGwunI7HAxtFW/ojq943gkkHx9Z4INPkcCBc=","B6h+2tUGfzYd87dk7zf8MRdeAX2WNaZijO+RWPY9RLM=","Jk/hYcmKLARRS5LyC3XCEiOywiZV6P4vduTOjSVjkQ0=","Jby6g5FZVL/Go/5bzPbsVmiOwgnPH5dqSEVNxt7QeZw=","J0KoLEGuL/aOUkgDpD44fkJelDooR/1ykifNAbcH3P8=","CkvKIp65zqln21+GUPOpITp+q6BmRSnsSMtIFqMvPkA=","Fi279y8x4q9ajGKXXWrdDddHqGgXvtCdaQ0glawfMCo=","HZDTqXBcWpoeBsd3yRWNeGA61PmxDO9BqtK4AI2Gv8U=","LpfaEI5BkgxxUH0//EGY9OQD/AgOMZO2NHHoFtOqZVw=","K+p8/P9Gy3mCjRvVvE0Yo3V2W9aSeSi8/76iru5FRRk=","Ll5U4PxkLYoKId9IMQ/onT7Lgb0tVksrEtN+pBzmY3Q=","LfSkS+XvwMYcSWqMtyPp+v19yoXvnFulLHGnj/KlnZo=","HdqcYIM7UmdsyUduy8s07n9bdZ/A+CKfHWReOAc/4FE=","L5Hu4FT6UUMh3ArKIf8lr3OByj9O8JovonNVxPvYhss=","CUMnp5ci7hFqr4GWxIRORC5/NkROqcgWlIQQ/xEeNQM=","Dg3jKevAE2hGcapo8PXFamWjx+MbNK8o1C59tgay7Es=","C/wb2uo5l+Y9tj6U1DB06jedXV+WFu3Z8ZwXh+SHWTc=","LXQlbUcOj4k/WmoScjfCRQLJ4QVnuJL3cUmD0ULQB7Q=","EIUjBipRqLQo7sKmYoS+vQfcHu6QT0NHCD/REgZJ1hY=","DFqAXS7H5rMgHklUGE3dx6k9OfwiH9hnSzO2jWXKnkg=","FyoGIVZz4MBDLJiszhxCbP7WQIUBl+cv6EizPvvIgIo=","D2XQP8zHU36x9P1sXNBfsEtAOW6ZMoqenzRMXb0qLps=","IMMK09a1cld6hzOZYJPVuTn7gPLnyqU/DMlnwzTc1vw=","A3P+veECYP78bOlnCRSpzsXCBaddI972LiL78xph3qM=","IzS6wpuS23acBjCLeHlDN1un5FYP23Qaplad6NFkF9s=","Cj4gyKYci/rsvWXkOxOlk4KwITWM2/epmAXWWCL0N7o=","AOp4umVSiscDXgb72b5jpQ4Mr40GKPM8eyKdCTGqbwU=","DRaC+gqSS5s1ERiPvI8h38b5747qGJFgfyKx+RZyBNg=","KESo77hTsttjSjzzbOfP3DMefzKwA11nBd7BVLgktM8=","KipXRmH5OebGpJ+QEHorVKAAICL5Y8IMG/h1PIJrrb8=","Ec9i7gbkq5JsSC81Ulpd0wCiWb6tTNj7lJbKBqrJBlo=","KQRcf6nHP8Wx4TSZ0XGhbzdryLgS8mVJCLXs0rgmF2k=","BX5EN3ZC1PPHwWJd7C8/TSLpFcfpBVKHmvAW96FmXyE=","JYxGQKwdqZW9BSX6kWLXyzpdmyZ9BEqMPDxDEOaJcf0=","CV7m/1Vo+lNQktdMFjEeR3t8Yrq1/VhbfU8b9lq0zGw=","CAaVEIjW+DYxo3GUhib2ZiWADVth7upj0NU/HEauTiE=","LoysX+L3CwJthPOfG8gPPr/yCTYlodRNjJSYoxcu4vw=","ESquPYAyroDf4CenCWHATRfJlgmjjCpuamCevTEqEUo=","B/G9KJqu4fTCgyvNiHRjQ9ISi5gm8Y/0egLGBOBLJW8=","Ag+yUfKUrR/D1VPPncUyzyEF0otBnLM3m+VPaDhNNlY=","CnYwnvTzWg2ULSrbQAQhAxF/ipL4+iJxPlyPRjCjOv8=","AuM4puJ2OU5iCFUTfSPYbnO2qcRHE1Q+bvDKNzAytmI=","ESd8Ah9LsFZhEqYtApifMGvj1qYaVdbCvzK5stbrSI4=","DkFvWXeYwkKBPQfwL6P1r9PNI+7ovsBczzIoDS6vDoU=","EkboCh6Q2vj1DI5woZcyKcHAR2omLfeRNgh7OyUjJac=","Auf1asUwAq/t3S7PSSULUjTUDtJZJM4E2lL7E9gZfbQ=","Czg/RgtxPRrywnIe+G3bnul7TVEoGZPtt3RyrO5VKCI=","AUxGtKPyW4Wi0Qhc/agSyK5VhmALR2rPXmthRatEnFI=","C6OpXTwos5LzlXVpF522NVk6n+XqqqZBAlnK56ZqtjU=","ArvSrTELu10lRjKIcsVLZOJasF40d+BM4fAwIe8xuQs=","HPBjf/Kr1ypMXYskr5mY/CnV8vpiq0eRTfFOiXRn0KM=","JjrN9F0HnUOxQ2Yl2cMinljYLa86QL+J4mcv9nhbpYA=","KBHrl6YA8TkSNI9OmvR9MNvggFDqCDcBDhdOw/Os24Q=","FeaBlgg2hRsVyOmJbpHWX/sbwkd5TFkA5oroLxz3Mq0=","Ghv117c9bLPdsPzRBlUGdM+LSSqGRA+QmUVDRx1VRAU=","CRN+hzZJKvxtcU2FTsG9jA/mPUAproQObKBfs6izYkM=","EAdaAjbjxpOOis81dZ+MGchjAmC9jlhxbt6pcOwCulg=","EmNEtBy0z92dePkS4C7kcFnAkVn5fEKUPF0rc1tnac8=","BHKprH9mAIgQiaF18yh//cAf7leAo44eCIsG8EcCTE8=","DlKxqNxmAUoUr0gLgMiz/ZlZJjPu7Wz5UG5PbKm7uMY=","GQ4wfmYmrHlu18lpMoANPxVcqJ2EwDkrtIpgsAmGdUA=","GQF1KSE+HLMxodB2vjJUyO5dnqQAXpOVcG6g+RhJE4Q=","GInez61WyxSm4pKAkVUKRQT7q81xqfTjiVNnrcz+x2c=","FLN5i7J3E7P5L7CGSSNnM1QkxW4Oe9msObVYX7GNAGc=","IX+qC3hmxmCnAP2vPvBDis9E/HPLfqvF/BkLZMqXBW0=","K/Rly1Jx/lYxIbuQh3qCHVKfyBX87jckdOwCzzmPm7g=","Bqg7bzNBWTTMR8lSt5EcV0DY1W3mo0g33PgpK6gjgR0=","JrxLcVLslZZ94YFi2gQAorNpyRCIg1ZZ2pV9HOK0nno=","DZvDY5qx6aUCNMENcEHqIiC758lBYxiPqx955lbROxg=","ExUvBxTt6Xu67zop1E+0Qa7oGNrATxHk5cak3DHIyzw=","GvwSmmdLpKx1Ut/q2a6NLVhNx+Si/yzOXTtvE1DgjSc=","KEmLBF3RubVuVYBl4NcQBnX6FihKwM7RBI4HwoChdF0=","E/i69u/JQpTIKCn1naKshhkbAxu+Ky/jMs0wLNXZRsU=","KwMU7s/PYa19TG2Me5Xsf8mez4pkjCHiP8XxlGQy95A=","K9AjKfVz0FvRTrWXH45t+UOOireLLTemjdsahF1M3a0=","LxIe6kYuLb4lMYQDDEwaWf1Q+rGsXEnr9iHzI0fbwMo=","CxHKFlc221P//XLg2Tmxb9W94HoDZ427b+EwLf86vi8=","JE2dm5vb8KYiGT31tT5TOuFGrv+7lYFcFN1ENA4ZK5w=","At/4NH5kwJZs0yfEMdQrv6jkPtZdWNRS0khvKv+0/Po=","IjYpkbq+1Zxd6dn9lqM5rJiBgbJWvxrsUqPQy4lS9xc=","C13coEz2YhpvIrlLkDlaWPqPHPKW/lvrQEnHVl9PKlA=","A7PtxrN0TPBXiy7EDROpnevbbnGXPgpA0mW5mlTWMQ4=","Ld/Zpd1tqpBRd5Egyxf/kEbt5dqiS1wzNo+4S1W+440=","LpKPJYVk8RvXIVa2J/A3S/ilV8SfiFmKyUAifKL1mDM=","D5cLTihOlal5CUWaNKA7kNyXA7JPnPBftSUMGiSGEHE=","AnqALq8vna/khF+bMJB/2zn92cRMXRgWEPVYgrezgd0=","BKx7wDGCvoApqEQO+HWiSKSAmF5pP9Tq65JjfHPonjE=","B18xka+9IdUUl6JsUkZl3nQxVxIfCTwSDZPhgFgur4w=","C9O+khMSH3ecKysKAkvoK1GOG7wTSmX0QMRHap6vWF0=","DJvOlfLVln07WPk9fgPJMXCRfqU7X4sn3HCh+qtHTN0=","HjsE3uauZjVyLjVGVfYDLRpcoubXr6DHewvhkvTwxvI=","DB/DO5MZXyqsA/5u7z5BEHhMfEgyLjDuUcvXj2zp2Ts=","KrYEJn2uEklFUOHvJzcI3RHBdmZ3D/DMfAd8k1vyr4o=","HGmYX/eFWVGaAFLqBeYI41ys5i237Mu87FWvPbkVZGg=","FjNPzUISVjmM3u4IqTRaUn3stxoB60NST4092w2yTUg=","B++N12ZRUvhdAJOc+6vP434rHvineoRWiu/gHx6bXqk=","DcxCbciL3sjChI8tiKIAVxuKASzQhw/G6guYFJT1gng="],M:[["DQZN7oJJKNOfKovn0vpYMiPDOZV4TSKIOa3eJVlZJZI=","Ky/18nUxtvPWqF114+CPOi8NrDaApsJtVey/gDyoBWk=","C2WISc5iC77v8jO30SJYAV6p+HpTkPVhSYHrbky0pfo=","EYEy+8HNg/lRZ8tEc9VMa9LEF+J4Ll7+oW5y1HtItw8=","C1lEdo1hwbNWKldJ9PBsTdCFu1Yrg41+LvFKIf31JMA=","KwTW/7r3FEAS2SxcYhKAPAtbzA17GVC4idH6bz5WRFo=","Kb4qQoNK4y3jMg+w7ka0wQKj0a5ExdzhUv3qtUUMnEQ=","GUb+neCpQ9WnFurAhWHNkfkDH+yC2pq3KIPHshixHrc=","GvPKYkClWrpV345Jg1uS+hfjmtVwHvcPgUQQn4lL8dA=","CB9YqRpODRAOA2n92BoZADU0L9BnfuG/UhXkf45YwsM=","IqhSr5BoCoypaItx7SfBV9ArQGvWx/2BIdfHeTrSMF0=","Cye6gqD/uYNomBc2rpJ6IngomFwAw+XfjBJ2sQAQiaE=","BLRlJiB+3HCg0jyEOLxJo2VjVVLe4kBmGize75ZvIPY="],["LYxwA1cxrZ77qSghqIEZ9rgYOjYr5kFympPWoyfAOAk=","Ce80kq0Z3R0L++sZEzCogO55M8nTs2u1+gIoO65dYF4=","FFjeUWpTQZDFVQxqG+069TXDiyQuuSkTcwluxg45wfE=","E27yUVlV/2YZSY+sWUJIFhifiWrA7Wm1mFTRBd9HxLQ=","GMv94M0hwYN5ei8IlZSoHNgo87B0I3HtAuuD+wBk3UM=","InV9qegiNFKXvQYKP3G7HnDOl3BJw5MjUDVnfoQ1cxQ=","FiKAUSXd80TBjjUdEegikWGLl1girQyQPvvq2lpR1E8=","KXZdjPd2GaWAZY0Sf7b6pE1scKD01l26qWB1S0GV2f4=","K7C2sI/BvREHDtxC8j6Ae4LouI73A1Xfx04Jan/zgcs=","BJUedHt65rmdklAQjF0rcBgak/8dS/cjeB4bk4Apgnw=","F3gLlGnoHKcMfLtDR+f7QMY+9o893lHQTLR7O4P8KZ4=","GRPVHZxx0EK/v2Sdnm5upf3YK0/TFz/y/gK4VYJSiRI=","Kp40KlbItkZtP+UzuJ8atEG2Lf8xU9OuZQDCw75jZeg="],["B7YgyKeOCeSc5UeqeDqnjz5FlMSas91vYCvGwDUdgj8=","J9a9GHA9fKkqokB20xh7bAAo0LYhPZ5dLGYRUjehkFE=","KWnrUBbySzGszxc8ogRmjcIimEW/ZEbOoAfBEzSb1Nc=","KcZ7zgS/0CD0/36sq2y94DSyL7hjNGdaNh8FnlA5UxE=","EkR0sIgp2bcXxQiEvIlc0/gdUZhZ0hI116dEUNCpQns=","LH4o9Z/oqKO7L6KyseEUzig/4iqXij359ioXHLHWXk4=","FlwLl4tLtkap/yJaxJAFISkr5UyHmILT8R6qMQM0FIc=","AgZhNLspnZ41nLgqg4D+tjtg5LmFnZuYcu2vkVL5LU8=","CTcu0Yuhp3Tq/hv/be7EvAgUsImcYZb6Faes0V7MXKI=","HjoTDoyv+bXlY+iq+EsvxzZo41HP0oz2b1AS3mE0W1g=","JVVDoxSvxaKZFBMijHXq45i5BXayO2zYYShmXMO9lHg=","B2VHRJ+gOEXxheYVeKWo8mg6GXM/wExzrGoLib67hFM=","L5i/CB4Ot4+AJcA+6cGZ8ug4xR5aCu/TM+n3z7OPU0s="],["IxmWtZJShXVWfTnQBkWoOxOSkJO7+gDWpmHkppA1HQ8=","GT8yo/g592BJycvyQUWQaYohGOg2WDJ8QziqNkjY99c=","Cl2mWbb8saQnPht+O1RNLL02LKxJev0AS46pIP2wS/8=","Aqgyzu04N+dCGW4JSR/iPj9uURJuq5rOyW5xlTEC7yQ=","CYuyxMYzTf6kdNBMsul2GGH2sYqAWKUrYZ1iJ6JiKKg=","EBdJ+d0mBRkcGWPyVpSuJn9rRL/i0a80/vy2XpWHhLA=","DHteCTQ9tcY8EQ0xddAbtJgpDZcbHm3A6aDp5xWDVrE=","EWoxPQDPmdwY4h+TpbsZgBi76kt83O0+TSEJcd0KaBs=","BATA+hvR9+BZBUy7h/a1xp0RRX5Z+QQZzkvRC7ioA98=","DBwhavMwVMSX7wQ4H1hYIpi1QzX2Mr1irdKeCAZ6Wdk=","EcsgVE9DQ3poin3LVzp9pPjHtENzSe7fP85DKm88FlM=","GG8WCuhm4QxL4Op9IEzWTlczfGDECzTDo3HXU/L/ABo=","Hh1ZIO3P6day0N2y9vdBr7BlkDQPwHsYLqfD672TOTE="],["BOR6cuSbnFqj9p9q8i+gq2QMk/xSTdPFCEhtZvB5hSo=","I10OcaNQ8fI9m7UYKsROyeRhXneAHlqtyrgzaq2xcSw=","Ehl0DEJHQ9u/iWmW8O56QHa6lgpX6Ndnm4KEeSGFcNE=","K1AfEAPieqgJ3J5c2El2o7jBacHpxjl314I/gNP4I74=","DzTbk+qNKtfR7/httYIMx62ke9zYyC0Bgh9cIaPqIyU=","BNAqsFgm+lC8xfmvnjlkd+aFQtB2toPuYbhYadRTWJM=","K8yC51ORvk6pzQ+KUF+eT2hHePx6mxvOt4aLspnNIHI=","D+KbW+rVTFu/QmuxKESikgiErER5BhAc6piImGoDCxE=","G7IJGHCk+sA2gv5bHi61axStbkj0Z2/kFFS/7rD/1Nk=","D1TJxSKlx04NTgxjYRp1AmV1dbepY8DnhtKnYcToRbs=","Fg9awLJIH4AZ6V4LJkRbpk3AOkvooVRhSWJH5qwpACo=","Lz1rjiNhFmCJUBuRR+hKtrCXkqwXpfCA11s+Mgr/yGw=","G1m7YOmGGUmH/OoHBJi8x8k91WHOivX63nVM6sB7FwU="],["Coy0sr8/DF2mceSPg+XBswGPDTEgCm8Z/VGV2yLu9/Q=","HfXJ72lK/mG8JTrpCKj2rwoIzbnnip8yLCI4gyLxbCo=","E0QxEo5f/Aq2ATbF2FGhHc3WPNzxetZP13UXcB3mdfg=","A+pOK//gLaWXfO0fGm6FLpIavi4BXzWzbOS9AkbCzYk=","BuA8oRRnBVIrtencc1YO7ua5tL9R1I+VP70fAG11inU=","AUxJnuUZJbIx2hfue1WnX5b0YuQxZ17jbHvk6bBp4mA=","BhHs0fN5oAYrBcSu2xALwBUkTGqI8WMaRWzCrMqJMMw=","Iq83wOSojerp9/rYOBmRBzXLS0kxHgquEct1NNC87m4=","KZ75Wu2MdUlNuC6GefvG1aPS4prs3PaXmpsnKmB91d8=","EDzIOEvhvhCHubtHwOtgSfheBBP3tAjx3C+h5vxK+Rs=","IGz0KQrJhENPp3S7D4kBojOQVjK3k8gLHVmWbpanODI=","Ddhdzwj9ONIvMW2R2BLLKohDCHda+p9mfGyoCVQ5fIY=","JM4Ky1ItpSfT6rcoZc8HPZVLq77TzRcGqmnXZ+mv580="],["GLuwArRvLl/sKxIPr4eCLKjnes6U4DqrXBbEuTFzncg=","HbICHso6NiSn1FuxbPSkTir0+uDcKAAw5+vlU5T2nYw=","CXxhM66o/kjzpfxBa99eRtBd4HI7xJ5Tufteg9NQwpU=","FQ756TKnS43r9nAIBkEzmxJoT/WjA7L7fB2NVvVqth8=","Ejf0TwNrLaAGepSUczTjr6KsTPEAmJZ2b1sZHN4oSXI=","LZ6pnS0jcygmbVndfgGLvWvMeUHZ/18HoXuvAJn2FNI=","BHf5UeGfUxuENK11W2eD1htnnvu4f9lW45TbnENOI1I=","HYuLp3LEzacujvmxnEJNVdVyUbJHxjK+olUnGvz8cLY=","IGqi824ysrBta+SK1JPTVMp0aHU/Um5r2CVJ/DbNQQk=","KNqTCazKED7PGd9ypyITTVMLrmxmDbPDZNDrsgDCrqo=","AblDWFXWzEM5JA6fo4GcL/QgmA1s8Ucht15Msf5X4Rg=","I4gy5kMVjpZom1gDsLd2AbWb37SSYROjRV8f9N9uK0Y=","C0O4+sxDz8BntVE6vM6EZQS5OVzcFN+WhhpSilKuLsU="],["Ar+uGwVO8ukk11qKASg9opEDxXutEp7IOWzidLpFJN8=","GkaiZpGEHCYQmjKuB+tYSmuK9lcnPNxNihEt6gvMhc8=","EH2geE37MU2ChZvkTTe00rY0XBdLkWUcZcmESWgqUgQ=","K0WzviZ0/YIFFqzWzGGDxPrg9+36mvzQLf7szQK/7UY=","IILpEDzEUkWSQokRFScxKGD25+6UV48BGPSpIND41SU=","MDqeIoVdldB+gXLzoFNtS5UUL5YrAGqKsJ57tjNehIc=","KWNRQxPwRvhE+VD/6oD15bQktwfxZZlmLlouNmjL5fs=","BLf40dXsi/aJrfEtZWuU4VsLIpwWOMnEdX+vDRj6ZDM=","JZVHFotksqIolBpULzlKJpnAgcFJRj3Cw9If2LLk8xw=","J5Gd0vnT3J/L2hojuVzyPjYw5v1SEPrKas9GKbiOX/E=","K5I35ZQeFlfvpQe4ksO43Vf8jVKHbstZndXhBStrHy8=","IC445mmINhnsvGpqRTaLm5o+mrZ+/vUPiW3+SLeNPaw=","JidY+z4HaTaZX/MUDvfRsKHg/kJApQdH4sPBINl386w="],["BtEBsZR30WJ7lUJYG/DN+rOLBc3v3LgZZcW+ANeA8ZI=","DK6AzAWu22bW5kmwV9vFrpdZ2l17Q9XiWkAOH5Lp0ao=","EiVrO5nTHYo3KYb5XWbME53SPpNUh9oms+JJ6ny/ka4=","I4ll1liWevorzlD/GMu+U1MnxlsLduUNowc53tJetJI=","I6bhQyhOjyOMS2Mq14rOWw3NlKiXywXR4pe0iA50M7I=","JOE6OPBNXg/Atrbg94KmpSOos7ASciS44jdRucufiWA=","CQENc2d2IKrhsPqAI/8cgSMTrpw79DBm6mC8GrR3p/g=","CkHlpEId79Xtes/UhAE5WkCaZ8Pt9MFozjNo7ZRCEtc=","L8fRfzqa/B3iia0PlBJq7sg0SYEgYpzIfEWGxid4AHU=","H4bj6dFH7WBMceH7bvhFnPxAABu0/FzMJmFmmxVavro=","GC2Pke4qmiYhWzXzwO7PjsXMNgEkz2uQPnDKgxJpddw=","Bn0rYS119Pl0MS0Erg/vQ6NbYO8FTA9HUwLFX8EL2rA=","Dqs/JkF+a1PFMgct6S1Kp4zN8dqRZgpGGrsPn9e9zX8="],["GK9h9hhP+F8QTCvvF5s+xaXSQt++vo4nopGPYg6KW+g=","GVBXrxMZ4k3xuQXG4uspVwA8/DSwAcDlS53PLqXfa+k=","HZUuv/y+3SYDbFSh6KKCj+MgrfB6KG5/LCEbR/bD7oY=","A3C3V6xs3UZhDuwMItQ6VD1eBIJXe73BTnEJAwe19po=","IuB2o6puv+mWugaL9b/7F/pyQzjNZ/Z+olMwGVxigXI=","EmhR8+rcAYMoinUBU5EKQeB0s1RPBhClEnOtNpi+DLk=","A2H0CCt1puvSP5pucwnYxOdSAVnaI0Qe3WMaasFMIM0=","Gr6LrbLRI1O5u5gVIIapQht87hd2FzDiWsKE1rHtezc=","FafmSlpG9Zc+ToKiY++QXtZPGCsgQbqgChNZ5+nF7ac=","DhVOvVDbPChk2+HtcrCBYhCFG4bDU2ktF0TLM3K/py0=","JVKNXTHb13z6bnsYR/joTIHB7VuuKlHJ5APMdUxUu1U=","IfDGuJb7FCINgRRBYpx4+Ojid0YCYiDjMczriaDuiaM=","IK3esq/SDnUqOdLyHr3cJ3J3OwYpItyN07oGiDbbpGQ="],["EeOnwtX3Q3G+sYjG49ehSzMSivjuModUbRLXd3zvcMs=","LU01rNnyij5r/WAUcpSCk8Hk8ITHFN2xoHXy6unOIbM=","JjCbUstV9upakDCwE3j2XS5repYZkm2bGx4hy6Afp+E=","KqhMHvnoSKZPdIuA4nndz/hx6cTD4vr6r3kVmwtOQBg=","L+MbDfBPJ2pSW2GazEpbo+tY2MMhxiOQ/rqwXs28eY0=","J8G0Br0Z7RPVM1ULi2IRhrH9R/Zx5mBGgDF+ZjiwkeE=","DOvPMJdbNyZ67fUh7ivHU8NCTcS27fOYT7Aq4erUTa8=","KRwNpzHAFsDWxMdThwMKliv3ous14VqsAvrfUwJ4o9E=","EhbwVgfgMuSQOKwUWBAOiayFGaWjzuRUWwiFDYvxYOA=","Ga5llFodvtOWXy3jo5/y1Uqx3uDzM7iPtJ7bP8mseJk=","L5lq5iDQCj1OVe96bOC2gTiPG3/zh1tyWupuuQOdiyU=","LIJe5WHEq2oiMxF3mZyJgG+8NFGDh+gHwgw1lzm6nrY=","B1SUdDbDze0ppgyeiYI3whg6Sdt+cOfrc677S1xpMkY="],["LeXWp6JzQ90EIqxxuNQJtDzLC2cul4+P39IU9NeGZAQ=","Al6y7YTFIKuhZOM/A1O1ExiGwPvRjlVpVUFRLexWOgw=","ChJSXweBMiNx/XCwkozObi6qpnuJcNzfMZ3yXoAZpt4=","G79D3bWgsNKEWSOxzhKCkjWcuzE8WHb7tS9eax/LcDE=","I+jDYGrugY0q+oxEZdXsucRb3njdgZwPNaYgWTwfQuY=","FYiA9a25bdE5gSi5/zOfPYJ9pkY4kcyhKcASwGsWsyE=","I6GsBzUZRql0yIQekgkqT/xq78f6mI48H358h+FRKpA=","A0xGD/8ohi73pQmhdQom7R5ZYPy1jE9Ix9Jnx35Y3WY=","Ij2xjzHIXpjh3XtyRd3doP+OMZvX0aZ/28fu9W1meBg=","AJm5fIeM41yVfQG0PasH+AA+LDebQcphpuVqkgT7Frw=","LCsefHD+wvWMoBvvWsN8u5RxrnkUvwjffkfdjjvDzpM=","BGJfIljt8CYroGR8rkJqSG/IAdwLWdIOwPTQr4y9I84=","I5ymGm735QGBCqiatJltvqj71H/S96LJaoGOk6PDjIk="],["Iny0O5gYkk8qJYiWSgrX3fo99iKEtLOxAZmlAe2XBiI=","FsfFxhYe2jLGW7NHZVrKqAvMmL/AI/SrEvWyqJnzfj0=","J+N8aKAVMPCSzTfEom3s4nN4aNwsNRlDXh8suI8Htiw=","Gd0cbUUpgkitSZUx8zzgAlBUWNdheOyiYpjjmmL7lQE=","IV9VY0ZOLfao2qjDRHakZeTun6CtAfxDmbZJsuB9Fnk=","APNtFm6ZE5ub/BrDJwo9mMSvqBv5dDYHb1c4PaUENqU=","Ht18ferySeD9P1doqpLp2tZBGLSRvM4SNAxG8hCwfO0=","COF0Gpf2NI7W1o9Le8bsiy2/A/QmdpzHec7uS6G+sD8=","L0qoZB6kE1Ax9Nl6ei9nmoy8pWK6aqVOrn0y/30E29I=","IaCkPIjOJu/7+LmtZoBWtbA2LlAJ89gAM9tHMij7f8g=","Axs2nQEfIZ5Kj7Id+TUoeNk/+ANbzag0w9zEHDwt+F0=","AgpyCDV5BZy2WZUtPyoB7ZDSEAInW16hHyCcdjuqhFc=","GfEXcQSbW+gbQ8qB42EfQQikudwwzRIkQfdDGcOtzek="]]};_12.default=_default$4;Object.defineProperty(poseidon12$1,"__esModule",{value:!0});poseidon12$1.poseidon12=poseidon12;var _poseidon$4=_interopRequireDefault$4(poseidon_1),_unstringify$4=_interopRequireDefault$4(unstringify),_$9=_interopRequireDefault$4(_12);function _interopRequireDefault$4(he){return he&&he.__esModule?he:{default:he}}const c$a=(0,_unstringify$4.default)(_$9.default);function poseidon12(he){return(0,_poseidon$4.default)(he,c$a)}var poseidon13$1={},_13={};Object.defineProperty(_13,"__esModule",{value:!0});_13.default=void 0;var _default$3={C:["MEwprrbxhzhHh5V20w8fboo85BCCwVx2Mt+SDW21Fk0=","K3OA2LJbymSbP4u9CoauQXEJBpvicGb0b90cfIfUxAw=","BMdyAOVJSxy4o9M09prluvp+h3W6GSTlY+/lke/zAvc=","BsC4lm35MIDDrBV2SG5hqw0CdjeqxBuzXkgr+hDjT8U=","JMc/QlkDkE9A2/9ZAiXyUc4ZgKWlzi0HrkNuHQkHeNc=","I99vb0RIJzx0XOU9XXq7XSbEZySljWiETTw+5F6bkks=","HcGxrDiSgBiOk3VmBxuEv4GJuVXQV5tt5eqKUTa8Luk=","J/ccXKd0ziACi4FA8URHIEORfNSRnP9k2EinRb1WkYA=","IrLuU7MCui6Da5h4PhXrbenRWnLMfKo3TmG1HdDS4sc=","JU2FBl+HJx6G17QR1qzCgPntJXwJjJ/bBKLKTffH12Y=","KGIHk/N4v+iB4Ji9LsYr60aJnzelSr0FPPsLO7jV51Q=","LBnybQg2Y1sE84+jDuXGSPoOobIC6whGghrNPGmc8GE=","D57Yfpobp+58KL/XrDj/O6EISfsE0zIomLqf4BBPtEU=","DR3v9CJjt8rooSOhZBtyWAFUdhYauIHh3CDhZbPwRXk=","BbJ14HqeI/R3qfDiKUInKGUo3dptx0SE125qqnFNtaQ=","G8JVBSrtnc43dlvFqV3neSc6lvS/QBNUJYiwl4Pqf6A=","DsIobLqZmE04w9+4DMCK6/eaSvjsuY/8U+xKvveepug=","GwW+9x/DlvG+l8gsCC0vek2LMuzzDBmHVAkFDjrTWIY=","Fuk8fu0NwABpWNGCTQ3HQLXPuMmG//zxth0QDynraag=","GsSevADjdPxkfGWYHdk624mY1hKLkXpiNapWI+pGEoI=","Bye+u4RfbUdE093xLCqvbywqWOBFcf8Xrf2QXNV8YPM=","HVZZvk+p5xPT5CjCnTT5/6muDyrKNHRUOiDWJUsvAZk=","ExbkcLVPDc1TEbapMDR7/9uDOQHgJEipQZ8Sf4ZC/Xc=","H3GCkG4YS9iFlMolif+EnrLaowyvjL9SE+0/pHR+RYE=","ExlxTs3H5rqyt89X2LCICUoAPy1PiO2w0L2EQbTO8xg=","CIwQb9rrMjp2+UoJEq3RtmviFghKQuFL7FlySOAX2I4=","D7irW9xhaNGth2kiVkHQtetP+PtcYJxmHajug+oqBIg=","Ld7d5ASFjE8JfGyN22agA4FjXE8VUBTTASrR2veQNF4=","EtkrfHqIyYafefxh5OocHIgbsTIMC3eHxkN+IwtY7aY=","IcrVIcGr7EZL6Zp38MD3kqWq76EEu3wDa2yKQFBQqk0=","EQR/un3ipVPD7FUlF2gxRABwjmF8m9/zOklmPKLesxk=","KQRSn0/AKRRJw68Y/J9UcirSx1FiDY9uDh8qE4LKxac=","Eh/mLFP2hHWqLMvijViqdKKr67JlhCLNbxRcJmLMlqA=","DdseTqem82cFbu2s95O5Sl0336Ag5lXpBxEwbccULRk=","JotEh18Z/1ihXdhPS7ZOqLrMffwE0a2GGRD7mUKjce0=","CcF4KEJd5ek8nuuC0yX3cJNd6MJFhFkbdEgIMWWQMZs=","IwFE0pRfFHU3a95+u0N81zWNUBuclU9n4GwKbpCrPEQ=","BYUaiEfN+8gCiJreNESldyY9k3GLIDigWwW76JCpiJE=","KbWtLGKClUzjVqp8MQheuRtsxJ7GvxOUIsOfpU7/ALQ=","Jl+hg4ri9tWRuPM963jT18nKFAFBcP9lBhi2AUQ76RY=","HofLhliMab9Pnt7TPwPUl8FdYbDkjdBFlN8zbYeTojs=","JFlPEVBj+aBjzLGlgOjp8EJSbIzPbkvypqJzr+oWfwY=","HQUrDdVxXIiRlP4X6Ddjym97x5ogTExABzvIpRb5NMg=","Hnu2keZ0EKJFB92aXMMjwPhvl7hCvBPs512IyADnYEk=","K3VY0Iq4cNMLGGY++ccQ+XzkxJRU00xL9xS+iGW4DHY=","FP6iP9f63VPJ+vQ+HjDB5CZmjQCA5wY4n11E+NDNtEg=","DY+F/2t5fpoo9KumAZM3QS16d4w7fX/+BtTiCGRJGt0=","FdcssSqObTycgA+W/a1RzyRSd2jJ0TNMYICE1aByjMQ=","JfdeNhwmSVvZ5RRorqFo+fCXh05WLXJ/AwqM9djFhVo=","KGI6aIaGchzPztpsnXhoMuAmVIWbgVDiHPA2/MFUGSw=","ADHnB2ZKQyvmOZNMKy2qV1dQzEH4QEWdhabW19iru+0=","D9VV1VE7jGlF+Xu286XTsf8qwtgadhLxLu3v0iK+4aY=","Kh/hF1O3qNCXcDi+EnajVYV6sgy+RISwixUKRsjjktU=","IueXDaEAjbV3K8+6Geq0U4VTjiVF/CDZUKYPhA2XAqU=","FUH+yFCQsH2IVkAuoiThuy2Kip0RkrmhPeyBuPaWgrI=","F8N750YixgjnAwEJLtxp69GdF76aDUS8eJRKMJ8iHNU=","JgMsl7u7XJIOEghZKk9SRrEdTXjWOqGVzjhihb0NtNw=","LmLXPMis5bwS9eWqI2zLcwgw/aYtbdk1xqPEIP2cQOs=","LwJqgrFYcjhZeLSca2tIdlnk9cw5Tebm7kq6JqEE4ik=","JdKXYcweSbZhSsQpRE4ZwHC2okupDnrHJmcsfPw2MnA=","G6l7SGBeF1Tn4X0a9+5JbndQ++YWXKuhUpyJzGfyeRE=","J15a7SVGQgLxtxOFK0cwJ1sc6SFT0CUGPgoV+gd7UcA=","KzY+Rdo/83EyQwQJyACOxoWyLr/oQ4320+1KeHp2LmU=","EK2j2SL5lNiK/MQM2d35la4hGZYd9rHa6622ImL0Pyo=","CjntFkKG45sBKC1lGc0CIRHb0P+D7xVWJppjoBAIM0E=","HDfWCFeTowxH2SyvZ3wM4MrM0pgrz/GAeKRrEUjPYxA=","JVLK7oBGmdTWynW+9KWPdAj5fqMHtEilxA0xEphWImM=","ByUpkD9aVWyMUeFDyXhTVAqVa9O5UCsaQ/39u8ZqWyw=","GpYR3msYiUrZZ6RPEp9Ir4Lv8r0P5AsLvuY64HvIq3Y=","CgFMvt+TviqSS5qjJT6PgyhFqFYtRZrJMryDHgQlJM4=","CGQtkUclVyu/5+t/e0XZF7LR3r08RNNjbL1mF8Epsk0=","CfgTjPA/3WvREBScaNzk3tjUUgboAW/H085uK2b3Q6w=","GvquJgnOfRXHrkdQl2doeljdwhFTZxUdbzjS7jNzAW8=","Hic5KcJ8o/b+BPu0iPu8HZRUMfppIHEA28zb4mEPyYQ=","A0X+C4/RMLjjo7I3mss073P+7RQbgGwHRiGk4FHBSak=","F6OpintwpEWjrvMBY16OXosnfuoXcwYeucU2Tx92dzs=","CxJMmrTe9xnklhmuptN0uyvdhC1bi4TrVWZTNMFDkXA=","IKy3ppz87NYHM0Jq5adHLbm4huLxE2mqnw+ScEQMwc4=","E3rGiniJOqRXzjr3n4SlLtMd90B8X+tatLTZqrPUecg=","KCLl6CQ8IO3uOMsUK+Pn1+AF0nT8NGUi9THBzgsFYOQ=","GcU75rcMtceePkIJaLRUiz7lXc3g7SgHWUWyro8jMe4=","JwqRySXt5FwAi9vLFi2dUycXV3oB7pSOCpkT7NLvnSs=","Kco+aBHYA3owkpaj+tzXNx6Hq+IerLN8j0rHyY8dSKY=","L76DKHTmoESk5e4bY/19okkQ7WheHdEkRLgMlflZuRs=","KxC5Q7xCsTBq48DJYvrBR/FY2eKt/tB59Ki3y4NumY0=","BpJzU86X8aLHW1eqQtdCl0pg3LsTWG+ZmeUtQre8pDM=","CIGf7gHJt/jx2Yf8PyzHDeeFSs5t4HKLp6DnpdchkX8=","BVBKFngunJXRhwFm1uyFPc0oWdDUyvptMgcJBp4iE0A=","CmycPGnlWECJMSQIheTt+R5USCMKoCCllyHpTuGcSxA=","FjiiRbY1Rukx7nltOtf4/bH3NzFpgzqm3dTKDTSZaT0=","ErWrPUUHHYRTm+dyyfRoyM1u/vFRo/WytSuGxHyUgNo=","L50Ex6r4VBgLfJlDqGq3ZvHGH4Jlv/uEdyY7WZmaTuQ=","EXCaJCZX4Xcn8kKcZzbtG/bHVtu6iZqk6uXstshFVi0=","ApZo9fXEoyRrw6hvIhMvwM/GJWZvmeZA3qDh2nqbVnA=","K2E9SAT+q95H2nHybhPWFCjyeBuc4f3giJAt7PUV8yI=","JfOJLrV4YvAIdVfqDpOGfSvMAiD32ivAc8onbXUK2Do=","IQP3pSFPQOL/ZEdFg8zgkU0umk78Ai8Hzly9eR9UMnE=","FKhxEHKorrTjxyv3aFEg8jJbZPkG4sHuMfavrWyBUTg=","LYIAEQx0DdUb0i9CZ8q5eTTlrbhtrxwvBAXCeBvafr8=","BbKZ5AUTG7VjEHI5bFtXy4f1DQcPGWUzvD8FBsj/IYs=","JZXk4iP4Q90BtVDFUyz9xRkx/cNAoRytEBn94IQ87Ic=","G6krx48m3zFI2pIMe0CE8BXuFkZipauzyUrPNveKlX4=","CSyu/e1fgEkkzPHmNUPWHf1XAAehBSq7dkmDIzzGPks=","HA363j7D1FEZI4x1xwC4JqQi7gL0VDHsEQRJ8fdWdbc=","HaBerEZ06ZuVRodkYTaayiDiieZ9BSzOEPv0GLCgRCs=","BQhpKMvQ1JQDv0rW9MYmy9SMHZx6IpVzBvC93OnakZs=","HTL3Hk3Zk4WikpoCuSkSCFFztIJUjhvAbvs62W+jEXA=","GP6JRcCB8amTfiA1lXjL2xk0OtCsUENfJtyBk83q2/Y=","DCehRp18G7YMaSNYeoG/oFF1h6Ow0zVoJqRcOsiv1NQ=","GgvNsnS61U4cPsoeThTq7Tva+whGtP20HAy8bvpJAMc=","GMFaO/6A5Ig2AWZCiN9iFxr+rX3K7sD72Vmz58ao92g=","I68q3fzs2M9AO+6MTcqB+3yXj68UfJkPJg8RWy07yPU=","GG77NaayPUBu/GI34XXa4C3pxE5dwol9VjPP/1cck5s=","CrFx6VxgXG1TYf/THnb/jk64L/LaVtZZxmkC6dOSh50=","EiYibVVB5ghvt3WEN4fKU326WpaEuofsDeWSz9IOiLA=","JGx35tKFijSjyinTWXYRrfMopKIhH3TV/QTc7KmDDI4=","DXSVzfgHrD1hhMGN2ehYslD7s3wRop5ikcElQNXivaY=","IwhT7EftctH//4Or7wO1/3Z48uEEuSltjSlDAUDolwI=","FB2GCIxjFs4Nw6VglhpQ8Hact94hZokHfPZcYkXudqk=","H9T9pXHqXbUL+aN1t+g+4Y2+3DeRSwZkYBSlAJKoHiY=","BZfMFDKpc9g4lvq+mR58KlNwRfmorGEqx2aje8r5ydo=","FtyTI5t06riYI6r9kTl96npcL+oH4S5WKv4qlOfzPLo=","Fdc+7ubUgQKggYz+cKsPKt2S67fI2EeSKq7wIFQoBBQ=","InyDMOLXp96Qfuvp6C9yZMFt6X+yP0vA1WOnh0vL9Xg=","G5Uvp7DZ3I6fPFKpV0aPSSoqrUXLLUpQN6R0prMjGv4=","Lf4ZK73l2nXBdawyZYV7zpBap+zFha0g9Jl/Z6UELkQ=","GM4bWL0/K8VUt0bpDxiKZwX4Qr4p+FtqZyMJkJ/sIVY=","FG1fODsu+5li53OvpLCGwWSwqlMG5Td0XxVoCoX2obQ=","BRMAgq6ncgOrHigZ1HBPDp1yPQbEV5sbz/e55wzxyyY=","ASLSwcSFUK3myI00mNe6g5XUR3YxnxJkjBTKy62mzDA=","Ar4N/CqewoRKWFY/jwEVlE6aOaj7zPw9eYMPSklKQpw=","AjYrg+zVrIapCFM6h2yhc4yERCWCL9D14GRsll6UzZk=","JzQ6DKg7fL9M14/sfCv71kUoWfsPe1wU9iORqPu4E/c=","JfZuTDGq09Po+JQDAqdx3ncMhVy3/OP7FwFiRJlQBZw=","FygTWGEmHj8ZlbB4rwoPEjbrRX/GIBxazrjJP4che2M=","FTtNdWVMX+YE+i/Ja7tqDvEkDIKB+MC2QyvxpSn1Dro=","HvKU/nl1aPVSU8L5PEoyq2k3oTMrscQSuMwV50s7jvg=","Kl8wLEmoyP1uTc4eJlvG7A7vNMxGE2+cymZCc6w9jqo=","IyFaFBNjNgaoyPIrpkK8qo+1WffNMiywiq55ZzW9UnA=","Eynw1vqdgOU27RIIWNrm5RN2Ykx9quO6eXlaVSWmxIQ=","JmTpqY+vdOFBaqZFtkWJ3eyzvCyF+aiWiK99tw7GAoU=","MF2UD92lJfSeI1rm0l+dRHHjlue8OhM67s4eVu6qc4I=","EnGvb9AEuGdITeod1Dy7XVjXMdrG3o2/uzAmwXMx6po=","Ix/Z4RqmiOMxJzGmoCfswTMVFtANfjB4jGNSGqkyYlE=","Dhn8uGOCi6udFS4FBM4J+mH6o+CiPAJIDvb4ZmVdV14=","EwMGVBdrBq/LYRIDojaaRC6GOzwNHIi4nNTH/fT57wY=","H81guaUix0BXY7zJVGLXfAo2tOlSxGG7Luvx6EKFRVk=","G8HMTxIuyhe5UUUcdzRy8KP2pXwYUxnOHS3g0Zuh8ho=","AsAxhWPb+ZrmNrwBK/MQF1yrt2Y/Kmdkz8PWfRhqIfc=","HLsaKkkLYRdvkEW0sLYOwD8SsVswVVo5Mqo8H/6ms7c=","AGeW8Q6bpmnf+Ujob9Ri3FzZW6gHmwLCsrStHmL6N94=","B+ao/kpDl7pwkhXFqycvPFQUZcvY5DZT3OL1nN743uU=","KE4JPJhWV76+lr1nESDJKZW9vSyZHN1JCTCcw3IrXtM=","DSBx2t/Sac6odAzAKZMjy24aZL8SPf4a+YoXh6bKPAQ=","GUW29bnPlLldk0H7tri0t7RhuWOGwenPPHxOOy8INVA=","FXammEClDkflq08hqznVMZADhZTsWZcAQV4SxGkrRng=","HZ90hBlOkEOVjW7nyKVSwNJflYfmbNiZ0s8CkXlkFnU=","FQYAPzm75BLhoKTypX2ynimvKrYQBjgvah1Ou4w5Q3s=","IkX3ft+es+ItZHhTaYvoong/rPkrFLg5LnNopFnaYtU=","GJfnTG8b8xOQYOuASblTKP/06duSYOraHlU0bbvezjs=","IJ/4YIUnPmgM7ZV9Dk4WXHi9lnCiSWnoOuiw2xJjjDo=","BiLunSOwxhsFhFsjhT5A2I1zWTq4Uei+OzOMp86M9a8=","KuBlnp50mkfj4NJEhizPX9b9bhrwsoiUtOxylAd0vZs=","AsMXFOLGfARUVGU/G9+kfbA5KEOdROMhIyAj/00voPo=","HEqCeHS7SkVdeQzXqGZyY0A4uvsS07iVTPOj+qh/+uE=","E02n4ZJD7rCOD35o6rp2QemOw1+Kt38TTdEKityEma8=","FfZTaeURVe1CoNUMNHnXuIDP+H6BdlqXzorSi53mcl8=","EIHcrhD9f+wSozKKYGeMLXYBM4YM8w9eRaD/9bqV+xQ=","KCBrXNRM23vxd6Lj1grjheOrLHyO+dqps9rjX7uZJng=","Bdk1Uwar6noUlLSHXwb6n4H0+wuFUkqmGwOqBTuvQ6o=","CGmuhoModCM4OiMXzlj8+IQzu1RmddaXHKKSoPAKrzM=","CwfYVmrGHfnC+r6NQGLY/ka93RXQhzSk7t65HcmHOJE=","Al3VepvuWjDvEpHwrKddVfINEfjg8uaXBAE4MPJsIrU=","HJ4u7n15t54ZoB9hfzfrj9++BCDzxf7FhJH/E2tFny0=","GgU3Mc3fvy1Y1yO6XVD4dBJXVciywjaxGi+uPrFdFU0=","EJ3WfwbEkJQDlt9kEGNvZTXqfyuOubr447464doSs3Q=","G46Tmjz7dgVqR5PoWxtC/TgFmFbBpDSufskL4EB/gP8=","G7RUmHMZFwH8dDl0ZaxImsWt+ZBxD5rln8doXEifLjE=","DZcaMHZRU0F8tkgpjjkvT2He/KBqBbTkI7l+RcjOFek=","LFj3IxZC6G24LcNKEazg6Hwk+aG7jpzZJuBz90qWo+U=","F5fTfX7jXlDaxiq0NDTTwQPHRCsAiR3T+L8NrX1/RKQ=","FHsc8LRO+wjwO8SSSHe/Ue9fekzxXhrcVyU6M/AGxgc=","CXZnoDXjswRwKZWo5RohKBORP7lMjbiGxsT63VJht0Q=","AdZTrpbcV8G/7HzEJbMo5PSn4BdiG29SgYjS+8WshGA=","GznNnxEziDZMd/dVvx+kK3BocNYdvcQWg48mRZ9KJjA=","Jcve/YJknOUZaItOT4UzQcEeFOyoO3DGvSfv2oY1KTE=","BCKJ9RnFx+InKLdMqSr6jOiQztwHpwVH/bj7fkZ8hGY=","HPlm6U8dfGlhP+GHHycE0jnhgEF53H7RMB2tsOEO5yg=","KATSVbVxuas/VAEbaf78B3Lbd/Upzv4n6wrPHkNzURw=","KydLI7ZtnVYdBXvbetOKljQblTlDpLs2GsV/gWtEq5g=","FjcFe6fF37p43Y44ouOopBQd3C37QVmJI/ZrXviGy3E=","HlXN5YZL6l1g18HtNOYDbAB9dtkdCSnoHhkp9jBTIrY=","FpDplKoUiZ2T/yGrmP/K6Wktfj8AyiWGhCaMBrfIBjI=","J99DD4VAkv6pGgjrfkBXA4JWOxbHjBK46Dnn5+PXI/M=","Jiwnhlxsyykg16jX7xgRNs1fd4jK56ub4jx0mNI9ng8=","FNjU7GVQBCjrrESyZ7Mi5B1cvcq8J37Nw87ng4sId6E=","HSdmVYGVo64wMbv9MCQ5sIzIXWCLvjbm2Mmu6i6gtm0=","EcK+ivMTFpUV9KhV0NcegOthZ7uI01M7cPgY6wyUXMg=","IMlpL0o/rf0K49L3p46jAKRBdpbjIVA7C2rq665+RUk=","KM1OLnwfPsM0PkT2yxeGwl3/I97LeFMCgg0Nvu0zArw=","EfNN2XM709CCLHY13JdrLML2cH6vQXhWHdxdT1Y6J+Q=","AtbHkJZVgqBfjjq/0eBp5BSh312GpS2w+1fekgHZuWQ=","MFAl4cA6qhqbQxI/ufNTmcbtzzDf9zmDIKeL2pILG6k=","H5qRaRpKOqdlxzA/S3q4zKzU2DT1yOaAaHBT6se4YyM=","A/E04Bja2LgMy43XgMgI0/ux6yIiw2SgoxKQSCWdKdw=","LZzcOzyiRnwjfe5mbze34txY28WeC+R3JIlh79Z4KyA=","D0N9jzzE3Eh+iXGwOKETJLephMhcv2mNKCOyw7cfSFs=","EkE6pj3gOMwEJ7GsvSTuLObNGbNxScbKdhUE/B45kE8=","HkLMCytL9YAXPfrGO6YhDRleB4iARnza2HdJgKGGdW8=","CNYrTs41SZtg0b7KTyOpw9Ob1nmN2YGPlanwLnB1esU=","KSSYhCKzzxPumMUT9P4knDw/uUSAUoi1CGTCbC45iHU=","Cnl+kBb49SeGBX8bKjz1D+IPH82YNGqVjkvBxQ7otoU=","Bj2CIrryVNrRZn9r2yTIYOoXozEhdjkI6KsenD6kj6g=","GBXY6c3LnDt9GXWciYsHijPfo6OPPCLx/0VQNjYDy7Y=","EAVB4+qL9ZIetmlRlDtftEUwB2Mw0ZxszEnV/t74FYk=","E+1KD31aJsBSZlNfjuseymPjRv1+8g24jt0dGwWsH+w=","IX+0mmAdB6bnchIgdPe64Rb+IGExWWbuOeezy09R4ts=","HrkIDg97tvAbOwX5xgxi4L+naCdunlnurrY7vwb14Sc=","AhHQLp1FPehCxuJ0TVzmVXo/qmRny5I3VdVDq/0wIJQ=","DL1ffLYJx+Wtzbsl9vDLdNpiakJUr6QJudLBlhtN1LU=","E+xtBVAlj6kQV7DcBtjwCkfUDAWqEk3NESTFn04iY1o=","EljKHnfPnWeougLR9mW7QFs4hVOlzZ1sQwN9CCSsS9I=","KMWngkORtSnprbBi05g4Ju4ee7vc8gUKokBFstWs+O8=","Gc9zpUqx8uRCHPiKy6RHdt4XQaCzF8teHiAS31coe64=","MBFFXRHEoUM+ap9uqaxVlSfXoXoBkWhpcbeDajFwcxo=","F7c3OsXD8+INcbNJr/RJxz1B808dAIFA7VgpyyZVSOc=","IEqWNTU4/gjagHKz/ZfWSyReBk2byQHwwKGO+6rgmVw=","KFpymH0PDyKMxpTRDe+F0iujWOdEglUiGC2q+xT0wlg=","JHS7n5H29UAfq7zg8QL5dM3QYaXlengtWyOc9/iSWpY=","G0WEHqtSpRBaqkLPf22KzsXAbqiosO4T7WkUdwVM9aQ=","CjpLi8d9RYyOsmNS6StoXgBgKmjdSp8TysEOiM6XLOk=","LKtMNZ2JCh3sGIHSTf2/+XghgANzWhA5LL9gSdXNOCs=","DQ/QaU2md/magJ94XuHvBndRMiwoYTkpqPtySdPmeH0=","KeTgnZdbUCAcQKi7l1DTHzDKNgHhENF7shxf+GByelA=","EV7+ePiypy6KITwksfXG7+gPY0cEOeZ4r3IaDwQiE3A=","KbPM3xUEKFg/6qKEYc8f8aTkmqkvkMb3IO4vqJtYkDE=","LrdUmQ9ol1hn416ViUNkFLiKJUQL3AiGYj8aVo9RYHc=","CYkzW8/UECDKhWzPYa9QMh6x0hzgTRWB2wxiBD+iCbY=","IIqYV7hZw/YgFpBXUZBQcZBDstQsZp/9S2gaHlIVkVA=","Dn+EaRhPQanuxpkEWSIbERsBxdwPrQmpheMVduAABBA=","Jdr6e8a+Ch+f0hy9caZOVr+kb8fyeyp7E1kEoPdnLmw=","A9otwgSdB8TRhaFqKYAPeFvPYijMiR8c4wFW+zF1yho=","BHtf8ZqXNAL0Yh5R/zFGUTUFaH9yDi7AgLbkTEaIHTo=","KZwB1glaHWYNTgAaaCH4AOUO+hNmwlZW0UTOw7ApTGU=","FmLX+gB+ox6J5pLr9SJ5Ti0QbNhE+PDdXQtfWXWeRNY=","AP5M0GUJDf70DQdAOb0GIoySXHe87UslxuspheptpeY=","KC5J4xTDG20zf0F+naVKx7aG+mz8H66LWCczU75lhng=","DmzXUlN6kYC4b8u1uoVxgUx3gLLkhml7GKjcOhWdn78=","DMcM8oZvEjos3yy56KI4gTsBEt42T94FUtOAYjIL2l4=","GspRuUx0eYUNP2fQenEPVe14TUy7728EVCK4C0OOXQc=","JnChzAkL+x2xbFKMGtUUeLWNtmrbHru8v+afWuR8qEQ=","FEtWbTZn+vDq4+qcjA5L5VOnkXu2+MRZOANmETJ1WbI=","J7AmT/WU/s4izSbmCSVC7SiFGnXR8VMQpAkb2/7Tb80=","H2CKiOjS3Fu2zJG+L0dOrEw6ZZ4L3Tc/nG395Nagrdc=","Ei0FCdJQjGDooqaoP3cPJ9JKpSikBCfbBpCT/o54oGQ=","AV6jd39h3S+NSGCyAtP07drQ9qWsUIlwW+DtYBNf2Yg=","Dw8caeUrHkENSaRpOe7b1IEpgIkj758F3gJfmTdBpLU=","FtvZY/oZj8mjwjDKq0WAs00lxiI9YRNRyWV3AuUWhUU=","AdhWU76sYWCfCNSpiLhcWBpbV0wmmCHmaygVsxUhKFw=","Cf8J8MyaU8h4AoZSmVILhjn1m2pcrwbLgMyA/pYJUPM=","BlCuiHVLTtSNNSCqd3H0/57kAoC4XZ52fT5TztNq4NM=","CRdBsqQl1aVrL5FLz8p2meOFxzS7pgbTlCYbY2exAmM=","LvSBCLvEx7Z/HQDgReswkG7eADKpg45oBnWA8iwVo4Y=","Eb2oRqXlhov/9l6TMeC+x2SnLbpVSaxmF5pFJPvW46s=","K2s7yULaaEpYEkeNzuXyvAE4OVy70KBaxrBLbp3wgm4=","DhF/xYl6ptfOICWldMjk8WUf2V/x5jwy3x+tQfKDBHM=","DShcZFZbxQKs2up0eVoKZKRqFIuQTvmGp66zqebcVtI=","CYFBpXyca3LqoLzcmPIDNZE3+6G94nr6lBgddVgjxyM=","HRE8//LN8Sz4NTcBUh/5IOjRBIn0d9V1NrWcYAgSoCM=","E7+YOHlErtPiaNCtFbKBqCsoD9kkuNTrQ6BbI+Dzbr0=","HIQkmozs0TYaS2a20ZEWNa3mQPSYGs4s3Eu4WucZkXM=","GIj4aa3fKpEjC+oDk+yAt8+0pMvnoqBJ90QB50ef5Ko=","JXNB2GMiVddvKc17M9iQsMVLDpe4zWiXiGtuOJqNIwU=","Hfm7+0msyZxDIDQDyZkjpv2ci/f5qmy7kb0akapNfpI=","KiiM5Lj+0blMvTetyLb4FKMlT+sNC8aHITwQd2SIGdQ=","I9unyZbeazwifCOnB4UHn9QjKhfxnQMR1WE5XZk6S64=","GZIx7fIoeL+IDfMFQS/9ijzmpVWx5+gcfDxyqgKzWMw=","LMPZ0RB+el+mqpSXmUMWKUx9MYmNgOzDt4JXPYGTKHM=","GEfo5o1MGD8wlIiN6hUAemvGs12ved7Mnwzoi4jcPGU=","HqeR29mqo9KtVuWQqnNEUU5FaE6jIB3Ju6IAoEbDuJY=","Cjjp5HEt4xelM+PJKdbOdJMH6ISRN+Pr+ipNC/bAgM8=","At5CZHwCMveHDEEllrrOvaCL8n/hJOFvFYXPqdH2G9s=","IIx6f029TALRG7aECj/ZareP+WI80KOePfOszAP7Xcs=","Dd0i0seiJ5hwcYdhWpH5Ewpm0sDX16AV/cNaaN6444g=","KpCy1YamwEE2LPJmfRMf58QmB1ATwzkjsMYuP/pzYMs=","KYqy41Pfa6YoQhlIoClSsq/aaMRjv6NgUKfBQYoCZkM=","CNptLKYZgpZygJgTphzFMV8CRg2LF1fcAU+Ue3KeWAM=","Blycdhn3GM3tGnhPA3P//qEUFwMQsxBeJiju1iGiVhw=","Jc64v9oBEyNk8HBEwzr8TRR1Xt0b1lAlKMNnSXwuHbM=","AvrMeRc6oHBZNXnWSw81hB9lzaO0fErk5nUROp6rojE=","CS8VetEj5l2ZFASicEqRsjvOv94UKh4g2I4T6P3Fmd8=","Lkfqjhu3cpLAbsCQKcHRJFlJ/jneh/QQEzhBfdP3K/M=","Hjk2lBk5O4/6OJo0OSRJ2VOpktevsLo0r48hWfE5ZTY=","Cs5GrQ38wxYhGlB75OhxJ7IYChayRE+okXRZlhwDBZA=","LiX+fBnYSKx4CvkSqkKZzVmlXPZ5Yl//6cFNT7mU7t8=","AdjTHZf7Xr6Qwlqz+0M/ioK6n7tEQ6+Dx1SdK3aIwX4=","ApVhyAyVJ65IpfYF22HmmwiS5DdB8n44cV6+FFVHdsI=","GRBMyOOadxVqVa6suQBYpCsAHnQpjegfLRjMYXdg2wg=","HLLhOIYFvdZYOqE6bq6y/J7N4TN63g5W8+Lj4/geJfg=","Fkt8Doez43zQJ2UuL+84sIl2da00uqx6d3p4pZKGYPo=","A6LFxS80udYDrdtjI4NHwgTpux5l/tKy2M0JQozLBgE=","FDEHvvpIA7GgQmnQMCM/aNknZ2gyARx1Erv+KyLDV4U=","BgbOJqGjt9i8+t8A8w1P8N/L/rFDfqD7NfkYUQscN8g=","JM8TN7Q8gn6pdjPjh8eUjfkKPEKo9/J6HvpeB5A2+YI=","HCYCiz/3q3PdLMmd8Kw8quSp+BvkCRrH+uV2fkQ22oc=","Hg5NJD3ZgsYRY31RD0P/ModOpmgMiCRqBTEh+g4wKo8=","AEBPORgWVzBuHq6KzVECEjiXE2mGBrPIxlaybNTyu3M=","ETiqJOQryIOZPUxfbreFqMWct7sSABhrUZOvvhwq5Hg=","I7Em/N5QLfVpoDb51l5lGAXKBAsOAXNVxqqZDh9I6KY=","AudhI5o4mlMUk/ppncyz2GElUzpGCGiK0vFZJ43KyQg=","GOCHBZ3g6q2148XEuSec123D9tig0GBVixnDz97WptI=","JzZPJ3cPWLbbo9PxZm5QSqRehnswruWRRKU8soFSiWU=","D+AM4WeeOqX01re4Do4gIrwvgEXrQ6T4/p8EzU6u6U4=","Gv7elIn1q5RnHSDRq0mlrgrupPop047iEuCpyvr13gU=","L9sNfnVzHtqT/JMejY9Zdi4MvhW89uCj7h2g6JlUalA=","C3R5KtTlYk+Uza9SKNj3t2QedZol704w6ALjB2rQkAc=","BAeVCyRTyXRYC5ujFK69SdiQUqHY6ypgb620BS8tnd0=","KbjR7IiPJ921L442bLB6OCmoIb/VcpbfZntJaZ4klZM=","JdDCCpAGu6vU9RYPqeq8ZIx+QVUqB2K101DMFR1sQCA=","LzVAreLlfybONqzbu0GYzwoX/PBMbJJrwyg6EaZh31E=","FGlf+NogkE4H/vVFqxBP3w3Lr1tpo7g0hQSKAFflgxI=","FsfyhTGn3GdOjyQONddbCMZnOZWka6dGvHGPQpEv9po=","LiwmFva8AgG+kIlByDw43Xz3nEeAX/k71kDrxVLEygo=","BjvKLYkQChECG+w58RWQ7AhIggbgFiVwYcz7xhM1cGA=","D4xQq6OZMQ8wwgHXvmmQp7UGHVLh3sXftZ9p7JPXr58=","ELZDVCGi7bRNgEWlEzKwUPE34ms31CmNzDMhMiW/FFI=","DaIaCOX3OiMblOINxRPyaBuxWtEvM7rj1fcaTA7Ml/w=","I4+tH2lg1hmUfVCdl+/ds+LvPjDxiiZkLigoZKfdtCY=","DrjBfu0uMwMpQBtbpZZrus4RXMyJNCOybyJPuirxF58=","GX8SAKKef881N7GHVU3Ont0iXLvYAxEgxX/amiotbNc=","AH5Z75onMiD7ZwnsjRuDEGmzIWnKqY5/Mq/6cytVuCc=","CHmPQSzirsqlenN4KVVuXAW+qCLOgfhW+cwJXGumV0c=","LEP4rcwrOeJiwlLDMJ5f+9btc2vA7R5FlzqvUvfgBj8=","CMHQF7zx7dU+Td3AEPm5l596DQ3D/tNNu9iw78SdGWw=","Ie0vF5e1GDonGSV/8+sdO/qJbmEZkp396A+jQZdiciI=","KGiGtgZ9YnlHiR5ls2+NS3yBxccWrZX/ROkRsDQesMQ=","HArjiliwzT5d+WyOX65fmxm3rF3Lg57cQhOl+pbJX2A=","BUPyhrglTtw/UyO/bKRwq1Dq/0anXgluqaIVUIqk98w=","Jbza+01bbddz17PPy6QPjMjbdnW8VB0YfCFTf8LAo0A=","KKgQcYJutPFmFZZDBqp7Gt3QM25hWLMN7Cdz3E/npmI=","CyrpLZbRk35dG0LIMDiCVN0n5g1RL+jEF7hfyoybA6Y=","Ea6zQP/okIi5ik/ucgRYXX24Qj/dsbQQZLeFqtCih4o=","FBV+LasEII7uFtqmfzVb2wT3AUA208dYbL3MbBQwuC0=","FUA1eZJS9dM16xWva++eEtbzfjO0PUwJnonlGKQYfEI=","FF7kiFKBMwslUGh1ZpD4rzxS/+OgPG9TwQGoQafsr4M=","CMYLBAAG6sjwGTB6/esAqpMUu4MGuPpg+MFDTADSyos=","Hgqr4APoNJAJWKE7R5FKxM+PiVCcABx/j/76SZ8xgA8=","EqDRMvYVt4sHd6qRNuZ5uN0zQTcCf/5euygSFOu+SoM=","A6d0jFkat6kdjyWFngbnfGbMAIjyurBOkZUIkz6E2Ys=","KBWn1Cjxq/ot3XtnwukW48yLLWlQc59RRoToEV8O8Pw=","Kk5p1nORBS+OLZ8Jzwmw8lJhv8CwqiCLFTLi6yVzJTs=","KPQrtegGl1TXK5fywIuorOou8cIbOq1kLFywTctM7m0=","IPtywDLyzbPKrn/4SjiSCXBTrYwu4Jf85rJHRQ7MOYc=","E2nJWvOOxRTdpn7Z6m6w4Y4OETf3DoaVKON77Rh2hZ0=","HAIfJEnyXccYZz6pPmUgErFJWP2bAmjDD+95NCm3Pio=","CuOBXqJq9DwzVn5B+D4wXQF5oFn4miKOgk2xaExUlk4=","Bb0r4xVlhlAzR1sOVTvi9HwPexIW9zk2VGkXT2f4+YI=","I2jaKGal3RfRh1ZPvCpP/oaCr+cUCp2VcEbCvaGg9mk=","ITeEv/bvHUTQjLfDNgJmakACrq5JHdWBlrC8nXMeO/o=","HcgkvjNioYTujtl0iTM60sXsisgPwpyxo/6Tck61mF0=","JVsqHCAqKFElCrnR9BQn6AMbY3ruKf9qQdLxbiNeXS0=","DHr2YT4ewuAGeA/vdLN6EDnf4px29jdMgRypI5YvHeI=","AVU2hh2HR0KQTLw1ambzAzpDMG5nwzebPDl7jXOXlxM=","JUnHv61FyxkxCCjMvTtbgDJYk/P1N79pALN9lswQJis=","F4U+aivpK3UhSWBek4xZ7VuYpRteKY2/Cj9C54XsYRw=","IvuRh+gm+8NAVhVbZCQdGVoCHBmbzpYUDEWgZrdV7QQ=","DgHbsC0E3tmSFRHuC0HUIqR98az6hczoQ0GzoaQVFz4=","E+5674c/iistdhLNLOuIaU2dra03kX6NMjy/f/hdvxM=","BnKEBaHZbn6RIQR8bp5PqRllzVabilXJisqox5kFhuA=","G41MHZDxORmd+NoE9tCYs46PCP8IFcfFDscPDyIda4Y=","G/UPl6KQ9T3Zk4e8nD/9/i+Hi7D/ex5HMdw4+IBtRps=","BwhWTMbDmd4OO5bcwG74d/g5Ipqq6hUmUnuKu36KHHI=","Bhz0wiYK/iRyCT4rGNW3pj4COg3SMy/BHLnHeSU2nhQ=","DBAS3S9BaKTubI21x7UcjziTTp7INdD9ErrBr9I7/6k=","AQ0seycvax0CFgvXip+/VW/KbNIce8huI6vXSXeGrSA=","GafexoFEDalbGGZ2C7ikihe0kfcaYb1Iy37NnwzyosM=","L+o32vfHiFWHgqLUY2vIsSoCHWgGVeFtRBlOiKKEbh0=","CTGBMCtE37wGT+t+9HnReIxbnG528AJHvMH08o2HNk4=","DVYvfcyLGle0fnMWwoMkcER9RrGgXRX7h9NVDVLjELQ=","Ax12gCW2UTnepXyCNCWfqv4ooaSt1fTeCf71sMU6gAo=","DIwlLsEEbyiOxjuiPcrGi5FHlSge4t/OXDEor8Z5k5E=","JJkjrj2tJkcPBxxW2T6opMRdnsvDNcGDVeDIlhqPN7U=","GP7dr8mWEezgA64G1+08p9aafM1a3ON3ue3a5d8gpno=","AdZK/f3pm+hNN/rrN0CrSETV2xeYNG4+Ig6FQk5OAxg=","D7jebKQz5YbHteHLCjgHaea87PeK5NnhwJh5/Z4oJHs=","DVsXyURwUsiYovS7Ie2CfrnTbqw05Ju74YML2pNfA4s=","Dyt9Uex+pld7LnM/A1Je8ej+xr1PJcH1eff2VbqTJ9M=","KyPVvjkZmXZJPGRzKrZVWJ4FUyp5pRl9JOBGwoHA3R4=","GR62oz8+gPvSJ/vcQ2+4seOqN7A2F6fIdYeiywaPsqI=","C9GbhHkcdG/VuBD2jxDOH1FOzgCg53SVN8EIRP/KEeo=","JakaJxSnkGD3eyUD8NMHD7270YfTTWCXrig7y/TWXAs=","LlB6/58Agg4hdS51aQxhm4oDseJpnse8C9VQ+sn2MTs=","CwsFHPlSbEAZYS3Q/Sr+d0qLHoKNsuQvra7W0m1R6hc=","FWtMwEZrlT+fOJ7/mhx+Jh6QKsA0vZ0oVVnpxY61Ep8=","AviIfcfBbBEUdRMcQJ8izasUQO6mhPt2FI+sfzOupOk=","Hzp8Lka9T8F4bdlJ3tLi0z7l+9UxMPhyNSMCCYGDRrM=","EQJUbxxl+zhDEVIXRhNgjf0XVkrq4XZPFXD3K79HmVA=","AMsrZ8H0ruv1TpJ++QP8aqDmrPDUsUJwQOmBoQLRX4Q=","FveSTCmmHReQ0j2lT6TcqvHiZORtaILIXU+9hvK5fC8=","Gol35/n4gzIBBLzKuntpINT7Kz4V1RNBhMjAb/qcu1w=","ADjd6TZmoG/231GFekAhi2w082jnvMUtRQS4Wp7qmZQ=","Ca+LfsdPlnQPjtqfaepywI9eIxHnjAYzv/eIdmRtbsE=","DwbnZD+m/QsBaQS7EjSFXa4GBEcqofnnsSsO9ZR4D1o=","EP+w8NZZsXyrWLLnSRISpzTUW0Hdq4ib62VRjMKyo6M=","CDk+BYG++dsnK1US09asFiiabVGn6P7o8MqFS355aMk=","DNkZ8R45QK/Q/jt9aH7XEXtAEA+Jpguh/Hz3Q5Ys+X0=","F2zS1d1QOa/k+cmvhPGSDefIPx1mOj3M76rDwKzvpG0=","HM8gt53ceNxjLkHBHlN+WZtBjUy5q4inQQGiemaM1Go=","H4y2HtOAYUEcdQrLTDE9L9Fn+63FiKFP5qMNrGcZoSo=","LeN0TvLXEU/Wu1j7A9CWm76S+/TbSbY2oqSHZBg7Z5s=","FS+MR+hjQ9l4AyTDewhEaBsabFt23HqjpX6VftwKr94=","CZ5jOl9V/LgONJTCDmxgf/Ec35L0Ws1hNAEe+W4j1OA=","GPiMfdXcUH9jJkYQ1mi42jsccENYM2cYvGjqItX3McM=","KeObQsMsZC7zYQBFEhjaezPXy+e8WIJWGjpMLzC5DC8=","DavmeBJR3wIwpwDvv98lsHdrW1XigWvpthTDQz6ibFs=","CaH7SMdXXLIV6YGvr2+k4PBZSfr69+w/Hrwaay4NYf0=","CVStDQtrnGY7GTa0MBGUqcvmd/mjjtC1RBIjNLxQnxI=","INNAvaJxvuKfCT8qXi8ldYD313Ov4/1gBvtdnJRh0zc=","BOF1qaVoyaNHMib79n88jb33GJGDP+tRbtjx3JUtFD0=","Fu/FPqDJYOa7tnpJMLdxSlBNus6nhQMD1mKlYYlojJw=","FjZCs235ybmdalNQIiE5QG/1WMSGRFpXqMIABlo/hfM=","FohfLWfdLqprbm5KHLd4/ls40knR1mgVbAM+NvjzW84=","IVTW8krNDNoRMm4nnun56E3bTKS8Ee/XE2rF1UVzqTM=","Fiz5jAggX7X0oOnLdsZURbMAgAAh2x7zsteRn5wgL6A=","Cm+2fCwPMyDiK0EktP63bOEzD4XauJxEd6zXghT0crQ=","JgIc90oCsZLwxO53k45PRSmF8CHEabboT33z29hlNdQ=","LIuXBMa0F2nJBZI49R+zgnqfsUa6Qk4xirNZNYuuDXc=","KPtshDt+iSWcE+UViYBMpAoQ9bl/xBhUSbGmGmMhUY0=","HiNMF0BYdhVOGvccLOQDMHgJlwXPy3GIZrNH2A3tCYs=","IoNuNxYu/Ih4mtSlYV+OMuFqBfsneABkkKL6+zdDp7U=","KKcNKv9nnfckbbpfxdjkAccmESnooZZcXF7Vfy7lp6Q=","IKWkFsQQH7HMrLTxAeyTwIuK2fS8wM00xRjWvBNtTWI=","CEBXo6OdyS2h89oaG+4pZ580MJYofRBE3uL+KcyIsGg=","Dt9E2inuQYbD663RFI4QEbUIqpSlRJFfl0b3XFffd34=","H3XzyzJaU3sRwWACySf/XYx1GJxjK/5meTJS0kIiDUs=","AgrLaPAVvWiXed5qbHAYnkD5KaxIQ9HfHXjmzyX2dT8=","FWwGjzLg18qqMOhuqXP37MS8LVMEmXDJVrCu2jr4iNc=","DrXGbIYwocOxtnoofcMuuHTXuJRPfi5LbV+BupqGNR4=","CGQyymwQPL52RJ/yes3Axy71U1s99etyjh1Mqs04Z7M=","JZGhKhuy6FUm8rARCw/alwM3v/PEKw0OCSH88S4T6R4=","BN3I4VIULFfHZrUMTIuu6raBNGfBy9Q65XyVsPS3TLI=","Fr7zANh8ZYKVTwsuX7dLsEt4UrLQmvU327h/TAN9EU8=","IrtArJUSftBdounDfxTtqSWGtQSF77YbtX57BYpcxd0=","IVKiXjKGFuzGP59iW+StTuN6KW5aWEkm8cHmqZ0zX6c=","G8XUG60XtE/FqmlQqmQ+3gHTc7Cu3HA8JqJ9+mM30Ew=","GZk+I1L+kH7O+L0z5kLVSfl4RUXortUSr37qClcD6k8=","Co4Amrgp+tNOy5hmC6BV7UbZ4ZpUV/rQ5XE0bYMgcnY=","Dlq6o7IOvt3b3hYwJ1FK0i6otkUtHg/f5dbJLKGLzeA=","Lew8FzEnRpiPeDsU+S/ZAPs76hN7naJB4taFjce2keQ=","GgW3gYDzv0WZT3hEu7WfAlON06BqH0YrOoWG1FJz/84=","FtIrh5M0RIeFQFtudOgj/SPOguaNsrOSv748p0DBQbU=","CJB3Gs7TmYRezFuc7GSm/JJfKOOeSOoMtHPyrTi2cPA=","JTD0AOc07YsWW1kNsWWAYMtFF4/Eo7apa99iQ3xCFaE=","FeApDX7MVbJ19iOmNSHTl5d3RCoU8YkU0fqDYbuuxmo=","IEf7eNSGZblsSIXlVh/YnGykQhj0qtSt8gLzKj40Nf4=","FQUHpILJsC6ciISzOxVPTYViKGVee2TQRw7rkvBwUXs=","JgmNuFK/2wczwHcn7pRZi1t1+WFw8s6kG1EIjU/OuLs=","GWk5T7SmV4TDyksf2dJBZI5qpYv0Xa21hIubVa60ndE=","LM1boETgmQLlQLxYr5mIYRlbjRuWvelvBZziFYuPTSc=","DiQaHojBZ2ss0rSP9UpHPTtejJXaOcJOhDdedPdkDrk=","DWT1W4SgpSSddFLLvNJle8LO3omTgBae82rPc8b7Qqo=","J2z5gbPISFp/boqFoMN7/pSF6v/UZ5aCnNFw3x0l9d4=","Elq3BaDzWmyecON8+Cy/0bdKR85N2MY2Ug71J8/UmW0=","Lt8ryxgrbBZdd5RqIZpUKvyTg+mXYnGxnlhc26O0wDQ=","AwRFk+URXIv0tCvMc3TtofM2sdAM8w0Mbg2LigLnCxc=","LJKI0HuGR0y/JNsnt0Qh3UE7kIcM/AE/AOzA2p2IAIY=","CAlt232sXKvdAnlOBlPe94e9y76nNmGRWyCyM7E7STg=","LKDGXt3qZDxs3Sthd1L3HFs2MUr7VuLXczxU7X392MY=","AHIO8Rt4aN5hclQZZVYJUeMPnqyvldoYPnk6xEBceu4=","FXdRaCEa4slQXN085hiHgtAxZIz4EtnrorJM7KNid8A=","Db1zWFBUeeyj/nzns8dWFQGJltAJks1DvSc2vY7g+ms=","FRphQ6C9l2MpKmrq98CZKrZd2rXTXy5xMof71nK59uk=","EZgwp/HhblOf2XYC3cln5BGdmkjW6EKBrQ5yE5wKVOU=","Fm1JVfbHQi9T51AIRGK7gs5WUWHHinH2jAar/IDF9Xg=","K/f3eRrYSObIgEETy3igptxfGpRzQQBt2/6E2/luy8M=","CbJVDalVwnRus6ABTBFuZ7BhQCByrPLN3chK922iHMU=","A64k5Y+Co+l/rIs5DGRDRyIyWzOMbeFqsH6oPacRW4k=","IuqY2ydQLkFCgkozPZTil+ATR1fzFtutI3HMLwrRjSE=","LUICC48CYX2a/QaT3YzQkADAKpSqoUs12OzYCO38FZY=","DZSMAyjWrens/xORzJJtpzEbtLMRzYk6n+kXZAsm58E=","HqHCyMKCSAm95j3MYvawahSf0rm9raY1pMNe3iannoI=","LpCIcnem5ujZY3mXmMmZO0Hh1lhFwXhAvBZpw0MsZLA=","DIUKhml9mmCdJvAqmeEWwWTz2DldO9aZ+DIfdigHcWU=","FtiQmducMtkOZ6dDCLhciGfRzfC6PJfHo8BQMi+RIyk=","EiuLt0obiyKcSRrTFjLajguQxm9Svhz/uh9QvXQBSK8=","LLuy2mKpUlKD/aX8V4Lk4RwPTvVZxxV7g8WZ+lHBG9Y=","FkTC0K85DHg1v5of7AGuCHvd8aIaPZiKdcnF2mAGrNg=","FHzSuuLptxeWPKYjzy8rf8uVZy0FbB1z0q83LY3NbPM=","C6pNDOYzHZK5i+ucKPavr6C5wsosGUufcKbTtijj6iU=","BG+aSq+2VPSmuRA9IIFOSFsKAIGfIA+LL8SETu65uHE=","Lm5IKBNJS3ei0VP4zprIT2FIceLW1kEKfp6aeGIQ6dw=","IZrv4FML8IMziGXVnkJldZbKaM4SBn+8hFxLkGrm2PA=","K5PutfXe+qLNzxZckdxLLGefCoJ14STZpF5O9JunhBk=","L1JwrHWB8hhv87zFjG/L5Tw6iRKl4rUdBzsOPipeBIk=","EM2/X5az/3GW+KbKoOh0VJMnf6ZZvMRI795ytx6DI8M=","L9OJC4JWywYAntwcphTluJiWQUGQxKyRLd0vsKVFR+0=","DgFYp3a65s/sWGVEJqjgh00qC1FYAIhoJijYW49ijtk=","EdA551cwlG4bQ/9rGjbKCMxo78FjpEr7u9GBrqHj92A=","Bx5MSPxGJXXGdGO+TeTGfBeOaQ99o6AlVfEk9yLyjAk=","Ih0RqY7rvyruU26jLQKsGNU5rVTukXLkaiMqAQAXsqI=","ALpOT2nDSWNoonfKNvay2OdAKVhDIZ6Qz3y6JRhzV/E=","MAxMZITeA8s1/4WLsZn3qEpBTw9yjehHQqiHc2QtCqU=","HFCNMUzOeMJdN8KZ7bqzDtdSThkCszW7TJOG9ZbvP3I=","I4PqpdtPetdBijhFlSOyt5Wk8VFQW9eWkWxeBcC3tyE=","CVAHybrOlDmU/Qqfnyvwn45XaJMlauqGlp0b0hDyJJo=","Lr6kyUcMWXllXDEXJN9qDkUc24TLLvsFgwN0tP7pmnE=","JLfnP2L5fBPuNwVS8Pvm7wtabmR/QtlfPGbjHgsOAiY=","CANZn4A16miQYzdsGrms/2IgP14MG6Fey478MPwcvbo=","KrTAqekRXMEwNTBzO+qDZU+z2KitStu8obN60h+NmzU=","EPELDVt6IZGPhCY81krcEOVPh2etoKf7WdcZHDHWj0w=","I47jLlym8pEQR+B5f0/SVx3NzXdagb+UV4ff+Dwfy2o=","HO1q1bpGbz793rdJx9CT1aWiQ0jJvttRPeYEdifKLSk=","KEKVVeNOe505sPm41osJyJy8C9Yd0wGqlR2kK3ercvI=","GzpOPbTdZ6XfgwNbpuVa/3H1F9fmaSI4CR/9HaiaFlU=","E8wggrxgRVHvT9AagaUiYfeXnb6g64Qpby9kFtV9Rg0=","JjuePNjcWkQTzo6MVzqBFt5K+WQr2qo1rDQqyHBc5f4=","GrOVIay9yIqrrVgvoiLWrfVjPLFvqFPm9O4EFN2BQ84=","D8EzAQJwICtVCgMi5WmpZToh8DSoswWmGBnCapy1OLk=","KRh10Ae1zdQVrLx2xpthIshqvlHBjuowE2v2ZXFYghY=","Li+TKTRtkgqYOG8sCjZ3QOAyRoaW/NWsbizGYi7YHWs=","Dwk7QoxiRFeM0HDKFuabNrC44qWF2r5K+Jnvp8X3qzQ=","CFvBO2mCOTELBVAc1Zp46dHzqtFhVBvUMIDZ/IZ9gcY=","E2IiqR8clIfz/zILnjuqUu8jJ4lfQUxNSyuMy/74LQ4=","LpNB5arE2jmzNj3uk68EgiRLR2ed5O7LWlRlXhGEEwU=","KJiLuYo01RlThERdds++mnzal5aT0lyvaBlzmIjP2ns=","E7TgMX4/nMLz9J99wUyXE3JRjysFPeNXYiJe0mXNWzY=","Ges1xwIeFOlGIl+seq4JSBVI0Oq/iTBKP2LOkVdop+k=","HTfR4ewNfxGb0zpRFuGbB8y0Kmv3sSm/KqHcrwaQlP4=","FlKhEks6b8ICnkPcJN4KLjBpaLEgknh+PVeO0dhR2xc=","LYLj1iJY2xoDXmCuz5DPw1wqaKvM7oRtbzDce+ExNsc=","Fxe/isYUarFO0y3Ho0D4vAFlve7lUiLU/A0bm46HMT8=","L+qMonUbFlAF/FeZy5ySjT9XGf03esPVq5iM/n/NC5Y=","ExIgICYWOFM84dsYGOru7To+VGGSXfr00a0lPQDA7ZY=","COY7lpFvyIqrMxQPbtR3QkyvG3kqzX6kPDKEgIizW2E=","H6rQM294pRjiIJ1+hYI75T6tUG37DrSRBmQSH02219c=","CeY/LH+hj9tvocJjrV9ssMOedXQalL+fMsWYQ0c2kXI=","DVgSvNOxMFHypYEWCMswlo3k+cNt18T204/Kqa694fs=","HO9IsdYSJriYgUgVnoJvlC6TlyzjYFH1XQ3AGfnr0QY=","IT0/SoAXhNQ5CbVHnNFZy9Youviwdc2yy+9VbcEgYeE=","E3eISlFUTaeKILyifAM9ZmwFF59vDDtXoUSk18FU/oo=","LCAoIGxqWOprP7i9cyk10hBDn2z+toO3+gtfLZBB+Gw=","KRwpyCZRTSgH/mVrwurbCl8mRBGxOBsNhe4hXkgGpP0=","LH8mfTkGnkkCWXyeM0i4SpUPkdx+7pGoBheF3gwjFyM=","G9//9HWXM4frjNvcua3HuhyfYwAKMz1rWnfFudDvzm0=","EIUE3mwyPXvWxqVLPHssvmfi+GOkg6/PjOxNZoSeKCI=","FDgwdYcC2ih5GRB7eW8+LEIIU3cEs1XvbX1K87FlGcY=","IMug9ETFS31EbpVGA0dgu8sh6U9k1rTJqrQTVto5/jQ=","DQXxEB2omMqANCNMV8G42QqEBoz0JC06TcPsanG1apE=","DVjJnnOW82eRuSHva2Wwb4fDkbZud0v0DaQq95No544=","Lw01uRj7rlIhJnTSwIasNf/vKJ07/Xg+dhg48RmGYhQ=","LPSGgnC6PCiPTeKemF0BF++PIDIjW1A5y/rPr5W59u8=","AUze1VZJJZuSrBKL1uGxvbcRUmRMTYGMHZo6DjpG6yo=","Dxb0lmMzQdFwnhRN4phG9/saQOQbs5CfQeeRt0l5XUk=","AgdmCCcYBBN+DJ9owbCutXHk002jlU4H5gZw4xz01pE=","IUFf1HJ4noDLwV+8Sl4/yWVn1VJFMEnzuooKQVjYspM=","KNgMnWl5VkVouHdFQJ/Qwz447+BWUQh0cnys9l5/QGg=","B/wyiCp0hMA83ToOJKv+dYfvAsHMUrEcVa47Ym+LBwE=","LY3S76mGi6Va3nlyJvp0q4jc0M1r2UrmhfANQjg+X40=","GphtwKnBJQN/o7MLoLtJlZ0hzrIKxdM2sJWXxCJTeuA=","IfOSGD7tNuARuFExGvwsqsb+dszh62ykK5gTcCvwFcM=","FNVvHOSnczPmHhDUSWRHS+x0NJ0iwgm9TB48Cj31Aio=","IybtZTAe8cJP606WA4YMqs2cb4BoMwPK6wrX8myrCXA=","Kj2fyrTFCLByXp+4Ug7Qa20ptSLl6K9ORia6KB7oVxg=","Kc3P3kD2/UuEuONni1HtVGvoo6DQAlv4kjV6miN1vP4=","Hvgr2tCbn8T32EsdNV8JMbCWyj0Nt87I4z2v8rQJOoY=","C8/iiutzWmZKNgEgsJF2hjN0w4fWwP/+pYcLwOqHfNI=","B/Pj67DX+2C9V2rZ58skGqMQzKDV1FAUlkGX91lL/yo=","KsVsI607hmf7BUaTFwIwNcuHumSsBm+gNcc4N6yN8e8=","Hi6ffjcC+oL+3bFgNrlEQu8WEcoaLxyi9HM28W24D58=","JF1V6u2DHL6v5FrYzrT8vb/J0O+O5v8D4xBo0IMjmN4=","HqKV3s/anApADfFEg6s9rlv0OYftkmoC3y587yu2TqQ=","Bbv1aCSfPMrkyY4lSdveY5iCkns55PObt9BfN/avDQ4=","HBKRqrmJPkbSdivuuxv7l0ZdAPMNps8z6GB4WHTK19k=","F2NNHM1R+UMxUmNMNZdz/Pyfk/gPvmW6pZY3cDZG9+o=","FPyPcjT2kSxA+Cob286T+hr40k/Per6wwtT1qY7XHCQ=","J+/f9a1meNX8W9HacUOwdlmLkNt3dyqOnPXFKV4K97I=","BGZExOcCJYDoPu4zDHIoRpt+yK/RVKR1ZPDMq5uomHI=","LADUV/cuNFLIbBrjZF5kXQ/uLTT11QKtGzq00O471DE=","A9JNfV9mjgx2MwswCz63d2etmCqHj2Q8qTWgB0KiGuU=","A96UHfgH+xy94PiLnsibZMESUu3dzlEj0kQ/2r3+xTQ=","E5aO51pmbvvt4tzcHN2aXhVUPL/dPQRUhuyrrTYt+C4=","KknxHzYDDrKNuxwSPAC8EkkaRhEm7fI3HUeH2/q2kNk=","D6aAwIZhzgZxhH61grXrswXGm2FmotPTLa3TW3PIf/8=","BtWguk9jhAt9vu4XB3LbwGDE59p4WA9/At/428q+Kt8=","H2JIE/9OTqVRsYp1T7CoUr5q3pGAfobKbe8jjMDyPyA=","EEmI69ZXeDmisHoDerTSDisA2utkUeIephAosrasspY=","BOcdy3r6LoMkh6x/E7ee7ETXeBiX6QdbkZjdqYTX9+s=","I29rAR17lklvp7qrTF2+dDJ2vJdMDS0XqB/weaSD/yA=","FYdmPitddA6u9Z42KS2FaGtYVAgs+QPk3kvrU0DgFdU=","EdRYlbYjm6C/fWjtd5BQKq2OE8i0XTE+Mj4nQy4svPw=","JTx5Np+yuxY62Ix1HoHQ7ZA+D+bxXhLA/PqaBu7BJHY=","GJE0WLWdN9rNDcFoEaNPhEtyU+i/TX2+zr+XsFScKwE=","CNW8oZaozrHdsWWSev/ODj5X5CsioTA5K8UiFHSSl9c=","DfHrAitE88jzWKdCQCFAIDPrVtQ5uvygkgGkY3Eva7M=","HsmaSj26tYFI+cwwJNoof0CD1wqRlmpcdrRrCie9ZRw=","HO88YZxscAvSlZNwYzlVAc9OIIGCIJ9nGNV9ozoj5ms=","KABkeKIRfdNQBxHPhD7he5cCaIRoGlvtBiHBV/eKE7I=","H42xcYTpqjnlrAMG5HFAioMVQ0Csb5xYXtkQ0NiXrWE=","C03XJ94GoKWUaWG29fwLzvAmP34uWCndtuSQCMvBsWs=","IXIJ+omW2GDaofnCEOyiWA6z8c7Fqru1a9kBs9n8hxs=","D2i1O7uLtHmNGRYI+VQoScGGl910AtsLXzAxfSF4vv4=","Du82tqIF+76L5oFaGYPmzRRuQileykbbsxb5dr8FluY=","DqifVJ6Jd7LKmb5S6f71cTpz5aBmY5GMg9IrzbAX8Vo=","K7Xxgn4USF2iGDwsANYk3bwB3v+8MjWHjwegSke+0b0=","L2MHEahLmkcDVrPPwuoLngm+Ft/Jp1CGtLWXi2no3k4=","LRpk4EEdZmwO+fBrPrHwxEKRPKYhpUMHlhiW9h/nRkY=","FeuF3DgKDLgfFRHcz6/4pQee0xAJB3cu8Hb2S7T7H4w=","KTXetEEoc5kbYiCu3D6SPAXrh9j92v3L4dpq5HYHWu0=","ISpYpfKsVTCiUVQ0Q3U4iFIYUirEEkls5fhan++i0HQ=","DcuHP+K/j/1k+nYAECNXKZe94JN5k7yYIpKEduc1Vh4=","DjkwjBKBiZ1xUAktHxFuQbmBIyydCWER2CdZLjLF6lw=","ClZ50JQYRmpzAOigqWT007uSKViIUUe13ssUOLEBz4Q=","A4qPMmzIpR3UEJL0DqOqxK1yKodEEB9AaBOcXZEV6+I=","HcD7ORwZyXkzfxmDsH2QrSJRedHGv0/YVgH87xwYVK4=","H/6w/e65xyDnvlhCoBlSdomzuPXj1jo94lBalkIjopI=","LNZRG759ydKozAUCJbc9affCB1piP9b/S9Akwqaa0mg=","IdRwZZCxhU2WK+xM+laVGuhEHL6x5BdfXTthuNt59oo=","EtpZUoq5KunwJo6xvaR1lJIOT1pFJieEeN2aAQe9/68=","B67Z4W7dQarOk8IHi6EzNFdnZpfOuNd7WDMSGupj8Go=","E+nFJ2HQ/TVnePLJypT2rBxxQyRDXgEF1BnhEtP0LH4=","KIyzwuRdNTIz0mgDZtSRPBJefyzGu/1lBpU42J9NxHc=","AWr3EgdERcivdXjNaObjLg+IzZ6Zs/RsY7hMg5JGju0=","HB2bEFhKRGRjuQXXGUx4Bma5qgCngezxADpqDIFoX30=","CnyHb4OrTv0NBCSTaB6ZOmZCDyOw3GM3/Y4f8L7e730=","G7hDXNLm/Jx2hEaxOlP97O4Fb3ntjQ0dNuOnhM288lU=","LZC+GuGCw/RAuF/W2mniHenrKSnlS3USIW3c4Ipwlb4=","DJ3joNvS0UJw+KFsSGSVrlrS1EwDIvDZkKxKTgJL9XU=","Hjl8GCEW1OAKU1gaoQjlv4gPj+BzbpgSSsqShzhAOZ4=","IKYR1Ps5LJTYVoRZDqCqo45IANAnZQ+CO92g6Ag7ogI=","HqG4gql9cymRgFrkaTUjPutCT5Nj+eX+hk0wI3SE6/Q=","E/Z+5uj/xv8mZIvG4xBrg0ozVO2YnTUfTwjyeWkQ0bk=","A11uEf1xRYyqHAp/doKOM2CtKvLoinqo5eX7KmEQpW0=","ElS+tHOKXo5Q9F/HrXPFEhZeDCDAx2SxdH3STaS1GG8=","HgsjH1lZWJd911ceDmmI3azBSsH76YrHhPhoShAfQX0=","HXh74Y2T7uvKz065jyImZFzBqkNU5q9M6+rOa0QAGWM=","G2Kc4bUjSKmGWr4Y5sU3+IskVeDw3jOM9R3/FOCZk7s=","ECsLgq/OytULbNl2vTrKv9NO9PV8ePX+e1cSfRZlBLs=","LE9OFDbYXpFBYr1Ru50Tv8r5+dMO9TvXXY9lmCASTrA=","Dl1ijnW5zcOpiYxHIgI7zSbCMH3Ny3TQl/T+ALrQIdU=","GJjv27u2JZgtsN1RLoVA/5hpJbt46pcMtdBExT3t1LM=","Klhq4Bk9wFDGimNA1jh7WUTSHLeVZmEMoVzAr7vr1hk=","LI3zqDn/Ky4Qcf+XOWPhY8veWZTaNwDSTAlCofuPPoE=","LEDnP0H3ranORv7XVLmH13x7nJvhyGbPDlBJF4X5qoY=","EKREGaJxBDvknM9Q0YcwLzAAJzY/IBh5JduL3QqpzF0=","KCUM3GHu7YuY/PD5qDmwyymfSoD4hTQphmCQKTKx6Mc=","GwG21DgiI3+ohruG+l0K2uzeO4NDJOk6AlcSAtOcFsE=","K3gDhvnz2psj+I3H+iYV40KSiNnF3kgD1Czmns+2RmE=","JJhKx7DTpANQDwqIpz7Qgvh2LBaG83nVJBtkxtHKJsg=","KVSCnnKmk0f0oFteS7Oj5uW63G97lj/t+VxS7V7MSI0=","CDYH+eBTpcd6uVNDwaRiA1cmKJHSghlbzE3tPdeIzss=","J83I8GGN03inymuJ/Mhs7ucKfMc9KTZ9PUU5KRtzd14=","HEUqdCazHvnBhpBrJSjeK2+LJkxwg9Bxlf7jJA8M8II=","KnC496T5jJTf5Hg5bCTAxzRFFTympj9BNaYaenFJIJw=","HdrywpBgOEpk8UKWT2jDjqmy3fFMmu+StwGgD014yWc=","GNdj9ZVWacdWhdeLvP2ZI7Hiim/iLRnlMYK64uOHpLE=","FUh7KLPwaHRIxz9DLPyg21VlAamYXbl4KtHxYBGqVYQ=","HNFX9gI81yAYDlnbnc3R1tas7/m22xrHIoTApUFXu7g=","AvI2j40EaxiTTdJ/Kbv/KckJu0gO4P3LdwUnN2ahib8=","CdE6Au5Hk3hZM87Sq3C7AzTnpv5lPo1O2Xg/2/ml8b4=","DWbGH4tQWo79BqhlnR+DkQp4EYKkODucc09RIA3E1io=","LTKupMwyb4Iga5HJhhgfGO08MXGlMXckPy38dHGXa3I=","Cv3l+FoELr4yiJxqPgD7QMQNmhMl8vQYkWsaRuPkQR4=","KaPD0Mqr3MtsfTWFk7z/jcLgUYqeQf+tJRtQ2bOXzuI=","AyLDOGv8vqiPTDIu2waqbVkkEi2FjfNO/mNzxEt8vWE=","FDjFhxrdesDTpJrNgooAUiLOjI30MFntz+OZ2Q4oE2M=","Fov6e/QA9bwMwUOI3ReAVQmA5BNHAaLyH+Ds7rpZxxI=","HcBzoXKqlyjFI1RSRfkWDO8aduTPdLbqx9ET/fkRljw=","JsgPgeLxKjAuYw6eTT/EqhSn70FQjks1oLWPOmOAkpA=","Lb9K+vTF3fsEyzrnqqprxiRMV3kKaTnsD+viwXvOUys=","AJBbv71hrEIibz2aH7/S6Q6wTcZl4CPqI5Xisc951DY=","HB2qA+K1vONgf/FeN77R3LteGJsHO2wgwnuhbuKrqBQ=","Gi+OjVUzliPBE0CuGxNUVGNcccvY0gtqU2o5/3NqUkM=","GFNcWS5iWBF2o0ZHg88Jn2uQ5cvG2A8SOYcI15Qe9FM=","ACn2vEncWZHIyJySNuBTX/1uwT4jBCvSeEOlH5/Ss2k=","D5m9qJArwmMKQYhKXEd/6M52l/6GooEZ1aF77bmthao=","KTb0GhmBbavEEyddlD7wnz+WG0nhXvnWcdEZqjnitNs=","Kz5cH6G8os/kP+//rvre5di86X9SSErOWbEGVJCaPCs=","LPVNooZMKNxoFwAKqBX01YWCF4C7J/1nYqxvjCzlA5g=","AxjUq97RH/RC4ylerl9iuatTx4OwUJZDhDEjuALSVJ0=","CtXtrhickJiuU3NFodMUW0Qqd3Y3Dsb9tswzzqZ4nGw=","DALsZOkSpS+YvJZ/Z9dOpTN0oZXmuN8tocCr+V/tHJY=","ELNU+wXge3LX1lVETMlkEw4+57Y3RJgePFplJ5roBfY=","GBNaNUdEOt24CeVtKZ1qtxYAympn1z+5A8RuofiKeKA=","FpstHJUz/eKPW2FyXrHbLfUjyKfzJoFqSKBrSS99CXE=","BwbMaEaZG/pQqlJ0fGOrG7NXx86qSzigtr39xIzHRdI=","DyOi3weaOn85Cf/onyouXUjgjIH1arqGm4oHOxNMJ2Y=","G7LtTNaBBHp9RJpDWxQSoaVFdtGimdgwfJMl0NlXZlg=","KNQaKsezxxl07gWMciOgp84LtaHkhdvSaGvBMAtH4h4=","JatQ8g3TkbO62D//DulpIlhTbaIoGQtyMHPVUxDEvR8=","J7JLNG3hb08oagVqJCOYla3eERh+1cfRHnxTW6XKYwA=","D/Fq/dnaAoFbmPuSxXY7SbDr+xa87WKbj/LWNxCQxJU=","CKEyn+tU8ICS0Y2yKR6RxOF8fAmRP+1MATD8jn91ybQ=","DNa9cyMH7FMUoUJZ01S/fSd/BbrbHNByU4ZkctfpB2k=","EBvaHygxHCl3zTtFLfaqQpQkuHz0fJI2bNRdmSagq8g=","AsOTGURZmfgOe4C1o4Y5oM681bB2b2QjAif2gJKA724=","I+ev/9DG/i7JWjlK8stySusIglAhTAmTQyib30ZdRvI=","IXbnpUWiRM5LwafCvcqVMS2mL73Su/ja40fGEWcOp9o=","HGBncxx30B0/qGfo3+wriKy8F+fOrdcGxYquOCVOouI=","FYiyWCEx0F7iC+yhzkBclJ/BYpIhlEfStzxij6wAzFg=","Iy9lg4R24BvhKHty+Il5OPB4PtqSufTB6+ggLrKdyIk=","AitvLGJLY36EPnSnbDJbBf/CrkYUOE4POgzBhWViRnY=","EgLiwKc7iitDRpSV3ZUx3MgHLRbmOtwCkjxQsUGhhO4=","AU4gPKZNwFc1szB4rYO5aUIblqqeg0fOLlIus4iG2yQ=","BAkjISsbfjfJN3k67MIz8gLWt1ePxvUndLFl7WeE5HE=","D7/EW+fF85Aave+FPS5iFrcYNcNl8Pl98vNB8PBJ6So=","JzEBVRkrFyZ1DFv/cRfE6+wgmcmLDejFU/WN78MLoxg=","GcJZQyjcqVlZwq+Av7F50lre9Z6qSnTxXtPxk0CgjMI=","EEeWvnQ2M8zFP3KBRLrL6/Wgm1vAcXujP6ad7z8xzXI=","HJf5HfHXmg5beAOypZ8VqxdqIH0c4/aG8uMiMUuvz+c=","CiSq+RbODSL+Aa/cX5bLHEC0nEjJlmk1T+LCgKM/jLQ=","F9x6UwPqeXGE+2UCc/qsRHKEvrI+KTOdPsnZHT+MdrI=","Lhs4fvlZ+CoVD4B9/lo0gPrvbn950V7GX5JNCu0oClY=","EVPEzhCItRNZ1xclgj0WPOaVQTF2EOBJvroBXyVsH7o=","DYuJJMukTVce9TkSRVInpb/6RgVwGPtoMU3O7r0IhRU=","FR6Gj14Z6W9tI2cijTiK/YwIB5TQ1cd8djvuzKyfwLM=","L6PrEqdw54N6jmkLcV9agR9BAvPxS9MKMIoTmGqS19I=","KDGOU6mUlkF2Hqh69sgVmg+5SRUIPRoTCL6LsF3t44k=","K8OBkFOtmmZWAG/eqH76lOT6o3nonEwdOKoS0KFB6bc=","HBJHdtK7c1KD1KrRStgr+o6CHsVCqvcGW0dld1esMdU=","KgAHEuSpv1s5Xt2jCS2wBA1EoDRheKoBKJl0WYdMS8U=","HggAtB7Jw5LC774l9d587trc79EtQ32HTcRq+ZeuAIc=","KrO1Ch4XaVfcHwjdRxhfDtDZqt3sRcXKt5bdLZkenhg=","IZCgxVdiZxVuyQgZYTOKRxoEItVgNbi/Oor+eHCjGWw=","A8t7t9Ojin/xq/jJKCKYpVUcVdKOG9tsTnN3yqA0lh4=","E0MtGApLgV/4w/OvtCUMmeiclRhBfOXhR0QN+A2T5zA=","FZb01+WpufW39eGkttBotqrJCSh3uCDr6VoVxZgw+pw=","K3VwMkmQFvyF35QNfqeKa2yKG+8EF8l2VUZAuRTcm3U=","KxUov4eonFQneeHWZxomkzGiuaZLVlAaZSvvDcW9UJk=","L9FDGURBOCtNr0htFZ3vWPHJhpqgo/0Dq9XZySPbxgE=","CE5b2E6fWj+KwaC+QmnhyrO+p1plHrR2sjrwqUNunhA=","Jsc3dQIXpOOU4GOBUnXz6Zv4emM55DdlXOkfmaP4lOc=","ABHUShSiF0VLfLmwE6ftnueNOAhGkD2rkwqfOcBypU4=","LP8C9GsOyAbEe3yDTgwzeBcsoPdxm2LeF/WY748EdzE=","GNIVnjoEDYrzmQOJS8nsUdSaqm1Xdtsx8c1N+mFiaNg=","GPARCuHQZ+703QV3Iulr5mFrbF7a8QHbUpsEmk5hJuc=","KHDnyiY1tcP4mGVrzY3YU5kXBOB60wFhL017sXS+0vA=","JnT1ntH95bswPNAQqsipFFi+plop25oWO6OrMTy9bHY=","A+NLLzOxdrN9jojdNQF3Kolh8Cpb2ymBRYikSYgVfak=","F5RMDH2RRlGBV/kgAJK8gr8sVnLchYSCNlmwegzvN+8=","Emeqp3zXGZwQ98K8VYGkLzx7CDceOqpgu0I60uJymDA=","DvrDzA2qI/HjeNHcvbLt1qXYSVTdAFU/rJZBYlkSODE=","KHLvRvxXAEYfmvApw2EUAKCoBJe1hSCvtDeU2nEyapc=","Gr8/tmuTP+XENrLpDcHbxqwv+nTPYLvRXRgxNPBptC4=","CT2okKakFjoJT7DDFAaDupho/M+OQr7wpR571Xe9oPc=","JSDKjeNEKJCD9dASZP92pa53bmnWXWcUQvUqaAJCpE4=","CPN5EXXrRUlCul4/1/AEY+uIkA7pwFPRBfnIONKbEDU=","BDibn8+bJqDVKnqGsR9Q5M1JzHWP+cHJNSSBwrfPVbU=","CL+sZ11NFiP1SGZiuOmnL9tJcwZNXMZXKjb4aRV0z6k=","Ko5TEIpeb6Kwv9LgGoWTI0ka7lzKRZgdcWjxrR3UKl0=","Hql+SW+mGcUsGdWzMHbOhNUe2UeXBkOwpt8wEQIlKps=","KSEJewYzZZQsDWpTTiqSqkCJCLaJeUXueHvOZ+RXTO0=","IRP4cbcTx6se169jmCz0YJWCHiqu9hNo7uEzrqYkXyc=","BCHJ+x6n0FjAHCU34i0ccX5AwDlsZDvj58ApwFVhY3Q=","GBxX2QE1VO69Wz6anEqJp/1V53LrL9Sy9H5fAVtSt9U=","IQ+8f65JqHEbcnRKJYeNHs86iEAdvch+diDvCA6bG1U=","ADinMDfQSxnDzb90wyzb/xdZ2rV/3UKVSjr9mAdTfIw=","HE+upSeloUYXDMOoUolHn7IuW7WtLBkAmZ+qkIC7vuk=","ILx0RX97NpVvJ1mtahiwDsYCoDnADKeSkwSv4aoAZ4s=","GNvtix69FPzyhY/ywTnSb+kBzk6LUPKMFrpqVsvWw98=","KQ5fkYzlGCeT/uBi4KyCWZpgOc7bAyfGnMNcSEpgtS8=","EnDxxJvwW1cRKZg4rLLXfk1SCdZQ3lQNAA/gtjaVclA=","JEvwBxhEkQWmEv2Z+B+Ck739Q3WKg3WqxkR9Z6+gfUs=","JTwSZ+Fpd2ncW5FKNBsC6tNYJhBH/adJ7dzD5klqti4=","H2IFkj8V1mdPj6P13L+bauMAVHGvvNhXGgsCU1JG/3Q=","GX19hCZUyOlYKQC1tyqbvVtDFVwDkUBkawj+0DKvx7s=","DcUWKBQzjfvcN05tsvS1QcWY3jpoMjYfRAA6ioixP0Y=","EYwDhx51P3UossCDQSPKj0PKerN+sf2lNLuzNOlMUr8=","ISqMKWd6kZz6wrnarakjRq5Yi+4UJlT6g2NHI50jFE4=","Erv0DSRk+snmTdBNZTmfpu90+FKM9qOuwjVVqCryOFY=","Hh3rtPdvPXrBVjPja/8J2hjfH56og687y1q02EtKeY0=","AM6Y2x2lQxuNzYre5wSWP46Jo1s/Ag5pbXkGiuPPsC0=","IZRGJ+YMqHp3Dq3dVIbBXKXkh/TdGubsIQTeg8MhboY=","Ijykg3dKfF1PHOOIMg4dX1P/ldxc5TRCru2UvCYl05I=","JQG1DH5/cpx/TYllAeKU3JHCZr0qbewMuwmvihP8N6g=","LkOMbvB/m8ywIYZJqR2pNzhwpFrEUkxsvwczGaIZT/8=","IOsXtT5oDCtg2fPVW53Mi121ngS2Kvy5aM9hR+Nakcc=","JWEYJTmE63HybXgVBLhNgog5gpPMQZrvWehhPJ+vzUI=","ILwXBufeJ7l5FmxQ87S3E6oHpbho9fzJ2k+vegZv60Q=","KLo4pIJ6qN35NJ3EZA+oAXsMrNtFapAQZaps02F+F/w=","BWH41pl7g2Ui1PGGA3mc3GA4H19l/Pp7znYguP6MdGI=","CRSHFGWy8PPIPEFlNaUlCC+OZVi1TeMB5fTt9Su2qo4=","Fg4LSda7IDaLKkiiDFXaDSZZqUq1nxdN5d1ME1BbBNM=","CXGsL+HzhIPScTf3kva8DvURCNKoeHftsBIFojoYRj0=","DbNulZsgibN5CIky+lJR5l1O4fQVrUl/VnfmnWIMPz4=","Jg5rrqBqU+eUfhY/D+gz5RKAL3hi6HCPV1+2uqftbMw=","AQPnyYSarhLDZCunOHIUHAv7Zb6Jamzg9FrJrI10b/Y=","GYU6DvDEk4EcMWjikoVfaQEAtzBpu1DdMt3gbJaku7M=","DigjhJ7AB3wujLJQRvajh4DpQ8o6/9lzyIOAniJ/zZ8=","FWaeEPN6PSUrKPjAX2ZCCkvG6br3pt1wMoOJcr982eg=","HaO0Z8EzkSxU/STgDykWqR1TPuRuaP/wdNGhRnF5u58=","KMiqqAaxP44kDpR9SL6JxgnsJLQu+bGyWRZmnrYT9xU=","EocwkSbc8gNMszqg0Bt+XhsCCooIrOG64zUw1duM8Vw=","Jz1z1W/EmNG+QUQohwqS8AgmWNOBAT3nbME8gKLNjeI=","D3PikUnQ+l4n/6U+SFEYemU/LFsxDt5rlZjky701pag=","EVCPqi/0+GpOzf7HdOnT+QTgTQ+5yiW5m+MQwj3HS/M=","CK2jYWXDp4z5POTenH4TvZ/t8isCIuXnCQfBdliOSWY=","GmSfKnYSGwCh/X1JReOR/Nrzv2lEO4YfzxXZI6RWWPE=","DH+43MKl2pQJlod7Z5CEl/4HSpiqjWAIBBvbH03G1v4=","CmolSiV0uGhnv6nlBV7GGCY2jAKOUmkyQvY6gxU6vTw=","AChoduLz6Vknp9zXbzfkyTe0xeJ0vxI4AfBWm/pv40s=","IJXC0qnyM5XXfxqGF5xRLcEwHVSZlqMlAID1K5cEyNI=","KskK/1K5VngsqFmMuysioyhVlrWJGh9g4UEBK/KBLvU=","EU6RL94h+8EjSL6R4FmLBXQwva+wtOuc+T5n9yNXSaY=","MB/fDB/1vpgHtRqRYUVBvAaWzsf7FqUDApz7RwTZaW4=","CaV5w2+LuP4SwN5lwk71h8pAeWyFAFPAIvsBX8a7Bys=","HG+T1VP55PlqV1MlrtloKlPcphuIUHcjttKt8s1oM4g=","AA7UGXKPoxxVxZRttEa3+ng/ivWUFY7GCtjB9miTwX8=","GUEZlsuDvdleYa/y5tSle+mRIHg+Qf3ElfNYyYImiQo=","Kh7qUyH/xgT4fQVbZQ7mNQNYRJWSOkUbMvwkGsEU8uM=","IdX+h+OQW2wZw4TUkCv/Tlc+0d+WAQD+L2MPWsckljY=","Ii2iH0t8gH6+j5O2e/UH33FfU8OyundUYEv5Ou0jp84=","EbyzMpTl+Ogr+rWBUuqiuR72NSqdC6VbrAA9xzUXJik=","FfYrjlrBd+fFL6ypHb8k5qkO29pT6gxU1q58OCR7JLA=","HjKerrQC7PJiWaElf6hc3xB429hYOUwG29Hke5iM8lc=","H8qUMoEDXtcdiY0WHrwkb5zwQTXDJVy4fK/G4R4OcVw=","IRJ9Vvbf69QPAm11iku4WR0+HUjBLih1PMcUMaHbHs0=","Bqad/euegHlqY7SmmCZgk+G6dTTrt+Kw86tYdR0Mv2A=","LApXpctJZFnlR9Q2bjSp+JrauCH0GLmmxwqhxhUSzmY=","JhhY9zf80IIBUZZoY6EQNDtgZZJrEzhwkSxZXQ+oA+g=","B0li1U8moCkJ+ZvDfJPvcAQ+fMUedzpehz04YMV/6eI=","KX6yC//7s8Pc3PtW8LDiIe8o/PT68FKlKEwEv3dqCHM=","G4xxGwphCan7quA0wN9lDDLdgM/FmBgW26Wi07qIQkY=","GHLAz6zyv25C0R1S0owwb8zVPCV1qaJTS4PdJxhiE6Y=","CegCBjq4wLABJlzPnlvNmoPeD1b969OFzL9cu12oVms=","LQF32el64W6pI7wpw7NPQ7l0O7BOCvOF/kAQ65Kz+u8=","IPZO+fO5FDpNynfNssEacvjjvvjK03puB9FW2YLTatk=","FAheMV/RG9QxFhO1Y2WOGUqN5dzoKNC0AZdNpiqPWVM=","Hq45B3cijAPr1WP8TMEe4N7XGNCtqO0yfUzAmjMH7ek=","BkctOprdrbfKVa2NKG1+8GMM6E+mMYMgCfLc2twxXaY=","APzf2zU9Opm/LCE9mmh9AyGETiNxpcpIvUH3sl6Wtqc=","IkxFH3Z0V5vgRWiVfa74auv6uHRrjY1oy7XU4sUwGeU=","DjePILcczf+wsgFJ30HigyxXu/OF6VPyyPVf1UEpGhs=","AF7etqTKemy/9cXZJpS7RmmNLUduzBeHkEhj9JkU5J8=","EVvda1yThZVaiiDSRMQGKwjut462kurXiTSCsAvv/ug=","D2panDnnYjxFg9m3IV3U48yX5ajiQKzg6MX6g0MGDvU=","KuvnN3Qa2g3PmYDoTwIVBtX1L3pAgvDpfTeUASOtC/g=","GxzpI/7GH/jaKsSsXTwnksmhrfkDldjHYaqWc1o4omY=","HCIWccp48A9Y1dVDnA0Rv/O590ti5Adwp5ja6XCl2yQ=","FXcKkwFuh2FYm21uW8V9yoTLkRViImOROazG8lZozrE=","DFMNn7DYSisE1P1dI0XFxYfoYDYfgI5dXmDX9hdbMbA=","Ccko3dMQ8BOgF24xTS126Uh8VjEILcTIMrGDsUNjB4I=","B1kZp3QmXvYki66AcEkpRWMUsqJ0pE2L4iwaF0fs6Ec=","HMAls6WfvZkzGNvWXyK0QY+vill/vp2cRiYvW5n+EEw=","ECRPDpW/k+gy/lLknhwFgw8Q+6kTYie8e+6coQq3Jmc=","J/xIxf2P7OSFHrX6sojU/UGz6wzOVoJ9rMejUJ5PpMc=","IZQEz4x/7vdR255dLE2x7JbuZnAeeEIvV7c2+vJZM5g=","AsFjbWEu4Eji3x843GeSCr0AZ2qXevh1rmbqXVJ3oTQ=","Ex5AhYehs3Lct5yE1Kkyfk0ak+Il5oL1qMHmrQ95sMg=","FkBksFJJtsyH0e2vshyOK/F3+XnUa2iyv8bS+bxjajk=","GjLThhFM+OqdxyBxffhVr0EGUzq35CfaPW+AkeppWQU=","JhOXaNO+0d/NV1y9XGH8V90s1FuPclwl29h4GRKfI60=","HSTpdNPBTZo39lo2zioqWT8yHN7IGkCljWXxLaICw9Y=","JWmv+I5NPyCQYcsCPvqTwmpifa7mbRtnuZdAaCoFf9c=","ELYh0gxh5wsykghZNxILmyjEiIdezvS7VuyxNOQn1ao=","K0QZrwNTvlB/PTEhJ1+c6aGjyEAD9HNDlyJItcDS8cI=","GHNpeFZw+6Rz2nLqxqa4Jf1FgbW9UseEIMskaGWEW/U=","IQOjKPSiZzoMMpsTb7fwCNGh8AXtXkyibbdNTX9J+8s=","B5nHvzAHV1i0AONBCFVxQ8TXExlOLfxtilAImxy0Ytg=","IK7FbA5biUyq9OU31wjKf4+h6KHeYAmnov6kOnBRkjQ=","K4OeTL/Dv5WU6JPgQZiUOYYwJwVtuRiHwtwJNz+AzBw=","CVwcBqU5OlmVhw3aLmW5CiBDPc2XiCWHqsAs+P0EQsE=","CPLPeIb/p4EeFM+LT17oyigZa4NHje03GcLOyaK03n4=","HqJ2PZepGbxEw/uS5hQ3/kCTJTxHu/sqnlWyUs9/nyc=","DI6fkWascu3W18uA6AInzMrh0tIFbWqFapBFX1b9cGc=","BXuzRq8ov9S8I0HWTmWxpXNANK2z4Qmc+fzKec2pyAM=","Bw9jCvJe+o5NjF41hhNEiJvrx923kAFBE8HCoiHhYf8=","EdNbtyq9kABHTUSP4iQWyOv6FSwI5qD/z6Ihf7hunBQ=","LkhhAChJMMLpHB0ArdnGyYwxFHObE/Oz+BFxc3LCWiY=","CMOf9uYI3Os1Ej8tZNaLI8SoFoHlt9C4uEB+mqHFCtY=","JwqqtYUtoC58HmyBZ3ObHXGfLaOAYRj+ZrCLUQqh654=","CLB+2URfPU+dUgVTDXtkkEQGUwcMb0w+OJaOgrk7pYQ=","Bma0gEcq2zF/WxOKkqTSlRJ778+4O3ZgaB1BuWxAjdw=","LgaYUFivnhE+siN5zFW2ehXhk2EzhbvEd1poxsUmttk=","BSMZyRnBlUxNOKfHd0GUmoObPxiGGfdAk+MYDRRMcls=","L4yAqMMh3XTYXy2rLLFyoIJLmQymN2XW4XtINzTEpMs=","IpsX/v63FwOnq+gElf9922FAFT9351H/8pAK++GRFL8=","D5mFrsJjw76GZ+TJPcDYgS+HTO9twyGCfWb9kmga6c4=","CvFcVmtoLBDMg8O7quPOYh0bw+C0UQgSbMDfmcYiXHg=","Axd3VME3JqVAUCeH8D3qkXycCWD7IFR4cUyVFdahDoc=","IshIhdpoWsa3TjkUv+Jmj6CCYu8k8a20xV3doM21gMg=","ETu4eWG0Scz1WVz2gynLGTCejQZdAT/bAJqw6QZFGG0=","Kr8ZJHr9f89o/jCYmpo3C5mh8S35svrjC2zTOD+NaRQ=","L9T+z05G0v5yZHvXCPS9SAn/lh2J3P0q6R+BLgo7n6g=","F6F++7w1jFP7QZMAAnaN6eE5jznfMqiwbiMDMRTH+a0=","AiiOKrK4ehLVWjGbNR2YdMMu1EzBbZOmpj4IUvD2Rpc=","A6w5+GcAtmEfEZImPZRC6QDREA8mAxvLio5iVe0an00=","ANUyKjTbMAl4U2bABgxH0pphj+CyyulF3vmjXz3a0fU=","CdmnbjduGU0FNVSiZzRrfgNKbRNEeDTbaNHBAjZ7ks0=","Kh4L/H84d4e5PLObvVHNnwI64Oc4q8Q96By78SLBPl4=","LJuhJlq+intX9p+LNjK7E653K6HMmMoDPVNpZkxA9aE=","DoK3hN9Uc5NlFWht5c+OoahkVaaLO1Wr2lhXvVUn4+4=","A+x36WS03BE6+/od0u6tu2dvc+J4mfAzxvrKIjgCSFs=","Cm+e3Mp2x3pdaZohfde2LQ1wRIUjbtkSzmuN4ik8HiM=","G2KAhND7j+dtY1O/lIK1mvl790im6ARujuypqKn7DKI=","JID7sEuvCTvMHJFi94IUv+FMNklQDXmOh0d/9x6pkVk=","LJLBgekWJLyyb6J7bABGBU6ArrzzQt6CLfd1Mz4rGzM=","Is+8+ErIM5Ijl2Lc2wPoR3smG+Ge9X4jIsBDwIk10nE=","CaoND9ACfVisrK8g5VHnZDS9ghbrHqazF9Gm0jpTseA=","FE2OVUCMiYZG8uDdtuwZK15BabsxJZHSx1i5cgdAmsE=","Dxo53ceFywiBQg9C605rXswQyB9JC+F/gV+dfzTl5Uw=","Hoc68YpVZjoEyERwSYskW0bva9eB+7Lkv9QzO6FDq0Y=","JKR3mIahyhqlcgTh+1DgM+Mcf5m4CE0oWwuakzyws8c=","DnOu3JpFeCVfHQ+FJ3CPnTETEgXh1hQO+XV+jgfVk7g=","EG8n6CRXuR6fozNY7ZWh+6+GquXU75lUoE3UY13cT84=","GpUpR/y3fAqwfs8y6/QNltQOx/6Hsk65K0yesW8vz30=","GXue0ajKhIe3LR6MzlAtqdK6eMPyLPfAXYMUci//cuE=","FghVS7MJdyy8mgqrkUxOLEANcvny5drUZt+h374F1cg=","CEgoO9ggGDeXbUM0HUNXj5siYJrC5FfgJmTTSDBnHjY=","FL63fP4oVAGeBRYLkh+WEZ6U1hbpOgYHk2tFCj4DO2Q=","A0oUlJFOdpgYXViGRYK/6C/At95q1j+TFxir+CONKAU=","HDGd87JoC9jHFmlrXSz1A+DupbEdXd6OlSF/SqtqvQ8=","EsKclf3r8BRjEhog6zOgZCXpFKqexhv2ZbwByiJY4cc=","G83/tBCwCe/aZ/QF+jP9Eo+nz/NzCzhg3ymyvVYeGsA=","LoqbgMzStDh/DsJMqg3a+3sP7hys40LOsY6RIj7qduA=","IxSetlW4ZAt/52scDTtIbCdJ5keo0g8ptfkrL8ZNeqU=","KmUGleN7/qisyZiRQzX/N23NKXWDJiOE4n+4BaIiP4U=","KQouZPTh8XvznV1FGaFSgB/8LSA11Iu6DrGo+COOhpo=","F5eGAZ02kX6Lr6aClHHFgdUyvxC+faHokXpfcKdyThM=","IrxowIVe7frvVRRI2jtjknEAjQYzqp54P65SQE593LQ=","E0DVts4GAHVFmoT/f0eSDNUxj50Sf55STdH3rB0IK4w=","CULJrX3lVd2XYniuu/HSLxvq6g5cortbDm5nnyx7ayI=","DmW7y16/I6QNbiVwOuApoxcitkoNIQSW3BfJAU+d9FE=","ARKpGb0M64RVd17kniFltSkbnk5ACnXpd8plZuagvWk=","G5HE2KVENpsNrureJ6DClmt0Gi1GEx0xBXQfMd8g6hE=","At2FeX4WjSH6fluWYidm7AwCJGv57jKKkV/y4sjZdCo=","FiJHJDFBR9R5rgy9JqOB1FhKis/TGF1EObUnYZ065MQ=","L+hOWXG/06kZ+tBCFKy8UNB/MBXZfChAXd6SgnwCU/M=","LLZzThmz4CxGqAPVYWcwrWND09kj/pq5hJKSHb4Uw8g=","GoV+F/LsG0whCt+2q3DHs90M5v9gO3dB3Sp+7UdEU9I=","FM5jo1DSnl3HD56i4d0JEvjXNNMoM3I6r+2r9BvrW5I=","ATHS4VLH/D5lqJ9KIuc3M17U9oyCxdzrQ4tRnDUhMrs=","HkEK8uDE8tITyzRkFNkWnL9IHpuk1EMeI1kRnXlnEPY=","LJPBRU0MyG60HfEiTZhpcA7eeDZHVhHrHwagNgcC0eQ=","C9WDWBOt391/5S9MijsQsVfKYwc+4ngvdPQ1BqtY/FI=","IJRN4b/Be6keek5X6syxKoZPDwP0l5u0oxqEQlzEwOY=","IXh7VM5UPppx0RvgPh7jrJzN1iIfQ64NJhYkrcK9mC4=","Il50oLwCPIC7Ja3xEdUquDPqTkaWcoEGQGHt4PPXDjo=","GfYYlHMAtWHcPUajzWKp0l9+mzPzATh9gasSCf6wpUE=","IzpGKH1RmsVorfmbuGlHB3dbmZptCjq8qNbKZOAYSEE=","GNDbqqmNtnO0csitEbSQ+sdvYgieEN7B4lOG49BNz/M=","F3qmvoZFSttORfZJZyQjGJ6u3zRDkzyl2M8tpLwIb+U=","AaAoEKxqdnnkAmbyupeMYnhftGe4T7FdprA8Qo6hmE0=","GubHCl6/JR9ffkoSQglqMm7x1VFMOEM/ASj9xmg1dQU=","AiFO8XrLoopxWHR2zndfbuDTvT+l7a3piVu16OXQNVg=","F2lIaYBIuJ7d6MQaAtQZj/Rj12iBo3ibSw2+iDe91hI=","L6jqeyuxNBXkF1jwS3hJc/8I9Ivj1dz/kGn0id7YQo8=","AUTMfGrSj6LkfrAnWhpL7/6pc4z6j45zzIkWNJ0eIsY=","FPmqtcFvsCyayMFDpB1+wfSWj0jujfeP/k+Ht5ofPF0=","Ief+Dzj8rTdPUlp+WuwFtHoz7umXCX17Z0yvxKBs3cg=","KLCpHkSKvgkFh298S3z34NWCw5AWENcvov00RTOfibs=","GhaHTcZ3VUr0NoP/Cvga6nw30Min1IAmaYZA9pRH9Ew=","JCKJHUOrcfhzDxwURzIOUPk1IT9QNtodLKMIuEpZTuc=","HaZlJRN86PcrrJ2jauT2ZsPLejsp26nYL3soa0TDL84=","AMRzGCU1erFfSb6L6Pthukqkm7xmueqInedDPojG1Uk=","MAACjEAR2uvk5vZO2x/TMzY4r2nUDw6V9IQWWGjJu7c=","Kb7ck6uztiVp2vyLiYfyld4lJwBvp9HtD9LxSB/WaHo=","DL50OAUJyKx2aIlYmfwvtrf791KqSD4dnczCUGC5YP8=","IraUvGjfK8RomkgAUxuxydilNih88emRoDwCZNAJ/CU=","KtjijC5L9zyHPuhGPqsvO6re2TKlQ9ULuRgvJG85Td4=","C70EtDSlXUxc2raE+iuEhPihuDpXCZhWaOLU4Mc5yAI=","K9FUpgdKFbZRth3BWpNkCoh72eEXBCY0ZOy5/sPwQ54=","LVrxerJYV73XYEQgvQDx+XIy25N3iWctLKknoIIEa5I=","AvjnlOGy6WHTssx3zraEykUzi+Zd2Y9MzRLnfTRwjqI=","JOpPvn+bnmbEHMDLG7XizjN2EeNgkl3TzJSVNDKiM84=","CjfdW8yYvf5PxtD9DsRSDG9EmvWou+T4E7XtXdVEFo8=","CGpZI1/iDbvhDMYD9pp4t5ZkfLCvNbxyBsVBpIh2cho=","K9dNbD3Jd9wjCaCnsMfNrQnVS7Rmsr8MrxmCGN/OrwA=","H69EvQS6v1qy5xUo/bzNX9kdssIAHaP152FiMTYI7Kw=","Jup//4b+VrdxK1nnDlAquc4JvYvqmAIjY4Frcm83QUU=","HbI3C18UvkhIXhv/kDOFPJnYBzyxi8nsCweMLNkFKP8=","JPW/dX0afCj9U958jKvsXLYuRMNzoqMvN42lqqB9Ges=","C8us7Z754LA9O4frCcQFAQUsS81fwy5LK/e3XiEUit4=","GrdtrrvtxfHbRAeIYWGHyf7UOxyyZo5T3lFRdhs5J3s=","JJ3NW6bX0jRzwqFpx261gRhTmfkhaqyt3SRj4FGf5tY=","DF2hcgC5CgsSWwOe2SK2lU00uXk1RCN0PmAWtbxdgCM=","LfkIh4yUAv3QowFDUbCSjxxVl5Cg1BatJaJhbBoHPNA=","Ic4uMwiZUbAa9F3zgWyA4gSGhvHoAUwlfJXi7z4nU/E=","G77LYHlQxU90pic2mp+UVIhnd4YE3Y3kBkg+IfYe4aU=","I8F1R5lls7SpcZz+a+amEMDHdnDlhsKrDPCDUB5p8QE=","LzcNFY0VtzZWLW0EV8RHBuZxvpqqUkvGs7/DQoCZYQA=","DvEcv/UN8eHTa+DI81WIu75Aa76jGju25pt/fE9Ooac=","Hy/xF2ddl1NcJNGaWLqvqwOQ89QRSpZcQzUMF84JWu8=","FHEtAciXWQ0u6qtumOGOWsGVhpKgTBtRJO4GroYoz6I=","Jo42F1LHKkrZSbKtHvnm8ugGN1lGuLnmM2A41PhJws0=","Ed4ft8Betjikq9tLQ4JhhSm5mXisxz9OhWPCgxzeErk=","DSpyNDqQ27UykCOVgbL/MSBqArnNmLrGZn/SR62QlUQ=","D8aT+fj1y2obi+ZonbwD9QMfXfSjB4LYCR9zjcfh6d8=","DkHiqZf6TQ+LdS7MDcY7OhIb6B6g4kIVTf5n7ASfVwQ=","CHssqNeJMfb94IN85PpYlEWW88nPKtq46uMLRJROF4g=","El2TrM92nU01FLIdTGY7FTniJ+nLxFlkQgNh2NIgIV0=","H5GscYZIzR/a8r9vEa7v972CBs7ldp2IF7uXAznojrk=","KZFKts7EZf2S+PLIaeHOnU27P4g7KWhQY/M5WIESZZw=","AtpKEEhu9tDv/rJvhpvvmfbVDY/qoeoci96VmJQp5dU=","CCVX0/UPpRfeJxDgSYpoOTDbW5+yaeirakJ3HVrn3DM=","HSCDLpYPVQ1wYYcvbNlnlvnPYfr0+AffDDc0peg5Iyw=","G1eoItNOStBs7E4Z3/Mka/hGvDQIA22rArwrEso44EQ=","C8eYyNz3nKmnx2yw6Lt8I2Zxn+dAkuYeb0DoxAh/wLU=","GpdbF5ZJsRTjxFWaGxQSXjXjYwvx+Dg/r5rygsk2cAw=","DKrp9LZrReRzLpeFGROllFQHMPJlKYAVOcTUSJYHX9Q=","COPagSTGIeBw6KQfD/Hxz3XiIRCHlVOS2FoXI70txB8=","Jg4xVRSPiSt/lrLXTmx5ueLBo82c0HhK5QeHXkomeIE=","Lj7Y0n7nG7QeW8mPtGbdT/nQ+KZohht3Ovgl0mCuOUM=","IdD7fONk4Kx4Gx4R2Jq/6gBjksq9IPB0DRVr4eRefuw=","AwGhqsxPhmhOPteg6wI7ksx1r2+CFJEPhAxifD2jzXE=","Ee5TvrHo7k7BBon0/kDr2TzRyf4G2BLpalgzaENewrY=","AdQtLdnSNyUwww9NYSJzLRzvjeqeLr+zsmeenw3NBMk=","CGHkSLkv/nOOGK5noUOHbVWljBYvdNjlVnFNH35ih5I=","GTeTv+XHuQxtYUdeic8NQURxKPKA2MbF3Uvh/JBy7ys=","ASawXuEkyFqiscEnPCHDzv597TmzBcXgOaNfkCTMElY=","BWncwibC4hWuaXuMYAEBHLrnzlNfRagD3GD96dpQyDo=","D+YXLdWv6P8OfjP2SZkW/Uxf8vq5aWN64y2OTP0/79Q=","B0/yxfAIBg6J0wllWRJgZ5zT8PWu0zFirJrJnaELq1M=","CG5lRE1TZtghM9jK0KYcIAZrib4chw3Kv+RTZI0rawY=","C5vL1St7iZplGgLDJuBkrGqXvnRXu86JbkZdc+k6+5o=","AmngNcQpxL2u3Dk9KoeXihwvjKCyWwhepEzlh47FBrs=","CeG3ckWDsOFqebp2cGNvh+oTShniDcPscMAce5RmTa0=","JkylZRrnuE9D2IQc+ylry18Z+loGosTSGEtUw9Y3CTY=","JOStjC84//37UDpN1QV1xaEkJqU0Y1njpWVK8BiPCqI=","Ct/KzvarJi+PydL2FMD+SjJzyCqeczXl4OCADYHoeHU=","GHrduXxKZDcUWGbPJw30pXunBZcP4eBhmg8BaTMGXSw=","BxBwLfhB1O9eDK2rcZep7xnXUkgIu6Vt+EWi6PFBvKo=","LgZkqrx0tcVNnQR79UcORevHhAJhWSc/HS9eR1nABlE=","Jxy3qukUKtcYQqdwzGXfGdfRAtkjVFTXxgCnNaH6Tac=","L/R1+dUiQcImG59SDSMi9SJo0omgKOl0dC1An9i7OwY=","LTuyz4Uw5pi3ce3mZXigFJ5WGzZtUCpuecI7M8UAwqQ=","BcgLWha2pZ4eNjA6Wbp4LNcUB/gyc/N8GepUqWHgytk=","Fwd8ymnu0o8h7q8PAEhpLNMQ5rqHtlt1lN5ZAqgp168=","Ltvk2ChpYtkc8akxdfklsXTPU9hVko8vEM9G57rx+ZQ=","L5V1emLRpSicagh+XIKeVNW8LgMIKthiFkHYL1dYJZo=","DCyhpPFoLaP1ZJDR8VQZTr5Aq0QZlRy81QjIYAXMz6w=","FRtVl3Ptv9SkmkU8FzIhKVXcnV/2FOgOdaxj0GXdDMw=","MEOuCGnrjRO4EBeLlus3yqJ6hHB3e92rhQAjhLbhqhE=","AahD3/liFIfTU7cM4E2d7UOPdsUBP0eAeYBjpN9tt7E=","Du+CQVJ3hMv/M/VR9uLlPRa3RFifUFCM2qCELgXsoB0=","GuhbRScBfUXYBaJbE54/Qk03RYQc7K2kZY2Xs4zvxMM=","DtQ38PEZMr8WsM139Jg68VEeVweEJ/7tMoeAgouNhCw=","F96aEXFhuuf4JDFN23pJ1Z4kQ81iDg568ILnJGpyXpw=","EoWM6lHu7C5PulByqQSTGN5A6ppBefp0x7/B4VcGgB8=","CM9AQJH07l/cBo/1Gifnmhj4rpOt2iO0Et437tFk+9U=","B2OPdVg0sF5tuvG5kqur4bV1iX53bq00caT+aNnnD3o=","JGEFVY9FR56M1Ul9kkCm3ZjZboER7U5v6K5IHMIhOUs=","KZTk3iP0c3HGjNH2AucSlaNqNluXBwTHCyL4qBaFC18=","IsjTv73zY3qWMenRsIUG1g/uaUWwA466jy2oXxD+8Mc=","KBwvryosRJu0CkvEc46mTv7BGNNL37OGUvyG5VKXoz4=","GMBFzdqrQziTRLTv6VJU3OfSX305KwUlbCuUnkfKo/0=","APiafxrJ+zeydTx1itAmXJTv/n54OMXwNpb74eoZzWI=","F6qqa8cbLRqg2ISwCTTxKDxZkBHpbv1G1NYC2V2Gn4o=","KRNFcXUkElXZTwAuxQpRg4YW8nWNaXI6kb8K3Eb60Os=","EuujTFLJN2Ui+ACKZmCKtPCEAaq4XRY2R5H9+RumYfw=","E16TeWk/Ttvp/IaESTilJRjonbn+E+RXWRMoco8V3Ag=","L2u06RggseE2f4MTTtYygwMHBlrfda7uFmbTpZvqp2o=","E1Q6mOWLG235gkf0UuAA/gcas/zbCz5rGpGa41I1KBg=","L9gffYRLmaxh6PCT3GX+DPRdwqXN6+lvALD0O9C32c4=","LVVSIiztTiDMgDcaAhBBHpUYDMSzEOtmIJwqRmgafwc=","I8FTOIvhIZa8HJfYjZoY3trgmbyw8f+ldphTeQIqGyE=","B/DSaes03Wmt3V3vWQK5p6ltzRc7/kYIKO05jvs6Ovo=","DVEWkbbvezLWtku3DiGYJtEFwOPfuQWouIFkuOM/Ldw=","KH3DYJd0CW0rnZjG8lMJRpANnc0F8APeHS+LPLjn0a4=","EVMbFN20mwZvESmAjwQ+PJ0/MgieOuvP4pzknZPQ11k=","JwwH+4WHHzAXxGiz9HAcQsViu3miy3Shtj+FcJCTMYE=","CRz9eQ1JBJci1IISkhHwrsOhCvPRy6/xrMZ09ZjPvSo=","Lh+bVGXqXoTIyyWbpc72PH94sER3vq87YSd0rdYyXLo=","Bk1a5w1LhXT/MHfoNf7kiAF8wxfKivJiFj/PnxNIaNg=","GN2UVqdnRJxlfD1WY+6nHlTl61s4HU4BWMccoOOo+yk=","AVD4tY4GNbyo5URS8+Mf9ZecISLi7WMVx14uHvv02VM=","GcH4IhNfu1kyuuuGImHTf1hhPBrG7MbRqYWlRqUuYUI=","LOsqsldrK2beZMmoxWSGn3kQCng9SupB509DZUfP1jA=","KJ7zBKEAI+Ty1OR8ryV2YHkQPltwWfrcxBpHWTfqR7c=","EGRVrBf/WxYlE1Zj8oYn2RnrrpEMaXyUDpZ+kXtm46k=","J+GUFhodDeRUyfR6R9hiiaEyTzBp40agoUopHtH1D3g=","A+o6zhMaWAxzfq13J1qqsfu/NflXul/6QOMZARf/vxk=","EI4Tb2wKcBaqPJEUAXhmj4vpKuqL8ipYpgQBvwN/OKY=","E4S1b2nK6TkwCVgoXOrVz+sZcfQrtzWFLSHz8/8ua9Y=","F6/FvMOuFPDdqqCtfwaHhcKohnKuJmnKaNVT9LVhHac=","KvK01uSFkMtqs3JgzQYowwXpVxoQSq/FowCG7Tbrc54=","BJZfyLuXB9qu0geZTIjSNqM8wJmcfhFlEvw2w/PEhRY=","GqJ0+TmuklvayAkXnmBUe6kXbQzE07Zuxh6lkUYnhwQ=","AsvP9dC1J2nuD+z870zdmV5mQXCU6EyUeYVngPsdlA4=","JRPyrVm5kbkBW4dIkBo3Am0uUR7K8SpxZkOBAye8I0k=","I/4xLnu2ow/tbNAPoNmKIV6QO0VgPuwU/5ITUtaUTaY=","DONSwVu4Gzn+DnJjhGucC60PmtspNcESpMpPWMELRgY=","F4So4WG+jMhSV0pAxkhirfWtZARo9FG6Ed4/2sNeyt0=","FIr2a406BtTaS/0JEhyrIEXPoaluie4eI9xhRFNm8cw=","DSgpWxd1MCQ5XFD4C+xmiQr7xFiGaFhHT1dlz751r1Q=","CbxWiq3yXJqIQE2ifHNzKBe2qmyb+9TOhR6Jrv0Umd4=","Cw/1uWlN7pzsZphi1JgluJNPc96uQEyeWmAWUq+P1PQ=","Dn/O5bxSmVb7TTHpjaE3YnbK55UDkG3Vs/mHv0I+wNY=","BXkDlpkAEXwoeynKxLMVKX0TeynvKIPjnxftwxhSmko=","Hc11Y1yDHPPPW+rt1UUO1j/7F9w120Tr+gIHj8VcNt8=","DyNef8NHgOgAXCQsyEKHZL5uSIyOuGBL271+BkQ2FwE=","AdhP/sRlTd4E3psKCThdUJzCsgIWJKWdJ0/Q4GOziZ0=","CALPNoTsJkbFNcAYMFvBN3tDdZCq1lSVFRnFOcMNVN4="],M:[["DjCndMNTosvyRNPQFNGg5f8LrF4kJnOuM/G7IDD+/2g=","EhhrsiAArYS2vykXmt4tTn6U/wflFifglYBXEGH6jOg=","I5n6pkiu35Akxqw86v6iSCFuJKnlbK9azSnOJUap9rI=","A63Sn+OY7S1E8jMSXs0VCePO3nfmvgi5SvT+yH6z5I4=","Ehr2H03FuySJCr65JR5c6pR3CrBi3Awou4mV3Y8YNjU=","LKj/7i1Y8pRSl7AM0LUR2hZwgNU5SbPx/OrKlha2FD0=","LJnvXgZBR9qXgrkUopS2wU0h6n7sH3LodhZxBp2CoTQ=","DX0HzTeY9E2DKmVxwhcGdYaT5ek2hM4tGl6KU+DMZwk=","KRlRFxBmI///sK9SXIOGhtDZcln8c6UZRgmse3sXExM=","AbYtSxfeZzdbWPJIqI2/cHzJ0UkbzgCVZEygIZoB5Ao=","LhaBvHwi0kxDP4HdOjJv0CQr/H4r3rYwfk0qyjKt2h0=","AGWFDRHQ7Kh8Npe29eV/eMqGlSutHJBH29Lra+np2zA=","Glmza5T51yNXflBNYAxJPygQ8OZxEmcsdDq7sTq/Q7g=","GksYa3fNU/lhyMy3gV2Xgc73pSr2TQv3RstSJRLT0K8="],["EoJuW5vhybhffJiqypziiocGh9NijWDe8KswcrV7Cbg=","I345mA+QB7v4aZ2+zgVP6h8ZdmvmEBiF1CH6PqRrU0g=","BUD1SSSXWV4TCA8C9rHmU+LlGJUWD/1coU0mrtk7hnI=","Erv7sRDsKXEAfdrF+ONvZVRl0F8kYplrIRTvrKxwr7U=","Ly7FHEj4tzxRsmSnDSugtGvbQ/kz3g+uqKfaKpfLQfM=","JuNlRNC1lS3eQAfRGBhGW96RxNzmWrwBXnVWuli5X/o=","Imv5S4axd8/n8DED1Z4/nOI5OCGVRwjnxyP4EEpoxmQ=","JeMRs3zuaTVF4sLvwgQ7wHNVIRWzoGXO8T02VHtrncU=","DyM24O7kaFdByiOCjDTCTwc0kfDnLBOWEFJKVvcapAU=","DZu32rShiaO2mQpVJsgrCuULp91Vj5Ubuf00PLtLDhk=","KkpsyITP0Ir0sNvom22ODlgRMget7Yy6stB1BT7+mYw=","Hrl4GbNTHrtkDta0ITQzVBkQHR22DdGpJO+WZfepGvU=","ImuR41LGXeT87hEkRb/yDkpnrw4RCVcxmyhg1Qh0Brs=","CsW4YSjuR5RMEq9THPFFgELDWt/NnltqdTGXNxRVnec="],["Iv6hKXpKXwiQTVVcLhXQFhAqTtKcMrS7EICe8Ur0LHc=","GAjL593yo2hNihZP4tFQ32Igb2vjPVd9xXmPGTru16E=","HBzLRP+KttqFTpJx9L7ybSrCbNdEHxtp0W7uDXp7SBs=","G40gnWayway6ukNeMEriBmLTNtEDML6zNVz4AfGUcz8=","EXOM7TkzxLJ94TkR23HM1Yt7MTRO2RU9vd3bkfvbzqs=","HpfOATr6punJk+nP3JquyRsGeHgZgwmFpy6ffG5Rarc=","Bmq4vq2ue+vSajOtvWuzktaCXaN6Z56K+a6LxIE8MWg=","IbN75SGDXDK2c6Mdca7RvH8+qW/h1MI/FGI6CoUaPNg=","HobsCGgFvHcSt1EN72USSbodSRB2JB2Z0AxpKIDzmnU=","B10aps0rjRgcng9CJ1yYhK5voJGG/iJ+XEZz5W46zSg=","FCqDIGdHIA/bAnc+dm9QTGWvgrIAwOf9lC+SviPVhr4=","DuRoPI2lNra1B3Okabu94uQXoc+b4iFSCvHnVZaNf/Y=","Fo53Hp+PhgxJNn75GaANTxKLqwHBPX3XLOjTa8bR2DU=","DCpDkGcSFEnB7z26a+H/hParf6xLvVStdTnmGCbKGXE="],["JMxnUYlAh7gxWYtbx/nbPLtIzilNkgjhqkNstfougOE=","AzzM7wWwvPe3eqVWCg+UnJC+XMLFcSL5iF0koRfGP5g=","Do78hc/r3ilc5YneYK7A20PIH0vn2kTrJvpLcffLfuk=","Cp1+5+6RZ3r/08pPxnRiW+iX33n4LsQ46A8eAAyLH3A=","CRdbH6+s3A5itflebKZ8P/yWom43z8c0eVuS8eRhJNQ=","MBawdMgUIl4tXBCRqDA+7kvkdrFFitVMFrThaR9rRyQ=","DAmYYVReATpofN1Jo6KWqNLC6ZaRwlNdpxLTUdXmPBA=","C3Gga7dbChC/0oo3iL9UqKFEsyh9+cWRomQ8QQD+OI8=","FJN4ecTHEnZEx2W2Ni+LmM/TL4Vy16rZzDKb7VtQemk=","KPngBY688VkbwAfLAqw6zeCFFCfbIMc1jb75+pxXwro=","DfZTUk//kt3o7ByaUcG+wwvzak8B6bO2LrE/j/33uL8=","At/PsoCj03LbwVY56s5FwLrFYsROKS8UKbyRZXj7C/0=","CzRYkLM8I9FnOWxYPRLk89nvyQTyYSAlEjUBkKsZYcU=","BPfx+v7hIbuBE0T3P1T0o1gwdnOd2d/EYrOuY0PJPLA="],["LMPQUDoOHalSsIG6XcWxF+ZGvtVypkUmbG7DzgoUdLk=","KFTIK0tfXfbdOHLj83E3LeDRLhbpEIdmkgtUWBBedr0=","Cx2BD8xyFVHipZbpAJNn/GqSSFerKbcDIHsIyV7NAB0=","C26yJU7frh11A8NRjmTPGfNEPWzQO3HPvxvlk22k4EY=","IQpKgObqp5n3zgV1K72k1P8FIHQslD4e/usSqRIppa8=","HBss8R8NOjoSG+fQ3fsk3HH1S5vvlDruMpY5ZpIqg5k=","FXTJ5cqqimp/tIlNLEXRkB0cQrMhT+mnL9PMZo45n3Y=","Ju1f/wbvnhlCvT0NO6aEjkfsBFzSb5MEnYDL+mvMc7A=","BZ3oc8WYBvVRFLw/gwn5tkz8unQ0quIgRH6g6cSmbaI=","AX45zLo0MqE1wAddcgxklWLuTTG22i6ckL1yoDl2XnM=","KufxQU8UQ3NTGBY+G/seG89cJx839qvxqoZ2ay5Z4Ek=","EuqSGs9bitxqTja+hXE1dtZYCZIwsLF2bGZvEtkqsUI=","GBXUwuahj08/pTigBBRtf1QPvoCkYFhXcU+6J5VhXfk=","GPbEDjzPiFgEs3RDOvCpYrKWP7mqAei66MyDSz4Xox0="],["Ee7b5aWWnzNEZQNJS0aaK4P4jTqkd+XW15Y6gzOmExU=","AJtjx138q1ctKAsFf7w2QNNd1fFiRIY6uKMeCVbaiAI=","Cfysw5mAZRJN4Bv3wMi6JqxCQfH33soe7+XvPVAV460=","AamrP8IFmwz/fjzEMffbRfWdj39yTNEKA/MaNmOPi1I=","Gbr9DXlCuDnzatPXDZyHtVZ0ub3uAqfcMOT5nrzB2U8=","AMR0gkr9KogMaoWnt6WkNKxCLHpjqvjdx8TZMl7e9A4=","A6ZakdNbbod5CNXEGeeFD2RfYrHJE3ZaIUuw96KRW0k=","E3kIuqwuNeE/hoNKv+mNG1S3wl1shfxsBex83tkXVRc=","FmLybPBPW5ac3WuT6JDvK1sRJPUYIoiNwhZ7vs98Mec=","DNCkwn3hGutkYOMvoryyicuDMhcjFVMEkp6wyk7qA8k=","IDC3vCpwkF0DFnTvtCAzb6uwdprAElw13+L/NywapOs=","C1NCUDr0Ru+CTfTfagiBlftnJ2ZX1CDm8xKyYo6SKYY=","KCpVX5rU+1dpj6ofwyebuMKMH43IxpMiW9hSDbQxNIk=","F0waEJXpXU8JjI1ggmd2wvc2kds37DuTeDW2WwG6E9Y="],["GJrp6bFiqxoZ1ZnO3O9Ci9EyXHh0CqrWcVtxC/rEweY=","KP028cdh6nvOKebwAGf6QLMuazGPUGtslLuEe/crW1I=","BdLwo8IjEirAEhQlAyC1L/Wj0kIRjhl3iyyM0al2xhE=","Aj+6I6tLwk1IgLpab/1utQUN+40PVkdtOjApDto3KsQ=","JrjqsN0NlbeoQ54P99NDinOie1mT2B/OznKagko1IbE=","GXdex4H9QImFn2t/EnyR64Put+yereFGd7CmsQuebiQ=","DAc+rdtdP3nlv4O6wA83cAvWRQLYv31aCZ+z7/fTsD8=","FDmR6DhtYjNMoNh4MqCEW0hBbvUVjBjnuduM1q7iI6o=","BfuJfXHt2NjrHztcgjpYgqBtlkBWr9Uy5siIk6JfJhU=","J0WgWdCWLxvw3eHhuX4Lv0xBQ9EP0/3rjSspXuTXqd0=","EqcQ3m0X+Rr4kBAiJoU7tkIJ8bQTMaHRcwW/W3tSFy0=","CSZfsxSmdraz+CfwcoOh7U8wDo2Q+WeyD/YfRV0qsv4=","FIqxWXKmkltxRgJxD+nmTAoBUFOsuDjQ6HakbLVlP1k=","H3+XBMqxz+orJHHVee+Z0ZOyNK+Q5iygm1pnHCQopRU="],["Gq0RRJ1uLG4a3PnokRTDNsAUVSjzVqwEn1L9jLCENwo=","K1bC5E9wOjsUPaA8JXSTZ/dSsWgXJX5tEjsQvIVUNDI=","DHUT92K2QCKhUdYjAgmd/9UXkdmv09z5bL/PYDWiwnw=","CyZwD9TpUMJa14/ttj/LDZunPsq4WMBxZkhmqQlvFNU=","FzmF/hfzsPuF3mEEwCtGw9ee7p3Ci1Z/AqsaHA3exXY=","IKmmKEz8Q4F5XjsGg36VloFf1bbxYr3gL5fbaHyEef0=","IXqkALK2Jbw2QypUXlMxJPmcHLmOuF33RzGehdUwRwo=","FI3JM19iH/+cjS+nKpz1tv66vh9c53aJwaKeOTGF+6M=","Ds+sqtDBR+Czx+BJdx5tQHKwLuTRccDlMiQhTRet41E=","E2WpBMf2chAC284XB3qJqSu4A4vSevUzM/RHxM8DWoA=","H7pxO5h0IxHfs/o1b/g+7yNM6L8rDUpS3nr00lGfLxI=","CrkT9l4c6znti4O9XX/ZAOeFEe2rz+YjFN0Q1WeFjY4=","COE8LmHERrUwJNIRarF2yENgDQDmdkAsRkF0UVjCQ/g=","AfoCYWAkzZvt9kPqNtJi0bJPOKVXp3qCxoZhjDwz7fk="],["DX4eriz+xAZALTTCWeWWb24usmHU8I4pCIMlprtmmmM=","GE5YJGieT4FDhWffQ1854dNagZBB1+rzr5CEKb6yvC8=","GP3mRRBiAW7eqjLkCo/DB1HhfpusGS+MqJHBHznr/4E=","BKVyuGEF26UlPX7R5201oSbmcYVRuXayCPWT8IFY3qk=","HZSOh3SxgPpeGjkyQ53+jF8ypDdlfSEnfkJhS0yaPcM=","IEQapfTVY45k162ZgrG/z94Vj2o81q9ilB4FzI5TMVE=","F4pY/xItFozU/xGkcoCkuOXNsxNBG29umpR8f7V3pR8=","JW4UU3jSYE24xQndpFUkUrbEqJH6xdoZnHVgdo2UiDY=","JfZNQqdQlxr8uAIwcPbsl7sjYrGWparir2pw8uezV68=","AvgSEh4urMx9Ub8mY5jVuo9gGiqm0zXrafeGRkIXdmc=","AMj4ciiSovBsWrRU5Ae9VX6cLqd++AfuDj2JxnhbDTM=","BAfVhaan77VhN35fOXIxmj5yheFGxUme9shQSj0LYuM=","EcuD4B/1gDsEmitZrpkVs+AEXh22lKbfnenE5xUtGR0=","LhwpLga3+KbkNE8QVAZ1pjyknkUvaVZfz7zUO6wPOvQ="],["B5aiOtbtKsmVEEoNPmx16XfOKauh0l5iqaiiA2TqG+A=","EATF7Lq2t9Eva7TK6rM91Wwfgp7ij0fCn7+7FH6IRlQ=","B3VZRzc3VJ37IBbfpyVYuywcgW1zGHY6Xk/VFrBJFOg=","G8vmftX7dSKt6v0dmhUPjVetohjbNGkVyG5sAMAOOLg=","G2GgPiGDYiBP0gtnU25ebKe5bbtT1T7RYCMCmIYUh28=","LT0mnuMk58Q8EaqEzRW61lRE74Np3xV0moprLIEh4rk=","DqRdIkee9Xc+WLD+dAho/B6LUL/3YEnVtu1ecjcRhns=","IoAlDiEr4qSNKTeWqIrGKwVBEBL0amb4egIgo9/z950=","IL5wP4bXwLna2Y/4u5/JL+isCoTGiXp12FEUb3SEC3E=","IfjYVAkd22AdqxsB+zDD1Pd8wxZ/ozMsOzI3egfmqsg=","Db0JPcFuc4Mr3mLQXLsG+CcfpHIpRwRi2MGM+KEk+es=","L/W7vAItG3T+GEwGTljZZ/Gq0fCSbJBqXjVs/DuBrSQ=","EZgWhiyCJunl36vzFns7K/f7PRkGOYmyShbZfJS9U9c=","BvvO1SV2qRPmzcXFyW/cj59Okx+pC+60bZs8LXdeHjY="],["KZuOhiHX2MjT1ihssSazTuU7LcmjaXuDgMbkf1cRNFw=","Cpc6ZlaT7QlDTtsssKlxrSd6grM4V4hVI0muCei9DIU=","LenuZSnlq8eu6Tt5TE7v3VF8T+EvpWvOBqNwjYYza74=","Lqa3pyZcUD/LKEwrsZUS2uce81cSXDrHVca8bMN722Y=","E4C+rHsGLGuJkUqXao0LnTJ2oTyCwj+iH0+kQD4yZ80=","GlcY9Kkt2NF5uTKwgg9lx7uT6rzjmPmXMk+YrHYyO5I=","HHy/JEjecRTu1wGwQYCQNOB7lGoDQLd3JoUp1YLCJao=","CcieBsrVQwFT3VLMZq5PUhv0FF3wSGgb6y4Go4UFARc=","KW86nBBCImkqRK0k8Pb9gZACfgdVVn6acAnsce9EDqA=","AYOTUF6mIwZpqAMPbnYTChTBBwqQG6W2QLiK6A19MLU=","HcowYKa7xMMk9++6IidP2NHyVgpO66jIsNOJl+DZxGs=","BtptiMIz4xgsX6XM2hOSwPiffGvsTmDajfgFSAfrCSI=","DGHsebEG6dxklKY1nxdf9jeDnKU6yOehNHHFZkYYA5A=","LOxn5iMgvGoMoyUY7IHHQ2OkttJZvSdaY0JdbO3kaNg="],["IPEe6B0qyantHKxh2c/fEL8bSc37ttIyhyod8UJ8GDk=","ElR4yJc7w5W2SMgiCR+N9GlQSnHKT98dq1mnCND+Rxk=","ErWRt681/9mXs6YTaH5EkiViXdXRAc7y1vKvAtnb1tc=","MFRO2pwyLGyHJnHWZ/xfzwnPuNNOjlgStuc456tA2O8=","IRDBBe+0gbZ5zrLxEtbqcERCdjrirGXt+PFc/RacVg0=","CP1Dl6qLOoTdG6Ti0Ot8bRxe2h92SBS1/+IEyOxzVgY=","JIffnV4Ga3b/yy8MoZCr9fweWHLEtqNqRocOkVkgEBA=","Cq1owg+t4ePiv3D870tVC6ANY5niDYNAL+CbUt3N9Sc=","BjAWebbNsXqmwhLONC7PaBq3zZa/C/uTNQNoAE2Xw1M=","HhUf7f6hFlnBiaMbon8sz2lWCEGI6yxMmbgn9kXx22E=","KRvZQB3iCRa5ACoAZhFLO/rk08gwirpK/czfCuwS1mo=","AKqyfmJ5lSxykfA2kY8LJ507HZ+OTorDgNp37C/CTqA=","Ho7mQTCLpv5WALLfSSzy8U+YkroQJYJsU8d663vNsEs=","J24mI4KJSeai/ckX4u1F3ODuUDza/8mt2BX20dPE+dU="],["CkA+l5lDuNL5R/btptQRcIgTQbteT7uztP4919zN13c=","KwaW1FmAAgoqQhBzRA46T9Oe3FKI5pAKWVjgzYHg7uY=","L5+I/pvjZFfopUZFWqAKD1EAp/MlgLePJqd70LdhIYE=","IGcz4yemS3jTxItvdYDQiHwXeDQ7Z3aIWeJTLX0cRqc=","AMJy0Qry73ipjf90hsSddQXt2IySLlZyo6uxXMSfQTQ=","GjJ/8sRvWWn8rLRjUG4QLWglAjgfw/mZuf+9RSC6RpU=","LAy75GQikXFSyhkGRivLWhPvU2MiqHFSN9oJuMWUysU=","JfQQNSHjbVXkGBYu+Ov+xtRWlVIO9HuFSLo4tSon+/U=","AHlA6wS2HsU0HBcC8DmT+u0Wfbb6LOqSKQzYIbFf5MI=","KuHsnglXfILJe0sJFCrOUaqtHffcNSzU5YE9jO6cmNs=","HJf8d1+WL+Bae2Y0a5PDJgyPapCn9cYyI6M4bhmFLq0=","J3N/zXbdKWwogXZG0wsRaMTQDh92TEVlyqMnbe/RXH4=","FrYbJC1B4ZdYQzCaAaNqFDl9fI5760r72SM7RTqszbo=","DHW6YPjg9q+hJudXA7g9mQgRYUe4sttF7yTzFWuPGFU="],["BGRiUzgPS/ZClyroGXd3lFSqCDP9o2sYIsucCXGePdE=","AmRiXHTyo7u9wZSBt4ZnV+Y5wSS061YNpTH875l3OQM=","CXFOcX2qPOs+l5TSSrzRcoMcuhgGbEwEiwmV6ebfHew=","FNrJBZyeeNlsfvgHujQrlGhwZ5eCIx0q8Pbkq3bL0QE=","Ep3Wd8H4qi020qfVNAZF36w0pkrkVvkbl96fjpExNhU=","EIec6rw60EXXb2zVsmtW3Ee1EtZQlFj5/96Np55mSc0=","D3w/PMls7aA55DyGwbaAx31vSfUOlN4j5NtC+OnK99M=","EL14JPwbiDs9oActLGGUxKHllXFWWU6Qitv25rGRK5s=","CQ2hLhWVVR0lAPkDELdwHfl2dkBBE8M+R1sud0mtthM=","JM6wdm3iX8IniShqCSh750AxDEF0cyC98utclW4EA1Y=","HH3OzqWeb3vrbXAuL+dFiEFdMOXcCZcLstVqzI4IMo8=","EQpehN4JIJ6TY8A8IrU3rGp6q6L2qdGh9r+rcalgpYM=","E4ItzD9icbcVScLNkXuFnNrDavaEiATRWjVNTeD2fvk=","CF44CQXrLLfnU9CrD/SRiyMsc0QYtr/hMx3kkvx2shw="]]};_13.default=_default$3;Object.defineProperty(poseidon13$1,"__esModule",{value:!0});poseidon13$1.poseidon13=poseidon13;var _poseidon$3=_interopRequireDefault$3(poseidon_1),_unstringify$3=_interopRequireDefault$3(unstringify),_$8=_interopRequireDefault$3(_13);function _interopRequireDefault$3(he){return he&&he.__esModule?he:{default:he}}const c$9=(0,_unstringify$3.default)(_$8.default);function poseidon13(he){return(0,_poseidon$3.default)(he,c$9)}var poseidon14$1={},_14={};Object.defineProperty(_14,"__esModule",{value:!0});_14.default=void 0;var _default$2={C:["FI2eRUIGaxJdptaf8/tnbr0n5qOKH/QoG9Y5yXr2/9U=","C2CiiAUyQpX8r1G7iNlpI3LL9O7xy6i4XLwFk0ZpGog=","LTj4Eq0desecMv3VelbtuGGIXyD6S8bQ2ULC9B6OSn0=","JXOKzRFjWAAzNn/Y8e4ZnX6zw3iR4GvCDmtHagNXWIs=","JH9pZ/ykJomujiC1p6GY1jCGVJt4wWIKUfXTaCTM9D0=","LiKBMHemaLK3Ukm41RWj3Nk1AgBmlCRbsIf/BzJwi5M=","FSPqib5hvkfhw2sOAkBowoxI2nS/cGmrLXc4nIPUdPQ=","FGaVzhOCMOCHtT7xv4FgHyWR3TRKfLUJ8TiTk2ng0cM=","EtBdlXH6S0FxiG2cLNRMfX/FpBJRlefSjDxHy1y1t8U=","JCchFHCE1GE1Q3iJdxEfP95siTJqVW41vM0qLnPKxos=","D9khuoOVpd3oM+bbpBczhQB7ONGvXjhBo0XJpIDJ0pI=","Dwu9x6OeUUaSny4cqftKY1UM6o8SEJwdguYBl11YH10=","AA1lAIWIsu4aTe4DE7bUOWlS2QE4Xy4a/moKDe92XcI=","CupWe+MeHELOM/WJ2QM2OkgvIcHD2P5Q+m3wGKLcfCU=","AvozR1ewPexr4d91jr4DUzF7NTFuz8cpNNBp8YI0a70=","ABcyJ4Kzcz43nIkJrn2pRlXEbdK2sGG5JT14eh6qm48=","FWgW9I4++Yj/4EzHesTImvj++EgmBOf5O3XB+xFk1g4=","LI/5d6JzUrXX2ewQP8jwxye4SnePQa33d8OOAYAK/aw=","LMIly17kuitwU/mK97O0iFaQFuz29JQ9ZLqEMJLFkik=","DTTXqLj0mr+kjHOxDyk6yhngl0OoNF6eGvny1j/q2Wk=","KgNVqwS+3qYf6uCDVhBn7fFHayByXPXgMtuAbTPtwgQ=","LcrrRlOgzK0cCHL3axA79Po49tYxGeFDfHmCA9KXaMU=","ItLmOQf8C2VkhQEiyOkkqXLegn10kekt2EOXsuvKd3A=","FZOltQPfSDBf/DYMT0nOsCU2xz12tPL3dPnaPVuNzgM=","ItRfEgPMEeUrkVV0mnwKCoIdpLBjzdyCBYAoDiECbr4=","KPAaCttfj4UjbhoSn/r7LN+GrrQFbrX/WgaVHWTD1LI=","G6YCrp08TL+t0K4sz4/M51n4PP8pvxK1PWBQp1heaqo=","J7ygYdgVd47YcZxfT1QGMhPFAFpG7XrtDJedKtFVfDM=","JVk75Fi3WlNppL1qhrcK55h26Vq5NwXSRBAdXfPkVwA=","FWCAMOi7KozsX25pSJBkzSH5s2FwNMl1HFMFbMETwEs=","FKtlfvUncyabQAK3osxtAepm7I61Gpfgvejvn1k+qsE=","GvGFia6QBY0NsVafTU7PdBVDhsu2/pBWQxG0NAsaEdo=","H2AQb4j6202Pl86ezCTQkQpFdcWnEAAlBLSPqij7kcw=","AGYCezZdUSVfmcqrgtUAmuBm22W6EDli98ZfLy2upWI=","GBMB+jh+Uh6JUaO/d8WULFu8So/MbDlcNLT0kakGirM=","LcBMs6gKUjmhMpnupwugJlk/QMz0nLjr1z2imnZBPjs=","K6VeHVzAkEMCdZfk/FRqGJIrr4XWqw7G7/HPE5IrVZI=","LVsPAWOuR2k85zFWjNZ8VLgvJJ8qQp5YX2VADwx63eQ=","A3SsR2n6b9C4Fm/WKhEjV5AjCKEnZFRT1y9SScpck2g=","DnZ9YX275BCWhwj1hdugTplag0fvI+oQH+oIhQhAOqw=","H7OO885Q8VhFHje/VIC6cKkfj87pMnSrAh3+1w8uKCI=","FOI5qnO5Q+Ocm0irsgXMqk/1nWj50yW3F3kWZhd9tls=","JxLZQBlUD18NYcEcLBbT36sCVzhYlr5Zwx/5ejfGVVs=","Dm9SQ5JFLrrUCXOpgOCPaaveshTl63gw9yhMHRPjYDY=","KUcLaSq0pVBSO0SGhOGX5r6byIW50xEMKBV1wbvGfKI=","I5EIJ9DUpB7osTpxGuGbWsYEQBoiFBcXLDAYpJ3pWfs=","C/WGL4mp02h/L7JGmAVw2W7SWOhBSsp+DJ33zugz3YU=","ACcNSGP9AfJ7BVhGi8qVZIvI2zylWqpf6yfChq6tsns=","Lfq+x2ceHpMrB/Fkq0nmnmPxc1E/LUoBXOjePhaMG8g=","C6smrLxI+GSNc2Nmraop/eSSSAAC9QIMYiD7GH2uiJE=","K83wgEMVRKTtJcnbhog3otF4dv17MAG/zCK8toZIO7E=","IGSn67fmrenLzFliAO7JfKXi+b6yomrMZzuTohjxasc=","BFHlhhfsiCeZsrM6rTS8qraocVOMIHggCbXaKjd7kao=","JYL5V2tWsikHxLv6fkFVtOKK4Dh2lkzUCtsOJVtsGhQ=","Gvc1FbZhvQORW1w7XYzsBgtJDXQsT0jUPtkHrGXqbIk=","DuthmwFkXLMfH1FF0tGsoEXmn5qJdCz4X6plqPMHgcQ=","G07muagfvwwgHQiYppSKCZXrzQgODOqDraPY7WGCqxc=","BavgU5koivhO/rhI7GHVPdDwdDmYLgTjpaMEFmrBcw0=","LMAsnM1j8j3OnsKzWHMi2kpM6/nMkkbHANtmEqp2lnQ=","DaZPk1W8w8z4epaWs0TlaDytP4dqW55fcVoNcKlzAB8=","LQs/OpAfiK2IwgEsKzL0658Cu9rt9M0eN7hPQBb+q3s=","HVZlI+1n5xtf8Mxc0XoyXTCSvWalJ3OlN4luPG34bHY=","A301RG4Z7tZiorYoEmsoUPfaoIeXTiH609M51+Lcwz4=","IrWVR8M8N+bDAKNVb4fbumZ72oThuO+HQwpSKldt6fA=","GW+Nb4UfW7zqahYUZWs4ow5by/8mHO8Z9uNAZqy9t0s=","BXbW1txpLZ7XIyAF5j+VTS2hHHfm6RmyudzrrtoRtQc=","Cdz9X/8L4t9aUmWFbCKsIxzt2BoTEjBPWJbwkJzD5qU=","JveSKGzd6IjkVMHd8DWS1tYvS+SEOCNSZQmCn8tJYWM=","KZkh27apIB+Kyn5p2BkCONXkqC3adDrthcojXKuAwWM=","KGOiI4Vr3ULjUGnSBqUIjSF7X/um+6CTnKIoWM13Deo=","D/pWCdG5qoSHIdLh4q1toF1DokHo4Kf1lQj/qbHt5DI=","EdklJ02Prn1Rjf7OpYqaV9iGQgYpaeZ+RX6WLj7UoUQ=","IcIZIEImvEPw2yRINJITqeVj6U0//yiy5pJojQ9bKxI=","LASunyULoBlL9Z7KlATjr23NZN0443CgOPP9Hjl/UQQ=","IjzKgx3HYNt7lU1BgQYUum4sYr4x6UiE1Mfl/6Z9pcY=","JEs4lBBOUaFRpnHKEfyzQtGsIl9Dq+6DlGl0NFcTPYE=","JPcdWgrASjh7dYxpeCRJ33ucztthY6fu2yHvQBRS9FA=","Lvs2DZyg4V9SqkAz9MQj4PpcF1zdBeSuvMJ4p7gpa5c=","Kf/X7z0BjJXoA5wumQ5M/mb/CTgQrUUIww4o6LuXBiA=","Jn/3WlMhI4PszKxOijvy/J6YK6837ERHhgHPqm9BcjM=","L7/Ess5sKwjLs+N0n7Iv89aNO7fTNc4OQuxtwnCQw4U=","Ji+T3iAAXE3i9KXY0FXI1fVomRsKhiBH5a2UyIaLo8o=","DwgL4np5H80XVXVPkx2bh/WtjBljoCqnyv3R6NMblOM=","Iac1ITqMeEl25lyjvsSsxCJFJ0k80WJtI0YTOriHX/A=","FgqS+2pgfV7nlJ/NVTfIQxxEnXmqUbuVWEXSy+aEu/w=","AHkVn2NkVD62Q/BCRGHwATVzmBOECsdN6B33yeEMj3I=","IoYkfFjqpFCbqvhblH5plQHTtfkBrMhHWn2deUFgbNU=","ERBCUZi6BsQu+9tulYQNAcALXQiFDwzUZDXNuhvczqY=","DsWhVXGVDOw8MZOsoBV5FgS32uGF17nYmS4CAYX/2Qk=","Ig+YM1WXSTwuf0/jvcDNIp0MgbLQtvnlZcz2Xrood+M=","HC+i0Xb01wcP5Fz+ao1LvQzmhaoZbkuiNypRleerZEo=","KYwf4/Y1MaqYtqrQLkOKjyeLytTtl/PIKgkfrqkQ5Qs=","LoFLLwiNkAEr7nTO7xDHATAzrxKDVt2kiOP+qzvyUlM=","ISYJlE7AR5JfMcE9fKn9Q6TlSjP7CabslGPLY9JXDmk=","FXu7nQVG+G5Ki15FADarCoTWEJ1VBshfI5Jn9LpYS1Y=","E4782zRLW0D6qcCkFWZL/9dyQLWpy6VrSZ2i486ms9w=","DKUOCNJ76lCPICcwIfboOc8SSlQ2He88mypkWV5Y/k8=","DTTS1ZdaLanw3XLoRteXqzEgIjmeH+cJgPmD8Vh+98Q=","AN0b5PP7A01GaagZIvoBTDwcXFdfOb2AmHfbK5//l0Q=","JVQPzBYjB+OQarrnuiWOT6hP9N1P8ZdCoJadCAGLIb8=","JPV5Npea4qO5dS03wBdXRJNSSiVKW7wQITt/prFa01s=","Atm9YmR6RTNNtzYx2p2Xon6MYn6RG4Pxli3DQX3Gzik=","FJnCmUrYOHcO46mvZDYqEN5sTF8y1atbuuVcoLKfv7o=","FaZFmgju02vT4jFX3VlRK7yEhH436KTj99f9vHviCXA=","FI1lpqdfvvszllvi3wmJ/gMfR0eJItJUbx7hJt5/Nfw=","FtL0hlx204N5+1rS77Ied34BdEtOIJwJXTMuQe20V0g=","DIbGnpSgA8xFTimQp62BZ8O71HMuZG+fkelhEUvGXDc=","ALEiJ6MQ+GIsms/iuzIoqgXO5hBcQmjCZt1Bds5/jiE=","La+R0iX5FYhObP2rQqy2LSdjQZh7w6JUGBnsd3TZDo0=","C8To1VVhS6wbjMmbrn8AjLfIK1zRo8SBpVPK+Kw3P24=","I3XzfQAwuJShqCmN0t1Z4rfnNmfzGxVuhtmzhhdQD60=","Ho48K9DUhS4mGjwPqT2D+5wh1EtJV4Mw3LlxjL1UsoU=","HoDsyimzRe2Ivo5TygQtbGKv0qRiTLrLO9B8hYOTMrQ=","Lh9e5wM4xQxFb0MHchYSX+8xTGZTybpyx12ltTz+2pk=","DpujGuE2+wGZ+dng2FgPVWBEnyqLap0PIj7FLEEgQx4=","JN5S8VayII2BvxCceQ9Am6qUGreXivhvvA+JGl6QT3U=","Bb3HIFomvxJwBlZCXrrEjRFQ4C/ptKywekFgnXFo8E0=","An+BBlQtmaH5A1gq11cHbhivzlYzZ7Y9XQlz2AmTo9g=","B8ryvDeF23rWgbtsBd3yRSXBnRUZqYG0QEWl94y6UrY=","AjC4RGYQZsI0SDx/32MkSZIkU/+47zeXV1Ca3dgc13M=","HFE6f/i9+UDvDQHnb9TsGQhhcOiMZClPc37yC2YZgqw=","Dg6Xl5roZLVfJzcebG5hmre4h849hh/t2ErhEb6kDgw=","Bi1GrcWRNHhM2vDE37bJ1zWPMV8JSHZcj8vJfsPzjrI=","JkLO4jQIESeyi07bA4SXp5oqMTobdJ/S62fjd5QoNkU=","JACzmCyS9/whgYiacIfA3JRtsrLo2G00ULwlT2UY2zc=","JNqItPLC3HBV9KVfeDIjktgIwHby3my2oDiB8jVOkQY=","GjlRzWklMWSBSErDmzG4NielSEwlnIGO4jonAMbOrJ8=","LOyif7mWzbptbuHhBfpd+LprZ7hlkxwBdRX7QpCN4BA=","FggdBL1lvBnkGt72/Y2ngU0rsM/fsuzOXfgqi+qHnm4=","BO7UuJwO3hvViFGpMeTeeR5Mac8rERb4o2srxVkADkY=","HWACG0E3sgd7MRc3hwBCAfILBwFBHEirnhRBj+Ju9Ls=","FjbCnYVof+w6pBJbtm5dXxVWVXpIYMHfhRJ3kPCaYaE=","JccW5epc4saitnGoY9Wss7LdSWOHn0wWPaagb7JlzEI=","HezgAoS8aY6ir5fePUJs+QEQu0m+caOTwc5w6pcdtGA=","KSoYVprtPChoUAHUDLQt2BU/qZABy9UnKcpvjixGbu4=","Ju2qCrf37qyHdr/xILRIPOmmvOhdCZkx7JMiuh+/OIE=","BdI/0HQ+DjcIlYg5LG3wsE1a7y5SaKsZwunps6OvSSE=","MAu+wwLJuLfkuqBpkFcf712tJq9hjQd5tpl3okTFifU=","Jp8tnOCY7uieaU1T07LZhhSQzxhOoJuvZA8Ao5rHKj0=","ESKjf6DDeGNDEYK7gne9DoSbIXioFtMcdgT8UhnRqmI=","FOLbvrMKOld6CyKZzprwU50I6uB0inIYgKrKr+GGRTg=","L5JsZ3OoxBG4fcUZjDCZA9n0kq9vCkOlryAo5Un2yAE=","EWnxEM/0lwC7X+6eUkpJ41iJxGieOEuSeYTplXxYf+M=","AD/shj9AMnsGbmgFTIfSDO+h6xMUBSDUOmebnkoUemE=","LodkDOtAEqmtoxSCx5oI9kurLiwBDLA2u6weSofIAb0=","A+B6jo6GqGOxRxlHvS6WKRSbVVAqas2r9gntr6C8nZg=","Izl9og/h3QX/Ico9IT/AznzkbEaVN8GiqvUilNL9ba4=","F5czp1zhGv6KSEL4UJ5JMB90KNY8qDlzuNgVb9gqtpo=","EMHooO6BEya4g8qOEPOtsSRCj/zFx9x56Dx5B7Kh6uk=","JN+TaBtDh5pLthtcYoD01eE2AoeUW5eOWbGD8CMzh6s=","IhQPNC/s744n40WEQ7qn38unrDXL1KGgmth8f2PXu1w=","CLr4WJSQDsCDIiWdUXWzcP1K0z1fWZ1gnJXi0Vwm+94=","JN6UiAgbhJFO/759VgBFmGdTY+NLQf4Om3gQeTAxLhc=","HyUpEJOFb2SicdvYYUkxuXwx+OyNpxIbC7gsqnH0U8c=","Eeq+TH7+OuxZKlzsaz9t0QlfnThOoM4EAmLqwPBTyRk=","C3fbBCDsHjK5ug6ZBKKJIfI23tSPP0mqLXYaYxwlA4s=","FonjWg/eex06bm0Uk4D/xrfZdygHpVOrfFBz6y4+3ho=","FiI2s0PCwvf0izbz56fsl8B8zPIuMlTczEs6MPM8abM=","JIyVHJUF0s8hNvayTCt0nHdRoBqxzYOTS+Evy7jQXIY=","CUhwQvAUlMKvBGuUEFtwsbjl7RrF8VhAgwmmanemq6s=","CpqXB2xdU0EcPo//a7U3ApCAtnEySBn7ivM9ltQyrOc=","DEPV/AAgKS/S7NBoQs+oNz65vvip2YQ0i0P6lhSzLiM=","FG0QrlOqr1lcuOjrKa3j5WyS2ptVo7wkvs8qL1+rA5M=","G6y6QtgMZrOwYstd2mpiMEkthoWGJEfGOMybTsN0M3w=","FuwWjbA3KpFE9RHF6GCwcROmcbMjlSqG6P1Acix/yHk=","ARPlRXqt3+Gjk9diWtBb7EDp1Ep+GF6jrytYrmlat3s=","GLqBSip/3RIG22ow97mPPEXKtZM2K+/csNKolqx4p/c=","EGhDu8NuQGSFbrZojY86kKQ/+n9zv+Ywchab9SAkgyg=","AM55D1SsLTSibKF83WQqMbHUAFwJdSxrxbQzBkzuYyI=","K05Hym+JfjN9bVLB/zOlJIfGibq1/TViDYPFZ7V6YAo=","JyGbg60kWbLfn3PfXNHS+L5mUS2VxPPYG6h2dAUZ2y0=","IswJaAZhJVPlBH624OyNAXWbnfI8lvU7b7yqijYWuo8=","Jz4KKlbkJD8hM72Q5UaSZHGEqIBf3SzrVBoiAlOniy8=","DUSa60HozJsvMoVvidvxQJ1WBfxVfEPHz1c1cdWu6hQ=","GwfPxg5hwWLcnxLeJTt/lSqSRr0sfERco1uFcuXXGaI=","Dk7rUSw8rIR1NYl67U+57TS//YfAEqEX8qPaqBDfseY=","JwIecg2gKGthwjt0jMfDWPtogtgQB4f7zmhfBuEQRsw=","LqwfotEhJiS8XgCQ4lrA4BYPLXOQx5Ci3ndAd1gw5UI=","DMBkWHaBf4FSzNkBCm8mKlFq8MookzCjQNtkdK5m0mE=","LM+S0jpqvu5ueSS/DUqecEC3FeZiF5oYL9Ebsm//WMQ=","G3ad3DERqdON8x9ICfMU10m4vp+mQtKqo2lh3N4L4jw=","LcCaVji2GUxtbLecVu8gWwvh58g/yu+Ysc0TZSlcfS0=","B+/KmtYmh1SgPvtnblk6jHWjq4StkEaFBlSlSIMS/U4=","G7c7TjRbB0FUjaKqaYeDqMh+kjqxsQCOctc3++f22fI=","BjUXO3VR/U/oMGq9dkoWm8zm83Gd1gbNC8HysRf8Nv4=","GJ3Tsg0/j1Pw9aKtl/MA+Z67hAkKQ493OPKhJuqKRQo=","Jl6N0fphlGGVLM0dOpbyqpSQbZ3wc2XCjdPpOiRPbuo=","FDoFj+OYeq8cob8sN2tJeTEO9Uwpo+ZowSTlr0N5AsI=","GG7I8cO6cK2DTBHOp5YnUNdse+hpHmeb0ZWmXf5pjsA=","KBjrAxmYxVTJVwhCGARY0UkxbxTin+FiYAUHseUJUq8=","CM+bF90sq8It5oBysPO73kvqxctYtXUhnHD5P+HsXeU=","CimKnwRKFZC/tKaDUCfJSBpAbHZe1chBh4pcFLHE9O0=","L0BQ5LOxUBfGwZ1Bd5DiL6bSkmnTO1TYAcSvmM9mLOk=","Hx5QNfcsujoCJqBEf80oxrshHaX96SKUWMj305dKBqk=","JXY/vJQhNdqF+vNU9Hs66fwnYGrXAb/n3j7nBNgWD50=","DrYUK9oqXya0n23tq9y3qX8gkx/BQlaqheajsFmcg4M=","H449ibXJcyWnBjxwMBQUSvGV7DfLiwnVRHhutnIejvQ=","GgJ1g+Laet/7NTQJVwDcb31v8qehmwbX1p1+tj2kFYw=","KCPTgiGQFx9ZJLT/5TgwUMswH7rNdFwuB0+JFSpTRww=","F/znogX0LxfIChRqo1KOdKPPxEShKJz1NUB/72z6Ho0=","IRt6EfHTbJwQqbPnjuUymuh+fv+8zlloJgtkyk3NBu0=","GGE2i7mOoyKQdfSsjOrFERIOw/zoTq5jKwMTikS0vV8=","ERtN+arYG0La1QTPB80pVsxISOft6M4QB1U494y391g=","Et9uCEfbjQGziWOWA8h42RoZ9EYRf5pK78qQOMydFH0=","LV5HQRTHxgIL16224VM3xOcvbvFTJBBudYXKP4wRbE8=","Im5lWAikBi+LtHwTHOElus/mjnhA9LpkdoQQQcKAiYE=","HwGp2YqtPZplpTc+1tK2cgMNwcqbRhSbv58ISn0k9OQ=","LzV4y6g6rIqD80qvXGUbBXEZnjpN457AV55e4zmT/gM=","GDkdQjxFQBlALPDsezbMEzJH65i5u0OcnBib6uv91aw=","Jvz2yoEe3yZ72ADgsA9rSeYOWhPKlEgQo2YyWV14gYE=","FA+bWFmE2TH+hWvfRRgF/KZK3+NNVbpPQUBIC9epes8=","Eeh44X8fhnrek+kU5YAkRkOFq/ZAP9SmIuQfsdwi49w=","H5l8beZk6c6wQsVb0iySMrhY5A/07+tAgsdvvWLd2OI=","J3MoS26xxH8U3nHyMpicqb1qcKrhhn7glSmfZBnO5So=","EGa4cwCvQ5yrg2YFIe6dA7BqF8mgC1t6jVa/xAH6W90=","LxMJZEZ5MH6Y1iB2aihhzuWJ5tVd2XDIxD3nrYTX0RA=","LxBDt/nktuw5qgdkAH5QMgYX2XqHvp37jwC0zCfFuus=","GzrFUL/cb89O+YObZrMiO6257Mdq45/pXJpHwqEQLKs=","BwvjDkN4Tc99meQzQQKmnEDHmB7u02DVuZaOfPGc/rE=","DlUpxf1k45IPYRUH+umfjId+klf8Nnv1TdBz8JGjxlE=","EdiPe1ZJpLDh94jInvGQ7ZF9vjnKZMxYzehjOqR5uV4=","L2y/8YqG2LQPiXOxzjC92s0vJIofR/H2bTIB/UbZPRc=","F2gjlieIy3SOEu1ZQmutjuiBOBAkmT1XA8LBB5wLeFY=","B3w6wRUM2kOUquTjlR+NCuvbb+noszbYme12N0WHWtc=","I1XHIltgJRaARasfnPfWdU6DNlVj5FohGqmX0bhejzM=","GG8La21gQKfhQL9yt0pxsjxt3B6EluL3M3V64ADpACc=","FHQIQFFrgNI092oC3DEn+aX/qxs/I0aqnJuRAFhDXtI=","IgNDO+BmgL8u8FCE9FyvttjpQVjGWYqxY087pm3Rbko=","IX0+mENVqh9t9lLxAbvcKBxpt8dRZKE/0pd2uAsqkxQ=","F3fwa6PrxH76Q5WfoIm76LrOZPmkQGk3YAwnPb4h5NE=","H9ilTfTm7UarXSmXufqwQOi0hw9XVDZIUMUIqeVz52c=","EdVLjJSe/LmYFjKNt67uCkEsfQdKmGoGA+qvWs/jKh0=","LMQeUtj5hu53xZsd4mkK5OR47/JdTxA7FcwFynq3RG0=","BHxf6/d0xiIVqn5sw0OYmPV2BB8ZqzyFALB9XBmnb6I=","Lphw7VjfpX0QCBkRY2i7+6gcaaSQOoUXnPekwqjzFEU=","H63TvTpcYVik/z8K6jdPljX1IRcwx5s50Dn5zhesiUU=","KlyBDWxDqy0p/xxapG5NmCwbZSe2oug+xVzQzE1F0cg=","Efr+mDQwE8L9O0Nk4eWSLbW+XA96/de4ZF0HtMkdQQ0=","HRqCqLJdUD60rmXWv1ETBJNCwMEOLzy42pU2yVsSEcs=","Ev8YruK6N/RI6J3LUHE1VjfV0VVFz5z45guq8suDJ5M=","EXN+ZUwzdK5fTrXHTyA9HaKqgSu2CwxcrLXwHAsPY+U=","GvP6+LLalEAQxeOzU1WrWT1Z+q5AQWWgfOku4RNW0rE=","BcoXmtDaNZ2SJS/zMk6ISvJbDt+b0XAOAS9FtoO8LfA=","HWpZiFGx7LudOsRw2V7L1YijsyMDpM2KdoDvXfK5X10=","AWFyDc6hSq1+BxCmcVGSG7nVxAusE2Z0+GLBxDiZ2VQ=","Izhc1J21dfc1UHWfZ530jL0e0daZMnABed9v1hhw5Jc=","EzkhcUnadNULJaQ8yAJ0IOJy/BNnJXAvgdqINdC59BA=","JlFlmtabN6R67Am+cUgbzjyrI9wEwxYRjUBwBVAbDAo=","Aoc3VeXXmWmFTMyqNs2EZqqi4FlOO6N7j1G7Omybh9A=","C/huykwEjVn/P/1hDIGn+Zh1zg/x4ZNBX7wrzENVQY4=","EnI3qgkKQU8mdrxbJndqQg19pu+RSonfsupDS220LFQ=","Cq8BJZP8AUyriHm+i2PiTqgpt4D+nNkbaIknBRAtrgk=","I0lRG88+FLWsvJc+QAY9IMGkL76eXe6Zlk39UIadAoY=","ChOHfoL9VL95RX5wOjxXgOqxlwqbN032mIEpwy4u+4E=","LxNETAJGYT5KjwbFS3c6VTtu+Ur2XTQ3wE4/aFbubn4=","FJ+fha+hIKql2zjhOU9TbMFTD/tjnikq+zE2+wURceQ=","Ca8ex41OqlUvFPpuftQYQqQRyL0rSclyHc1t6A4WSbk=","FZgwbGa2miI6FpJZOGIXucVDu2OyJsKDfINQcPpu5yQ=","BS0ArGA64m7f19iUWv7iAhp/jNNxmYL0Y752XSa+l8o=","LQtb/N2+mutChqyp0Q+aeDF2v4ud3lUAjiMrno9FtUE=","IudtYXvGknjDl2FF++yKEd7XDmu5sUc51Z13RfvoATM=","EOByXmLmYNxaZ14tpgyPHOdWwWKhC1PNoJi7FH2vwTg=","FS5YedtzLvAm0nSNaxfCEAWiMSXswBrOSyrUZ0S2kY8=","LAVkzSBDpQeQG1BU2y5u2ijJRTYBPOZupXZ65FPAnVE=","CmH9uHSCRfu/Am/jzWpCuHOBnIOQXEKl16AbPOMKYjM=","DYazieZj2v68XutyAU7k/9IFhB+75D3LVaBwG0LCHnA=","Kw6gbqKbXr9ZRv8F36VtodufkRh65niaUSgyhrckK1s=","LJ09ZVkantB2GN308QdwWWo/zyXd9HISbIyws/iXVnU=","BerqlmPNMZ17Y5D9N6W5FtCty96g72DeW+o9tj6XM3Q=","HOsIjcjkdu7iIg316JyZQ9KPmvNq2y260XQfGdBkEJw=","H4jHE/p/nq4rqA8qy+5WqsgaJFSt1msecL7h5TO96V8=","BfwQybOrpCN4YhChiajL8GOUSNI5CIkmq5Y0bMVD910=","CX+ZJ3o9j9LZVN5sLVjjP2UgilO8NtE4PC0XeXtJtSA=","KVUIoGlmGngiJ7oqdMIS1HKPuOhpXxtIJvh0CKxNCHo=","B2C9XTCCcB/Z59F9UwpFfUGnvlXOa2CK4jY8PEXbRXY=","D2xBP1EGf7Mk2gSyE/qJD7lTMy6GPfOwb7/j1d5zJnM=","GwqEKyP18AWaAvJledlSYJMbZDhb5CVVNwJwy0YutV4=","CJjl9NYrtZE/5f0uO3VECIfRFW9BWu4YzWf8nXKBNOI=","EPiFJlYFX2NSJ2QkpU7ImfxubYekKZ7QzLkAEcrLEZg=","FbEurbEAOuY4Kz0ziFSlACwVwD2bsChC4D+7ddp2nME=","AFjX8czd8m/fpu4K/TQJ7BA7kfSZJRgwCsKnu/glg/o=","JKz0MeZ6nX8b7UQXVrA6d3qZ+nKAsR3vEGHN6yh4u4s=","Go5y47dkaMQ0u6TxkekBcKZCzn670okIfRh8MF8TpM8=","FVqYHxYcjDx1b+IE/yolzg9TRpV9afrcaFXGEH4CqNQ=","HHR7lNuljDlwQUhRMYpv30yGpfZeTZHo1HcvVntJqIM=","JZ+RGfr8/zwKmNgo2qXRrCEojG68jhb06Khd/P9EL5U=","HFzRs0BADjejfeCbsgdT1JeTIuI/2snHr/n4IJ7qE10=","KJcuyBmsA+ZbCwDFLr6sA7XveCgf5UO7P052LnkExvY=","J34t2ikwFMXHZmKCbdPXbMfGYtKLKQW7se86P1CB3Ko=","B24Frun4x0nRqYs0AvSiyHvihAZZpRguFcqH8xgJyE4=","JrIpHDHc3MLrVfAEweq0lkkNAl8SJlvoNfeDqWE63xQ=","HsrFOu634spDaiANqvHpdb6KxoeoECviOn8pHZJEhB8=","EXZgA73/Xs81IBRQF3bQou7h96iJhAmyGr81pwkvRhA=","C+ytYOjqsQeTP5JJXsblBwsmFJ6ua7EAUZdVYiUjn5Q=","CM+8Xh9e//j7Fza/EYz98PvYHL6H6mGTHc8MxwscSIo=","FfYwdrIKGfVF6n+dOGxj765hne/ZDP2DR+Pn7tprLWo=","CpichsqX+UZyQNkjmlGuuox3cqS2izf5f0+6JpWLvho=","C2ZnAnxBUwz8HPfGtgv3T9FaEYb/wLd/CXbV4dRQGpU=","CofdIFgwvu3T+L+SI1zieOLIUp658aRFMM4bJibEnAE=","JKgz2PXbfPSeiJ/iPFGFEKiVgB9/KHU4U4ujsIKPgQE=","KgEWKV4gdMI+G9gXhCWG0RXPpxA92YJF5tNkyp1WQsU=","GCckAkvRtIenqIZgTkMS8l3xG7KWPqFSZJzttv/PQ9g=","LsT9Fx4JJ9yTMVQOH2Y54VQetODLdMZs3tlboF5xi4w=","K+wp914TrnACITu9gbqYSFAdYTiUWW6fo11zT/6a1Q0=","DKj+hj+yNsEK507AlKif+XS12cxJhUb3bAvxpRCo+YQ=","FX5q3DnphP9g6QT/2F1LBsD3yV2LIk6rsOEJDAgKMgQ=","EzfmuVABiulvRiFEJSEJB+dXiuqg9i/jr7mHfuMQF4I=","Jn8KwyWTBGHe9q/E9UttCeFj6EwApBQHk40tJj/WSbs=","HASQATZqNSHb/fzpLDJK0CHQNXZ5EVdPvUtOkACumk4=","Fn2ybR+T2RFBxIsafs94qz9xRIFZTz6x2rSkt4MpcG8=","FZ+iPiqoG3h9cPrPQWB5to3muNfA4jRCH8RQwvGRclY=","Ka2vIM9ZwIICCadJxho2uE6xaCh/esZAo330pWnD3vo=","A8OQaUunq0gAuTEhu1OjbWVNzqj/m9pkyVdw+lRdrVk=","CR+UKS9rUlJXK7QZ7EVdVDXqsUc+69ctiyCuP94BRsI=","KdZNA1a2zQfKvBjrXeKHKMJGZjxgEz3Zieia+X9dwhI=","MEiXqlA2s6gHdOQJmU9dHnGng29XeDnTuS2ThZCIhpc=","El4N2PJJSG8TO4vLkXnFUlkpysOrCbuu/ZenUby4foM=","L+9py54hqletwHSdMjEOu8OSHXX4tceZeKXoPWaIjm4=","Hjr0CL6M/ku+A4SacR/K2FtPJ5d3M1JPK9NbcWZDhoc=","BOZV32EUZIIg86KgVoBaY2MHuAl3npOXlT2/2LlHe1Q=","KkMinmZgk75hhOKStKh9YFzThgA3+irvB0htT4Vtyow=","FW+a7HNZ5UJ9X5ehZcq0R9JwidzknxQB6Ww34VlJDNE=","ISRYJB4pqD0NEcZP2w0sXnA29EHlOUpiX1LBEA+NrqU=","HdkJ9aMqZXqJ6vlIoR+O6odO7M9JYysxAxTXftcsYlc=","GdioH0hnxAzSkjRN+NLdZLB/6tQFQQdBSkW7UEu+YOA=","HyhaQ4/HymLtvb+l+a5if9Gmto1Lu9erhnw023PGKNI=","Bu3SyXy47123ETYHQ0WN3m1F3g+0HGRqcq/g4CAzqd0=","Lzdx+YTTNMcpiXPpss+qGtWYnPN5vEH3i5ZAc5Vbl48=","KrvEO5IkGISVzZ7IR58512O41WDfTp3qHNexYY/Oyb4=","JRePCDiRU6ojbh2jw7ul5AjVK6kTw3GBKKWW/EB1WlQ=","GygEXTbOlMpyrVU5xU1qmocuZv5iBqJRph31r9UOPpM=","EcFmRjPxL9k6NdhVP7jh6/Prq3NhRkLaSPdCSDwNgUg=","GTB8aYDGrbf+HUU5wQ1hVzEK9FzqpGGMDUpn9xpKjDE=","FPrkbQBzPl9+jr+zYIUzEfAh4qJScFRTysI9/Ncrcu8=","Dj0UVeR507mbyx+LZipDyIWpkRsjjgj8T6a9EJA2lJI=","Dz4oXoVd4HnC88VitQdNCVtXJosKsaoHxPdlAlQIfX8=","JK1YULT5I6vWh9vEr+dbomA599SzPMQ7tV9gC+X9Lr0=","CiIUPrGCF+GUVeAjvVcdHnV8zImFBQT1gOQzy0Cv3ac=","C5aMCyePMunuG0rf83q6PRXVlDp3rHeDNTOXtyxw1TM=","J2mQ5dwNsDC42IpYKKSzQxd9zVVPzoo2aS90/zj2TGg=","HxgKzqp2byS5JVIkJEigEyZYCpwtvirj/7tTDyO6Fxc=","Ld30oUdXso3gPP4hC+M4z+O2P4oC1/sBVaycbj4ra9A=","FIGEEQjoCZaweePpd1eEQ84OqImdVY3ZLFzyAnl5Xdw=","KjpqFzQByoPTOwmX6qKAW/eGnMfeukBPOV7hTgbao+I=","Edc3LbW3ljYylsa5kEDYg61m9UhitJZfXaDuAie7xFY=","Az51fpnj8cqCbJpkinPeN0oRwoOAJM9zbdMcW198CCU=","DhuuXnRt7VEOqhFFV0qEaMOn4mkaezJKm577NqnN1K0=","IYGLH7qwy6HvICRe2ZRRyh3MqJkiLBR7QxVTAWoJ3EE=","GiYExlees7HoA0JySezxdCqb1ypq2aw4RRkfjFNvfZE=","L0G11dNJ6VXhX1C6DMPT6FTpBl+NYkYTMszXRry1eGU=","A5T/8sAlAnY1z0p8t1iKbvWH7ZlDFOn4E7ermfjUwyo=","Cp0OvdjNw5K6RG1tzVyTgN/yl18nXjD2NtyWQbKiNio=","JVSYy+fJ6JWAVI8NkiVf6aF3VWnDgKvRjSIASAe2iHQ=","Kd+xo1/lx/JUkLbi4wPXEYhwUcCSqOZCwH3BMK05AbI=","JaWZWpjvD1QCslsgMWmER/+JqbYwCU1xqu34tfxMzf0=","A4/2Bf7t96dA6JCGL9WT+3EqoZtHIdDZewqF6nfytiE=","GqINcw9TsDWBPxUEqFPsh/ibtWsF+3s08h3rGq1MGME=","ESTysz4FxBWn2YgdlIueFfWJHIFqBJXo5i6JCJopZz8=","BR067yRO068YgNaGWLT6RSqj+Kt5600d4qG4J/teo1k=","GMORHT4l29kBpzdzJ8ViJSKin1b8stOVxMmsHgVAnTo=","CeCkdz7Vq/JuR0yAUOlXjFOYq/xC0q5mpyw5V2It4Vc=","LeQ2yKIX8yvl0UUb+/9+P2s61GotpY+EOZCNKFya/lU=","JprSjLH6wiOGHaZkrN8zDBcy51zp0agAcdj2I+ZodY8=","GNXJ8KjDwcYqMaEtlFrFYufyjpURRdcAdRtZ9cTgRt0=","HuwWnqeaFJtqTFs6zolPQhd53J6bs2bo7N7y6zxT/Tk=","CYLOUY09LjdJ2r5rV3WP7562Y6mW272RrsDthOqnXt4=","JyAH7p1+x++2yA8lohEPlNIKxDb3xQweK39r3MdpCfM=","EHLT1UDRsA38kj3K4QLyts42PlBUs9/ivs5Pls0V1kc=","KLuNcZTUEjdnc41rTXOgWpTI6Tx+CPgIw6S99WRCASA=","BLqhjbPbUB055CxJ8czjDdVhnh69FCZoV+OKdTxj3eY=","Ewx3Y3vfGjNtm0yDEE7R57gYCBQqC/GydxtTDu2Z8D8=","AsDOVtoSz/Ke/7w9ybBb0H161Cdk/yg1DHxIzkitSvk=","I+rHaV/qI6ovLsnh6ntiyvXnHtYQZgCb+Tpu8/dAVqQ=","HHm+QDgh9oD6+CiYByRKazwE0HFhNNCJrdRNu5facXI=","BaSKvCgfdx7DbcpiaPWR67reBbI/uB55YcjN/11cglU=","Airvwemk0GzHZOlJhjS9qXvxHu3VhQEAptvIWGGdJrw=","EA+0AOKq7KaMy91MsFKN07jaggfWvOLUG0rswfByBYE=","BPCx1fv3yUZ+gmw4VCS5H6/35fa1njdlHcS8pQAyfMU=","BuM6ELm6+gTyDz5ZbAwdmGg2t8FqVspIZp1aBRQnAWA=","CBvwVjNbHETEYcTW/B+eAyoYudL38kAHJNsGOFvfB3Q=","BsoDqXpWGKxnHU0sGFAeXoWIvXk7LDtU3BVNH0C/YnE=","EUvb2IeY2tWNy9uaH73BI+0bVkkKAVt8KUPrWq2e0d0=","Ib0o/UnLEVG+GvrBy+0LcFt2BYeEq5L8s6IlgpF4BIk=","JVFuNYBFKQ17zOG0Y2yjMJUULUsB8i732U4oz4Hp4p0=","Id7mArJeWmeInvJDrJyJG3PrxxfH2BYZlddL9OW+wH0=","IFmSEB73xcNJOuv1+463rNATGVJN21b7ddwVmgE+nIg=","BmfPabRtz65y9/5rXYHm0Rke8CkoCAPuwDL1/66xIBk=","K3qQJ/oFJD/7qkhtqsrvhQxNAzuEs2QduY/eATFeW+Y=","LHrtE6qQZOBsTdkplHn9L79W9z7f3koRfLjbVNx24TQ=","GfdtDB9bHvxhxkUYDFRBtWmpCtcRD1EnEEbGQveO5KY=","BHSdLMPTxWEtdYbvEhTeOPhI2LPZr6Jm4VPto5IOcsI=","KFjgQtvVEtnsFH/NXMD/IVcLtejaOyD39prL0oeFYQ0=","F6XPJQj3htc0l/uwHxoC3Yvt7Ymio8IXC6HzsusxyWQ=","CMezJjz9q+p4TSGi2Ii3sQ1slaKCoQFpyF8ioiu3jmY=","FgT4SQviTmrbw3210j+CvXBlRtTnjAjjnBWAt8BNRv4=","BNLk2xOtrUm7+TCtJDFnx3KXq+G9c7XRSFKe/XXr7gA=","JJNhiIvexY2sU/nAF1LF9u172X/Cez/UHgy5C5spN8Y=","AB/yV/i5D8PMP0g7liPKJlGeTgSubdOO8kJ1JYp/FJQ=","J+nJHjC2tePDCX6hn+U0FyeivY3Lr/ONBXMTFp4/vsE=","AiFUAV3/nfqU96gzn0/xGKj4F236ssiEaLLKx+ORTP0=","A6CEcpRKTITuf+dqxhuhKtG17Op9FNTe3IsveoeOKvo=","InBmuJNQqLE55b+LFGYMq6NpsIKLTKulhgD4DKzoSrc=","GIVB+hLad+IdBBA1GQ4K8ycoGTGI93Ip15oIzeNeEfo=","Jd1cHv0WI1LyWrd2mFsP/8Bd63CUu20oedkly6Moz78=","Ep8pLpz8fNsbKuLHwww7tJE0nO9PfWWBLWYJWunqKqY=","IGqAntp9OW0DTomBNxmljKrjgOufIh9EW2fNWnUU3UQ=","Ln9WahjFxCi1W0t9S9rsY/chtZxKMHp6dARY3NnQXZo=","HA3wsQDk5yip56o09rDbDaa4/JnD03fxVgqhVrfyYmo=","C4daNmcQwGkYcrJtmpikmOkprMLmd4aMTM/2Yzlc+3I=","IUFo6R07apTUhHaxtCTxYkC/yP/2dCSUzIlxA7p9JFk=","Abq0it5Ga/Y2gTY0Yk2vc7bF1mFDQFQolXlcSXFjUek=","DIQl4bJHDKQkOXz6ZmZfuGGjr07WbbkEX7tqf3YUedY=","CHDhOZT+MflLgstJI+ggoTw31xHVbcxxj0sVoD1ifXI=","FOu8/Ke+F6Xvw1aQSjGfSWm01BNvECb1dADNfbQk13g=","It1epppQNv0NT2MVOvOG/rI7y9AhEtC3V0pjFbTdX9E=","HnKgmeies3RD5C3h/33vFUlICFJgDPRVL7F0ZqvYnsU=","AY/mX/D4kBYDzq6kp0YvvOuA32JgKpwTImTFqkneDPs=","G2Sf5goXeSJSp37DZe+DL9NyJQXuQLCJmcco1cbbKmI=","GKQvJ2Mgcbh1Jtldy33iY2KqKKvqQmxzz2eUULypWeo=","Iqt+pwDbKyh7MB0BASTB0q9Y92Q0uLxHxZqohiCt2EA=","Jtrak13u+FUam91HSYVZLipunqNSLAevxL85V3IRAR4=","DG9Bf4il/giDny6LkAfiNg4dYY4bRqSXnLpZ0ptxlkQ=","JHiP87CMTQ+wtRubQ1j8DL0xyjG6BVFYVaM6KC4t4eA=","HbP8riSrWXIe/5rKXV1B7p14MaeaRa0+04WxMip7J4U=","H0X9V+gR1OV0UWV12GUBzmvpJG9Ykd3vYrfM+DW/3KE=","EazsCxPQWNxscjnrqQNKozcC2hfeddYwbygqGyvRaJI=","IazbBdVa4fSq2HPsWttrYHgXAGOnDNLmMZ6gzvgzzyk=","EQ2blNSXmbZZ4UJpnnZ9lWTORRebUiZI+oqDtF+NdtM=","GNsrWLQHQfLgB/cBGOOhobwhUOBPo05CHbUGjeGePyQ=","AUdoxpNBJtDr+97zQbV+0ikHbXA0juza2GR7HQ33GR4=","FwTS0uGHagdbFnpl9swm2IN/fi0/diiqJtP3aWliwjc=","LLgUdnD3Pi/3mtGRLINdPT8rI4H2DrN0RKbAwXO1N+c=","CQi54iCIW0F7WNsdoMqXTC1le1CuHDxeEUESqSWnFZ0=","Dw2FtFhhYet+E1P763qz4xtbYucgN57+P2VJB5rD5g4=","IQP69mPDVJyb0HPeIUWFwa7b1QI+SlrmGZb14isKSmU=","Enygxk02EGOmx9o3xsPCCAGBtt6l+2NGkVby+khuf/o=","DD6d0Jn5ymAO3gOa2nifKHle9/xlDoRUAvwV+Z1IwAs=","DqBbXU2IubX+NUBvF8obtKhV4KbufWCzHjaioh9BH84=","CWPEvgccMv0GpSEkwNh67+WVwdsrLmwsnO9TRWu6MLQ=","Cv+JwegUEEaPpR53dvI6B38nRGvZjMchifZBtkVuzOo=","FedTAn1jM3ozDCYAAAguoHVIpyTcr6JV5nt3RVdGJKI=","H3rLf/RqfGIzgRVcaCk3S7d1h6vR+fprh53zJAlUrXU=","DGKj3gu2gRB8TcbZ5iPQViy2eE8kA2k/3WRiIgOxaGQ=","Fs5YIBbPLhg425fcvs6HP0n4xgci11bFUa8607GpM7w=","Kc1eL9K2hOR8B4/Vb4UrHduwfrz5lb6ZHpwiWVOfoDI=","Euj/k81cPX4EVdnrDn6f+UBXXEHDXR5eRB5TDqiIqQg=","DzxACGchnUDmq/LvIqkJAYEeyVxhkGxzDL53d2HOEvg=","KmH5a8U8IyjdyF5FCWyVMsAS9HE7i4yLH+Eif4/XYMA=","HKlKtwblaaT8G9Nsm2NFfV1yNbNWvla9+u8k+ZN4tGc=","K9SiOH5uwSQVXeRwCXieG5Ra2jraxeNRBzmL1WlSQJA=","AEVBULo0VIqFGxkfsanzWHRk3hes/bDd63FaLmQ3MXQ=","HyKzm+3RFalQ99eExwMcoOw9GmpnN117bt5IDFyhRf8=","B5pmFWz7mcwXxtOfycIhm7iSR7bK+TZY1Zxv0KHRuwY=","F+5t8IIjcYNMIi+VTwOwFrjVrU2xvmbz+UbV0CjmUXY=","JM3hQWm0p1jDoSarP48YB3+9/uDwP6e8z5mZGd1BeAQ=","IK0I01WMnv4DyIla1NyIv4q17Uhn4azeZTPqL4bZ+n4=","HQ6H5gTQEJGJjW6F0qua+brgOrURo0zZpiDwiP348eA=","AxCjGZUvP24lAVq8zkn6gRC6ODwEhBPImaxNICw2uAQ=","FXCxHmRhT9SQRyecRUB46qnPuIOpQ0oGT3Y0IbJrJwk=","B6aFCrmXukWDekIsHARm5s2vdvrCGZ8T9jmGsqGc8tc=","AsJTRAQ2QsY0pMAR2YGqp+Xxec6epOkh6NUtDlcWnOI=","CfdOioXCk+6KLnH20jSVvNneVsLgA0FpA07uhVlvWno=","B5M2NjIgx1NZCrIeFkq6UYlmp0gMSyiQ9FJyNoqyqXw=","H/BGr6zRT7o0bOcu3yPlQNEIQq1+48czRnd5UYqacNk=","EdZMwXwJXknEXrHKK61IKoIDJgA9ScjPnpwC7LestLc=","LtIMC44z9X3tVYHPk3pAVfaAt9ctZcVUwBRWgIfVdy0=","JZy9JE6oyYQL7Nct8p6W/Ym2w5x75ysWvp8OQ7c+724=","Hn0vIZFylfw3WFQiXmOtUD4n6NbJIl2zXCujdc9Pj8Y=","JX4xp7at2Qxhe5MyW603En8HMt+sTQrZMzH6eZkhKlo=","Ha1U+tQnPpOXHe/33D/nSr7xz2wwKmRAP8doOWaXUBk=","KWoClnpVE+GCfinHcoW+ZGgqsULRPG0rfrWMCSDf0Ng=","MBL/YfYwoDUrdB5j1ijdvtR0rmmTrNwPnjFOjspZD50=","D8uPohZ+u2tPQiExqO2EEwazoIQPJY1o7bR36OHr+io=","ATV2fl0xEuB3dgfBxbkbEUi6ZB3OoH4cI1XCYChbocw=","CRlDCY/QyUqv6r9NvElLY4XjmWnAbApoVN4MfmiMTXc=","EwEGB9JOeheMQ9m9aCEhV3djIdlUONVyo7bvdxQeEbg=","FnmdaSMbmAJ4mt+dIkaEQnZ0YbSdWU6alQ3Y1cpJ59M=","HrB7cEAf6TuB35eh9FmZR6aoEuNEmL8qu+sdJWoo7cc=","AFzdmnl7zx3vI+jKEguQCnYms1fvhpZE8or+DAU/Pu8=","JLINiFzZpjGCaarql7JGnCtg9+o3HGqcIj7u2uy6SeQ=","KYawujo+IyEp48RE6UglhP2D1tan2b9DEgpMVu5dsDs=","GhiFN7eM6fZj1ktXVdpTz4jsruhSRCdn/BYCX/emZ4A=","CGGRNHSYQZFb9fkswgRev7EkUGubJSVb6BSjso++EY0=","ATXPbDzQxpRYH8Lkd9ZTinsjP4nSJjc2IngbApNA8MY=","BPmlJU3/dlygQD76oqzZCWt/WfvCADkThmC4ksgIBoo=","KbzdbGcvChhwcI036FEwIlxfyCbp5iFGMT++HuLHTR8=","DB13f47tkR1MwOUMP0MM6aHV1xdoAL7cNvkrfkpoX+A=","H/6Kn/vHbUbC6iq8Dh+zgx8YyBFEvOYCgR3jliPUpJM=","IWzT5m7oKx2mWFSfTfE+w/OM6TQWc8SYWf8Ogxgnp+E=","BrgGiDv2k4ixSK/XO0iA/2O8V+CJ7yVuSla+/nir27M=","GGj2UhTOhZlGoqhusJJaZQzE1HqVuYijvZilQG+q7Is=","IBsss/sAAlhL7/afqoooloznMgf3MTNqPVaGC8jTPT0=","DxyZj/1lfVr189FQD5ghRTdD+s4Dri/9BVvt9iS3Zpk=","HY1YT9OT0qjF+p+yhAASpOXP0fypf4O/bMpGiLOTH08=","HUxex5LQ+eEhwX/1dU7/mAokd/FC+7gVkBtsWX9fUQE=","BYKD2agsv9jwFnU3OqY9knnpu0Y8IlrniVqMUaeUvxU=","J5e+SMmcGaFB5XzuMreEX1U5I7CEdHlsvg6555sF+OE=","K1SJYRbMRd+qRyBNUVYHXR3smM/KdEevTpNFfsHZ7G8=","Gy+tLte67j+z0hl9ap7cow7OQpJfE0geD3gBchGfsT0=","BrVOP914XgmfeRyU+r/GLDz3WWPCGnWmDmXaiW6jfcg=","LzyJYzZaQFiovnqR5uRR3LHXkzqoSEpapzWWg8z6h+g=","L9mSnciVkw6wmGYe0NFS8oaL/qE+iZLQimklO56a/H0=","JdHr6OnsD8bRgrkG10dJjLn6VaKY+Pn2ybTMLrMmrck=","C25lNrowILviWfRascOLL102hluErIJBcg0ozfvDQSI=","I7i02yLo/5k+Etm4F1fR5+3Gw53U3kfvbKyhR+n61xM=","HCMr9hy3096Ldh/akwTCRCCwWf0B1Cx0aTGSrXdjTWk=","BtAYSiH0WT2vho2VYORke1KDiSUm9qf5xe4mY8Zm1Wc=","HZbsrcNPDvn1qcEGUdb/4/r6bWxxB9ipLt5AbCKd75M=","JdaVT2uOWExl1woNn8W1dbX+NOfKZtgnOSjtS4/RkwM=","ARVg0FgXtxFq68Cw482mUOaMD1KPYlk68TWH1oO/Pjc=","Cke8VWob32Oa7g6v5s9+e5AWebGxSkfb/6Gxmv34d6w=","KHr0k9L5Hv2eEvO8fHxODgTf6J+p5oJC/EGNrucze+o=","EUmAMk7vhfkMOHeug6SABau6sMPA999GsyRNhAGbpas=","Ly8HTJvCdtn6FyqB6VS2Fsr6yhEJDaTDMPN1nGjqwqU=","E9GaWXKK/dpFg6nhgMy5sJX1tXKehmhRmCcRkDrc/hM=","Jg8Dilv5R5CyLyeW531l1LUxQKsYxhevfaWbseutj0Y=","AnCUSFS3cRFb6drjuuYAeDjoExH/d+M0dVw3wvirzLE=","KfupCA4iAaTQnxeZGdj44psit6/xGjw6G6i/02iAcy4=","BzXVUZ5/nPr6npQ/9U+QS63TwHgSpxFVV502GAOw0wA=","Ej2IunjV1jOtT0547CgG1kKtjSSqm6jW6kOT04xaeU4=","Lyw2iabOfRw2qkKQbdi2lL51Kk1WQ8yGNVAamH5jjao=","Cp83yQFFayow6NVtZa+vfL6Qs6abRxEvapCe4ciWwLw=","BpbRpSzZZcYbgzPP758UfafL2u1xvl/MCk7tOs/70D0=","LfZCBtnLfnY9lMcuhdom5hR8oCI29nCju5fQcFzb8f8=","D5JO7sCQsSOuZ4pHqj1Muy+8M9LqEK/8y9Vb1YAhzHA=","E3aOnWuoVMVXEk5+zy57mmo7weJXUcXbULaBuD9eTms=","BSV/EhNTjRGK6EuJ4q3efkAD4EKDb9oyplqmPJanAqc=","Lt24VMTeBYFIJxV+nXYA4FPGhjRlN3dlkskanFHvrv0=","DFsobkanD4EmGheZwDbP86E43TGvhH7qN5v9zoz/3cw=","KM6xMRrj8hEsWe/y8d428Cf+dI45jmHi37X0FgUZW3Y=","ArqjxCjU854d1RFyhAzsr8k4aaXU0sRR7yYbkdgz6xg=","Ev3fy6TtxI/6Cvkn5dKdZ4ytQ7HliJ5JZRJCPFHHUZQ=","H/5KQldlrLtN2PZx8Rw6vtHkPMhynI1yWKeHNm5pNb0=","BRjhFnY513Jt6BTlc/jW5kTeJAGQ6yLaB6wqbdGkn8U=","EIgIjKOy7F7zQG2LGUmECSU0I6DLqlebeM/iK40v/dg=","AUETLmOb45D1T7RtrxvDOmmNoxtuISQawlupG0p6I0Q=","LTDkB1eWBQwPQARABZs7CBQaPAlpVcAHIPN+M0mxADc=","BsD40gUEENeXl046IrSNe0qg9MEtt8caMZrexDYZQbM=","AncUBZs8olMeOmXgJNO9RoaehUtoiEprFoaRCallMzo=","EUPpYAM7KDfjWRGyJZZvs1Wfhphop1h2hM1yEOys6dA=","JFYQIrM1I0Evt4US45YXIm7IdAIZOdPQ6bekAXlGMrU=","Ilo6I5BU7wYeZktW1l79Yt2+XP759VvUAqMni5TJvB8=","BL4WWlM9GbSaAVHnGDhopRIKLmQitQBEEFC0HEhjBbI=","FyWFcaqHxj1HfRDmTQaf3yMabkfUox3dpNbl8ZM/k98=","KppriTQ/xBbil9u6b2vD0oTbGAzd5mzpSwuupf9xa54=","FOBZWI+PivIil913u7ARL1flbDt9PqR0cTNNNOIYG2w=","CMCc9nv00P0MIRKY/kftIz5qtS68uhtST2ba0BNm70M=","GRbtS4pfl5FUqRmVZqizYcwQB1Ua2dtFUV+KbA4bJwU=","Eax6hg15P5eHDpUrMkZMtfUB4hXmaRql1LecHEz8zzM=","J3DFpbg+9AfLefyeVWoxC9aqPwgea0XZinaD9gwyJ7Y=","HUEtFc3990jzqX2tgph2YN05pOqTL8vFGggiM8FW1ps=","MD3vLq8Wd7XHuc+2eYKYBNZzTavNetOndLv7moM3vEU=","JB1tUL5J+3lvzNNiqvRbNQvP10Vz0UTHPnq0LjBHAR4=","EUcnqBzZEHM1L3+APPYhgg3nec18bCuauHy1s4JzfUQ=","DYGE7u6v87L8oaTNqznklR46VzJ93uUWN9xtJEZIQvk=","KWmY8WJwCazHkTrwVrw0KANF7GqcJ8c4BO4UL+CyuZ0=","FFsnPBHFdsdXiksCKB2bFRU3dYhLtueIQFxIecDtwtI=","CXPm9Rqc9Pvsp0FlVi16ZW249kLEEFooQbG5NImx5zo=","EugbAB4ekF+dzqUStR/2PVVIjVfNJf863UAlzzqfZ/k=","Jy54gKF59XcdvnCufX1RyiiRQSDqHcOrhClWXNany8w=","FVtNOnix1wX2zmJL9GXYIyX+9wFnzXeEr4cocrNIoCU=","CSA+YMMdr2AHqe8gyy407KnRydk+mQIeCjg1mL/nc5I=","Ea1ID6cts7wWlcm9Zy0uCaVOcqyejKn0X/ihxz8PdfI=","Bf5O4wDEiwzv0DuHBxVCZM1RPAyIO0Y5RN/tMEDFXc0=","GCoinRBCnbn/ClJYcp5wb+koLGt8pgRz6iNMoToxv+Y=","HvTStmih4c5ETSE/GtTSPebMu/bPWpPTFoflPpZ/ndQ=","HPLTvyQOAWkcxvu/I79I0h65uInGKUzBjR+3nJuaU+k=","AMEQFxqPBkKsDtsH+Drix52ZGjQ4Nm+YwywtEvL5Skk=","DYKmiwVwrIy0tw+/KmC/F5Yv8ohihO3+WquP/YQxS/w=","CjHFhZOWaeVpfGsWZ2ftrHTmNZ02ThJjE0kQknZIrTg=","E3xbBluNOnFhxju6zWDeyesuF8Y9xpal0Ve2SFVLHFg=","CQZYmRzOCa+b93vx/AUGNG5aA+MJaSHo1DZGn9dbtvo=","CbMJ9jiKf2U5O75Q69YRCFSpHGdOoFGJRRz2r9SP26M=","DNIX8w7uJZjKpzidLvoYKkdW+t7PZ7g5Fa6ksMNs67U=","K5pQ0pc/Tsz+JmFu7qj38qn8Hwno0oU4aRlEAhebqnw=","HURO+iceEFqDsxBdRpyh6u5qJ1NLmmLMIQsZlG8I4a4=","FuIeCBUl09vA80V3/RQ2g3yRLTkk7XVVdxiZLRTfz0w=","FXt8/XVWCgvq1neEPFJZHRdVTY74oBW+I+NK3DkEUdg=","G8RmasP0zR9d1yvP0dzP2MYP43IqNfZWggkVht0oUoQ=","IrEPXCGU2QVCIewqnMahv8H0RBhxgx1fJNPaaG1NXp4=","BR5UhGnRkpCiP62E2u3StUlVkfIsPca/Rn8erxKgn1A=","Fm5k+n0JOckSeqWLeq8r6mHfuzE4vN892cyYbpyk8MM=","Ln+NRxB8DzEDHeFfhA/8e0O49kgV3XwQNX6FKWPxTIQ=","FVmKayx6uRwbp2hYXxHWTUyaP2CazpA533U7TPkBaTE=","CDAIB51ZAM9zrJ8FAc6yfD6SJQ7MuI0Q0OAcWTIC6Mc=","Ao4wCWZU2hb9kK0sIAgPrbC7rRCaPtGJ1COOr9Lfw8Q=","FOuZNWWJTQVWGJrcUJtZRfEnX3B4vslpl8NjC3Q+k9w=","IDARww2yGF4/71M2BY/22aXQXFV8PeG2J7tKrWUdubs=","BjeQGsZHW4JvBz4ThkmJee+6mNS12vktKpq7Y7WuqnQ=","IDyz/fPMI0py7UyGmTJ6tsrA6LdHmyhMCMcJfRYp7Ac=","GhpAj4mchBRbE1ygp6Q/Nes8t3zVEkMMMlzkShHd7do=","CQDCbahVfgdguXHjWvWGbHzElKwvvyDYYhMESexB+bo=","MDpFUIl+23lcamO2DqM8xe74L9BEm2ohGat01V5JwkE=","FyLlqENIK1mwea7LmVxD1rgnXhQT7AilXyGLgA+zB1s=","IKiqGgwvtM0QqC1wLCwwEE8A3lrZkQOnJN61Lp2AHWE=","L5gNft2rAsBrb7IDmOenrPYTKvGmBdDK4BgilJUvUjY=","GBSJhwZJSR+EkSx13/3VXNDcALCHJOof5DFH4Zltj7I=","HdC5VK0uZazFykZhU5GueLbdJTlXap3kQXVVNW+XlL0=","GU95zqYk8rylHTaHBlIaYtxHOUcgmqXFAIODfBbuxqU=","KunCROSwvOQrG1UFOk/Jbuev/aIyZ5IKiOh/FiKf0TI=","GuamqMm+9HfRWiEXautCK+JOXQ8MvYycs39LkURRDjg=","JODmoAsXXiJAfeZoFb3dCWtC3XP7VR64EPhOAb4wTAo=","LxarVnEIn33gu9HhR45FufpihP9ERM78i0NGkYe4Pl4=","Gdysnc8Hi2poUj07zDQSmA5VGc5tuNErbas5B7vX4Ow=","ILC7HykBNq6IvbwVs8hkYksH7T3/V5BVwWgLChhfawY=","COiT2K+Xig+6KkL2v/fy/jp003Zerf9JqCBW0BTb40Y=","DqyZ16903hrR/6qbX0Pso11gg0lVNsCsvpjLry177Co=","Genm1WkjczkjoVzX+KQ1A1LqMI1hYEc9WTfpxLULfP4=","GOQXZNu10g+FgxqJ/cFAlO0DQyFvYCZh+lpU2+vAScc=","Jm38bp0xBAz90QiIQPwLZRcpdvWOBkDqb16tso6ryqs=","CfGsH12A0UPZzQhyc6lX8Tye4m9bds8w0/tzw5L5HPk=","FJU4TFk+xNokiheqRXvb6M+VAgFZ/0brlzprVYptRt0=","ChGmPlGR66FvbMtOkr1jickprRU8U6EwyTOkH0a2tMg=","IxoiouD2qyBGZEUSnZakD+7BsplQmUlYjA9Yp2bZs/Y=","ADo+sRENdblmjQ2KSNoHbn3NLtD83rnMNTjBF3MEe6U=","KLUr9t2NDFQTrnvaXx5rXT5FSKRQXQjjb3e3JinZd5A=","G6GIMUM8sVQF7nJLtCgbulQSmc+t1IXGsX90/OQ2z1c=","HSlZZwhChKISuEHqLr9/8p3c+ujb7r2d9Ytfhi5/2Ag=","DoY1Z9eI2sHdXzJEVkrtkox5I7q4liRSvHiFckqTRy4=","DCFKUFPqYJ5WCOmm1UNDoyzQLTJPYFPjOLNNwHAatcg=","Fv+w2bXz+9a98dUDg3I83XLzUw0+fe0piDuQAIPGCP4=","IOBYNVUOajYmBvUCUdisBwbi++V+RrSXflLhrfNIni4=","GJGo0bB4ZQUhsIxBYhbKoIbg6YNlqh1bpB1K4HaAet4=","Ab0TGeqBqPieLaP0b8dHnF7+oeQje9V1T1b3GbI8EH8=","HE78OywPJmnLpUlgCsAj94FaldJPlHZYn3NK17lPqO0=","JDjjv0/HJ6dD9MRAlUgkDm6FKTnwPoXjUsMco4bEMvw=","KKjSUKCiqirPSNeeBD4lLu4V8dHmqE1YvsPfrzfwuFU=","Kinn04HY2AgwQ5cO+4qlYYaDk4UKDzSgp+vNPX42vcw=","D55XntBN+F6oArSIWIdpw8DlN2xCqWjovQsC3CNHJJM=","AqgdwD9JrLpJcJ6eeAxWqqnd6yRf5gJteExHzdiaFb4=","IHEWruHntwIqkKyCFDXp9+y5T5+5Qve2/3xjQqAkF7w=","EbQx8yEIGGWMusgY9jZV3Gwx8AZAxIcDGnpmmbVKckI=","GXpQr53sIBRRiz4vwmATpE9wZGbUWW8GJD8lW6OBgyU=","Cm/QK82/ywIA3Yn5uGZpv+hifOZ0VLJATUlm8XJvR60=","BfrFz9Xi9WkHBPM7RA5vc5+0/0RFxb06aXidtlL65Fk=","J4Qs+KTr1wCc4tfsNI/3g4MKzIdHmtTkAe/V5zOdJfY=","InhoOu9mKgfUJ9Cjbua1LOlijpkUzFO8pbpKwkk2Y6s=","KUz+5mx7jeUF4MduIiVhkGbqXr45r5Lbp6t0uHgIU6U=","AMa2Co4robd09SwfWY0Uz82a69yNctTIfbnG6u7E3zc=","L1YR/ZuKnLBS07bvKy7DLUghiGLapOVNYyGfzLngrE4=","Jhu2asmIyjp+Lf8CeUT4/LPey52YWwW7yw/GBiCAyso=","C142vbV0LtoDodHjBERlp1H6Kb4oBO5ps4wvKUOGJNc=","FAh2DGUE412wLXbQtqF1VxnHV0GaSUuqWW5a4KSzEhk=","L4mOWUfxSwZV8EvONd/osIqkEwP2AnR3SDU5Wbldfbs=","LV+tKcv0xCDmGS/36v+Xhi3lUjrNaoGuYRl+heDyILs=","JCA3ZDZPHrzI9S2vZIr2sC3p5GKT7y9SuJViafWjBFg=","GoYnp/pVLBzQc6pT/XzDT7cSBRPip1b/czW2qyPUfjI=","Ge3P1r77P7Xf7HaLXErtKyfdkxHEvUntroSYOG3ls+Y=","Hszs43M8KoGgBpdbnkM+aTHacMZJ/vZH82imdoLhpag=","E6cosL+ysyLIr2ZahHiRPy8Wk7OQd+6onrgd5BJa4eY=","F3O1sJZV6b3ay1CvTzP151x+qo9L+kaAxL4RxxzCq64=","HZEQfs3V3jcgW/6CfngAyEZvZXK/YRp31NUCJCr1sjA=","EJ5YkisC0XLINj+IxbkiXMASL7mA4NIQuE10pauwGl8=","AKDRstFNhh+wTAfoX0Csikr0gcpgK9IkustEIpD/dLI=","A62UpeOPv7W77dLTYX5vvP9PWwv4kyngHoy5U4+Rwmo=","I1JpoIdScSRx4tiyBM7L9jP4obCHuNUNQ4a/3uR/0Mc=","Bj0ixG9hJaIIIG9pkaflU+zd60M093D2lxW5wx3v7kc=","JEhSvQ+IOCWUj7pYx5U4n4Kgxsq9kF9vZZbWC4py59c=","IMnD+tCKMNZNrKJNd8yT4H+pUxqUWLZOfDbiuNXeelU=","KPAsS1PF+7m4T5vn8tEVGj/qQIKVlhUux6lZHXt39Ts=","BjKC5FybL6XGrF/Mtk86lBIE2KfQ2/tuLyBjunnbyT8=","EyKVeAPoFP9lYoGolqG0VPg+51kdBK5FxViU79oNRnk=","JvkcYybF26LiMy5l4lrc+oDsRN7dsc6/YvXDuQ/OB+0=","GwBqiigvX6j6gmgXQFj8RXuz4icNv6vxp3qxD/GT4dc=","BEtHAaiX9oT5c+81+RPIcUsjoLxokjmNKZnVuJfdzzM=","KQ+m3A4J7E2ceFlIkTdIB/Qumu3ccQ2uY8npqCTxzzI=","KBtkYxRwuYVypndjflOBZu3s9qSEbsS2aFeqjOqdYS0=","G85HrdWH5gftaIaHwBedoXxUynP5tPYJH4Fu6hcnU28=","Fcju01RpSjASuCJiC8kfHWjHusDmaF8KFcSO9YlBoZY=","GG6oLwmB+Mo0fwqe7AVtq6F2pERly9hee463vQWA/4U=","MBR3fftjoRo9m3NOekek07asT+QG4ZXzujKgFYF/6Kw=","ILokNW7/euC5zv8VYqSkFYWqnKDUWRUgTkM/ByixWZc=","LmFhZDsbMdw4KUSGIt+mrHzXkyHuQyOZh33E7bJe2zI=","AktRLGMgcL/OPvqL0vNLwQDw3mR9D1UQJp/ywBx/Kbo=","Cpruwi79AXVxr/poQnciof3qaSiAhvnGk60qQudztZ0=","FckI42Srk8FhE2GthPBvoRxTwjEf/R9GlNY7K5gsV3I=","JWK1c5FwxfoeHP3ofXpWwnlaHfnA1uUA+ms3WeyoSYY=","BBNZZeb9AniNAPmuIYPxngk2KIgH9I30WtP/GnD2nj8=","H7Tu4zKLqdPHnxr3GjiVLEBfPecUWM9IhW2oPgapb4w=","GKXjU4TU5HlFmtQFwFUyVTwk/tkLg5PzowuMOLsqs8o=","D/9/c+QqUuu/MLbnP9TUXCETPkziKPU0/240ELWznxc=","FZo9qmZsMyoSxsVue1bmJtjuqfKjbqaqzpWDTObMUxQ=","FCSHUiH2jL1PDeRHK6dr3l5MeQp6/3grTrEhQZ1h9Wc=","GLMgkgLGdXVJKWsBCVxcw5DXrie1Ix3YQU5pmrsYYT8=","DrrsnKuSsYL2WraM+rTPfhqAo2cUvK4weY9hGHpqkwA=","EVVS/v8XW24yiVFsdcch4Vkizu6DQlk4eDQ00S368Uc=","ItAEh1mF7rM0F7T/vMxolYiwD1+5nHbPYFoKJCioIYU=","DzlqZZM8Za2bVArOFBa8R4eqS2yj9/I2ak7Nle8Szjs=","AO3X0o42Fz8MOyggfdwLVfoS5PVNol52GYccqNhDnUI=","DX2QCcPWeXCQ5uEFmTPiE2LSzwN+JR+/wrbhhhGHW6o=","LjaMFT+jWj2cpowhp8pYqQuiirJSoY785aLVmVHX5IA=","DNZ3SucuBxoL7tvq56RJ7FI2L3blsOCkQZ7tGHoxv+o=","E8JYU9loDS6NyMaE70iyAueiJ1kvdgEKINWT7WcgKe4=","F6cX0eP1hU+1m38J5vjVE+Mt24lGRn9wgL64yhD7oHY=","CGkRF+v05nGAAh+9bfYjykjAZ+nokOFzmpZyouuknsE=","GcrRLERTQTTD/roggqKdr+tVCSDxPzdsz7ZZ6DXOirE=","C3x10BD/mOx7WtHjoXoeCSw1PFRPjn9wf16BZRn9b8s=","IFUVYUXEQR21R775Lvv9S4obtf4uExk+DZwH855Ydcc=","Fkr660Fmcmlk/loHmhszJReYDEejOgTOIvVsM9A0Efg=","KTbFCYL72w9WzObU9XWjFmX6gT1yJSRkwndqcOy8LG4=","BN6fS51EJM3oYK1VNNqoOXsbg4Ndg/ADcvrE43bm6Qc=","DGVTAHVGgW6Gx9kFUqbsIW+aNJh75iK+F65O70VNWl4=","GnBB0FX5jb4thzM96KPQtPY0j06ylorsnLx9wzQlh+k=","FGfO8XbLcX7q2iuEIwM2pw6kXg9K9cVaRK6uI8pWOkg=","JQqtw66Ynz6C9Ksa8E6lrT2SqYFR0GBGtjVPmLBGEQ0=","BVOXKu5ZPr+qRckyvLFT5i+mOBZ7RlVfmop0o2H3iv0=","BOVlayZ/jOCxoxX5SThz7qNcEZPy/r2/7N3klLaUWDg=","GUAekArOIllB9sWBgk4zj/mNM/LwtD87dN+8CVHsqGs=","CHJTshFuj8tF+Oyhs879khEF6c77M+PMC/faAGODuAs=","E1vYBoL3cVcr9XTz9xTzQQWvsh6H1yxAovRuzYUYync=","EcI0l3IA22xoj8JUBTrTAWOQoCXQygl10TN7wHfbOM8=","FqW3W5cOSKXsPu3S37CNK2yVtzLa3/HhyB6Bo9ybJLg=","An7davs2Kp2i9gM1IH1yltA1nTOdQYYCqMJwadFn0jw=","DHpxjmPB+vhyr3YYfFw/j/yFXUCV9cVduqAFM1FbI4w=","GE13w9bXI22zLZo+SMlf1EiloMH9PlrRX6/4uvEDkBk=","IDGFnb4qNompl1tBGW/fLv8aWHqSRzYeeLewKXY9Y+Q=","MFaQwZ1226Xf+uzs4oIYCWoymAzeep9CBbGYn+qA3G0=","LeL7SUGX2cHxRRZB78JHO4UwDQXA0n5+0YFt4UyUqbo=","JX5+yziQPkTxpVi0n9ACLDvdkyWYRyyKEmAregIOTDU=","AyUHF2+qBJwNzHSo/8ezJ6wpdDZ58h/1UxcK/dLwS/w=","JnIClrSDcFklega9w7CdJpKBAs3lfiPpHRVAz+/E/pw=","GveOXpGJYwUKQV2ySrRc39gVOcr3T770uABHOmI1oOs=","L8e3Fk/0CWWT9FzGdHZdtV1TbNToZxEIX8BbsqfP/g0=","Gkqw9FFbSb06pK2wP/+0UU2a7CJPZ2gxW7sjZf6Z3M0=","HeIW4vraTCTX/Hj1h0lsJKjut6qD/LnMc3kZ2es9he0=","GqMw3E4lqNDJEL/IenrQUeSMguYlhhebGMLOlWyLM1o=","A9X7HKrZ+1BJGnOXTI3LKC6GimBUlN16H/my3xawzW8=","BF4TBCTY4NlDwRiPlSGm95kzT1fb5iywXuRpQ441tLo=","H6+24l9+kaTyADnCnpR/hjwJD6KdxWZNn4ppJhMn5LU=","KHpWAYzQj11ik+FlLbjL9AJJzcdZqE3Xys9Jec9N9Vk=","I7NQjDPpzTc4dNqC1sFcJQqsmdM95RbwNR18QhVFBXo=","GzdFsE7A+EO5/Yctbe6XyMz+lSo2F3FiMRmNi9g39E4=","LdOJ8Itv460Hm8nR2u17FpgBHXSpE1Arx8en4dc5/e4=","Cozdub4AxuF48+yDFIK419vX6Rtcjx2ifxOGBo5Y+xQ=","LompDMSt4+IVDK2GK2y8StQLj+Z3mo5h78SCf15DqlU=","JwOBUhfVf7YmM9pk5HdyKbu2Y/zKdijqNRAaWm75kck=","LR1XC+CCDo2Q9u7Iu6doIekO8gnXBWBNbkODLch2ApU=","AtkFO4hjumzUas/6CJHAcgvZt4+hZivA+EKh4F3mJAA=","F/Syb/MRsbTVTnT/pFrSg1ZbZ370Di5OGaY11jjY00Q=","LmgCDKgpYwha782SUHOmQnBQ4EkG55MMEz8YidEjAm4=","JXTDDaEMJ05ljeqC89WvtY2hqDTNJbf/pcWWZTALHrk=","FcNholWFImqGZVEB4PDzE2x7d3UhrCQJ5W5mbKRJdj0=","C1ThyL/ilKCDKDldxs06NTEIIhFhzXD73xGMOVTKuck=","GAURXx1bYBkexahzPMxbG1tKMtgccPI5gt8qJZlSiRY=","KTTXPb/aRmazMaDMLzj36D7YCTzynREe90p6jXByxeg=","AEiOw6ZWNTZpYTTYoKUahyz8Su3EWMROtqcjWvkmPJU=","ExnZtPs70BQm/8sm8la0+GNODxj5WX2sN6D1+aAMu0c=","CrXoLjReMEsaig9lf98/4D77AGsuU/yOd2UGeWwzWBw=","A/1o/3RyKwnKxNWLN34IGGcdn/UqIR5EmrFiw9DPh1s=","HnxVLlqPNgVgnDZnvB+BUwmfRuyO3/eL3c/35CNy0Ak=","BplS6csm2N3Y74RIT0//hJVgFInd+c+8hnMcoVvCtCs=","Bp3kMi85D7SzxBFllvmo9RsA8uzJ7VO4zocDel2Ms2w=","Ei5TU1HQN5C5oUEevNWViha69hsBwQb18VhGHbpCclg=","Iv8i8BH4wibs55fR42sSAUSTOPvVI/xGulL6SLMie2Q=","EWHTBJDxpQffGnW+hqXflNRIoiQRHzwxOsP9JzFlOIw=","KuL6L8OWLyL/a71DdrZHeyrOP6ljWGY31wCuk22Svgk=","Kp3Am78sQ/Lcdatvm/7TZXA6Q7nDWBAffrzKIIJlOyA=","L0AuYK7Zxf6FufrOEsKncEg6zoETL83J+7x+/0h0wws=","FPNS6dykbWXv6L7De4mlc/ZfCqjgx1O80Q0k/QRf0PU=","E8cMO/Qs40w2iTOQUAuC+xSGow05IbTssfpHwIXyD9k=","EYYZuxSlOiGh7O+RE7EOfGt6NtOzj35s5auql/6Wv1I=","I2pFsnIyDOpqdCgPKpVOOxVxdLiS1fOyrEtuXE2684w=","IP14qfZi074HwHuZ5NTLgEl0s/rhreY42IAOg0kLMaE=","BJkq+LkDA0+sykACWGRmE2pnUiIJOsNIp3hMi/vN2aA=","I1Sy7Ix+jm0ak/cwc0LHtm3WzJMT5ds9BsOA/rJJGTw=","GsjJVYiF36fX30kOEbEChU3z3lsUxfv/8veqPzH9Lig=","BjZ1l6t6LlM9maREdyY4jDWYG5l2MuVVr9tJF0bYPSs=","FDY2PIbOShdqiCuybEt19a2NpGmTWn+zvoGCfQte1JQ=","JR5h0Aq07yMsM9VacziO7d1l4xM7xPs+3HCXl+lSmxg=","JzZWhwx7i4nTimOpSFZjrf88Rqx9Q+YWBuJvUZHM4Lk=","LsK1TJqkQOD6AXvCkTXrEkrqCXCGS48deU37Fvi4yxY=","E0xlT1o47MsQcKWniDG8AFumrH16O3blVVgOsSM/lJ0=","KbyONLGhD5eZdQJECXmxGMXPKvKr2XJB20BpR1BQgPI=","DPMRKDLEXEjB3LXthmpRNltbt5ScDP2arfZ9El1POrI=","B43OUh07uqrlx5x2j/3M2LBOER2LRsHy/6bS5gLvMf4=","FiQY66Kxkwoamluf4K3mY0SBiOJbKKyBQQ/wjCLHD1c=","C9O0mIytKQEsnf3cnS11gSY07goHRWQ18aD3PALqCMw=","EeM7WYjWsuVnLVjFkh97HNcpBjVnW50+DNB+gayy9Ys=","Byv4GhMIz1F1nychfJaHRrMjJLydQpJwwQ4Wcabzp1k=","BVhToz0RUODhBhYP4df8ZboY+uXL5Z6PtryMx71mMhY=","IIP8GtNQ2C8dQ93Vx/pHUmjCkn4PAua+ceUJD4ITcWk=","Jsp5qFWVjkXhqJu0VG+Di2fZjcTIySvsJqDv1nTKYhE=","CcZpqg6DFXK+WlQuhJgJDvaTkAu015pYiq3VzcvmJpY=","AmHLkKt5amI1qS2preu8OdyrzQGHSvXWPZDWYDe6O1c=","B8FNKIzvyGI5mhFW5/py3vz7wEZuB2irzh41NmRQQEo=","LdzW2s3Lv67zfLLUxQYPDvNvERCAf9gcQwic1Fom2h0=","Fi08P86PMCBMUieCwMrmb5EeQyyLRHYWazW19TDT6Mg=","CQ+6/h+GX0P+OiFgm32EWf40jWCkxHHcYqCvxVXMJkg=","Hb6OUMKThGMFxRuqNHPinazlfm4a9I+7I9gVVuq1czs=","Gf/vm9WMpUesAvS5U8uUHe82/YNMH17FpZQYstIt+RE=","DimwR5UbaAXBm3ohrH0kEpyo+OKzhXMbIZTBkF8h5AE=","GY07qso3nbYQVnUFKlWjHB/USodzqdfHibzgbgdxnTI=","Dujeryh3ika/gYEEJ2u92btIkmzmmb0YXGSai0p+wWw=","AwPZgxjBhshXnRgDmE/eMoR0SrFh8UvEV7oEXzwTKa8=","Jl1/qIwK88Ld+sDbPUZMMd8JXNqW3DkUc/gzrPT2SAc=","DtrI2Bg/sOoxrzs4Pvn5IaPCk+i9v5VZj5UKICpnfLk=","KfqJ0WGQ0WNHBMwJbwMNyMx8XJ+G0T2Vl2tvF4/9IVQ=","I0w+MfQS/B+3yaW3Dr4x8ztZh8c1VfwOTufnUoDYQmQ=","LgU9wYZ4bkRx0KxvXhmzP2ONyPZDkHfizzaNFNT7rmE=","HWFqxQWH/wxzCxoJmo2qbgXDLbtdw2ZJ2ewMH+7ytTM=","A3dx6s3IUxJcsLyRdhDAw9OwZVYGALSu+IO9FzrcR6A=","AxxGIWYWrjJBhR6C3s0EX0ColgfFeMYkgJizDFRuHnY=","AEgtHSmH17/G0lavMHK0FpYDilV8mGeorSZwJ+w6W+4=","IRXXzRz5qE9D+2QmrruJdleP8+Vkb4nyQKSKzRbw/hs=","JtqEdPW/25yI4NcvMiJ68sX0tjQMj/yWsEI7EXLH950=","BjbbWv3TNeMZWKcOaU4XJF33/I0UjRy+Gf+IDn3Ar28=","BwlrOVcB+ss0kqwkVkxGgCblh96rSe9jxSj0GPfkcfw=","FIvG3582S5KNaBgKpqJmeimt/5Zs7z40DDaAgDMzvDE=","JNz+y+IDq8ZzE8gyTGM5oiqaH3L+lEWRyP4AP/KhliA=","INuTuQJGCrYRJW8o3+0+cAOz0/ujbXvvmT84Hz8iMNg=","BE45IBqpkMTjLJRAnBsUEPz+UR8vWryUIWsNnuqkeh0=","Kq+QwwzmDhkIWlQVP0Z1khuOZecSu0sKBA1MEepmU70=","I/oJCNfYnzZz6hQO1mT30e7Kdl+yNsqKeO8rrTBKnPY=","HxnBQQib5/1z/QvLw+Zy+STp2X/i7aQp/iX18fjB1Hc=","L6W4hKqXRrB+hyCdECNYJHhgOplPH/7DwdZi/gljLf4=","JyvUNX1E4uLBUvaU77vCOBJfD1NPx6jOeAOn53pDtv8=","EnD6WAjAyhQzQjuQBgw0reAfOpyBt21NKzz3FYM4Y50=","G0f50/LrD81weh0px/D8QEgftr0uGSVxNYrQbkKZUhg=","FmG8PtQERcm49aa3TKUsgeMHIRemud3q5WL29Rv5uLY=","ADjI9bunPffZqtTwZ3WmVqjreAwLh4P8pEBjHYfUhuA=","A3l8lFVMcUIb4OohCL1dwtYXL5wLUegYzfDJmOdli18=","JvgBy+rSwmvC7mbJxWHWZI+dz7oC1XMxaZgHDUNJIKE=","G9nrB4Gu25bJeZ9wmgyrqA2wz8FVxDfSfe2GQd4Y5ho=","FIXIP3SBhsG44jfq7ubyPgk8JQmDhDbAhMbvC4gwP+s=","GV7WTdCoE0aUhY+W+hSvtAIY2sQKMwR2IyW47+A6lIU=","LuMQYcpxYM/P9BSvZ9q8WtFWqd4mMla3kScKas+fCWk=","FdDw+4JIYL2uXwGJuwnOSzvAAqf4bpO/hWeNXJvVF7I=","C/sv3BnbLZ1+r48lSaya646dzYPJHmegR9D6f9NvOFw=","F5zWJItcCvJ3s5LGI7dE+GWosf6FHfJ8X8Kkegqh+g8=","GfFGn5yBcHZm9tuQDo2QEjtxXnSsAiStw1fM3qhzf6I=","ITOaIgOvzF8ssf1W0u6ReWN85Fq9Lf3Jp8VhzX+vtos=","DmVybaa+iNX5FhVNICrT2+P/9dZevcKcfJfqgtmYfkc=","AlZOiw+/ZfFDap5xal7H4Hnu0tbbcbfZSi8kNOAGhoI=","KiNmR9zk5FxggJz20WA7qkNilT74Urj3he5elZAR6kk=","AXSszp5zqa1eyq7f3Od21NHGt3YfsVmcz5cDKlnF8/E=","EM8qgIA7aALPKmOjfhJ7VWtw1lu7YWV/aCHKRaBvJA8=","FhZ/nRs6sJT2fQy79AoxX+ObReRUB2jz+jXdbVW69/w=","E3sbB8tg/weyGqFRck+bxqUOShemjyrqUS/B6TloyJc=","ANWQ63qvjjDc7RjKMX/70EipsPyA03xUqL23ck2N1kU=","LQpjaQI3rTRpq9Ry5FDBH+Ue4UQNO7MJsilcuVTv09w=","ItVeBLoNhV9CA50YodwU3RYwWuUWxonVFBqc5XILj34=","AcxxFp8yK5WViXuGRDggi2anGQK3P5UYgmFY1xRd2lg=","IflJoWrLNRlNnlP9/FrAHzSRd1FwJUwstLkXcvRmNts=","FM9TUcFMCHpZz1+lMDxXUsM9RGtc/zF+RXDffWhaqvI=","EPE78XJ61+kGn9ZwFQb5WP31n9LQiw/FBIyUhrQ+tkw=","BjIIXncfdN+Pz169B/lTc/gyy0HsmAiX2oqGDAXpsMQ=","Fv1nOqS0mYI/sXPZ7+zm5rYErgO9WoxnfXrr+9c79ZI=","EQ2pFaypyHosRhSx721vA9gifWw+LWO9oCjeGlgKQ4o=","Hm8SXz+BpFRZNeUg9eva9vmaDAO0hfWC/iOlOsZsG40=","EsBpqDtVtmWqkJUvv6g0fsFXwRU59JZA1L0jWNpYmzc=","K3hOL1LDuVIt1IuvbD/iguJoLsxQ+xZ1X/iiZe9riC4=","FJSGG66tAFiAHUfvVoQnI8a5bQTTguR8RUc+7eur5IQ=","CdxxdR2qWhRQG7LDy4silT86PDyIy7d7GTEYF0HccJU=","IdPhLF3mUl1dq1oVAAiI6M429AvjtJ8Dskz/pwxzkxE=","Gw5wkp9XcvcurlbIonLTGVaJ7EaI2WVwtG4Z+7Zocsg=","FA/ko5Rr3q/1LAzT7/Yo3EDjCvj6hTTGem0HyVjzPfE=","DHNJ3W15HUhxQztQH8PFkzUv1plduk+mh/UB7ImG8N0=","BLCjXPYmxA+CofB7kWB2wNNZi0QU9zyfbJdEICREGj4=","HbAraJZO6c1SopNsx4PMEviNmLYOhYyzY2ZRn6ASs4g=","EOLpVpk+I/k8Bzx8pNsL/Hro5Vj2dribHuZghiA8BZY=","H0XeNl8dk8+EAoCJDjae9uTFqYuaf4M57P32BNXm+C4=","HLuFvaiV3BciMvfVmEXG/BcQFrgskdkfQzJh/tTqnH8=","A9Pzu4bvFhKV+RNL/lhEHdcrZGG1++LVeHkC4+WrHec=","D/8CgU1Hs0UW3YTtF6IAxErXL0CA+AV9p3Bg0RRx6e4=","LpQW0xYeT3sCO6Ycj2Y1YXhV4wjWIztOhelB96Xmyfg=","BccO4+64DbhFAcFUTCQWH/1VE7ylzytcdAAR43k9jOc=","BmbXM9JJ295P7RBbLqLW1LmRmD4rT1itVJEJI9CWXcM=","J/lFuyLcGAqZpZZEnoOzLb0Q54v0NnUx7BHk2pNvOfY=","EuJ68Ut+zpuLz3vBySQdDYX5+kfIMVODbhmeuolhVE8=","Co1sn9gMeZvuB2F3ofnXvrpEarE7fHmVbwfZlGd5Rvw=","CKDTZGxHYmkHcGLcPER1U9YaRkjzBtIOVvrjLRCYhvA=","Bz+q1XVEmsNc38UUcXJRvxaOzs8DKXUtt0A8VGPs2E8=","Iu4i9DYHjeBI1ZP0r7q/VvSj/U4H6KZkX8aFQfDl/fA=","AbUCNa07Gm9qx13jqfdfTzmGbmASQ5ycAXmrAyxCZqU=","Ls9PPIT3XqexDsEaayWWFmzptaKKUm+AzQLWZSJqP+s=","J+x/PsViTNMxmrhfffE4AoOlmzbr8YrDi+11GrGgS8c=","DldiUOFWDHfKtnKvFOv4VkAkaNLpsKwD888pcJ4T2TE=","IlHydv3nfJmNQrXa0FqiX+mKkIIAtEC8t7q+y7d+f/E=","Ao3M93xGfHgYGS1Hh+OEi7BXxJvgmfYCkaLx5I3hg0w=","Gy2+kjb1on7VyeO3DgmUMtMk84DzkVjhGQaflZIRM70=","CGmSC49QJsxDz/GL45D3TDVYbNK2lDsp73sXvu0neDI=","FvT8sYM2Gb7mZyBqLJHL2RBVsQeDBZsL5S4bZW1nYAw=","KlDNbmlC/KdKzRNARcKIOIOHI/32UdoCvzs9d0E5CCQ=","La5M6CmnAYLb3EGo7aiWURELLJnGBWWuM23yvSr7220=","Lb/ZRH1CFPmqy59dKSTVRdBzECMMFGmvoDsoO4x+2To=","EOe62VLIpjKt4dB3SQv4CxJcGgWuTveRLmnxUtZAbeI=","KNSrMJf+jQN39KJngmEWa1uyTFHwTXaAguzus8ax+0M=","B3KxwUy5WqazneHUwk7LfwjSY0OxSthYIbopv1mDsmM=","GFb6NW/pSEf1dgL1/UHanUykBPhY4p5yN1aKjx9SygU=","JFe4Ip29tJwgfloSCLECsPhsnyp2tKSiPA1CMwS/6dQ=","BF+/5rLIdZqCNOFvD0w39TMSWW+pCyt70n8LVdxa73c=","F/Til1gjlZbnBHiqqLY/8SanQFWsW4DHdcD5JNgPLGM=","FGzal9Qf6ji8Y8lVFEplIj1PVlLFG+4WDa27xoElJxc=","FczLKR47dWc7qo0sSEbuVtoz3bSXZhdgxL8Z1SUD7C4=","DbVgxek+zRMbeyakt3fCgjTJ0VWIzF5fIASID17XbZg=","J3CR9NaMTbwbi5NXDMJJlz6JL0jbPDVqllgWojsoaEE=","IwwIeLjmcGcvI1mLdxfO8bcipEjZ0U4EuB73IucrtQU=","HXquPNjdP5HifKtvFbopdP2/cngoJfmUBaUME6AERGo=","LIfkuBFzzo/ZnJvfLwxL054yRdhMvYnXnY6fp96WNYk=","KzE3s6dk1fNgQjLMF90uirltRqffnmhBm058GOv9Wo4=","HZLRAvT0MNDhiUi5cBtUTlQT0LW7HgVu4mchZb9SRZ0=","C/90ygTmVouP62oDSUMRM510kKddBzNoJCeE6nHwUg8=","EE+zqn/ID3zTVqlkAbQVqrkcQHdCb7CI8qqXKCL5eG8=","IdXFMn+cCsZut9qHunpjok5H2OA+tJgXq58QcNhk9gM=","Lym+soEg2b3E4UeUbPfMJgu7vl6mQh19O62Zr587FuQ=","FmHZ06uY5yBLI1XgV2jWz0Nn8w8URtjLV1dscdj4PLM=","K0BvK58TWF4OXkTbUhCt1pfL0/C1IySaIe1jSUCXvPM=","CdUHtQByZQsP/Fw2pjo1loBjdHvXCmVcnw4HtYrkqIE=","F+ONt2fP99+vyBPptnc+ddnxJX6L/sHqnoMp6AqHp9E=","IbXBEpK6wmYnmOYJjQrQ8p+ObYJq317hM8IVBM4Kssg=","A15HOGEgr2ZsMtfE/IcFKzDvGM/CsGGTfpNbCQMTT9w=","BPmB06mEyi2F+VgdenT4WbYcPgE21sRQ0XdoyhmHypY=","DCojRX9ZCxJq9qTFTRragQEh9MtJddiVbYRM/+Clulw=","G1yhTNl229EOdrEre/vCilSsiv22aWOd1MX2n5HoqdM=","GD9o0andcGEJqJNvqtgTqJzz2Ec8zcd7POKTM7eqeqk=","BqX5XZi1Vz31KnzyCw4zNmgNtet4MxlOgqkuvMarA+g=","IUA7JV0SVsDHNs7sUvIkxrdj+LbXIwspW0oU6Qge9rg=","Lw1uWZKwIebEgG4HhJTZhTNaRL0EPCfsj7liEMczpsI=","J2YTf+3WAT2G2ck9PY4F+fdDSqLbgNRENx/+yo1UYbE=","BykqHcivyUhS3eS7UT6pOAlu/hzMC2D1O68DHmTOeus=","D2T0oCjjQZ5FE4DE/b3OWwP/QDWSB/W7EZwpU0M9UtM=","HCs8YHLzRMeuy9s4jaoYRj6rXLWUPSxXr++rUYJLN+o=","Es3KV7lMiqbCFHA9XEVt/IgVlAHn9m0UgbAPNt2Dhto=","I/UFzpM/oKdIZmT7AOXKVLaFII37SZndNG5PJqaXuAc=","GoS7gt7WJVxu3jdYXk4o/nh9IIRN8wlP0DyCxvLMC5c=","EKZlW++sVESM0uDn5SpWwXjT/mcLEcWLFhCft1n079I=","GiZVbVFRlawo+IN2jz6meQTsI/dCzlRPui+FQxO74U8=","I6ju8IeRbx7T3wf3pg2c4sKhltTpxCMdDpvBbNDjiF8=","EJ5Zy7pwDiLuL6C4UQXlKDPHxwvG0ekYgTqiQhoYjj8=","FjlSjasd0fDplFtjt5JG0+hywLG/Y3o7aA2YaJ2Zd1k=","IxPo0zHPLjQuEy0qdezg5xKvrYsLsyGF2RsCSTyHZ5Y=","A+lqA3Yq2Cc/sFgYqyjPrWJqssOwFGX4yXO0J18lhfY=","DjGGN7fxU2bERSbTrjwNM72hLClKSHaYjCjQmn92CLc=","EqHx3DV96i2kzWpjJc0lQiiXNhF9lHs78C0yBFCFNU8=","EXN0tYb0aSsWgvjQJunsczKkP3sJKbvVFUPiGzMD3mg=","K6/Xv8IE2eVbilO1ZB5HbuX8URPWMXNre/qjSeYY3CQ=","CNB1yEukjPNZeboBLDeavViCfxu1YhVbGbyloJ7QviQ=","KweFRDotXe7mbu6is/irMX3TeiNY0YXb663VozZnYkM=","CvIoZQqljikbGbURIlwfDcEcXJgtm5rlej4OrVJmes8=","C05+NFTyuSF2mGMv0x2VpQEmOURTyJtpRSUPjTbs4KM=","Dl8nbBQ/7pEBOOFxFb7PRYdYzpu4EtmGx6ibKXWBrHk=","JBNB+EqOMWKVkuPCpaM/Wo+FP2EN84hCuAln9U6z0wo=","IGBjANiwZD9sDLS0r9ttNQPv7bI9aTscNwXL5Gwn/GI=","C6yZ21YxDn3ylnYIZlAr72/s1MkMF+5dwTpwTRcVliI=","IXGzw0ii3xU/JnaOIGEUsMSWjDyZ6PuefV0GlgY5j4M=","Bf6ZRc6nHrgCIm/myjg1frc+hqdvqy9m2Il2yCJBn8A=","BDq8LzWXFqQdbFZhlQ+jGtEc7Q7/Gt4C1DryPd6QO+0=","Kh1Nm9Fk1LPbzMd1kbaQ/H+nsH4J+lsnCYhwYuRKk8M=","LxS0qe/0GSlqZFcWtAIstvw6jzyXzwd/pgFAzcQ71KU=","CGUWgkjHsYqps4x2d00YCUna6i1kf84Pg53110nYVIs=","JhI6DqOTRQ9v6mf3wRrNY4SO/QLQc4DjZMzK6aZUjU4=","IsY3/ykHq6Fcz9P3e+Eu1o/DL4vpZpjtdnPogbcS1Do=","EX/e8HxZ75yadwdWAnEEcw7p5rQ5h0U5OAShdiaLiiI=","BwFTyWsUjMQA+VU5ZTZvYyrJI/ot3fadO2u+UDzpYpY=","HoTHmB7nqP0/fyBQw2TpIfsxCgdaOugXwAp3+HO8kBE=","BmH/DN5uWBZg9fw6GBsANTvQusqAFtb3X8omlQirjUE=","Fb7aXR65S+5pbvhtAoPd/mk4f78MDtdfhR61XJyXICo=","FEIHh4PEJhb1TZMn9dQ9ZZcT4sOWDtpFLcuJ7D5QM1k=","AmBnBTbOfmTNMcl7I9W5bElPk/s7HAqdGrfeTd2uh5Y=","IDiQI18gn9TItm4wiocC6WTFLC8CGOur4dsRTmpxCBc=","AN5FfT/JphiNXpNmedqGBqEUzlRRP9Ed6oSX1V3QhE0=","CCXyxC3yymkn72eVNr3Q2BOvMHClkWslnqzn8hQ47kw=","L9Wxb4nf6+swhBYyuYkPalaByqZiLVzE/p0+yMelQwY=","EC/cQWe/tKKuTtc4hk5bXB87+7RvXAypJqeRv76ZHJM=","D9uu4KmqSWSb6YdJXPc5L0hXoEqtKf8lZJ4BI6UTzYw=","CVn4RwmqCzhbfYklktG24Xe9ioOY/8a/B6ObfAxIowo=","KYZoIGRG6S5H1BFE4vTF0A7vwD2iCgoqMD5XUMzG77k=","GnmAgdiKueC9rAMnArRIYIc4PV/3XA1o0fi5uY6UUvQ=","I+lHEVlOfkxnHfkPJg7PY3cKdjUs319HHdwx6OAGSiQ=","Le3mmkQGSf4XMiuLzPTBzoS34FG7gumbgUB+vtuscCg=","A0ditE5Hu6/Vrj1/gXPSqgwdoXKRNwvC+EZZtMgPSDs=","HqRCsFRbpiQ9kuqXWaI9cyhd2Zhz6MNlfmoAajznzCU=","L1MDhDLuFMdSIoE/M4DwLqSW13y5vc2tPTyF7PnpOn8=","Gdff8piCWTf7fEwX0j1TEZrpbtPjl7HfcYD9MERhtQs=","HnH/5uUWtXtIIvU38DZCsjIB5C5bDMIjlzMGetiQI8I=","HcRtQ8KnFdVl356UhfPf6Si9U/h5XIsDoYYnc6fPZ88=","L1Rp25XLjNdSpoPk0ocICcGr6y+EFg/yFkgVH3s/AYg=","JzncwuSPttsAKi8Nck9SzRcAN0gW5ZIQRXXtQi+ixsg=","L8VlWtrPv4ED/FjIy14Q3TDpM+z7oiY7CHph84aKSk8=","EP+ERJb9WpKWVjD1pdUfZ+W242pksrUcKL9MfKtAOr0=","CbMq2MHhDDHpJk7s7v1hnoEp2cMFMD6O1NwM21IqbvM=","KdsVDTZ6UyPDUkdLtV8jVyCUPf1s+WjDS3P6yfvXeCI=","IF5EtUC9NXqoMR82x5Lp3VAKOkneTjZ+uIW79ohitWs=","HWtn23+LcgCoL/uyvSaxjb2WpTvYPFtCZO25BdhD/u0=","JTZ3VBOJNwvUIz+AZ6eKadbp5Zb1nigml4N8wUFdmJ8=","GQhCkj64DysiDPFeP4JF5KN4bvJYT+YLw+Rco06kOAI=","DyXe1jHwFvkUSP56otDRPdQPmXIsUICF4xSHdIkedWM=","EWNzgJixx4e27NoGkvJ3202veHLv/oqexSMNjZiLe7Q=","EWAPDtPrcR3G09mg2W9Lo8ojmb+SSXhu9zkAybNOEbQ=","HI2/VUfVUeMad6UCseBYk0Gi+5Xa7YHFAo/vTozBas8=","LkpcGlV4e9wEa+5w9Jifj5Nd5Y76SJDYE4VWMdq8lIQ=","HWA1wBC7rDvMRUk6zvfN9Abi6HbusyqIUfYgnDhaeMI=","HWtvucLxh7Hsg3OhjQd9NWPcHkgpxz28ZWNArgxhsso=","KEgMpiXuAkdUF/v0/GUTWbA031W1bcYuzrmnm9vO25Y=","DABO2cUJ/Xfw+YQfOfT+Ea0Zknfa8MQ1nwArx42XTxQ=","IZuVeY2bLtLSMHMsuvTKV7fQQHQxnXGnOfyptMCDvd4=","FE8UcsPHpjndrmEbLrW+Iu5t8lqFmgUpLKgwf4YYw/M=","KmiBd+llRcuR+c+7RKehSyQ3Z4EJfpVhMUzO7BbHi3s=","JMiY4DLzPX4HSKVEFgIGJYyXhlvlSJiWyXkKzOklHhk=","EKvh4N8Kq5bV1zcEBouSHswdz/eNYFoTcnzp3YsOrug=","LoCuOeyhdw3KNad6SKmRtt7b9UkkYYdW3wZNSzPytlg=","FeOej4pMf4kNDMcH4oppatad9bSPo3t0BJtQeRoiwnI=","LV56Nv5osYRVK7xFK+tHapbHqF/SGWqpVyIIosAqVjI=","FDnwQLTJB8UILTMKtDneR7S5nxF5ukasIBElBqgrwUo=","LsmWskegqMFoLR0JAPBJ1w7QsB4WnnXsJ9dpoWDgbEM=","ASQXEJb8taql0eeTxThnE0/xpJxqkPJSFgHE4HvDSVw=","JT6iaeRJm8sKFAuQz3HN+SSEPTXrKG3AMFlkf3YRofU=","CDxPqzwgV3Ij+sbzX47Vm/42pHAtpRSRSCm8Gtl5IXs=","IoT1Rgd/MVQvcWVqRU0IvYXggNtOzMREkPiN2J0ZHEE=","LP5R5BTV2Uw+KkY1jGsfterXesFM96b1O0YKcFioOTw=","GoX+zjsnq1JB4qcgMu1ucSJBS77pD7QHIQEa6zDpRPc=","EIKaqFtkB4qE1LiyFz4MrMPPH147jx4UiMG0FrvcuOY=","BHXefYjd6UQhiS2MSGg0AkMcysQS781W/tAbzdo5xdQ=","AugmRHj6YSlBGTNn2gGFf3kbN34gg7NhOlskPPOOZfk=","E0lqQ90c+XSWUXCi2Bu0gNcWHVi1Fw9fE06+chAp7ws=","JZqB6STtRsVEHtxaWnXmwgf3PDQ+aFDXrvmDm/mGmDI=","AtLe0+WOuEPrOaM0SCkUP1Btz550reO5fy8Nxdl3kU4=","Bl/no879fcd1vZbTHnWGGd3Dcd82I3DqyYWZdkvMvHE=","Cc6Va1hMrqUcW1ejPRN3O3H/A8MfrpvBSal+KBVUz4E=","HBNbgFXydza0yJygnMtyo3KU4GGUusxU3q6pRJrBfFg="],M:[["BFI78ajyhMbZWzEN7CtU4OAOWbVx3Z1GtiAcGOG1bf4=","Gakqxgh6uJmC/lZQ5eeZ+RAD/YtFQAdI0sJeQPBMV40=","MCYI11DxZJHfWihfX39qXOa1VPXazwtp1FCyS7tJZ9c=","Gjx9qmtK9WYtDYQHsodnTYPq5bdWNAX0je9JmByYxCQ=","LbHJhVrCmsxnk2fb9w8I2YiUB33yQR+R72jdkBd8Hps=","DwbuR1WPGC2BC7yyFKJdp/cKVnoEZLNI4bMOyn3pnSc=","IWbXjZSNr6ljOBzxVg0AvzoKHCiKdDNEyGQ6WNr4y7M=","KSm+m/4/k800/OrmZdlrHeGvsmvK7qL07cRUxQy8RAE=","EHbUOcZ5l8N8bB/amjfcL3Yt1XeUbzb8/czXiY7GfNQ=","GFya0NqHz4JGJNAr7DukZlgioPazsl3v86/MaHzhMh0=","JwKxvjnpEET7c5JsEQRxn0wDeqQVGCPOqyTwzsSfRkg=","CvcaUc1GO5+u2pOAPNwDGGx3gYRSUv304BVXCdk903U=","KGZ/nHMyBz4pPIC5jt/64Br09ntMUqtF5J24sw8YLSg=","J2PDP1ste8OiMECvvNr5mLsTJUwnKl+GNaEmBqWcLlw=","D4Go2OCHWOijKqgpJmbEy2uj9fBsTc9PxQL/l/A6haY="],["ETrYtGw+7CDJlltaey6KUVKYcdBAG03m9j3p5SEWI+I=","B5MM1SVvird6uSsIu7WxlaRKI4LGbidRRhnvuU5kkRA=","KPgUS9rhuQTq1ws7cseUMDfea0hJDv0xd3g1lO3Si58=","JHT1Q9Hy8zte8/uxkGURNaWTkMijZh+uLfHT8UQytgg=","IXFahHQsAtBXrEH3Q7Fm2gIyKEJWgZUO36/4WBIBoJc=","HvDgwfC19nZExIb+zwIjjLf0+mOggqPAMNrdzmWkuCo=","J46NrIxWsooj26TZD7qR65R/UJLUp6nseAL2F3hIjoc=","D68zhD5nM0N+mJleb3v6b+76c9dBDYWFkYw0fzz+kqU=","K6Q31q5sWIxrcVBsi1CDR+Y0tlzuMXrx+7nMKpl/wAY=","JKbBkZ+Uq6nbmKWvOP6qU5HNp5+d6/rxGGcNeSfkHbA=","BNgOfvfieisTl2eKxCq8xuJmLIgFA+RkP9+6zmcnO5I=","F/ajrtsABamwoljjG45uKkjz+VUc72gSpJB1rruHhfU=","HmICkSlJLIvfhRSUWVBoE2FZGp9e7cJEnl8inIW7l9s=","FrrndIZ2VuZPyV88JJ+AHxUP1+4o0ZW62erkN0OHUng=","EPAXJ5m+I6j8PxVq37bFErpBXjUWe1Y797GG/RKkHlc="],["H8UKFtvfocO5kDj0f4GhxdHvbnsiHUzMpughIgEw4AA=","LY09kk8olxmeOOr7x+EB0X1+VjSIqfMZgGB5auhMGwg=","Kqmq5izbhSSQxlD/nifJsz1M1AIMpm9eGms3TmYpNbw=","GEimDvyJllBzuVdz9GdmZofjjVm+II6Dd9MZA5IQV+Q=","DIk4CBA1SdIDDL/gAE6mZV4k7nGh+MHwctXPbheuJJk=","CtgHGMbp0cZ7Sje54QPbMvIl/kKpumVf8GVhi4e4Kuo=","Ag2HR28SQ/SQJG+Ic27l/W0zGR8FYScUh+lpP8/Xpkk=","E0uGZC/yAjiPT+NzVspPDsOAVWa31NQS2JN6NZ75tAE=","LASHi0y4FW6Zg9EVdO2Z3HVi0/uxh4JXq7xohS/dJoA=","F4OkUhWAWt6dNZIyEgsYPbVLQ/mn6PuNzZW6m7q7ulk=","D8ljAuhmLeI8xcjCKKyKwtzb/EiKWfTdQePycJX34ZU=","JLIuXOZxznnf+N4W180r1jddfsqgFuz1nP6yRtrIByA=","BSwz/OCNSjn9gFFWyK/7hDSUKLpJIM/S55At3PmwVX8=","APDUdSJcmXAruk/QEnYQK1yr/3vU0UfA483uTAesMbE=","EYPpG3q3Ny8VfUxHdpHur/yeiGP7LYBlcMZ/SxhY/FQ="],["EhSp1tcoj+hWUajLgwSMdmnIO17YLKJkL/8B6FKkS0o=","HA3iv+r84WTJg4BnqN9jQPnZft8BIjMxWbcU9Fw/E7E=","HjlNgAZ/DhC6qV3g2ZtOOSBKGHJ9FAG0duyXa18XOoI=","LKLYsKeT2Q7TGM219pcZMTcVW8+5Qtgr71WL5fqzWb0=","KEJ6sAemjHqxI3HxO9fboKz36X6m5krlLVIZIQ/oorA=","LP/DeNLOx2unCAs3/GcaljKLzfxGMPzC8hM9zynHDdE=","AM/KodfTguH+H8uVDhTfICoIeT1xhSVbAl1WLrjZdUQ=","HYckxeZB2W9uNydxsKd2u3Qv08COGuJQQyJGzTvQG94=","D+6PlzE5eXQQCDRknuh6J6ySvno4EDA0YBQar7VCpCk=","EW8jmr6CBze14egrKs46Rc76xImmv/CE4yMDb1QncQg=","KjHK25GNeLltzVSLOUQlpC4qp6KKa2PlCSYb+ub6JbM=","JAyvbXqy97arPRXvzzB09bIUKh6ATyUBLZiEVICeCWw=","IiTIXwwLQJMBTbHoF9H/FpGPFeDNIxuEikjPgzJMQUQ=","ADmiiJUaA4HjqvWY7xMoU7XWlHFsINuHkj8LzxTJFKg=","F2INQ4SZ9sCma7V3rdTK3WatOeM3fTAr+D07uhJrKso="],["DUIafCWvVTh4j0lHWDZxKvXaFW+IxYZ1aM2VjjBQJsw=","IOSigwPdVeXO4zLzDuuvvXky57NTHZQkVMNEuLjBfN4=","IL0CjJWNV7eeNSGP405Gnr2qjo5xTpGNWBkfZQRrlyo=","Bu2YoYW7I1jzNOsleuXjGDWZwFTBtOICJWm4No2hq8g=","BR3rSyNIkOMfWsjmmh5TJFN3Suk6npNg/gCe03eunDY=","IfH2pjBHHjKouaxLftSwTFa5anHuIKZqVFjGuNXG00Y=","DDnb325tJKkaCkX5IsiUviUrqhJ9msdpCfhtwLzGimY=","MFYUqs39QWfNG/3Y/N7OaJLYTUpl6G5vfGNJ+3Xki5Y=","DvmuZeuSJgXUJgqyAh37tHdM1f+u3Bt53GgSCL5vhcU=","GtzLiY5f4YtcKaRwjEsRK1bQ+l0pm17cB9b1vABCi4s=","GKJmHAOrmw2PfQEJHH5WPvwDMZZ0fjQTnT9cx6wAHpo=","D4rux0FE0Ao8o4v/ELsPOo2/9K9hl4R9uHl0WutXteo=","H1NRSpfotXIE5XvWsbHZVV87UDaBVBVOZ8ITT9MVFZE=","J7zWOcR0gtLci20T2hn7jWPz1sh19v6khtpv8u4R4Qc=","Dp6DcxFK0lr5fSjicvxC2EkDc8q1ghk7h0oQQo7mzSE="],["Lei6g9K2q2pxH7kjCt7hy6Rt6MkwyG0masuMHLloTiQ=","G7Fe5NSSqOLPGxDbG3OMZ4AGbqg0er5TY1enI/bPV74=","J/ohIEMTecvYYgX/EU803S284T4cKgqORqHcJ+e2hv0=","GrUnYUo3wv+wDA+tNgq6pEesEGP7n8ZW0BSM3OLXw3I=","FwzuKYP6PT7O8vgG9A7tjY4TXO/wdvxTC7/uh2yefx4=","KIhRdw8aE4IiUdqRyE4SNZP64cnLzmxP8jF+cLtlggk=","F5U4TpG6+lVN7fUVbNeZ4RIQ/9Kv6Be1xjrVuF5/3QY=","LNomRzz9zRhbooz9qhXn3iNZZGoCh+votg1wLfAJAQw=","J6tLQJAUZe9ZAHEU7PH7+rYVfCT0AiRrhqYDlyZzCPM=","JxIngd97sF9q6eFOjpnaXCPcd8wGEIwOuwYeXRvpNiY=","JoEqzQPbNBLK1Luhrvcb1EsAlNMYrOA2bHnnKf8OsuY=","IT0p1OG2wB/A0QnqYWlJAHbRMdjgNLMED3vZw8Nz6hc=","ITL3GsiYksmEoKc2U/LUUiKto0GBqebbzqDWOWH5NPM=","EhOVAjkx9rs+8otgY+t6LteDngg/25LB5Vk8g+3/X1M=","H2Zboz2kq52YBsr/d87TnJviVPzExdqPVwCWER+xCbU="],["Dqe+gvHLSTsbvYOrfKKFvwoVWeoFw/WYJ7OwE9CpH7I=","LM8xpXJBK7fZz6Y3cHhTIX59tVULHMMKiUzfSDo7Y+M=","BWRlG8EXkXDjyXr7xPSTYXAXtDshPu7Ya5sb/+Uh/oY=","C8dpzXs0/NG0VKv/DAC4m1QKYZuHyVREZ5w6xr6E1FA=","JEtrY/gEGll19GQLGMfQZ+SgYn8YdR3JBgFriJPDUSM=","L/TuEQ7hvmLicV3NEZyVuVQTN26I7D3cPwb8nbjCepQ=","JmbsGmfap76wV6oObooQOWYBohiENyNpwBK0mq+EkEk=","KwZmlx/ZEVKecO+RjQGfRLXJ13RCttGGb252gy1HiEc=","K7W/A875M+Tuh/UR3jmFz/AyOre3GNTLyj9Cmt2/MFI=","LjenRA51tkmgeZz/63+drjj638fKtsVYXkqE9DdynQI=","AANx8NSTRt8tiLnxraismd2BJc+mww83OPuZMqhTJo4=","DQMntZMELeBPWOD/kzhtFgjTOoaHLB0+fgiRIKrHpP8=","BNvEyN5wjlmqSyEW5TlEvsl+1CMJtKGEVh2PMtKR+cE=","KQ7ZrnR5+b4TrxP5i/iFB+b98BhxDkhZ/S5IzGb/myQ=","E1qjgzm9kn3VBk5NVy31WBGyJrq1SwrK7lEdYK7bAvo="],["Hjrn5XddNSZR1xPr386/nKjpBc+3kr94dCOUUPkUyMU=","AdSSw0skW8EpQbsWPFEYv8+FvE80QEKyAx7YZiofb/o=","BzM8vQ/xPIreH+vnKJLZrUNce0UapyqMBacII5WIKGU=","Ka1SNv+7WYovjSOHA2CNt6SXp0U++dV5+/Bb44+PdvE=","LnKxsRTf7n6NfwFhJVxolfp4YHDOYtgGxFoi19mKCjA=","KtNpqEtX90VboxBkABynd50rS5awtKkfFWq+w2aqt4Y=","FXk/McrqOd4xXcW/WjZirV2OGhL6GnKA8u+q2vqXrfQ=","BWxV31Q6jUBDoS9AnNLEvPQ6dw8+OMP8ea0hS0Lag0w=","HuEOKMYS2dbucvEnSFDD6Cm+XAb1uykygBUqVhDrAeM=","KfNW3Ow7eVI8BYmnBG7wdYSGgoshIUbD9c6YevP9cZ4=","J86pxD/gvxzp5TwMAm6DnYCn2GkTZgMQLN32PN8ouXU=","C9wHix7dnLH9LCoBqXvffUWGSEOfrB8oUJtBotyed0A=","JWWhemvFboewtjZkMZuKR79mLB9J4uySUb5P3zPZD08=","FbCFtetnj4zt8hv7MOLWSuHL3XRyRJ7STmA0EBxliGg=","IryWy+f4y8qBspun34SN1lmQNf9RW21IVVCELho1ocI="],["BZQ+NhijLPBQAYpOI3X00Ce4wUrIKg3lfLuQxRIqZLQ=","HJtcLAf8z9ncazq/4FZ1/Jl+t7jL2Ni0y35nFhWw7M4=","KQp65zL0dU4MuRkjySSJcZMmB74ugpFj8RYS/4qVWxA=","FDTs4gnUkSgMWuBdfibPktmbtyiaXBysCaOM5TtuA98=","Io5zmbDgWAKFK91dXgmWbwPEw6/1PGg+svaeD8whwLs=","JPD6FU/MbWRZ1sVvcR8l441X6QvnuARsngAYFe20FAQ=","GIAL2heomDL+pU8mdB2Gxrb7nhWwLnvQZVM8tWYdKpU=","FrEfJFAqpMw7DCVioYokq4+YZDGyRANNP8KVVUArX0o=","AgqdV1/qiRMCsQZDmrA6ipUdiy7ytWKZGUbrJUHx+60=","D5wF9gmtFN6+r/EHuVrM1g5iZiJZkFEFq/r6no4I6uo=","CV8dtDyCfm8LnNT+kp57jHjJP9AuyeDxCZL+t1O0ygc=","JrwA2c0lEkRCgy2Xq9kIZtP6ekAb84vZX6etUmVI/qI=","Fz6AWWdWzZruBL1t2dwV5Ljrv+/jdx2YGb1NREcm950=","EqZD9KMnrNJFRRTdRpVR42qw4/JOzDsop23B84IU/jg=","EeGwr39fyfBJh3FUrhc6GnLHvDuhkuQ4qdD6gf36SQA="],["BgN1UYD2bpghXWHlNGsRbMAM/QWCdNfZabOvleeLszU=","AkOTC6Ad/TlF8qoC1YiSK0fBvvL/gCOoSbTKZqG/6Ys=","HrUg/qxi5FRfT+fNtnXjZHS4sf0Z4V18c6Kx37sj/tc=","JV373zBVNBOh+PURPWDphYODjRPhHB7gKyWjh+oAzM8=","GEURMlgbmt+ZbGyuFbktLkwJ/cfWwntEJvMrXmagtyM=","ByIcrTnZtfjbcFqHIwOLkra6+HKEExc16vvs1TPdptE=","FW9qCeaoHY7s9NvyFka7loskBnhs0d7dTMcyt1Mvf+A=","GOoO3pAQx78PrDYbW45/l8de2ToTp61KAX2SDAPJhoY=","C3MRnJjSXrbeFCRrFAG+9IXJ3GrM7cI0lLlSajnVMiE=","HGaChVLKwUQzNO1wt/1/tSX5B6tkR50ReGTJLpEZhsY=","EKZiaN2aLzaOlVB+/CCF7u7ozpd8oe/1suPZS8NC/1g=","HxSqtaWa1FLPaSsSPGWHPdgP/BiHmKRXDsp5Kz8vJX4=","AdNGVbV3biRwFiGstBMkystQFl4Bm/8eZfmDBPfYIqY=","FqHu276nnFQRpjnjvw6Q9uP3QPFBWZr45qQ6IGlXL5U=","FN5Ei+y6bKCtshsHRV0sKGTHuFOCJnAm4o8JeIItZaw="],["GYF9tm/bghXs9wR2xARMP0HXisWlScaE41hFlH3KCxE=","CPMo5eZsC4ebNsIz9Zi9hXjRji2p8BnwQRcxUk9C2Qs=","JZoqHwRoRHJM+ZKu3CY19mgPVeig/axpXs0F+8LLvRk=","Bn2SlLQHKxLDaMKBalO7Frfn4qeZeaQW8tAq+GKr7fs=","Dh1+wqVLEbNuZddVHpqHWojMx6bARw58JuGZZwoIWbI=","Fzs7NJ7oiNk0runBToic19eF0ePk8etypcLlbEj9VMk=","KXdlihDebnkhq540vPB7vKYaclSa5X0MFWkb0UPU0t4=","A5YJdzPeWh+kpUh0m3P/fEJvmNnlrRaSBhTTN4l/ax8=","Kmbe/PSJwj7sUHmg7OHFNBAnpZ58WS52AYS4JtcNupw=","EPQzaMBWf0Bapqr882fj5ovv+VfEsMuhfDDGKz+VSQw=","JaKkPuYSZj29YYFPLesG7QBadBT5mCX4vmb1Qvlaey8=","GC8ck8brKYZ7FVnFggemrq9Atm6q9XnKa9fKQKrrer0=","BC7qYW2QUCUUekgutDajt1U1yYabdtbNrOEY4VyR+3c=","Bc5/WS3KIUjhmFVP1k24xHnynSPx8W2vPLiTDZRW5MU=","GESoHU+rV67btMRiji5H/LKSKIPqsLLh3hbySN5LuQI="],["Bzll96m6jLM6lV1C2lX9fDej8CJrAp023LP76pXWQvM=","KEovCD7jKmZjCByABxPg8jleNI3OzIn8gap1pdsroSs=","CPeObcWc1GlMQau8oIZWmpCDyozIAL2RNOTUjtnYncM=","KTyooGxfF52TgGXqR/gPZf8hlpqUKeQAqhd+z2tq6FM=","Apto5lLerIGIJNoMKhG0CNeoOaLoV2xVv6XxM1/8W5M=","Cbw+QL/l9hb71SDziUoP3Tf+spQp/TpQFZUxcd46cPk=","KEGBCT5DQZeJJjc25USBcRH9y1WaQ3c/BRhmCKzFQuQ=","C51aOpV+7yUa6cJuU0I/m+by78JLsYdWiTqdgOVqCCU=","BKqOkdww+coxj+JHGP5ZWHH3iX6S1X8th9SxvPmmNeE=","JToRxmRjptyv2Dmfyli6J/67wwfYgzxmbg2N8HLF9p8=","Dk/UmHeMLHagLQ2R2PiYJYVucG9Zgzff6788ozOXlo8=","Em7IwgAmLEXREzv52l8eX9YrzqHkk6CArxvSg6uG8SI=","DPAwsQobQpHlduurs5xYP+oPpt7PqYz/epbcBst32lE=","EQKY/n8rz9rAvNw6/+60Ntezo3dFOud4+r03qayymac=","Du8E8kriEO4KlLxWIVdHg+SdTZM2Wis90Gn6/UMFVFI="],["CaVQQxQwhGtmlBJbVkKwBgfzahopSFNho89Cfad+zNA=","GXcug4FvwsSblkJ8atBXM0f6SaXfaRJSWSrrw5AFWjU=","LY7Gra06ZGhDyIzaAShfjzLSnGsQJctUIUIr+L26f84=","JVuWJY3I4WRPG8rs7nc2MvJabqgDzTKh4B+CVzd19vw=","GG4TYAQRk+EvOAmbDjXnZ6/8NBD2qN/Om8dVZ+ObxAI=","Kcsx4a/vTyUleKq9dvI6EyCqyQ1KCmbCIl49lMxI0i8=","IA+iDtG4cTE5AMAfi2l3YNAw2MwBUP3FjgSg2KKzRLE=","GmOlidFxCqcFE2y1IMLxxE13jkkMIS1LcunxU45VVc8=","EzNps7zHPueT6Gk2DNUNjfYP45jtnZwNDQPmafeW6H8=","HplRbCQNQryqrZxz8hpGGT24QzNJIDA17qMDmPnfeJM=","E9hMp/NYqv+x7o666Bwy4BrcAekNCclFGvNuMa+CFw4=","BaeEZKS2u8pultg5gnv926qdkkhArvZVXeZD3xZ9TKo=","Jg7xOsfoD9LbPenrlC7e7z9eJS1MBFCLHhsTAZGtDfY=","FIKfCdS+675vwwVFBHJD+z2rmcYqq3Nkp6W0J0V6AsA=","EyhGfIe6cwKJIaiTM7q5f4sk/Kpy9Dg3y8/l37epRf4="],["Bo606dbgpYi2GmrVAfOA2g8AkGdmbAhT0VbjPVnENRU=","LcWQADnUyFI6w3mUXLm1ilTgHbrNZ/DEuu6F01PT/pc=","G3KsQ3TpW3t9KM0pCVB/MAboNS1K8Z5HsLkJaCoDIA4=","HyqNyv55/Q6iK7FWPDsosjxcTXWR1F4GdEs7N51CZhg=","GSlN0i2mc0cDd9Zx+r30LOzTfsvAGDhqQ4cG1hBrBKg=","GTK8a7SItzbg1L8wbUHmIuZsHWhapFmBUwVLQPdcCwA=","CNHWi4Q3vJgKp8Wdgzk7FioIJ950Bw0tNLTq7cF+fmA=","HANDgWuM7LpIUZtZsPttSputMJ7jgxHcPoz+i611378=","BwnquWzGJV8q6ReRTyUIUCVJDEIyhJFuI7YIY4zM4pw=","DGegazPPc4grHHFS1FhbeCI9hcd83cLH01lIJMUBZWU=","B0DB6bjtFun64gQ2nFVM+3IAfcz9JTDy401UQAOuWZQ=","AqhMQk61j5w4tDgK844EWEaJgJiPqh8NTG5yOEVnhSM=","C8Nn/ZPOrLWZxhSqKAaHg6XSfuwfyPoXZQFbdt2C9c8=","Ani1hQPguQFBBPjERr7Uxt5XXHLU3Z2z0YZoRpeaq5s=","B5HYMul2tmvar/RQcx/zXZmFlauXSPaVu0XSwP7waTA="],["Il4AoNpaf3SWtw0JI6fPf/Myv/BpWMwPP61DmHT2Ak0=","DMN4tE5Y9mi0WDL9q0pJNycx7yQVw39Atd7VWUrvPMo=","DX2Cc94je6LU1egFHFvV4xLSmLZyb/vTr35zKvkd/yc=","IuvgoxXge+SwkoiF9SRJsBGzln5RnkOMQkzAQow1cm8=","Au088CFPRE1DZlXgOviu4rTZaWHuoG6BM71ujT44I08=","DLb6Cl4RuRkqUZBJOdRaBa+AVb3qPzefqsKdEwmDDoU=","A5WYoUQ8AJZ4YCuN00dPJ22l1iQlCD7GKKFzfozKPnw=","GvVuZXUSP5nF16t7g3cPD9YPufQDjClCZEBp48JDeT0=","Do2cBwfcW/gKLwjDQ8acxlne+GYwrzFBoAOss9PpDAg=","H23Y6F01l7ttN7R6HwYxIgFMiIJQs4z46C4+VHHvhKk=","DMj5C6to5t6EhF2hiZv8UkQL3duUCyCDAa6UqVd3y3I=","DA3PKxNVLsVclxZr40fKL5OwfioQFkCW01P6KAx5aCE=","AB8SYRepSd/5APpdERoM4mYb2dVERXfEkamVHPtYGS0=","E49n+9nLke9SBtSMq7JprEK9NSzzceQzEbzK2JrMUJ4=","EUkrpAZDXzViOQb/Rd8Rw577Wf/wn1AfuJPXF+NPnWE="]]};_14.default=_default$2;Object.defineProperty(poseidon14$1,"__esModule",{value:!0});poseidon14$1.poseidon14=poseidon14;var _poseidon$2=_interopRequireDefault$2(poseidon_1),_unstringify$2=_interopRequireDefault$2(unstringify),_$7=_interopRequireDefault$2(_14);function _interopRequireDefault$2(he){return he&&he.__esModule?he:{default:he}}const c$8=(0,_unstringify$2.default)(_$7.default);function poseidon14(he){return(0,_poseidon$2.default)(he,c$8)}var poseidon15$1={},_15={};Object.defineProperty(_15,"__esModule",{value:!0});_15.default=void 0;var _default$1={C:["EeJ9p7fvlklIozKXTQfM7qd4vDOu280J3iIvoirQsQE=","H2A4G4O0So/mWg9BQvqq/F+/VfeRM8V0DFPwNqMGW2U=","D8HhrIrTUk69v6RdzFFXZUgjTQKSrf4c1wpwahttrdg=","CkB5jq06EreLzY8QuxXLDEJrvSKCqB3NwHAITOeLjXY=","LcCdM1cFEVWYfqlVlENrbL85OwE19R4vZ16l9GL0qcU=","EEuSQdU0JkUy7aGB3hoVTdF17hUPNJAz5G3cVBgdoIg=","EnpiCNmPbNOHuAL6RMqyA3s7kfBiLxcITxuNisnRJpg=","LQdc7rq1Q0HcAvsfUNk4zh39zeZZlVqTDsGPhiX4bU0=","BE/VwhAaIL4q2SO+vhWkd/QMYDmj3Q10Q/5ydYBCAQw=","KzAshRH703ArgVVkxTmay4qPKo63f5bH8ISWKOCfm8g=","B8vjOduQWZRV0e3tHoqHC9MCySp5sdD07ociLM6Z4is=","EyZ0kxLG6L1O8kyXyAn3iuVIOUyUw98vKP+oEF3r4hE=","BUAhQGuNH4xwgOfCRTBOS3p5fNI22tktkpsiPyaXgOA=","BcDgM7WJ+N2yOp1Vnq7s+YaRqNAY8Seb9AbQjyeHzEI=","JQiozdRQ+Wm2HHSdVmyUWaFurUMw411UFbEuyjhYS7E=","Jk3MwC5XTKfnNtolByvY++mQliH9T0Fpsrro02j/EtI=","KpOMJUDWNhV2PsO6EMGiYAG59L8UGNEJKmsC3aUZXbM=","JU83C4X1in5KsnpiA/OhYcGwcPqjGFuvKFKnWoZaQAw=","BIAYlvEmjlq/g3EsdBTIlT1iI+UcRMstyrCynBSVKsg=","H3GI5NT3VJQ39I/asi6HTnHQofGMMBBuPdJyH5naVh8=","K5JzcBrgLXsjHORDrx2AvyHWWuphY1MzYFn3Ve3raKA=","FZciTLjpBc7YKWIKrNz6x25Qmg97wYb7cGAZbbk3QsY=","HYxaZSiDRpB8/VenUjchloQeYyPpaznaf9F6gsXhJxY=","G3Xc6VBzH1CCUbhqfhpROZINK+wYeY1Dn1gVcMHcZjA=","J3OgGGm/mtNZ1a2CCbM3EZ/43t36xuTtLI/QFY7o8qs=","Gl1HiD8kRiYQy+etDpsbiuWTC9O51MHuAZhPYiZRW3w=","GYJ3MgWUYeIHPNkKCa1UFJscpZCbligaR7LZw5hQbP0=","KXyL9UsDpvf/JyRl+4gckYVRu+mEdR8+nysw6jexpPY=","AfPaNrH/UoOweLafXzp9S6sVowh8Wuim3DB+unci5A4=","FnztbjndO9bWVe3dKr5saP8kfYb5pqa8vUHJjTe08TI=","CF0ZsOFvCsKfMtpUFEXoqKbbmnv0XnQfnxE+dSa4II8=","BPNl9xDprNXBZTzG/Y6TyuKg02PxaX8++Cn3Q1Ul6k0=","Eo1PA9A9cJfToiza72sR8ynK8PrLwaZ7qR/0k76cpxU=","KAIQ3UEmixM8n653C3ma/9PmaAXGFnQVrKNuqgLbECE=","IE7nx9TqBvfKZfqtYx5wPg49u1nEW1Hc7nOwymTUXMI=","MEKv8JwXZbT9c2Wm3KDxFyZm/cDlSYIrA/c4jqwz14Y=","I7eAd+dRYCvnd5BFhhzOOtMYZwu4LzPCk59m1BVUx/w=","DzUeFL06Qa13A8+akGuteRpieZa5NRIebNw79xKSzsc=","DmewE19x1IWWdJ+fqFhcN4lEECLUW1tGEaUHvUAdDuQ=","BuhGNJZtRiu9aMFM5u4WYnaeQzFODrhePVkJ9RjanfM=","F2ERLxXzV8+WQiu0Z5b1fCx9baQBabj1eUhB6FYfwCs=","JDh6xXMTeZx3Vpmb+sSVuP43enOFUmyKyv4U5a/gOcc=","HzyBfL+UMCoG41Jv6nsyGKKHoxKZ8N0WK2bTWM3PI3A=","CxPPJcJy2uM58abzDUPUD3S8C5OO1zvxapXsw8SZb8k=","LHMeYttMxBxWzUZcSl6NVxnLUK53NwRP5OqFlmWZfwI=","CWG/6o+fKnCPOt/BJ/2xfr60pWMqgmTxeklMDwYBFWs=","Hu+5n+nayakZY/ES3TV+1R9Zm5JU5b4sdf0BpY73E5o=","Av+YY/oqbK494Rax1qpWqK+9k8cEF7igWThVof9XQSM=","KWVfwDDwoPbdKwDKulJ5OP0P30HeibQuqhbuWY/QMfE=","LZ/nRPK+rbmJhp/CBelIdpf1ZyG+scojC1m4LqsnsFA=","BLTD9PHCHW84mEgoDm4AbAVSRRztv1q5be+/DCy575I=","E6jz89DofVO56VlmKgaWOPvfB3AkVkvCpWdvAkfoQo4=","GHXC6PQ9lmDhpVY4j9gXQe2n5IbPYkPC/hdS+RmFm38=","DbepF/fvwdIWdySvTqMrH2pswjwdtav62QINuvW6U3E=","AcVtt6gfx4uUsmfc5FpNukikKIuZ6r1Qsa3PEy3Up8M=","HJy1pdAnTZ3DHKB3Q9HXtNQWgB2WQDmFHwVnjkvoKFM=","AveG2/g72+xmq2VmlNU0iYi4JStPWj9KRSoHX2Df6So=","GLl4mnpoGDrThOzwOEKfdYFFk8D+of0l8QAcO+xEiMQ=","KOscNPdwq5ErVUgqlGvaqinfK0yUfCnOt8ihnjiIHWE=","JunJ2qtiqfHWpMaUuwxv7CdHh6gyI0PAP5Xf5l7njoE=","ARGXeFiHkUVnW6fx1w8wEpT+3bCoAs+pRKdZB6TC7RU=","Fk80t8NWuf2hp9hBX6u2g7rGHucMI1c/pyqddWulLPM=","FjIZylMis3dOdbHm91ZX4LvrdqnjI7fHiKfdZjiys6U=","BEFZT1nGXRqFdrj7urQFjcOQAqG8Q1cIQZTOYyuWEbI=","BMsAW01DkxycSrxQtjmo5uILPKWvtgsGFAyyS35KaR4=","JetQIDyqwXw5nIPGdM/OtOc/InIoZH+dIg6V00NKBNI=","CmBff+nja7dQRSNSUWnGaJzW0v0HbX3BEnfuEGkxZ3Y=","CrL+IJud/HyQBySMt8o2tMFNmRqzuNBKFj6w6DakbFg=","DhRZy1wK3W+Q+UmWVgMyCzE0VOZ0evXzmVZvXSNGEyY=","BFrh3EqG0eyA3EQu3OloKmFtJudgE2dauwTMpF/OB6o=","GDT0fBNpjLuRYFnLzIiXX+Fd0OnDMZhl4IFH5NOXqXA=","IDmhxzNafkx6aUtcW04bRPYglg2Ikz7VI3Qi7VMYn1w=","KhAxbx5mrPMuKtzcKSo1CgDY1eh+xdu2aUnj8DNQuz8=","E2C5FBVFnaWEDt8UgmrqBSgflz3BgTPO5cvidhF2gko=","FQXiVSZ9M2oIHbbwiol78rpA2s1OwdYamQz6pA9qX2s=","A1DjAg6jDR53nZgToLZQl3rbGEJpHoo2TBK45Fj3fTM=","Duu9TCsMmzK4LZbWSw0iGo29BkE7YHumn0udQswSyvs=","FbLUs2HfSeNESiQE9wA+4EMUfKw9FChxHxIms3TYf4w=","KcgzjFz+mN9/1J+TFrSVCBTd6dZlNe9iToksNdOAsY4=","HXomJ/Va7ODMgbd1WAzN6V/RDxEvjqcaf43OfprHmOY=","DNY0wnq0BgWKvaFWr0Vlct4vVJIAVYeu5px+XTRdde0=","EwP9SOJlZWXnoWyo6FIxMUkwNalyHTVPxE17xZtyetw=","BS9aQ4bqIvX/Bv/qYXnlhhe8kIo9xrHnRigZycnpBqs=","B347xe0cNLo3AvwKQsRbpccUprDBC6K02MKnqnWVkpM=","CNiBYIgvyK/KYESQTnqYT4XJnvz+FHussLfxBG+VPWU=","HOOyLf+V+DTH5bYyYCnGvLTVrksZ72nEBBnRqteWoYk=","DU/ZlNvMFSYt9fPAya3+wmg+Pv+/UG5TCdvYwrmIq44=","K6a+XNea/3RiUR71o4pPjHjHT9BJ5rhlfNBE6Cq9lLM=","CXZ6LZ36OeZ8lUAEANqWoZLab+XA8CzfG5w53I6Whko=","AQUhxyP0fcX+/DW/4M5+M9LgRbKgGOEJNmLshPEEwF4=","FE8JuANGzPvAhl+mTSINbbt7Pou/A2PmL9jMtFe94e0=","H8C5ky90tNtW0JMVzGqOhiBSdso+OxJJY9roPbXta6o=","B3bS2XKgBMBKi+e18vzrsC4aOxt4cDbjUUu4+XLINh4=","Ih1uVg5U6ydmUSjzfhwxJSi+Sa867sydfFZ1XwdnWNY=","FkGJzf2YM7ccH4Ny6Zm6J7vSDeYvllrUBtiu5nuI4fw=","Hj5zbs+XRbSr9xpNhj2LbQNSPq+C2SdFJjk+EDsIo8s=","H/PTCzKGuYj1AeySCxYi0qC6LPqd/FicU/Y503nBAFE=","ClDZgk/MlanSK8CKWSsabTls02GUCrw/hzpyUjAIOn4=","LbUKHha+Y7tj1C3lFonZkNLkchuToH7fuijyCJZXQO0=","EoJZT/ICEuilgaIo+0QF8u59NERVZvyd6gEdibICu5I=","Ct4nwHeVHNM1/3ibe01j/10Lzq7MRtzO/gaAwOxu8Js=","JzdK3xs4rGLQePpOcTaSvjJMok8u5D4k62Ktzi8+Z+M=","Lv91+jbocWybasCst42pKXDPespqDsOzfYbpdTgkLhE=","GigiVYKh7dRkeEsR7H7/GQ+uM6YaeDuEUydkLoL65o4=","DhET6B3hvPIE5RqMw/IABH89jYVwTET19axu6GLJ9Dk=","IQV10g88KBa4BwdOcqZypQc47QxPoJtvlmIjkDpHn1w=","IeiX90nISsL6/6niZKxhuYPwO/nzN726TcSMWXGhQ1E=","GlaH3LusYpcq7YXFDnDL61AZPYMcB5Due7zefZc4pmo=","BBBUmdXP6vEV/gpA10KEToBrEHKWswbE1VbS8kTklXc=","GvlJenKA4UFJVugPTwcuLya1CgaHaWfN1Xrs5yDGvkg=","Kg4tPuxiWbfOfg6xZn6O0MFs2/oiR7i8fjCO4y4sYDE=","LXyYbT09O+jHAQXkhJIWDvhTifHjHbyIFLDNPoSsXtE=","JR0SMedjl5I4t99KjA9QGScd5eQ4noTAnlpZbU4eIrs=","JjuNwDrH0lP1y3uL2SKikGdbq+1jZK4Sz6H6uMVsN+w=","B8WcMfl526kwuUyJfOcBbJ3fxSemlnhrfl4cGTiiwo8=","AJ9H8CH6Zd5rVOdR3VpL+Re9dXTgcce7Mb8aTmOvIVA=","HBYAQ9z/IzDORB1J8oBIMpafJzE4PlJMjnqYE/dB3e4=","DFtolmh/Bmucsj8hsywmkJLNbHEdvma/3gmFhzXLg3w=","I6y9f5KLvltyp+xELmaEyPDVDPgj8CgEx4UJM7m3DPA=","DoroodEUHcB4KUE4R8qFcQXlGJpl35rEDq1Mr8Idfd8=","LsoJifmrkW0HqylqAiT9o2oLx6Wr1XHzNoBU2neV4wI=","LHbOt9BAtOWP4Gt7D+g+qIt7TPN2KWdx7BXRIjfNjyQ=","DFOv0bOBFn1z0Uq3246kG5M1zsQZSxBaq34AYO4eMEQ=","DDZilWKn3GfljMFb/c4jkrOhZzYC6XDxdM1saxRVUyI=","BS1mthQlOt6PdAACdduFJfiMt6cbFN+diqTs8m9Mm9E=","Dea6FAkEYFjYMg/Q6/n8UnX4N+5d7CeWPbQUUJ9gj5w=","EJrgUkr8KxGH6Iwvo6FvY4hWi3+L28SzmfwAole8G0o=","CxPl8skBtFTKSb7Cn/y12j4T/iN86G7e3BfaQLkEUFM=","DJqYavKtWEg7VT6Vxou7O0WCnvbk56SrhfFyggnsBZs=","AJOk4fxGuGohCJDnQaFP/kEknrCwAIJk6m3DGaBzXMo=","Ab6n5So6yik3VJkj37fjX8349cgSJ2N7MBXtG6cSZXo=","EeiNwLWQC9KVQvvCODLnSbyaq2NH8L+XzTo2xjCP1ZY=","E4dB9ey/OVmX8h8hLnY2ZJHw9Y7BlSAPEDOFXOukMC0=","JEcBKpRpJ6QkC0cT240n4TDkGd9Pu01ooeDxuV3TZtE=","AnYZOngvbeW5A5RTceU0G55dys4EuXaOZ76YMKL2dNk=","Dfm9aMT8MsjAZPbEfVF7E4iGd8mF0+8fHEn7iA3te8o=","KQkcGGE5Y8bLpPTA3vUPzhyrZHqJAZV+4qVTBcKw+ME=","C3j47MZXeWb+1H7mB+JfIbQf1npUFt42QSg/L+glyVk=","Lo8FnJt49iQRsBf4fpAP1wyANr4XacU0TupBWcYrazo=","A+NMKHaoNBMCnLcBj2V7Uqwoe6NR8lIXOK19MJ0bZzI=","E6H2YKh1V87PAbUFwaR/zda1LF8FoexCYtswjOhvayw=","AQ6aWZb44zkLa3hhAsrZFFIKjpPn7VUbSPMkVofxTTU=","C9vumEao1nzZ1U8EMyeQRNhQdgQbB8PiJLONII/0jE0=","I4Hf3ZvDN9XW+4YeFsoo0RfVhtFtXu63QZpmHHgsH4o=","C4Vr2P3W67fw8d7Q7xkgRpHhw3gfipxPWFEfH6SE/MY=","FuwVlZvoNXUTyqij/vCy/BCxaWuBUZsKLPwYyRMXi3A=","GUPXDA7BPJFCZZEhFWp3P0FG1UjN/ULkCiFbFllIbjE=","KeUmiseW0m77wstPmOLCoB7/rLFQG4WCzK8eMRry7bI=","D9ctKOdb5T1iaTf3WvIvdE6ht9z//5TIZvPaiol45P4=","Gc6fmKNphp7EW/7LHxEqX3Bi/NbHXa/OkCrHDMwM43A=","CKTRSaiieiFwvJzmcEOO6mTSEdOpfHAsGwHb071ekf8=","GRUL44+l5f5N5+v5jVn8mvGrqhP1oGjLcWAC86aYORA=","I8RSYRAUQN7xwMI+56r12LFe578x/3N0q4CDdNja9pc=","IEqVQsaQ/jOP6rZT6aRqrOuvLfU+TpBeiWQUy1oMsSY=","Eo79TGJUzQPCGyGRPOUmZfrNDpxG9GXFGkWBJHI63xA=","MFvs0cugf7dCyVKOS5J22HGxgVr6r2IYyw51iq5ezn8=","C7FLaWlv+0pG+5EwGvMmgv7po5GlNyrRnzpOMgv6xqA=","L5gdjuyZUOOcb+2Aef5EovJW5+aGpgy3VL8YP8Ou3go=","LjjG9qdImlTtmCxIOip5Ues9Cyjkjd+LV9KWn3g2kzc=","G9cIbrcVDA3OG+ujmmfLrecri3LhwbtvDdtRwT7lg80=","HItDfyvj5hZx5rYvtpjorxhyAxGWpD/+dtFSeyMVtGE=","K5HHp4KJp8Q+FjXo7s1QukyWaUMfECQ6ZcyuYDFWb8E=","C9+Ynn3d2NlFHEVhyne6cHtzj5zb/10VwRDudHE3D4M=","CtGjIX6GZFps/xpNhsofGa/oWkXnSRLWFqTStDC71Hk=","JW/40/Uk5OpoV4BEjy+MVbWSU0Lwj5RKx41Kzq0Hqgg=","IJ16spf1oxJYIH087aey4SFoPSCuVhxtRgwR6/sbawE=","Ca/OisLCzzr/YAJEG5jqUvyG0+xBEhbj1mm1XOW4v1I=","KfgrHsAuaMJQmfAQSBWJfjPtnCbc/zssieajRxIiyTQ=","A833+PsBX2hhMi963CIa2igAIRl723H4AM7vie0CHdI=","J+smPb986sgk2F8qdTgEaSJwM90CFTNlY23wRNjLC2E=","FijPCEKAvBSanjzL/FvQhyIQGuSgQ9M7L5iudqnVWYQ=","KxaL+x5sTO1qRP3VYYYX3LjpxNrXsExKiVUgnxthq5M=","BX3gcJTcowcjamqMyz8XIHeFSQV663p9r4pGO6GMhf8=","D7B5ZQ1e4/eGA8YOi1RTE75ef31sGmED/XnxAKyMoQE=","GNl27Z1E+3Q3MguR0ylcjjNue0AmWRSbLKuusnL7Br0=","Ht+77xgBQsR8TH860eLMgb0CCr/MtDLuMnyqIuk/9F8=","JRD72gwbglYpCirTtFGcgV8Dl7uMhVBa9nKut9ofklo=","FHg86b1Jhg82TQ5G3vpmbTYTjcQGJVuSAJBPwGDPBCQ=","EA4AR3NpwMZ3j+ZTaXRIFjMb/jd9sz5m9jrOMeO1aFc=","GuqTtRcmqNcEOd37fi+HdL3plrcvnLAMw9fy7i4MRcM=","CxTA32siItl3ITFhQBIpdjpVG4iWlN/TDoDffm92y0k=","CmQ7pyUxoZKx75yCdLqOq3P7GmTDlRtnJynGDuysNU0=","DDahLIOkRaaXmxOha4ehK8xjXO2MhCHvmoyyg585awI=","Jct5Ks8UcIDTo8Lof3KcXr7BxDiY4iL9DlCpUYl9XTk=","HhBk9lRINVSG2/osLINXn+9kMd6sNQRvsne1iFsJv5k=","JkQO5PxMR303mYDBg0o7LzsmHX7XuRPilQZ27SD4eFQ=","MArPPpqQG5xoG0Om6ntILL/ESV3VElJH1Mmyq4Q6r8A=","DSeDPaitzCFdmlMGlsUmk7AE3hUsZHGUXKehcBw4Scs=","HE6PYCS7eWMz+FNGKileDMFqYJhXLvWNFZpSjPiGquY=","DbOOEHEhjvDuXXeseA3Oqt8c953J8k0vPJ1YQSsaWTk=","D4pCPQQK7w7d1u/EafTdnd1/5ZGkruOuOQbaenf4vCI=","CdpXDVXi9kyU47LnouJV8FndNi95amkUKWZ1b62FkME=","DXzVwmXPtbAaWeREjGfHrdvCwJsl8HiyPFINeK9ABX4=","LJxHvEwzKqwVrGi9tGSuGTp0XBNRx9EjCyYfpAuV32k=","GrE188gfw5WnuU4LkRU1kQHsdedq36FFKXWTk6F4nIo=","MFIdQIL1i486ErfI5B0f2WgoSs8SFD2FkH7HgtPfr5w=","G5AQIhAnmkK3+PJse9Bo3YK3bNP6LzMBRWmKEfXtmW0=","LprENBeQKYJs28YksyCAMNTwsmXkqOHHC4lRMQM5gJY=","J4TD1x0SVYYYVJbj/Hw2mZbnAK2Xg7I/QftIPN+O7jc=","AlMFQokh9uNNoqsFw7diJo7Rsbw/BqzdHdXjJpHmK6g=","HTAG5sVyXhe1gotbWiNxb5ptCkyGf+0swlQ9wKyZ2qk=","FodnMj5Ql7sv5mgr9qyLtbj5rwcf8mAlZHOZiKOm8Lw=","Cl2AsgDn7gBQD1Jo3DGeALeX0K01iYmhXYr1UUIeG9c=","Jdu1Qj7ip9eGH5mC9SKww6rm3P0OkFCMtlUPck17goI=","JeG5cqp1dv8ACs9+4QEXXR0e8YJkQV1PyfTFwzYqsCY=","J6nGcOaW7FKHuLYGpcIxrg/jzbdk4u+ZrSVSMbmFAP8=","Jg1mBqHbSFS7NY+kFc4TzhFDFthxp6K5DREsout73wU=","I5ejdPhKKaWtN5i7zlZ+tjFzDHRafTieZUII7s7LKPk=","Ee4cYWME3M8CD4j2pI+kByEm5k4nlv+6id2Ts6kfHy4=","BVrgEVILTsW1p307Xzd6JS7ph4GowpRNK/CuGGfvkhU=","FwB/dKL+K4VYGvh50TbVh8vhjpqcO6GsAcUM+i+47Us=","IUrJZLNLIQ4DKX/s/Ij00GqF/PDxXjgPlIsV+hME7Bo=","HCFG6hU94R+kgLREKF/dHNpTzCcop5bDdcR8Li1XQEI=","DKCvAk2YOuqP9jQN7p7IKN15h2LBjwa9qSJZs8FYB2s=","AS+Czp2naHCmVzVUiYjm4K8YDG1LXZjFrhq4bAVcpug=","JV9hSjM7E3XpJSbjnTdj+njxPlNffsoqKnuXyg1Ez2w=","DQNUrTIvXh3/p6ruxEQp/8ieTfYIHASbftPT3ggue5I=","A59Jbov3a+n6/2nPMxqEjpKA7aAybVoZExG12vwn66A=","GwsOjdhiUj2gkDzL1RjtxaEpUX+mmJQf2wkl/wPPV5Q=","IhtnybkjJ3OHuR/UHHZU03zrk37mkvvsOv5uqs8utrA=","ElJJujyaxMWcHc2qbeKaua0UgPiz8CDkaGCPZb7FEVc=","AmTpOQt7J4fErjXZ41Ng14B+NBS0B3tTO4U4GBHR5zA=","Go36F4Oa9c2sQKyJxf8jR+cMF3BuMmiM97GOCdGbdS0=","At2ydOIvE9HpwYbrcQwrPPe7A3jORiJsG8oFj4AuHaU=","HtkdcKHg4inYVmu8qvY7CqoyNtxy3Hcv+1Jkw0D5Rc4=","JY2XFHSMo7rWKx/JvtzK4C+IYWQJBlgNaD8hExxSBbo=","KAlPsMnOP6Nwc956EmG/Dz5w9jOP1ZjtrvV4SSl68gs=","AbJoJFlgokLY1g9IMJKP0Qsr2bJ9inMd/faUdWA+R3k=","HM3CxIJJSWgYYYhzrOC79Ks6Py9kl/k5vnMzCtGL3Wo=","ENe2/XxxuraIf1HsVjmkR2gtf9a6cQ6PsU+B7XLHH2s=","FKE2oeSCfXB9rMko+L1SNMwyfIo+S6YADG217jsSV1c=","KZEgiEL+tcmxHGGA21f0ecMonJu/K21eY5sU13zCWFg=","CGQnbwbPUFANUcwtbu3KCS8e/R41cXyRtRgcZuqzSF4=","AdoRFcA1kB1C1RKwO8KWLS895QTK7AjxhDfJA2OlzRg=","DOTGFSLPEYtm7dLd32g7QH/dHQAhPy3r+ZY7WoopdhM=","IoIr4Uc2x3DdERAYrTpIGJedoi61Irs+5LPr9PlMATg=","AkiMLvPOzfmA6CavKYrzuBztSQANCe9szu4ZTBPzpE8=","IrO9Q70TDA4umJ/QYz41KAXqcsIUQd2xT6Kk1/9bXr0=","D/6hHZALXBPNjkYy6S0o5V9LArmuGC6yYtn8BUxZKs8=","FKzcBlk1Iw7+gK27Q7pW5IFcxT4eu/05AEKU2eN2ch4=","FfwefLgZkktvrqUfwa3sEM0eOtrA0KMkYKDUqVoDxqE=","BUfRkSg0N28ANXkO5/Nqtzycj0HhxPvNdzm0x2diLFE=","E1+fTBb5dUW5zbXOulrLmk5SriVeKmniKzEUVzeJgJk=","CM5K9A195ZjFZPDDjGYg7dyf7YJsQGCqbCjw7bM0XoM=","Idam2XElkpbtm3KHIQSzQM7bkRnEd0tbCKtLrSnBYec=","KrxiKsNfUCQfNlKqli1LBFyM4bTTp3xRpcrpmVxu7rQ=","JUWyjVT9zr5C+KRWLeEGHrIWJyiJU2Jg1fMt7NvEyC0=","KFQmDmPcRdIq/SLYyf2MIuHaaPQXOkAou4hb9/u0reI=","CV1U5WiYeufDedzkbWeFN6JtYVWKNwYJ9JHP53jo+5w=","KsA8RAyK4PdTpPYz5wS7QfjHUcxGO5GXbcYxVwV8+NI=","DOWXcA+k7wfM79Juo0bDBhjrQr+aS315GpV3NnmJcL4=","AsE6QCf0FTs2gKKbcmjh6veN3u+fjRrAhmWVzZUDuDY=","IaZDg5vjUaTzj7uxc7Ww617KxPeLd/aDDaaA71q6EcI=","BTsHxxzYZLIROr0HBf3yQs88oBayzlRc0Yd6tEujXMo=","GInHBQLj7fs/IMizL77arVH8atHKoUdVx+3eUuHUujk=","FoZrZkqj9ijOnhp5iHr3H/G/INTfbnB9UeBf7HuO32E=","CrR8IBrTFcciBBLhwwS4ElRtSj2E0P9xx6VwGOfceDQ=","BXe/yTsatQ7GIiV87ts9L0pUhgAvdYHJ/zzSLzpd22U=","B5AKo1K/lZ5xjlKEpEhfJBp0oLt/cwFmwpfkSHMtbMs=","JjXflWt98/feKYzp4Y0xCQfmXByWUCxpPRvpVUurRfk=","LnEV8da7df1a38hyYTkiqhcvrZopSDtIcuX9Icg3QwY=","KOMwtuQTrPM02+rxlp1WaXfcpna0YYrCelMLbIWeVyg=","J+ghwgUoaBPhMK2ZGsvixx3lUs6yzDTucnZm+Taw6C4=","CCImhNgBVJMPli3feLLFZWilnl2dohro8GOtrMnCw4s=","D/t8w8Be1KMITb10MRLAXyVPz5tZOr24LiXfxbTbj9o=","DW4R2bUe+PoSsDT9hwaP3CLwpKP3k9xslmLrnrkV0nk=","LF1t3hjSiwjZGfOYHl8nqZ8sENmvUmd9JEzPZIDGlgw=","EFgt/F9TmcTJUlUBKO/uIRaaRyftnhwUC5oi227LwPk=","HFj9pounS9U01RkAbK5xgEwuYHSrph2V99ishKPe8L8=","JxBEyNVOGmQ9xG3bkJ/0B46VNOjSOowqGRbJxcKx2Mw=","GGxeJAFfsLahQNf17OwTKxS4WWZ2jOGznCA2XNP10zU=","HvUoEkO9I+Gh0/DqqGU+KmQlVq+BZkhZyBbF9psTZa0=","Dpr1MhXiNkk1oCclibXDsMgK8VTPps9klpiF03z6aLM=","DApcm/EYoHVASFoCTxz3x88GiIJ/bB1tk/YxXGKgIzc=","AnUuo830EBaaK599lAuTAfhVy4iP9V3KjV+g8UzPtMY=","H0hNThSvOxHNJX63n8Unhf3Nj/FS3Fbcn4IkdSiePWY=","GKQuIaw16/MDSmt+g2r2uploa8B7Hugo/RjOJk+YrxQ=","F7xPz+Fn7XQIABZ+TThkMe8b3yTGEoqWTAJ6r4eSL6g=","L8O3tBCsrgFcY3dJ2f6Q2JQCtrUMnYRHdTFsIEu0o7w=","IwULNmZ2j6kRhs7Yh28MNZmK8+5I/7FBuEGnkhUejhg=","CRuzMrNdbkZHiZURWQA/aIL8hkqHv1KJlxHoTXppbns=","Lue/bOrbV0lhLT8yN7GB2DmzLGa1HD4OUY1hluP7Gtk=","DlA3s4fN3suENGy1wEuhyadgAlPHXyjRTJOJFoA8oBg=","FVbYcNObtQbbtpzfFMwIMIC42BsUUASAkMrdkQ7HOX4=","IZlN0BLBB6Fl+TrX4ovKtzRoZFJmzhI2QM+qgzDbN+s=","LalCVthDCU3Zvbx1tsiGNM2qdubSuyx6S5wjJg4oFE4=","C+CpLtxI2wmAjVCgOVaz6EfdpUgfrh39B314Idm1N7E=","HTMsfQdcyBXdMWMHGJ2T4U8LueIBY4V5zvP6dFaLZi4=","FajVjde0Q7HgR+MwuZ65AHtI5cGkimXwTCukDhNrqYw=","FfC6Ji68XXItPP5nu30vwgN1+vXO54cWoyHqN5B8eUI=","LPtBe167sAFe+pRYaHzZLKwSudeMZAM26ukZNPs28eo=","DTMbMiiIUyc3dByMtTJyjezd1+fDxUWdgwqP9Dlbnco=","GIpIVZGfFLeQAC2busx/wBGYDj9Rl+U8UJubBNcCPV4=","CM7pambB7X4/l4YHwYj7kGEj00P0u/AtAJIKZtJD6p8=","ILYcQ+Jk3syl2zer+3F1IeeOzyXQKb9LphFCbxqC1Vg=","G3C+onOkCqp0ztg2nVYRqtNFKAQZbuh6OHBFDCLBzQI=","JMI0vWxz4XJU76sBUFCgG3rG3IKjNU1uE2qU91oad5Y=","KiGlWUcH7vGxBwyjnVU+x0+Pzoj2T19JTjyiuAencEc=","Cc3P1QOVi5AbPG28FoE4a3/Q4zgxPjveTuTMaQcXXzU=","A3IT/Wua34uYNgYSUyD3PsOLHjPe/2oOcZ6oL7XRVWM=","K+W1XYPMb7Mux1joPsV29SHc2x2hN0zCrgIkcl1tXYU=","H5uYUKOS9toQ/QCI/QYFTkPV4gS646s4UJ2/oYhYkwA=","CWikenSNsjtz4aEDmyqyUzupGhLtgOMK/kdUwDyhyqM=","GmJHherkg72O+dga/tDIYSv+RQoSTiZ92DlXq/aj3RU=","JawkDHEmpkLusSmLwZh22WnZy17QlSzURutUiWK/FYY=","JxUbztFLb1M4O/RVO8koLBfbu4y0fB6Efqib5D7BZ/U=","AezivsLeeJEnL48vEfygwAyq4WLj/bBuBUih/ZBf30k=","J+hW3yJ8/32Tzx0MBaENGEk0XpnWlWpmWeoR19c3TEM=","G6hZGvHFikXfCQNHdKg24xWIQSfWK6ArTpkVe2K4xGc=","LxH6lALFhTvTCBgcZZbc53yVpDGSjRa4U0CYDaEuUy8=","GdzN82eDlhoYyOQyYY+r3QiSzBfL846/zmOiv4RiMu0=","E1DspajLwsU7ap3xo5rH1y8Bg7/5+/0BdX8Ido3VLW0=","IwWFr3WCtqTcZiBw6zfrHDV4Vk+AqGcC1aBG/nslEnI=","BSpxtdrtcNEee7mrGmEwz74Bk4PcFPmf4rUxCO+DEYM=","B4Ud3HOixvl7igigW9HePciOBJEL6g2DcWTyxXTD0zc=","BpmVKH/u9buplsvFqDG6ABCV4ms+a141+XZf799GDo8=","CmkgQVC9x7xzKXqkvxVrB/pYG6Le9pJOKGjH2uhMdKs=","IP2fvRU2oz3qzfJ2eLcENsuBcF4mfNw7zWkmrSYoURQ=","LrGi6vFdtdV4qSHY532mL55iKCu7Ap8MskG2AhNk60A=","BR9VvAl0zLdeabef1pX9VOIQrTcDSDa0AfLyM5edXeU=","DqE4bXfA+JbQCtor+WMDsX8bQxin3V2VnzyKscJdw7k=","EeL84Ot+ZOSI4KY5pfHdIPHbkaHNvHn0cRHg4BSLTC8=","ImM4dPta5HdNHwKpVadHX46SmrZ0mhfLyw4SZj653os=","HuJhO47V+uqMO7Xzj450J1KOUrNqXNEUyNhGW+3WIT8=","Gz7yU111mt0Fq/Qt3eKDEpJ0pxMYg0tWGwfguYlayyM=","JKCE6sYAYS4HowxfFlG5hD++/iXmUHfxu9TtdeR4vDU=","BJwuDn4XehZmjo1qKDHSC/UskVWGtSvjpTXDhuLiP7A=","B2nStW0NSAU6LbrR3dEfcmL4DwS8eo9h3SxKk2FbYJw=","GqIKJeRSZAEwX7JDLIl86DxOTa+dS2/FYJ3w3Y0Mgnk=","ICFNU0Rp8Jaaj1ezb21rshJeLqYbISYUPPxm9zd2Mq4=","AsJbn12w/u/HLqlNo1/DBccS4RYrkhyVlLjJs7kJU0U=","EdBtXNhBSImyCfCCZOH2OLVr79CnrU0cuRqHmGQm86I=","ARGMZjOtu/ofCLc9woFI71AIEo6UlG5H33jlK1OoGBM=","EMvQqXEkPBAM/DRH1Zh3kLYEIGZNqWR3sp7VgVnTwLs=","LX3vpWIYsdAuZLMeDYT7OdQGjn/vL45HwXNAHVoBvnw=","A1v6Gj8WRyrQlkpmA9RMtwqTD0U4qyNdXLHZDnWoqTU=","ChcjKXQq3kbn83YS5jf4oCYmIMzYOIkvP8vOD2NA//E=","LFjEh+pgdpJC0Z3YIwoOEKm2AKBVQWhYFgyriZa9dH0=","EHU7NhaO9IFMvOipIXb+DQQpKUp7v1YlmekBOJcjRdc=","Bcq5jfsycLyfJ8YVExXdsK8LKSZCKX/XY0h5SWdas8M=","JEur0xQDajUwaLOH548GS2w8IaHkN5xkA0hSUouMwoY=","GJ1uoZdUIMFRCPkol17qT2Na/oD7FUP/ZRjF3ZibTvQ=","KDSwbi8x4cLgE7WJwwZinViMlnfqO0cp2inluTFyfhE=","LqZVc8rXBh0gi+6T1vcued+3qbDFjRw8Q7KVt+28BQs=","Kor68yTcoowzGcZCyTn+44D7sJkr0AwNUHuyROefO2Q=","JwDKlkRWISLG7BM5qevQYXD9g1Ds2JP0xLVMpxTozKU=","CI0gumPVI10Wk1HlrlOCpl0KDkVCRmYlxJZITlJ8r/0=","HjsraSdG2y4yIdMcLJ0q9suuWc3qLfjJ1h0JyrVDZRw=","AyAUDiw2NOK7xuq9Z+MVBZNAnhfIqLoU1roQtI9Xvns=","JfzOrnr8RJz2+pWNfQG7V8DK2Wa4nenbBJ5Nmao1xjw=","LQisfD0e9EJS2jxAqqfclVdgZy+72rysmI+F3X9hZZ4=","B3I7fzTDGh1YxdZ+jwCCoRf3e0A/Qjg3g97XVQEojiE=","CPk/EaYoWII7V+vnu08sf98Kma2a5Sa8dWX3/L7VMdw=","JQXAiWb0GMu3y/GGByzaNHi6AwzAijHU3INT8U9f6c4=","InMMd7rO7l+mxWB+y+usD7zKCl+qSKs31PSeYD8zweA=","KGbaj2XO95QXftmcoOXijEXjPwWab9jbi73YPze5O6c=","LLvRafSjLWebgYY0tAGKAKITqrHfdYzA5e1paRTSeUs=","FS1n2hbSSgCoKZGIbG4YQbtY8ZwGRhhTH2b+7nI7rfw=","Bk69nwDTqpJQL23fj+6W56JHrwdJPt/1mmRzzyuHe1s=","F790ML4O0KWSTsaIm4cOOlrh0AVDLpZVlyZEV746kgo=","AtjNbE2r+rRqB5JzxLeJt5IbaJCaad7ftkl0zRIo8mo=","Bhbn/AF4Wu8WcA3XQIYOFEVGTsBSQiF8HXeV/Pr+0L4=","GNMJJ3szykgTAeDKPUKogDPqg/5rmr4sLn2TBhox88k=","B1JIEco1f8Ms88VYLK1mKwQNzBXwr6PgRVBocDGYRlU=","HsBl4OyVZA73T9M324xuD9ehQUFi0dtFu+Ujs3OUEzk=","JHF1Y4azSWwhgOaMasa9CEL4zyAk1uUZo3ES6cKwEV0=","FbFnluVz7oSrhnbawEGj0rCIvOWxfvQ3s9zFllMCvHA=","IY5vCRcxhor9WspL6vlvz6yYrKqmbVc4AU8BOcAv+kI=","EJ+6nlnPVSA/6XHc8yYIpX5FqtZKfI3KV9tIEdwXyAg=","ElpsBRp4FsUWa6yzZHv1TxLsKUXKalG8nfGQUc75sZ4=","Gy5mIdlFjNXc3DDj7/L/00Z3st2K909NdCBJ4VfV7ho=","Duahhkq4XwzGChk3KxO40WcYIaaBzd9o39gqDprMcso=","LF6ouNIs9M5V1KOBHqSs4dryEnqSx3uzvKUeY2xd1aM=","BHaevZSfQk+SXgnS8RY6ZgLyZ4X3AaD25G7vkaebLYE=","FMpWMfcwnN0nw1Ngbo671IuRGiOdhrRcVYm9Wp1WZPk=","FwheCRzLVcsB1Fwv66HIwYyjgM8XYV7dENP9uRBA7MU=","K1gGLgYJf0eEMZhFipdLx7qIqvAbu/q3I1zZkMPsgqs=","BfGXQra5y/FLYi5Vtb9FvHJjlTPBjJiy3YEcTdZ37kk=","KvTLo0szZdaPWwd1vc7MbsH0KXKvSNZIIO/xZuaMRYk=","ME75Zc/AzEzeoA6aK4SH3XkWUrr22YEKXv2uOSwzTqI=","DGtwBQ4X2V6q5n4DuCC+e88F4OmcQMft46TWlDTCzk8=","FSBRVnse19b00oZOrx07BS7CgDfOcJrfz+wNzjZPrnY=","GWp+UMtRfiF2nR/b6qkqu8BAx2QE1xRFVKSoiye9WlY=","HbpNbS66hDObsqejL5zJeHJkrPaHUErkxpqLGilrmgo=","EU+zWDndtXw6gz1AMW7rKOMiIdNP+Gq5ZQetdVxNN1s=","FSCG0SR9qAUDllQSvKWwIPCRjgX65PQCk8XBNWsBWDI=","JI+GWVdMJ7NJuXw0A91fCPyq/J9gallpO4nXQ66VL+8=","ISEkzteLsM0LcI0fDdo6jk9bQssyRuemTs75NeX7zi0=","CdaKcX2EF4ZNpxaz3Cmmqm4t/AtmHMlSa2YCanyei1I=","EAnZAzAROH17WddYQYyjwHQt1q9+yi5eaImsNlGzKgE=","Hc7ZBgTSnMZvWBAQhxPAlXn6+rezF1sS91QPGgPeaFE=","EtQl2pURZXBx83AOc9OjV8HbM2iv9RSNQNOzFcPPTVA=","AnvcBo8j+PkofIvlVGmAmSXf5SJhCJE3lLR4Kwf/Wbg=","B9kJGW1svSCR57ZtFVDjdys2CvpPlkavh5ACvSDmdLs=","LFQII05HPvpyaWBOc9EnM3E6R7VScmMy38WId7r7hPQ=","CZGpp1SOPFxPCUc6rGCBXG4Ey8cTi/wC1DNG9GpbzSE=","DmxuR5JtI4aw23SyD2d4xQe/ksP+XrwmMn7xvFqb1X4=","Adt9f1mVODM7/cG5N2s46M26J+jEm9gZ4I0o4TL/8hE=","FODSu7WWnB4PhoBRAMKE2Pb2wcEB6Ocjmjjjx6AGJnw=","Jrp4TgTZLvWdV6FxE4svK7v5nOuy1brCHNhsivUQZ1U=","B94GnrzWfdWIDQmFSa0+HLvnTyGbjFP4vUkWapcl9yw=","MCiUmw3TPgFaprRgaR2DfY+5udXnCHe9g98DALSg2EM=","C18sy4TbPAPuSEL2Y0edmwqMsI0/HX7UEGn+MBIAOPM=","D1ajDcOW1sGxePaSUwlF0YfWnAgoFBki8pI9+k2T+CE=","Fqhzw/PNgP1qReeCbspZFRwD5OqMF3eyC0+7QtcRj5g=","InR53UpehuRN6Abf/5jQXuLFFI9bQqWs0HdHrHHHtHQ=","JH8XcgTBORpLsCQc8NCE7Xn4H7QElJjAA7obIlUUmU0=","GnoNPgLd/Whjm5jtzKZAm1EaTFCKrEo+4m3s86t0EY4=","BhCQdHFfkBlhid4oCvbQyCDI44YqvWml0FCTL0QiNfU=","ES751GTi7Qw/NIYs2VXSlijDEW/lRSDnYwm3fKkbwv4=","BSr9NIiodbxE5zxU6uasBcrS1+GbSA9QwoWLjsWk26w=","B/6okRt8KEH0976k87e+fLVxCmJCl752ezE0R/sqH50=","JTuIu/RhDRWTTX6Y9KEwNmL5z1R7th+l8QNbEYNzEuc=","EO+PKh5Uo+CNS2QqW1hCB4hRZoQ3CUaWkdM4NQKDSog=","Lec4wB9yUitpgsdY4BVAxteSBA8+oVKFx4ZOO/ksjjU=","GGmgXCQ19O3iyjP62ECweFfv3mX4UJMl4GoG+Jswk/U=","BEo8WJz/GwCVo7uiGMY8RRmY1UNiQ7oek/cm2uglk+s=","Dt8VzEerUKkuVAFLVkMWiYjiU62ubwVR4jnSZdEPH80=","Hd5xo4jhqcsHWv1rahM1RwHgQfw0FbXWthNUHUED9Ak=","ExAXNAgssj+b0mV+y8Md6968iG3LWhW72LEgyKlF+Cs=","JaOnwSisb/3f/sTXoXzTBErQqzCLl0Jg8IPDn/cpN9U=","DFqTg5MBb/oHHjufL+PFjKMIOWeilOYu2L5WVyRmG0s=","G2OgvuBwct+zozxj/QDS2k5oKtrcZm2xIFMmAIy6bhc=","JvmaNPwZ6n3/6carlnGbLO+dONQaIJ6+dLUbL4sPYMg=","HxiEsc8/42zA4KroisZoY3XOZq13AIe2ay0cQB5Jg78=","DX8OIgbWoJLFAsoltEBFXamOadf9Xk4gXFF3qKTfgSo=","GE2gn9Rf26Nghh8SX7U5D1pHYlL+cYiVgs17c9qYBQo=","GEB4FWKVXMGpA1+LG6ZRyDOwcZ/igzM8JJyLJjuwFXM=","AtB30CfzmJbZ2LGmGepgYykNoUd9BtaiRLSAI7bzzcg=","LLqPMFsAkxCjYRZ2mioX/yIwtJFeFWxDwrXZyXeBNmA=","HhxGsGj0gH1oMqlovp95vKqZC2SThErXJPios3u3kho=","Ia01dAS7jNnbU1XlzEedwaoeSPxsdvYvXRrnaKDhpBk=","AOGc6LcsZFPHOjU46Rn0jU7uEfZgm2DPQw4Ut0zqxf4=","D4nZRVZqKGt7xjuTcDbUD+WP/zsTpv0ep2dutmGU0Gw=","FealfLtTIggDxOkeBmtIOjGLqwviEZqGQ+0c7LphE30=","HEXIhB/V1OZ1pGyZEVRcFOnkaO+D4efGZ16RcD8OIyc=","EOqT8CV1EmwjFFiyD0t3SAoPEPU89MW28du7v+jYigE=","Abu3eEsfSXG4t0txTRcmbjpFAIgFrHQkdxQnZ60MX/E=","E4lB+09mas83T88BkKQcyG+UKThq18ogT9wsoiTDQFo=","LImR+ztilc1nFiYx7DSR71T7pxcnwilXdAVSyCWUNCM=","DeZrJMHU4uVngbxinBs5ideN+tYocWqEOjLF20GMdQE=","Dos3wW+2KBJVyyd5CsUj9f9cFb4oax6C2XO04BBLsqU=","D7QQZ9/Z7m6EC4goBZfUNqDL1hUC4GiYz4tf7ZKJyF4=","ARnBnfaT+Ap6ew5kR5qad+9LjrcNa+4H+8M+96z4V9s=","KCbA6zrgt1yWz8GBeX9hM9hDS4EgWL0Yh+carL8JV5U=","HROMhzNBT3AevNMZpoWBeAN6qwgrgE4hQzIqh7ZHfHY=","IuMsihqeIA1+MdaeQnfD5nlJSx2XDgx5IXWH5JVdfAc=","LVK2VYK4O10T8ojWes4ixcUfik8HW45tdmCmYK1c9uc=","Li5wSMCg24kQ4IJ+rdEko1lHyyYGSiLnk7TUq2q5Ahw=","I0+dls9IMzPBP1IkpA3UlTcNrLe2eZ4/k2Hiq4kwQcI=","C7PgAiLNPXL1SZonSd1+Nsji1V4lX+gddYoQcHC6SBw=","GZrlK3VHo9pfVL0rnKncDyHRFZTrUqB5B3Wbgu7nZhI=","AaPYBI2tCVgcGNGrLhBmbT7M0HaWidYSGZwmVQ86GBs=","Fma6lKwss6WMXMhu7HUTU6FDkbDgb74mOFE5bezA/Rs=","FcMDTNecrnXAC3l2gXxZaVmJFu1WNEcnuBGHKvQELo0=","CGrGky3mGpzkGLYSUChR4G1dcPTcOx4e2Oosbfdbh4k=","D0OnDIZOeoHgV2uyd2RlYUGrQ7GZJaG006F2i8city0=","HbOit8a1OK0HBo2XUI31/7NKCeofmO0wOZrymD+hRfQ=","GxU5HKhSN+6OpIVw11lBbxgmqrNOqH06PMNUfRfn39k=","AmOqqfnoPCVeZ/mgmQH+7SaN9WFR553zRUJjQeDzjzM=","LahOw493B9XXH67q7eeT2ZDwTozdAWy7871lwSkTghM=","E66d7UgS0fTSjTeWQrp7ebstPrgdzSI+iRDFXo93vp4=","JbGBxyVQACwrEwSTfv3DSg1F5wlRGSnOoGA1n7Ujv2o=","LRQfh3eOuvZH8tonq74FBNRkQoOPOuIarpB0WD9rZLo=","Bc+1aY9oz1EwwUv9TId0Ggtl4sGX9ZSDHKQU/1PvVQU=","D7o3fmlJs5CBVAhchFeimAzF6jRy7DDgmWzI3Z2jHZ4=","LqW8Iv0+TuhYWsiD5XRQEhWXKyA+IdPKwztIUtm1B7U=","DbL+hKp9E3Ry5ysP+8fnanb5Ik+sHRs9pu41pcck+Ns=","EcgEpBnEfcc9sasmgpea/bBCwSzjSaAN/toccvCk2yM=","FCPfmcie/kPD6Ar2mf76u4Yf4NiXRiTfwZJ9J3ba8kE=","LgfB+Bu6n44b2JFXh8p0wEYH6Dwwj02iUxQN4OPLTuA=","G5Rcyxe8J+EKI5JspVN7SbKLYzErMnjNFtsUSrJ/o8o=","CumCEkPgO36pNzsDInXTLdTLq8k3gfNtUyt8ydt6V10=","GPLmL56Rw+OZNYI0+moMkHw/NUH8DOjvG1rRNdQcTAI=","F9eu4pLbo94ZQ8+DNCVPl1SxetelosVyMO734GxASf0=","D/dfj/c6VdSGvu/Z9di/b2+dMbEKCQOyT0o78hGPmDY=","L4IZ88fBSNyy84xpe//TEA40sOyNz210Nt436d/GWk4=","Fuwe5qdPed3Z0UIhZlnZm5Ej99eJAZ7LXPOgQ/fYIOY=","D+VhLY5f5f9OIkB4y/OQfyUHjSYE2/IKaurxiwIWtX4=","CAIZd330fOoLw4UkLFJj6uBrKn6qymBbfd0y/gsM/I0=","COkMBakJEECBXsCOsUIQahsslO7tUTLGN8+cDEBAPnc=","J50s6DRnMf3uekmQO35u8TYsWZcOMarwGqxR3sf58CY=","EX4AR6zSK2H7+B6ZzBPiufHY24+zg3hZLUQ3J3m98WU=","ArxwU9yFKVpR0PjQURidoi8y8iJIfsnsOdWhdlLZQR8=","B5BoS00muagyJc9y5gwCZDLKU3hnjrjHRN27bmRfwBA=","CM6p8CUj6dy4dwmBLh94aD83OjOJV3RJHB1gcuOrB50=","Gij1VI6+LCEPNhDOML/xzV8CM/4EXw2i0qcGH2OtNfM=","FVFJGqDgNXhyQvW/Q1Ga1WG2YBApxW/IY8Y0dMvGcT0=","JwXnNVb9KYs4z+az0ELk5fS0V+kOfosWo8m1S0nGRPY=","Ge24SGKkoRPjcuAcODW3FnvVjW7csDgHjeUH3IlHJyg=","CTixwmUwK35BSJBv4OkPmt43VRCVDUdSJKCRXb0qNCk=","BDXWYeGNi7KLuhpGSLc69kRBYjFi5bY2uh37en6IfAg=","LOcc4kMWYpEeoz+Z3dQiJ7FHdXOyYfnTiVf5yGKGssw=","F8ddoVIb0/RLLtOXmbdH+0/SgDioelCm79m/OQYPHfQ=","L6GOiVleaZk+qlf3GroVqLuD6ahsXa93B5RWf/T/GHo=","Cpe19zB7m2tGFNvdnKBu7YD6jsY2AIYodA8EZzzM2YM=","L7AjI6jbe6fjvqeGUqPdUP2QcFy2Xy+ZEVzlENHukNo=","AQmEkV+8vLLH0FHAagAgCCPGQxQ1/zh3iLh4NLRqZF8=","JfrvtUrn6KybNRbtRFNoRwRfmDUP6AIO2yT9Aoy5XnQ=","Fj6ahYBRZjhkBq7EMJFlbfijVBBJYKxwl8hdIQfc/3c=","LgHjn90gnt0AOT28eSc3go+B0KJXBkNsRYaKQMI/5T0=","HubKAVbuvtQ6fwJyYzjJJZSEY0iD5ky2w0/0tFnc+mE=","Je/7S4TCwJBuu2Vxr3oVEyXGrWlqwKtafno0NmqSP0Q=","CQGFCG0M+9+UGvCfboXmyRmdpBwLKUwEniFD4tG/lMQ=","GWkho3QCDy989r92t/2Nuq4Gzt7Un/lIJo03KNC6zL0=","LjCoipwaSN62a7H+kjLXOuzS2Bl2gisu1DeqnBEIBXc=","GPyV77hA3VL03lTNAjsLVS1X9Ums3E+GwWNWhSJTQ80=","C9Iyawyq6m1RQbO+Rw6GXa6Z2G2+a9eGGiLvbi2VwIs=","BN4ao/uYB7Iv48UD3LClgyU0DqC1pQcC5idnAYZVqMM=","J50hZXs5tpQYHVCBgnlA9ubhJxoITFX0Lfxzehh+uYk=","JZSpQhXcxsc9ZFELrDswQUq84Yzb/rUJr+bXDT3Jeos=","CVFC485uX726mIWDPGFLv0WYlbbOoQ7fut3bJ23dKSA=","BPfHEigezFbb+Lv5X8GvRpD0GbhBMDQmR7460bZ3MmE=","FQwpW7BKYoClz69w3j6Zj4pCRIt6juVtH86oxRX85IM=","BAsHOuoBtVlIRis8lpZeBwaBukLZJwW+q6fqnOWYN4M=","KFhUquBCw+phbaewKmsu8wl1qqKpCuuHE/GJxMqjbJ4=","CrALvuICpR5C7I+5tcth+RZc62UraVbBIF6N1TvqOwQ=","ARUuGRMJHN5fOKa98KTrDrtQGVS3IfOFmgqiYs3hP4A=","LfSpOOlIiCWXlELYXdpShQEXG9CbeA1D0bLiUy6KTRU=","HRBDPmdsCNw61J1xrAJ9xLK8byGi+z031+npWBknmnc=","CH4qwSzRJnoEkJP3MMKkYa/2pCnCMeX/7bYsxSZ23yY=","Dzdpc3pENA5vyf7btrdghWgm98OmyouZP7AEEYcYrDg=","KfbVSiHMAgmADuYTtEWFJS58NdPApPAM8YqCIPNs928=","ABBt/WoF98VQBMbQeScomF45LWPG0i4YO3bBPNTuRl4=","MCS2ZT39aKGrhe0k8wv7iGkMULmWDa7Vm0YDMfjjbj4=","Lxea4/oWc2EQwpEaUEg31xx89dJ6TIPcRHp+pU6aif8=","BXdA+4jtIcb0rQOtSaszhmgNPQ+13sxN/mXiwYezl70=","FX+Fc8wfl3OzhSyWW7ALwRibyDNVx9gx8ciBAG09IoY=","Idrp3oTIlvs+Bg/kZ8fdC3Rx526WGjsw03ZE0g6PRJw=","LXbro3+QEIu53O0/naGsrVop0qNU7dVCMK+pt25HA8g=","IEHqQNSR0vEGKGI3JxU4PbiXUIKAUiVbHgcfmbo2AZY=","Jbk54sQMbgdaQsuJaLv5KOPWqK+NpMx5yb/HLWghxnM=","LKjwoVl4LSqy/07Nbt+yh+9uWh8g1Qz3p1qLB2Bc5GE=","COGCUuzVjehadPzypd/YZteA6LP1khU7fnwEcH0vH/s=","DnQvomuECK2rqhfKfcor/BT0Djq6RqLW6F0+O6DFdn4=","KHQ8rT2HKEKtI9rml4KV0mF52BJ15S3DCnr4Cjs/2n8=","K3ikd3LfD4AF5QjMR6PCo3BZ/eNA04hsLq/nmur76Gg=","FplLgVIp9m+Q6I+J4Ee07NP5GlfdnuXppWKUwvNQr3s=","Dg8WzXUEEohSDtsYl69asRuFpUX01kL/sVf1dyEpQw8=","GwHo6R13Pb1Kx1YSL455qp8BfaPhXUhlbQfpj5pz7wQ=","DR8lJbat9QE+nXYXCv5vURdqRJfBWIyL5XXATlZ9My0=","CtFQKUWIWdz/4Q8xb9zBNFJ+qx+XwKawmU4tFuP0UhA=","Lu95A0+Mwu4E8PGIEVwB4itB1Cn+sqZrwjk2HupK9Fw=","JeQqIeZemfY/BbNs/Ehel+ct46o4qFc9ND+VzlDGLa0=","BsYsBWQEqjEGGXhhPJuioFLvhTHu3TJjvMNMTxZvfI4=","F6aYtYOnaRReMHeVEigEAj+Cvjdhis3BINQe7e6dTP0=","Dhy8wR1l4hQJKCF5Vjqz4nOFk2OwvunP8Ggc5aEfUgw=","IguOwHxkkZE222v/y6zZvLwqVgv+mLAsqdKhwWIN0K0=","H3GVs78Ympl8LU1/jRB9kcKtU1K2PREc8UJQXC6jVkU=","CUbiKl/hJSzqdJcwqmNja3+ZaA9imagCScOZw4tWZwk=","JHhYdb3snuLcdlYNr53CsBZHIYm3sqfX3ZnoYykxO10=","JNbaCv+EU/ApUx6akMq2lsQyn9BdW8M84+lJ0tNRBbo=","GV4+IQeco4CTvduxFZHNutrM7O6R1EqceXOA/StwFRI=","G/9rQ6RT4WsrEwMjMXzPaMARbMTmmQj8T+qt68AQIJ4=","Bz+dX1JpTYHvYohPupoxQy6MWQCHYwJmqGuJ88Dpx4o=","K+P+TauEwYzOQ2+T1JKnPTM1whpvtvPDJccPJ6sHF+k=","KA91g1DiziKswCIIKMN0ETwKBFRyFt7HZrJmntaHTbU=","BqS4qqNjJhwrpj/DHnPEcEFSkIJQ6613vXkC44HV8lE=","BhGBNcaxmX+W0wphlod+4KEDcTuRAEAnQQp23Fvf3V4=","GomysQq6Ja00RFkXBVuVjxITBfezFIn1Du9HRJTDHAc=","LjTDokuQ+lr8s7krQFkcOAOSHbS7FHX9lJhBJ6/h9MA=","KfTNZLfJ2qiMHgy+NsC1OEC5JBr2vj+jUoy9hJXYm3Y=","ETA0+JnJr4RlTuc0z1kHE0EoUo+MovxicmGt4AbcXaQ=","DdXkHk0ALRf9MDoYLHzk2hwSwp5SRalOZ4lg95oDwiE=","CUlSOaT+0GOjwpKKQkE/As+a4IhoFG+ABU5tX/Uxy2c=","FUhv82tzJVKK/lMpgZhLbAamOgtuJbH7Jx9juMpujYI=","LYquHQgqYNtrOxqgskSSnON8E5J+jWH7DpGPAaFOSDU=","AJTrtVAdrlCz2GgxFwD7g3pcaem9CQCQNgFhb2k1ReA=","H9r/rK2sQbYVSxbJqiyIWcQv2NqQg9KsB8zLJuaQx+I=","C3WEzuHHjpAwF+Oi6D6BWDDbkRiltHebWU12SqWyQck=","FBLoVNqKTJ4KEdJ/8MRgm9co8uDVZqVswpNvNwxAyHU=","A9NNvC5vd6HRKu36XhHeJ8yZHEnt+zlu504mnvXaKYE=","Ku3VeVBG28bJE3g4gtSkVGOVDRCKfmkQUyuhofTTF8M=","Cl3OHsXH0ZkdJ1+R7S/qN5PtxK+n07Fx1sotXsiA4oM=","FY5/ydFZbPBLrICkn0qTRFs3F4qeWna+JNbHCM04lZ4=","CNcwYdmDYQ0wk+BegPBJTOxuapdS+F5/YEtOZeb6WV4=","LrFtkjVqnOLHNyAVtfFqsYl03ynPU/F+H2QdU2DX8gk=","Lpv7HAcv+h8USLzzyxiePI0EVIV6k/LbTB8I9mUG1tQ=","BNo66czyPEQlDunzIJWy03WMMiOquFzU4heRKHuqTQg=","FkSVdJzNfq4gXKFPSIK21an4TXCi6xJl5+NhkyJybl0=","HIGzkz4wLiojBSoe3oDI7ceggw/JDU+WfBPo+hmdupg=","Ded5AqLaRc9nJ6boeQtLOH0mu+PToQ+PGvfXG+gqzrs=","D7yPHzn6VvUB0hjMQoPZ9PfFdYvxIa6Xl4oFRrJ1oiQ=","GxWImN3q9XB1rFoDPQaVQ//ZIm7B/J9f6M0XQo6fnCU=","EKm6fY/DYkm3HOOCgsVQBHwHI9QySFm48zwHIzFX99A=","HmK3xT9RDmDBzLeCZRXADWLrIa7gCwoSu+0z8/CkEBM=","IeKjCXPmAUab049p5r/l/GsfLFRqKY2+S3We7Bg5l+g=","H0JWwBK9tzzGMktgWbGW9mB8ge6+DO/ON/uuNDoNuGI=","KDgVQG6AyUWraoC0t5A1kuMyX+//8g1g3x7swBwxCTY=","DLTODeBf/t5nCKe7FCRUDXgRliRH3qB7vWs+JP/P8/k=","I/na34LFIt89C0HjGn9rpTIw35BGuKM407NxJ8utloM=","IRMG4Z+2WuEChti2KdTMe/IUWrds5RPUr8tdBYpc0Fk=","JvGLsJ7vpwJX2UBsU7FwPtMgLufuKR/2awgHV8i8q8E=","LWm0ZCP+eaocoH3JokBvJCRXfjv6//WOpQTBBOxPfcc=","B0ZbozAm7SPcz3bVIVwR/8jHUKMLXZ05yyrTGW0sfjI=","DkFG3ueM66aIdzgQ5TJ5Rq4g8EesT6ssxFo5C01G1ks=","FiTpYLHcVuWHbqiy4hFc219gpoiYY0V//67qwCBm3YU=","H9DjrieGykHmVb+OAkenGev9843w738BLuWl+TWNesQ=","IFLDbmuJ4YQObRdMlmSaPS57UPJVjL+GKgXDaxd2lqE=","Ese+gL9/+J1p1i9cJdHLgp9ZgYdXjS/RFYpH89ybGH0=","HnEiY2fPDmf57h5bubzsCYoCJAA7xyTwRK2mPw3IhII=","Gxrv3ifUAJ2pyp3RTY2cVGp8hOZ0eosf4qVh1i1HMvk=","KPtvvoDRYbnRnWTGi/0kZ9sDmUWeTgCGmbujsJAfW08=","JwNMmhi1X1JZgF+W2KHZt3Fvsch1cfcfE3sCMUkUzhk=","LmreSe6W0rmc7JTHq5CYnK/ZEdnXT2uWkTDcn2ECyK4=","HvrKPVroel9o1PMRSQLkgKlBbWkzKRTgw8z6ol6BlmU=","Hb+hK7HnsM85GVq5iy9P57C1I8Q/YXeLKtOOF7ZguOA=","HSGtxZW7NGKqOV6drMZxU6WsTiqByLqD/jN+ZNmYHco=","GDoDH2UoOixXqmG5P3H46iqn6piBsKTIp+tiqZxipOA=","BVBdcD9//9Mj3FZ5hy2bv96BpYzlosT6AEoftXAFs/Y=","L6lLk2NuUJpfu9N08RGlSXTq5N+oV7ySfUY/0CxmWy0=","Lxgk7+5rkMcojbzEF00u6ykWitRoyfNDPRg9OP27YNg=","L4sAQ8erffElKjZaZTa17kWG15v07dTOTU6hI2p30pQ=","KgZvqBF1SkyN9ho+7ukqeoBCD5JUHQ3LBuraMSf0s0Y=","LdSDl1vyEk+oXcpBdJGIxPdNqBJ+zvvnjdlyt+nZ4UQ=","A4dSJNPQtAoWR0b6MPeDXtbcvOnSPcSjxB5l4KcPeow=","KYSP7mJlCN4GbnBG2TzmeMc2y/5kg5sP53R3LGUUwcY=","KKfYrqv8HvqlFchVAkjjRBKifn+my9eNILAGfBJWejs=","GVB7FWhuIP4rH5jJoeSVs2/8JNwUmtKfIzlh5kFfkrc=","CmG5aPUF4HBL4vZ2smfqRJCNkp/4Y5vcQUSUWwB1y5U=","EJdaf3BgswKrxNXNLo0rXTMNQrMb1cikeNenaFkFn1o=","I9HvO0LQwVPWIWNPQ7JCMr91yQ9zxbwwuF++GLTImiw=","FbZr0+p5hsfSlkEXiU88Q/4CuCVtLJwYXct/jGO3qnQ=","CeRqjO+onFympblh+9lF8HJVr1TFP3MtMmGUQrj9+OQ=","DnLbSHJsMEkSHL+9HAg0WcCmM81pU4y2M7h55K9sa9k=","FvBTCduRs504rPwd69OakcxEQzDD7URYEhQgFqZNeEY=","Bv/97rOBy/OXlfg8nWnIs6zLLYf9bOQnD1pmBt0M38U=","GiUrHzR9jYlK9huy91xlz1/KGiIR3h+QXPOfptOE530=","IxVhu2h6Wqiq9+HFlb8VWtLZPgki2rMn+5wfJ4dyEO0=","APjUAw6sk+xtp59jBM2msEvjLwNugLQq3ao1HnAHkT0=","L0nd9WXLUyTp091Iu1cCLMt7R5vhI+AD3j8symzcgNI=","Hf7omHaWwy3jBEBjdyWGVTH518PXb+6YEWVqQ1vwaE4=","BYIXveswZVRokszq4hj3/fOkPCODzu8SOH/CnU3HQ4A=","BfhCOSqaB9TH1w8cofcrnjtc9WM+GZ6/VLokI1YNT1U=","GIsIB7eRBdy9XDbsxnbC/uYDrqByt3EvLrtpudF1Lks=","EQP26gnK5iHsb2leB5KaNgN8Uu/LtJPxCvE82wBVVI4=","GkD4ujGS8MkpJItK7WGcgaIvigvwN0XRU3K+Q3sPwIw=","AIgjt2JfhKX1yaiJHL89x6NHfaIVIAukIOUYIWRfnS8=","BSpJSvPs3vUDHYeZTyZJBdJfxsYme2995ENbxhYfPzI=","D8jNGe4x2gGNDGxZhW5ro2mlQpIxET3/TI5T1Q8Vd74=","C+zohwj/RH8mEDVgDZmxE4mqByW0Rsno1UoC6P8t48A=","K8L8L3yTJF8fXtCrbEzft3FUT43+ygIlDZyhv23C75I=","IrFvgyXyosaZB69CaAEB5Pht6A2QG7aXAxDfob+AX9Y=","J4KCPVGIz11BTCgM/Y3sgWrn/zbA/azYcK5kSfJabLY=","Eto8kKzEGJtFsGofdBWY37LZwk9FkSDevs5cX+I9tb8=","LYGl+fpBc/WPdUZDSB0ICJcmuse7cHj0ERtVEGta3ws=","KG28mQFABG4eJjeIXU0pBIdfCvpRIZqyt1j8MstgDG8=","IOejZ0oGZ2bQQiY2LnMhm1TKakJYJgN16Dl/j8EVGX0=","IonzIn9M7rrgwdxRTeTGQvFTFOrpN7OaPDwSR2kT/N8=","ITJR4wp2GZDyf6GXBCb51EoJPdBFJAFnBqEYB1OqRhY=","CRZVYSqT9b480x2ySMe2J6LfKq+h72n38nZZwT8wGe4=","GvYPrzSwV1XxlBGVsC5kY7tC33bBKxDxT4sWJQa41ek=","IbQdDv/SsEQMDTtwEjt3MZA7+0bbPHojrP8Bbq8Qf9g=","FqCHbJbUW1nd6CyPHhAixcrTFjjE44zs5belbECNhLQ=","GFMp+eSqhdSdQqYqtPZB1ixf3t4XAVp9efMWS2kPZAc=","Ej8gjbDE71SVYzXRaucVJTTS2Lp5PWAfFVJJaWOeo+E=","GqVlQnjeIjgNp2vniFOBwXhMgO9PS7AyrNE7CXOcJjo=","CVW4oWd6W2MQrY4EkugtEEShTHjKh9HjDg1/MxbqbOg=","DH/v1O3Uun2SdWtRc5KJBNGPm2/plaV18Oam6I98Dlg=","EW0YiZfuxqHiryrsil2x68XPpYj75UkPCN7RUD7K+wY=","JY0u7Swt51nws5S2o8zS2W4osQAY8+f0U5Osj/6UfqY=","Ip3owpZa6sGqftt4+/tdf7Euf9f/5rmzr7XoiDSabEQ=","Cx+w/q/pjWz2NyFw1MWVrdpxcCwOnUHGyhoD11GPg6s=","KFoFvpst/Yry0PKPLjL1zOaxU9iA2Kz2kGeAymNsTLs=","HYJA6ZAjlO3uK3YJnbA9dN/5GFQ086Tk/oV1lpzk8pU=","IWC+gjPOGwszGYk0nsS9mxJIZEhRCDHmQUZ4sxLVf5M=","KSm4OdRL0rP8W/LMgV7nkQ25ls1bXf9CbI8Ypa2rUv4=","B9DUPD9jNwHl8N6tVRbpS5H5dyXkaYLRmd4DNFkg7Ag=","C5nCfa/5DMBTs3EyYi/dxf1SvOusEnCxzON4p/Ajk+8=","LpUt/MkkwIECzKfpVl7t/s54llCDuFOsH0Eox/PXhpE=","IZC3f5YzkQZtbSbz10Yg7DXlATdrUpnNP36cI7Vcyl8=","Bb6RnFLS8dwNCw0WH3unGVUQIIquu13OsIFfKpEWhlI=","C05LPKiqg0Yiy//7dubzD535l9y/k98ip77Mj/mgZy8=","FiBSKojDtTHEXVHlNj+U+TM1guX27hw8t2QI0RYUT9Q=","D0QuomiD+OGIcV9YQaaQyys45HnYrXB06JPvGePHOQo=","GoVb++gKeIatgd3w577dgMHg5NG7AxMOAwNdU7WbpxA=","Bqk4aGEiM+PWCY3guBJmSQNswUsc48exkUmhfKogtm0=","BnFCSWLpI9qSZhLpwGYWZcSmfFJCZ8Rag97lKBMNTEQ=","CxGXmfbuZ+J3XNSnGoxdRVuCQm4Armzs6jK19Eg7bUU=","JtRo1V3DHNXqFBbcoPfqUZBkK3fK+ndB8SMyE3lsFls=","J2/P4X74IYGAEElL4K7SSrwaQerKUxx/XS9xKeroAyU=","I41AyDbbchW+oUVcySttc/UQBWjXGm0egavvwYwh6Ts=","BkxP0cUO9Yffx9yszUq3rVx82wIwzI4ONNds45n7Sbk=","A3GGafFv4wrcOEdKdUBq8pQx7LV/PbG6e2aZeweypCU=","GfEE+Qu8A3YtYhonSjJcSfUHP8UMR9uIXpRWZiQhCY8=","JIbJPv+iSJC+pO+a5subj2X9dZG9hNU1t2AinAzie6c=","Ke99PqMtljImn7Aik3x4qR17yqBjqBjFkkt7ktAey/U=","JtkefM4dje6ryNfFScuxvv8MFSy4gZ6GhM8gUEoCUvc=","AkjQiZO167JU7Iha8qONPkFcStFU61Nha5sJw5NK0Wc=","IK5G6itwHTebynQx3NIx1aBTin320l396czX3QJRjbA=","CkhNb0uGV41JGT5cAkhoC5YUlQ2OOR9SffD0eOxR2ww=","BnF/W4adJlbCs1wB4oxWlysEv5fsp3YT5bjKkrz4Tz4=","A3g8cTA45UiS3Sp2/M8BGaMp1jOsUz6BHlEYF8TEo1A=","DxO7/sHH+puUEjVXGded63N2r94NoOcOLLMfdS5PnTQ=","JRrczOUxfJiTdw8WlKN4h8/rJvH6rPm//2yuyTphgqA=","D4JaBvxpAXyp5XLHMueqhZW+b2yqof3Jg7mvEoT2Pb8=","Cjzy+zCtLHNYl12W/7iV3o/c1h9067JNPxzW0lHrqTM=","AlGy4GGxLFYBnsBMVNdEbBO7199G0f2RI9b5G5v3ekI=","KVFwLfoSb1C6bQRjvkyjThLsjeKBgHX7BDykcbzC03k=","GCyfCICaKVPmRlzNNhtXyiilKbuVGjVWQ7cInqtxVpg=","DeofZA4J3NaftFAIjNsGHfRjDbYpLx1ghcEdWua2+FA=","FXQQ6+DooMgexwJTvBYCLdq8znBwxQnniqG7b0nhfG0=","EXsJs0c4OXxhY+9kfWCWnW95fP4fS0pVtZSQqm/1WKs=","FXN+WlsxNA9K7FeKc9huTaYcvU0aVLtfufrDZ4p2L+c=","GWsGclE/J59dsgDRJkwDwexfC+AAJVo9JW7cPrcT8RU=","C73OA4unkjAM2xjmidLgZ4oJXmnhCjpWu28rGMB29pg=","COT7XhROLYZ8VcyyzALGZgYL4OvD9vqpi0CXSlPc2sY=","JUzFOuiu3IMjtUakBRb5rSeirBr++drovafVai1rqmg=","GixA8ZhN0jON5ygQIK14Tf2TbKN2qL80kcphywAocgQ=","CwKhT17V++MPmLa77puiXzeUmUKAxjO33AOjqb9TIQA=","FSKLRNuZFeVq7z/Q6WXyvQWBZj3Nx35baphpSAdEFg4=","JO+PojIx80yYseGcDistJTLqEEjwpFw+xgXMp0F2Yxc=","Jc0FqSZ+IeLQtX8i/AfKMyc4pulP3i7HL3Zre91FZqw=","DO6mttht3o1jE/fW5Rme0jpmNphMi64BE62tmKz3EnI=","ImPAcBtJMG3x139vGhRybStu9GW95LlQSS6kAvkBRlc=","L7ZW9N8ChBJI+YpGMDaTN+RD0YFuFqPB8ITDjwBe4Q4=","Dm+e/rQY+gtAFnV+EuZBR2C81FmOZB2JSqJFxvOpZhk=","Aklsc5lRJK4ARBUbtpj1dl+CcvOI17US6pQ24s27gxQ=","DfPEm8ZbcIe+yxlAmU8c3Ouxb08hEho/ZiZ542G9aV8=","AjQ/a4AYbmyuoq1N8mw3Yoqv9xMXYaGA964oufu0sxI=","J2uGUuYTPsFkgQ2vuqQM6Pw6MPeCZtjnxhsvsL6FRuc=","K/CaI1yJ/r5+VvAC33sAQhS/ANoRlAGEZ5CerZXqhf0=","HvkGTCD4Pox1gbYJrFcr3PS24fs2jKvA2/8IrZW3PnM=","IQtBjil+7j2k6As8k34ZBvWw9V2sAj4nZGvB3LjPjoM=","LKnm7lmYwq0GdTYkB13gdxp9AZ6Jptb3av9Zk2Zb7r0=","F0ripdsy3KTVYiZXXx5cT7D/6n7ndksfUd3H9SVshqA=","GGIxnO6N4+5NY4mV9pPzJFRqUjXSKVLN71IEDYu9kCU=","EiGQbJl5jN62bFDxQLi1eeAyEozOCRebsmM5Dsr5zUk=","CE3SWk0UGnI7Kcac3o4Lu1PQMZJvsNFNCRN+P4oSLx8=","KTQa0E5zpuadOsZU1EUKOG7Sx5R7AXae0yTW4zE4FBE=","GqsNyWUWH3fu+ND7TnLka/3249cY6sTlzqF2M5mT3Ag=","GFLBJoYrdC/+PlaP4nrOC2df1d82FVpmCZmFxwDSaYQ=","Am6r7lwaXBsPviJBd6x6Fujw17SMTvti7tlqkxIC8MQ=","JotgenVJiqhqHrZdtfpypUtBw+jtnKWnB9dhE7zapJI=","EKUFHwZP7cC/wOx7a+Vq3flNEHfdv0VqGA86m9UCm+s=","LCeTjOTh4PmNXlM1m87KWpwiBmyz3Q92VHHdhf9kEhQ=","BgOQogNFmWOO0NvCkDzs30kPHCDWBfYrf5W6+9Nno/8=","IQnn3EqvbLKhP/Yrw8vQ680+vfAiY49eSA0BC+/+x8s=","AQaVnhDOaBm9r0jNXBlDLTWsihZygrRMsKZwPuvj7Sw=","J2rPi84muTIVkbxYg5JgW1Dff3Zr6QyDF6Ge6TyNy0A=","JiXLG+Cf9jxeA0B5jRC3dMBDIdIjQOXujSzErqPckks=","F1IjtWu8dKRv65kaT8VfAvrRrJuvx1x2yj2zpp3c/yI=","Is1uF70UJrE+dCITYG8VWNVhm64l/sab4N9sMeprmXA=","AzMHkX8vBYrmKVYR42A2qr25Gg+586S60+av3yg7GDY=","DHTifVNqYnSoq5HfevudTr+UTGgVfEE1qBmTYyukEUs=","EbIhKgjLh3zLO0pWOc54Je90h1+yE/B2E2nKXYepqAk=","LIyNQggOLpYV1MjcDyDDwwBdzrFpfZYj687rY4um7vg=","DWESTQbNdbqgjUY7mjo6HNH6O/bKUIOZER4gbcGfe+U=","GKjM6eeqbfPV6zVAawzUa4fksI+P3JkekftZJKBzQMA=","AUUyJsdXQrhA+3HxUePlNGZIuaB/wQqsMUhdfA8HGoA=","DrBfUgZ5NdC1UXrduXrZE09muSHID75oVI4MCM+45g0=","F4g6D6+jfQP749pkD9zfAv6oIrz2EtfoLgIX0420Ago=","B1Fsuz9n27wFC9LsIbGLudDqmXF3BZWoXEhjYzsOGcc=","H4bvlHFEOyalnaZ+HCoiPkV7rur/KunwCQxVDDC/4tM=","C4TsY1XL+0OraXCdT+2QZoXwJhPZtIYS84zeM8aenwM=","GsAWtA0w0mcjxb206dL8caG574BlzQjM72bKmM54lzA=","ELL6id5FRWBhdqAEVozqbDOBvpYS6DgVRnzEv661hfE=","AL9WdKXqHOb9TLdc5/JnEOUQY5s0NU5Tyi5mMbQE1eg=","L+FDmZO9M3g7ohxewfKNq5cUej6GZIZt0EZo4EwBN7g=","L0A759OMpzNnaKOpx/ZWaShTYo9DeKdKUt9Ilv3MQDQ=","DhwXG6oLo+gl0kLR1wRUuDPD4j/onn4iPUjezYgX25Q=","Fy/IYcgioEWdJ+B4P8YDQJ+DWRP3O3HVH/MaYvbk+4c=","G7niRUozw8CMvjHddbM9nWZCzZsKl4wCUfW5HwgjUjw=","KSk/hCLU+W49xpT02ZhGzNbNW0p4ZiYl78cgNDCNTDo=","KbN48kRqmjHzfUdcgwaQUymU7bZLqkN5ThPx2caUnRM=","AYqCx0utiqx7dheUdg4JCs9VqPlVVvKqz8IP2YwZYW4=","LB/ATe2H432fHGOc7UjdjJ5GYYz0khhjfbVHVZIbFkQ=","KeoOHgFeXK6z/xzm0nclAud3i8+j3AN3ytfV7+Z0sr4=","KhdTxqTHxDcWzjNx8UCmWQPSKNWTneqSjsN5aGEPM0k=","AtlKo7tUmNDXfvHvxZUFGbECk1DUdGOUqmjoUmwJ4d8=","CPJpCE7mN2IKEXgOq9jo+WwrBLjbYCfuiKe+hQSF2/A=","A6v1U/taS51Qk9O1+JihEaQmHCQZ8+BVBg37RdgufbI=","G52E0YnFoivJvikmYjNh/GvnxxTQeVNkJ/x6cL+8u7A=","I6/CAEFPI+dJa0BGKU22kKYLz1y3LEGmHsc1E2XIhcE=","JqXObqY7/Z5uGjcxiTjU3aDc1f6dbCrPGr3SfOFFN5k=","In/AQS9x++SQIlIjeFnwuKaUmQMWkYrWcMNFTvJV+c4=","DGtEin3q5Ir7/PNMt1jYR1aPddcknepNoJqQ+WxnK+w=","IYyS455i38EZxMst7ZUS3CF6mQepqLDtuWonUWn46dk=","EGv5KgF8MI8Pcm3z0FFapv7sHBgCDDgDM892wlAWu6U=","Hyg/6hckTwQ7fDXqHnGTFknPcABpJUasVDplsYyjrao=","H8X1jloG4ccOvz/Sosjf/nvfLCwXm4F/wfQdGibufa4=","ItDXfwrkzZOWz82KJ6JGMDzscP7dVL7vbdhskZOP1WA=","HOURIS2GiFN6XgOZVydumTWz6NW9RwRcbVg1EI7sXw0=","HIPKXfasR3rnQjbEn5MJ3fUqQpD5x8HTCSwRMBLRw/Y=","LnLaDh0dHKzJX4qRPYehBoivCtESlLNQzubRKKl0Qu4=","BFXujnVSvna458JZfZeHHWECtJ6yzx3bb2gbfgWw0Pw=","EHhj2vTKwxjdBqsU8TIVl5SQLjuNoXG4hI0+2gTmxEk=","ATKrr4DjOsSJgtqdXS/pEZHxfxkQ+9wGcxcXtrxjqdg=","E05FZ7KQ7ZTEexY/owSsjRTwD54mN19imahGdw9KrCE=","DmwQCKbWzzBKHdnmGUo2DB6aptdlouUyihvitSNRZPs=","L428D4bNMwij1ZipND1jijwvVulzbpHw931Qi/04KKI=","Hu2pqcbYoDw82e/RvqfkaEDWxw1/qC4IW65nNH5dp9E=","Hivco1idIrwJMVYig3/riVVyBah3FM2AEfsm26GuD8Q=","H+uVkRIXW6byq9nWBR86/zKpxNpFn8XzuqFmt+ASBKU=","G2pL8vsyAxuYN2VLH7qKygS2RyqR0F+WMgu1vdOt1m8=","C8IHYmDbeX8E7y+mDGz10BTYl9MgK+AJ/F2Opg3BjLw=","A5pf8yTKqdzWW4xEvdHUI7bALkBQrYrpMa3m27InPMU=","HlDB96W9ipZhTqJn4MIgOctHCGcGOLFuTE5rS6CI/zU=","JDFRQNseA9NKnokNhfs3hoYa32SCEhQb5vAx7dUbjAo=","ASy281oY2UhccqBzxPkDfdZk2Y0BHokr+gbfi+ortd0=","FJpSjnMDEZzgZt6dpBd4A9d04/Gyxtq+nt/7OVFIFhU=","AJkHOP/sxvjcDmtSab0d3nTG9q/Ud3mhGdjJY9W2XTM=","FbMZ5PUayJMe3mVC/5g8su078wdy5oG63ky9ZGWfx0E=","FVM0P5Wx/yJqbYUyrz5InTBaCOjVxTJ4fTUaXDC0JvA=","Ek1AwVTURU0Q4lT843OYboosobQ90iG1Wo+40ZxaIxQ=","CGMmcvpCNqykP03+oFCMttOJXb/vWMX4D2XqD0jBegM=","GO1CAuCB7+txBwIa7LcG9290ZuXjYQH9kmdMaQvaNqk=","IrYtY+Tap8ZnTcl/Q9fsY/qc/gR+rWAeujb9N12EAJE=","H3a6GIRIwtxQz+KrZcqmRihmxeMbynLRLNfcG+fsFtU=","JZtJaPnkwyiFkLtSGyvvXzuxswpyis1FYn66RdcyYN0=","GhryQYsezU660kxaVK3M0AkHKit+26wEoIA4cPzfIdE=","E8SI77V22YsvWMJloNdtRQx0wBBdIlprERgIz88T6Pc=","LgJ4kz2UuENMUqNk5ao51MAuJoKVgZuwpMmZsV/ja+s=","JvxqD1YOV4EgLpXlhm5nnqOqSnbNi9T+Z1ULtObB21k=","LXzgNU5qRX7V02Ia+5FzLQLlyZJIeGvougxR2mj+lIg=","LeHbbat+ALgYOFlszmbouwqiaYmmk4bOUGFWDyaTz9c=","LjBoCQc9SgC6voNub+SO6o5PoTuZMskoZB+rrUlE9Yc=","Ibm8W6e94Hh6IKiqnvmhfVauKvwde9eirad1BtFrZvc=","A34SI4Ap+70O9IoyV3SApNn2Y645oOO2xq0PjDkUxxE=","BiNA76GjBhkQ/shU/1+pA33ddJ2f+9WmKA6UmLt7npw=","KOLsZ1LQfmRXTk6SQJtBdob3JRJ/FWTRZGxP9Evrnew=","EIHbOe9BlhqsjP2vuMR4WoR8ozSKm26vWpXg/088RUE=","CsA8SK3Wh26ouEdc4W0wb4CupiKdCLPJhmYvu7eiI3A=","CZQTZsVzQ8V9+GB4LVP+itwqddotDxdDZKBVqn6gfY4=","Dck42mCrkYLHEhyKoEwdlVwfcpt+prvYw3uli3S7Tc4=","B0Jr0S1HaeF0hA1KOmS0BUHoXtht0h/11xvn1+upMOs=","LKNFEVOTN88FRxyqOsZgTvBwWz0uSHTbF4d/ajotZms=","I9scEYAi/KkN/JoqvxGGqsCcIjcrWmgUg1RY0zwYM6k=","KCtZliYH7TwzqfmjaJmiSSB2jmecQ7MZx4GswCDGhVg=","HOxxmk6P24OD1URiPPsuz1wIet4DoSzCAgYN3yO6oF4=","J50UkOgc7rc7zOZuCm3ZhEO3EasTF6MeosF3GMU06kE=","Fo2oTrswP6k15w6FMhsQtnYHOSVh5v+6M2T4iNKnFaU=","Fkx74TZ7Ig2qM7X49jfpIAxDySI/1xxB+5gwKHyvNQI=","HAnpl7or0WJYUsUOHWq+u27Gxhsg0cyRsBUISUIWK88=","LsOFou9Z9ZQWcRKxSR1Yd1IGNLsw0A3GgtCJ7kWDNsU=","DPqe/kUHljgG044kZChzaCOLL5DhOublIOxfHl2hroM=","Ivj+4LMTKpU7sPTUrMYhtaU0QD2SL5v1oi5RLMDBA7k=","FEc902UKe/FAdDtDxYMhk4I+JQbGDbZp1xxj/Hy7Qr4=","FvkTlaQvaKkSFIkg5bnDC1NuhPFcp7UJ4RXjOgjfRcY=","DZ9JTuZ1wlDL3/ScvXhgNtiZEXUTsWDAJxyLpvrzDaQ=","C/NtTG//QQHYTdB89tCpyeWrNG1fFMkYWvPbPhPWl/o=","I0UogKfLWdOT5ZgCZvHnUsaGtXqH8EH3XvExiTJXeQU=","MF8qFN8VkLqk1i2kwWhCNiXj5yHyDAwhoPtFzsovV/Y=","GUfwF1qKnzvkkPYDiEhngVM6wL/1uHMKCLQ1+KNAes0=","LeQXqWC1ZqvPhtmr9JrUEUTDthEN609H6jYiVzRedIs=","E7iHx3WS8V2uDSD6JTMOGSAdVXLfJEuY3CsDvAaDvqM=","CXs13Qsm5GgF4W/QSQzgVgkW5J7x68oh2rtKvyxEU3A=","I3oDetlqNgrtWTfTzOOO2R5YkXsUPxcjO8LXVFbdQVE=","GM3ANlqN+rz7BJQnCvSCLCmm2RJOjBkKnAtIJndK20Y=","FjQov5ZghZZZAWE6HN7Z8o1ip00AHmaEvD9qR6izv2s=","Ha4NFfoYIqXlm5QNgbOvJ6W9P33VCBZ+pgZbbUnDMt8=","Aq3Zx0zyLR5JJ/rGdUtcvMFy1K3HWsH+wF/4/KDZd90=","HttWLltDdjJKC2R7kGkP4zZAeNwhLeCtNvX7JtFPZ98=","MB3al+KQp6AewQDlm1nXj+QCGXOvHZ59EBIx7Y/pofc=","FwoRXn+w52pO2wWsCA3STdtcJ8DJSzs2715uxU65jaE=","KXY4FVd1nyTamfruLWxQWb7pOaZvsyG5+ypgnk1H6fQ=","CFjHxvn+x3zHtsKl3y3WMSFAcT+XzHyFA7TXxsge/6Y=","ElV8YSwPdxjsEScB2AV6HcMBzMMLLIR1pGvK01FNOaY=","GrBj/9/6IWpbzikA832Bny115vAMZ84CS6P4Mt5k3LY=","KEk9BGcgaMam6U95yxrx1BUrgjVGNjWJSZwKFBvSpYA=","Aj755dRog4Dd8sFsDQioMSN+5Yd1eXxn2VxuDY2K80U=","EJMyUQByL4g2yvML7lPA7xTrGEEL+RVXCzJ//ZRkpcE=","FwVHnPO9u6941PED0460dBPJM1R4ADgQiT81JZ3ejVU=","AIlsK3nP3aXrf2+e3jq0d87uKziwaBdPFaOze7izSOY=","FJ8TvD5OKwUVs3iidH37qQ99XHcx5Z6fNr3j8E61DLI=","LhQiJEi+UMBo7P6/cJRLWTVAxylcoOR/K7f2MZm4cS4=","HiLAOWAkuj9tsYGskrIppRhxhwM7E4+yehz39thwUNM=","LFoeRTQG/NpdWGFDU/CimEL7VK+I7Etz93eFY+BeB8Y=","LQja5vH7fgJQpmDnGxzTGFPCJ7GI2HVZIWrxxGXYq+4=","IVUzp3d2ImZkEYqAgdh+ISoSUHZhOeo4x2n5PKK017M=","HLu7JvmRpyHHvfg17J0e4MB0CS/NvwB55N86wocpLt0=","CPV73Dx8lWgfAFUAQnrVOZJZ9pEEwiIGrsL5kSKSTo4=","G0WTjHuE8BdvM1IDIVANEpfPl6pmmWZP24zNde05kS4=","KusgkESGjKhEh7eRbmtAM+5svvcm4mnQ6RasLP0/ut4=","J2Nb0q5+DKyv8Lg2WWYHp5JAPboQrDcGyeEZd0A6PrI=","IuWTt6Z5NQJ5OBSb8W/OB/6ecmBV/AzdB+fqoX/lcwE=","F5WWK7UQAjahg95JFp1rg6Qn7evSNxG4lpTag8vQh8c=","AHf8jXzZrbwoPCUyG/N1mM3yiCftNXB89Ih/zkcHxDc=","CuW0lNFm9qMkQtHQvVm2Xst62PZXG3dIakXs2CfdEoA=","KSQim21kgYT+Y3Ga2nBB5pJyzf6JVFXXfwFjSouJLIc=","BR6ECQPdq9vyIQNnSTNoUUKYHAhSpspq8MjRWwaHFtU=","D8UIt+Ygu2xHqFlxv8vijfYmGcUwloXQoKat88i/L4Q=","GfdiG71lmyfRibsyAQuV/CvYdzkuK1avtVisX8Dw8iw=","MD6Y7jW/ytKSaAp5VuC5MvfFcsChMa3sUAbY8pi3Ibs=","GnglPlf4JbDLx0LYeSOyfFH0pTHRI1qKkB2ZfjGy6gc=","FeIgk5umSzo6sp3r87CISkxDhadNhF4g40Sef6LzkyA=","FgSGtuYh36DpASOk5D/WkiHsGw7HPRlkdrUEvM0pC5Q=","K+60JATbirXieWJLrNthSyG1rjhvLCo0p5j+ynYxEAY=","JLQHUAQW/7BFmx25dAZwvbi+itu0/Vr4/pxLXsAh8OE=","B/X9rpiChcSbz//yP8ESO66xA7/8l99oOaDDUGt8BCs=","LOm1oI3szkuFPmfSivbrTHVce+6BkNeAavBCdZo5lQM=","HarckRw+w7jl9CyxIwF/H78W5KouMt6UsBgSiEW/0CI=","H/gLFpYXt+5arvvuZ6pkvWTdFO2O2uFI+ZoW4/IgVlE=","Kv9ozTjRiLirhcAI8wDFCIJJi1Bo0807grWuAjv8buk=","EU0LP1TxTeRcxNtaH+scR1DqAkfY8k6Pb0ctkutwht8=","ErYHV4wtNJtp4PdWhQ3MISWPha6NjKqKOgIc+NAqu5w=","FMaS680H/O9VCSu+lQWJ9H3+x+xPOkKUSwRCaQeVoFQ=","Iinb37kq5+uDROtW10bQcGdjfXX/pDnts9daiwgZnyA=","FvRkisR8GX/FcvWDUeSwB3OtmivK0ErA+HOlVrbs9r4=","EtkNVcjT7BhN0E9cautjm+pwp+PQE/yxdDfrpmISL/Y=","BOLEl1a4tawmr52TlBHK+H8VYm7EQ23uvH3AdJBFIW8=","IZF9cjoz2yZrB/gZSJVcRd1QeFfp5ZgYMdNcVtvQuzY=","DRO0aqG0EWj4G00jZRImjCPnv8QQiUi16fOl9e4MJmE=","F71zEnXWAtF8objsR8sS3xpLy7njsCom+GoIsu7x+3A=","AkDuYBpoI+xpikvHdOba/C89HOwsXIn1vRNim9xpJ0U=","JmP/nQ6qbpEFk9EQItPHe4d6O+2NAH9vwgeorXW/JSw=","AsRbU/py16DXokSrOrC0H8QOnMOMu+KU6MhKcsfD++c=","ELuKdTGrBdIocogPloNNI6MZN2I98/0pU4havd0SIrc=","IiKVDIoczBwhIqNT0UgnRNQuYSVN1lO9Ja5p0rp5sDE=","LD0+tyBTfS3ee/uO9iZdJsnW2Rjjfy6XAw+9awRFfbQ=","BTmmluFRmBaTFClt5W3IdDEuGeWzUY711Qpyz5ijCJU=","JeKl/h8VWi7ur1DQFmT5b31ncrEIrFxMv6XvWh/NWtE=","L10+h99pBKvUVO/KnMMPFUFkIgyeP+8n4YEuCHC5D8U=","De4g5HMcDnVC5OVD6L5sLt5x1uqoIVluT8nmjoncMA4=","BhRCwTudH7M5YVzYr8C8nhG+dBy/y9KzqSGUA06dLlQ=","I6VhheEtYjCg66981KAc0YQQ09LKmR95r1cW/iKZMSM=","AzRLe5rbFaO3w9ZP4e7DU0IgLuPEo22y1J6B5RdCNbw=","KEt1HtYdSEuitZQKGh7h7FNtOSsRPQbbSZWwirZh5nU=","FwGtJqQt539NWKTIGR+dRzAwnF9LzQxtw6Cqs5Y0CCA=","J8rdpRmoNwEI16pukQL2sp6PojhswCllk/L2NEn/PUs=","JibWHLEQuwOzJxLVnw47Gy9bkFnrmUgHsmfkrSYe1pY=","HPMzCJfFTyXxX16LjaV77Qhl8/qEHsSEQanwRXkVE44=","AbW8zp1pnlWkkNPYboySyDpyVqf+uf2K9shNaOFI9k4=","KhdRBdFbo/7PW8snRrPIH8jKRo0dSqmZ+7qo2BEgJu8=","IKI4IpXsoKYciIzvgRFa4GN9fseS0w7Kag8pinf5sms=","BRVJu5rbzibkshiynKeeIhy2kcmrWyeGI574EmutLlE=","CBylNJ5k1gvKCAv8U0yLMLGL6kMJzwL0THEYX+aI4Hk=","KFpADWGly9bKe6p8PJrKVQOxf9cC4AQgvOczI4LAuC0=","BOG/jJVbw8hwgmLj/xSL6iaK22YqwkWUeeavLnNECyE=","C74ZrE9cZ+nuwyyea33XvIBZyR9QGy8mqSswvCaLC0s=","JySsWOHqTfGeZkS457dmXZJI00/7v0xMqJNMYI0uj2o=","BEZ4jZVCav6oMNGmyo0tCFv7QzDLJRTf/WCpq3D/9wk=","Dh7PJsKGyGq9kQwrN6xAv8DmXLKRQmmmpqrsXN/1dY8=","KaJn3J89EtYBqEkUiiRJED8lcTCDsWEcOG19DAXqS6M=","HcNKYOeDtdr0ISVYbqKltJ3Cy+udK5C6iBw0zrmdLTs=","K5/OWFNL9KSGwyIPD/kCb1eMqcQ12DIQJNEO7IK+Tls=","L9nJfwEFT+YcpeB+NoHB3ZqdH4umMN0kylo0TD1mbRk=","AE5qcUbCrAFQN/CoLBvHRr+0ac7J/uN/G3CCOfQz5kc=","D1vrogIK/ecwE7fv4ME4R2LbhhLa4FjQ+EnHODwHlDw=","HF4ebvG+Gq9Lbg0y1ZDcWySeGxu899BdPmDGPgoYZn4=","CVZ1xuHo9tqo3UIGCIOn6XlfG/iBCV6YSX0z/VyM+nk=","BgCTzJ4fVPe7p0r3GOGaEPAzGYwi0h8+6AJxJYCZ3Mw=","LESjXKjiSp9Qk84cuSyNCknFM3zDYBxE5PEuBErODcE=","A+iWI0d8XxNlu6FuyxqKWnDj1cg9UPMHFaQHQ0Pmj2g=","GSX9WG5ngzTRYYp1Y0mfa00AHL86+yAjKENfLUnPc0o=","Ghh9Yt62ObggFo6Lclp2yW5Vam6QMEoayn8ZcQV3Gbs=","FyON3kR9m8bKtmOVf/VMdLR9U7rUJdw7wRSCrUSEqg4=","LXoFk6Vr0zfn6uiphBgad0ZYkctpnQae+7zocRNXApE=","J4OHxO7uas4S8GUxoxK3d4ley0NJW/kKdAtf8linM68=","GBriCXCZg72QP0G1fu6gVoSfSobT154SiSpFJQ4B9Hg=","KGeTTr5mwzVmOwOMliK0HLa/iEAsBJ6RgB1BbXNEGmg=","AWUYcNGg19BaIY2BHkZPxHZ+eYBhUV5DvgFsZnK021U=","DxcJX4orIe3VASbSdRNPKc+5EaeEbVzy2nlb4MGnACQ=","DynqQAl7NPOdAc2InmMZcx2ncwIXFxPimQ6Djty1HOg=","A0UDQY8nzPvcDuJSkRLVdoCHNnOGMVtTCi2aBStgiQE=","LaZYruodt7IGbMmCo6SmL8Iu6papVrjI1Pa58Wm/NPY=","CZiR6PIgW57bc0+wvGyOFNTPLreFClSW/7RNrPvuaHc=","IrKFJ6nifWW32dQl9LL01XvNw5AInTqyEM9GNzVlslE=","JKxBwh4DLxIF9Ik4obqJJxaujUxyMIZLhvO3VXbSSfo=","Dv3hfFYYm13I3T/J1Hlu78fdUjR8DdOtBlOMLLzNhgE=","AfMhob5V5LQcXVqZhdRQ9sI6LbWAzeH9F98eoW85OZg=","EoRjXoqhfjS6sWH8WKPoXsJpEjWTeXpEYi9rxbFKAoo=","GEA6Xt8wy4aA9+uGJkqg78ZCLqbzTv5V+Xg7trzKr1w=","Ka18Xnxe6TyWHUtnDCmYBHF0u/p+3P4osrTRnzyV2ZU=","JoW43scQnACMTrVZrviyiWSHOAh3cNZaik9h2TMwnOE=","BtGhvKdSLWl6k7RIrBHZWXLic3yfbal4lAjvSnAcA+A=","FZ+GKURrJhsX8ruphnnNIV/xio4ioK3a3KoITKcoviw=","IQDBYFtA4WRMUnVx0fKiaNF6icGwJ0/ePBhWdo4TQ2E=","FM1YN2PFqqWWWmzYENOqcI6hsB6GWthJJrbdigwpfzo=","L5r98ldfhESXzPckzcBgFVsp4vRSyVAGv+VNRAIGgnI=","C2zj8G/CO2HmlJCGoniRyyEycw1dl2xNA2x+Wqlg7NI=","IJakrOGcx8DZTJdYT4vR4aoPOKBbpESxWMCk8z3vZfo=","F0KQnSD58X77XGzosj9rhffbDgERGtgOkQ2nOHkmvsM=","EzxIbDvp05kXbIl3eHL29lzEv6QaALEaKwfbeVQaTZ0=","BgtbyblPRUldbj+tXvfCDB0wTD0LXb/pMMiuIiM/w1g=","FsD5KGdpUfrrsal/cN2GuyQ5xPresmAo1p8zEHlJ3Kw=","BFf0Lb2nyzjeM2m60TtoMhdiR3FYw9my7cZXMdKwxD4=","BbxT9L84i19HfVv4xd4efzjvD5THddc337z+QKf8ykc=","INBX4w4lY9fbxdJkEibG9gALy1Sefc25t9+Bn/0QvNs=","FvBXTnwTtBxezsw2+VkHGcMfKUNac2wzrZrBr7kodYM=","G5Yp1WeLGOyl+cUkStvCh78bGolGjlSdF2WDXbX9zn4=","J9gPFWSI/ZA9B9LGRGDdZE1H21lz0Mc22RTj+mD9ux4=","IRl7s/2LZthzUBnN15Ec/Oq6Y7SdzQeRDkjJk/552VA=","KPX0lyjallMqZqLTd+spnekcwdeHAdRKClpcxn3ev54=","Flu84NYtaEESQnb1PLKIg6xefswS0SUU4v6y4Zt5E/U=","FJN4B6LZ1y0iNGmcXzsS8bcuKCshb66RDbVvaMraS/c=","BxQvxJAfDiFOxMdPFoXDWwSFUWt7gn116huAHnjwRF0=","JxTWp3rArHZsTaLPRoxZ/Me+OckxKbnZJ8Kr1oQ7ulM=","HTEQN52Xxcpw2nsEiovIWVh6+Xe1+7g+rw+VGx2yzGk=","Ei+bSABgw15rGwuwISKRsK2+JxnGYOqxB6vV5jLiuW4=","AoFfdvPuypS48sQpgs8YLJN69e+8gCYhxK2Qh2A+W1s=","IorO9ndGa7zoFgvVnJOMXTQAwkoQ0aPPFFUZzhOXkEs=","L28IAMc+C1jE4xY5wdmOV6odezjyQZjdq0072tixsdI=","EtywC5bpcp4+RA7qtW0jtJWSyNMGgm7hjvyPf7EfzT0=","FMk0/duek8G1Of88cmkjF9DDZf16cn8rDUDgRC7mzYI=","H1tI+7EM6g71mtmxJIPte+XGAVE7DMzhzaOoDEWoDGI=","B2iriqXNBA5e5d5SYRENIru9MMC12co9KwdasLDejzg=","K4T+AsME8k+twe3AaR9b/7BQH3voo4HQmaZ6m3qHA0c=","GCfRGRsV3PUaIAvZaPXKnNH5bD/Xnt1kVAbKDK0YJRw=","AWlQoGuStUhe91nQpDlFxIIxsP/eWyKB74fsoBgL+t0=","IRKX2k1wz31D88zXCojBUiTPBD9vrqaKdNb+KCqDFgc=","ChgSF9ExX8P+z16AGBS0Bgp0L4GGiT25Xzn/IXIeTYU=","KGBY7WME8Syde2BT5tInnTSgwYfwKYEIVMgJSG2DREQ=","LNClYhMmePX4QM2iTaTTBgY5hB9TxgOxp61Fn4Hd+ak=","Ic4m6OfIMEXZ55QozZBa1InfvnXKwf5YVAhnyG7zATU=","AUrdxnqekj/4kO0nm2opZWsRRe4qIT48BnV4wXdYxRc=","Cvq033kR0RVPm1ufnUTQjCzpSNDpKgbjpGbBKTYY24A=","B1bdxGhmuiiuICmerFjD1Y0HwMaPhP7Zy+MGoLmgAig=","FeoXfYvB8lTD0pDnLY6+b55fZy7E+lu1O/6vvTDEEic=","EtQZkqzMclhnHh6mFn67Pcmf5idcOPEvt/zJlOMmMCU=","BXCgcCHn8Ml5rkfUL54+NxJJ6ypYO3Bggi2DTmic+O4=","IbbpxNbcd5gpLkkArIn1um3dw9J7u1DEX372P2Pm1wo=","C9c4Pa6P0/GvFpaklzusWjSgHFStxz8a7/1fMfAfwfM=","Eahm/Vnluh2Qw5xaSkFeyDA2EfNFDVLwSHqnrMgt7p0=","LjMOD7KVXYRzrZ4bpiM/2vRP3S+hiNSkrtFcgpebM9A=","LsYUFHZSRPa0Z8XyTkQsk5wEw4Ebmd72TVKxpPF9nas=","E3p3CDjYUjcE53aCfcNy5VqQ8gui3VEyDArHg7Ajlns=","HWrlI3u6a24yqJ8wIAIAr13K8pQBmGjk4VKzMnZeDIY=","H5A3+RiaU61Xc8kT6IrnkQ/QICmaw5TuLk1wO2L6ad4=","LGASJZwzKBx30CxhvytLPbOzMUZVd0d0bJ2x6ru3z30=","Ehffgw7FZEV1IJp1q9w1+mBrJxd19G7be3dCtXPSies=","HTm3IdSNO+nT1RVcWMVFSF5x0APxmp/AxmP/9X+Py9M=","FE72tSmhnFXAfkHShZ099ysPdWAm158y7rHa5XInwjc=","LSZpB9mG1+BzA+LrRbZiDQFkTLjDgeo9FzjXZ0co79Q=","GzG2O5yXNjZS5kzgS4RO/GpjsSLxZP09L4fUnU+w/mY=","GoxFKjGv3GKiU4DXOMbPTlhBxWINqxlBAigJRTfs9Tc=","DZ2BD8faWTHHpJB5dre3f7aM5/qGBDWRDKNGqqiyrKY=","FecwiEHoLLRK0AukrvmkJBAE+K30loGQMjdaEP7NyKU=","Lhf3GK6feJfnK0gfDHeahMQb+s7bE+CVMKfRb+NV92U=","En5//G/4uhlMlCLtVPYbY+WMeuZykoDRtuHogdTQL6M=","DHMJmevawVC21ef6adR/CQhj+rENGUmRGgAVbTKFk/I=","ERQYJUudFu+NZJxaL8QTasV2IZHvYfHvRtNe8Zn5Kic=","ANDjIy976KlWmbm9EVCP5JXgJtqrue/JNe58S3VLyEY=","JRMOl37E9r60rk2/ZPGW9I1g+Av4DI1fIoEYODeQySc=","DL0iynAwAHIWPsG2GslaRelZ9qaEPR96j+9rWykNtMo=","DE5ccbRuJmO8iTkutXdcd2nAgFUdIijYED5UVUi1gSw=","B2O1VzHRBSIL277T4PPY3JIbSrotW/LVmVMXo51Do9E=","LleLnDUnUCws8kj50l5ySyUrH+pdMLloQLFCsGas8UU=","LXJivYnnP2T3hQ5Wq5NFN/Ysr69RFhS8iGmHXjOmk4E=","Iz5e85dmHHNDP6xJC3KjdfMcb2d03WkzADOHPFmo24U=","IEeIHVQrv5dLnp6SAUU8grV0RzDueNL8Imv3Pcckv7g=","E5LgnY49aUN3j1AjrFd+1YVzZA36jPsiYd7lbwIMrgI=","ETzlZB6MCEAe2/jkClj38ZhIbJQ9mItXEmXaO4AJiyk=","Bv40ruljMsDbqnVnBPCsym/UiLehpCS8UHWa1m3z7PY=","IQ7tqQ3waI837n9NsBL6cFHar9PU5iqKdarXPKDEWAg=","KPVTEcpSbjnibjjiBlhh887B5ijeRvQ1ZEHI7NtxYXg=","D7OoCktSiolVFC5kIZSsSmT1s0XIbgzPcCUAFgUtlTI=","H2eKV6dXdbuzypX13sB2G7casUffEH+nX0Oq+TCuo6U=","Bz7lGpiupOnOXd75lhtZl3DlgN7lyykWG/gcCqdLpsM=","EjbBqSWazsUKBPGTUGkYmQ2hvMnyO6/HdIA63qQX6bY=","Fpq5pYNVV/UYoXdW21V16agnMRL1Sx9jR50mGq1deAo=","Ij3JefKDNWnCQTD1mTagXaqkm2EMevHfNzyBrUGHbwc=","Kn4HxCsmT4hHUI93Z/rSC36FM4p8x7jbnPBhWmFLKnw=","LTdMnsFIL017DPRbX2rlsJ+bTF4NPkKGRoIv/FgzILI=","F3IqbJevNhHDHi6cinwb4s8bHmeSDMYZJSKLtrFxn8w=","G+whvSt5vwqrgk0sc0Ob8waXmVB4nHYtPyRu8XJmXGw=","Hk9cTBUWaysNDy4SQ85eTX3w5AhvG2wTwkdgwjs9K5Q=","GyZtagP+amZ+W7uu0kB6ygQvxl/1h6N0WSQuNH2pCKs=","D4LrtKOi2cBhIx0HKXTaeGdGTUWgksNpM31vfzjxnU8=","A18PUQ3wU62Y2VfNY/LFEay41j+O5zTZuc2dPNpxfFU=","I54iRkEPkKuq3CVtCtZJRY2KLzqYtoC9yGSDKHBuWdA=","Iwpk4OOVMbq2noN4vsXs1F3QT3uRomTUuFKxcFCi/n0=","IB2TWS5j3Y7ZftoMHvj1SuM1VugLpR7Gx9TvU3baJmk=","G/54xQ0LhVqmmIXmNTfuy5hMGOLJ/99vdqDTjNiqJKA=","MClwjH87W6/FwN3Nhl0XThuexxJq1zDBJCdMVie4v74=","FaBpLid4DMFU3Pt7zKfYxp1hPtcaxznojMrVMR1Bk5M=","FYWAiFtFIfqx9ZJVvHSsRty8b2fkxbvjwEB/bnn5lmM=","IuVCcJ4Taxj9qNHFnl34qe/PImKWzmuZ8MWkxtjFv1M=","AAmE0YTCCQmxibVtieH+MQdLcRsQaBPjGkMPkjSEX8g=","JguywvVhr3tLujwjrxRGDmP++RkTd51quHgAk68udsg=","ACbi6jcrSYIa5Wu+GXhuvyHEMmwYjEe3D0ey0SB2XK4=","C2xNnTb6wwM52Wh2owQCJLrzi1n5b9CqAq6jCuGi9NU=","LPX8PXXvQrWzdDv6vCFJC6uai9nTgob41uxls8E3U/M=","CEaqaqIfGMdAAPBEFD+iZv8ee+e99gC+Fs5P3ED/HmI=","AC+NDsjPBr2z5MY4cziU1dCpUgTWSPvOraBTrNnTukA=","HOj/m3S3nEzqC83VgGP3RNuWMPO/WWPxy92Vn2ESb4c=","AX15ER44VFLmFcRCxu8IMzOoqeCGKLvh6E9N7nldwc0=","J9Bk37CcUTSMlpKr5059t9iZsG1jrxA2q3SVPAizxVw=","FGh0po3zNGFpJUa4i8B52Flh6kYvDEgX5RIddOK/L1M=","BStjUsJ9CA3PXR5QuHcMG/bP3lWbJOff3RfTc+mpSFI=","HnQ4lG15zRkb7w95q0+WBGaTZ1ciUuuCyw87GdRpEVk=","BHCdoXNvrvQ9YW1Z/hAQyS6R4UEOXdmsN278c4ZwJCY=","KDgdSgKopV+wa7aWxefsILNjYviFt1Ox3cUX24E/Yvw=","Fg7PkLTieknT9Assvp8Katf7qCVrmlL7TL//FQekcRM=","Aw5SHZGh4fiDbzmydzN0X9+W0IZ7v9bMqrzJRzWkcEs=","K2avMxg6pOU8+2ZSFvhrRY/T6QnZo7A3WLrZ5EZXxDo=","HoUWsKInbcupLYuI1v2PmwTWGrNnohBYylvIp1Kqu1M=","KyFytzMR/07r32uJr1FtKuC4q3W4rfgETrfiDVEYJrg=","BkwuBjaEWjsikSyLqpTDnhTn32u21Sy4kUUhurFDceY=","G9T4ln5EPo7+WhhgG/7X0r1Hs0xg3/Cslk1qTrBZtBc=","BO/CNKFzY1S+EGIOrbD6+/AwCS4PFvU57alYJ01UNDA=","L0L8HwXZDbzkE3d/dKNTxX6OZjLTDiiq696IuHjfRts=","Cj/cay1GsAR3MfWZTxk7Nf0j5tTUkG0GIr6W8p2bU2k=","Cpo4Gm8r5bcUUDFPNW/M7v8DGqRqJ8ks7O0s67VH2WA=","K/Kg06wAvp5bwGCjkFPYX0UV0+zG7m2ZJcVX6z/6SHo=","FJzqSsydNFr5uqCwqp27OidTQUh7SAmpctTKSf0Cz6A=","Lq00OkKw6lcOGzWvGck7DCX1DxUDz0pjfbuby1igvyE=","HBJ1nGwzycv2rYka2xzC70Mt40JRhlH4sVdzlNdSft8=","FhkjD+r8gQH2vHmyxyBOuKiwg6OMDUuudLMfzTU9h5s=","K9xLuH/s7KYazgmwq+i23XXPr3ulkfAu61Y1gI7NtG4=","HYM8cTXSdhDmly/fAFeArkHw+Y42tiUZeLa/ldffaj0=","H/ekWVJueWOW/MoZbdBPgbo0Af7Ge2ttg0IumHeCAJ0=","JED7tIds82p3GuE1lPMbBvO6F0jMsG86Fql/lNjWayg=","EOXYSxGrhkh5/tBn2igE91yadSc5Ec3ti7VRz/Prs+Y=","LlbBgw/mY3AwZND3dIC8eLTx0Xk5Yp/qLp45KE8/YmI=","CgmQJ8pvXBAIei9LOMrds2a5jMTdDqdPCIGedQKfRvU=","GpdGjY2bhBpX3sJt1PF6+GAt5pX8U50oTueP+FKUmQQ=","A5SmRYNJpST0mVx3trf5zmRVohYvE3Q4MYenUakINY0=","EhbPjweaCYhSY1KWQy9XakjG3N76rHC9Y8D4bXnelZE=","IcU6nuHY9xCZ/RhavpdyYjNDuLpl4/lpq2ZcxYwKYAM=","DQDh7JkOvVIlxwmQYzLsIYRZ1FKjRWDAAKQUH+kqEnU=","B5A232swo2tPalLMh2sz7IzBO+7T5J2Za8MRMOmUL9k=","BzFskNVwl8IUB+ZHwSkKQtV2bUOo8yRzNCDKvazBZYA=","LKqF87gTIAG7D89BFNhNuo1qxhyWoh8xlddIA4VwhbM=","GlsyoSJpbfBDD84jOr/iH80R3Qcx+Wn5Xy6SQ/3ZjfU=","HUanYzQXDPC1i6DN11sx+Ds60rx598jJMKXqywugLho=","DZm/BIQ3o8xx6mmY+JClMqs6EgJOIw6FNtiovvCE6VY=","GvwvTIuhJuMExhcm/sIjQfRHMCoka5IuM5zYe/Le9WA=","HJ8R6GMc1GZNqbz0W97B2SuoFAfnEyHHJ7FMTFP/SRw=","GZJo46wUtgwqKe/hjqh+wQhyHriB9qSenWuhod2U0+A=","IsM11Hv2cYAx6D3kLUergFvc4D4+rLLuil3YjK9dVlc=","EWC/mfD07Ae47y0Vvlo6jRz6GS5Aa7717Y3V+3XbQbk=","IlTNMv1Ah7cTh9rDVUz8neABlPdHL6Qd5nTYygHL8Iw=","GRl1HDeKglBv4wlYo2vW517Gc78l1pPZgDNgLnPWR+U=","J5FrPkoMiZIjgayUzfiLOk6CpTn89ciZpRIKY8tPdo4=","Jo0/+eGNycNzYWpqWhuByT7CCNwENBRVcxDHSbd5hcg=","IShtUdNQR297Oirj7ARsE9XJERc95BrB3J5Zu7pmnyw=","IPv41oQ7rIRLbLYyT3BUNEEl21TVYAoG/JtyDyIplB0=","Gi+1dEOjo9cDCquBslbIuahNpyQDagA9Q168rMx3T0Q=","IbE7mky46XErvOMvF49ZB0o1qM8HcQYcoHZLaxkPoTk=","LHoRgVpCADj3H9IBuqZBKsKSpj3Z99MJC6FVc7ujxdY=","GMljgJRibbfli//XF7EofIrOcGgjJTv2+Rygajf3+zU=","E2+0q8TglPtLW/8j3g1Bu0dkSB3nk/govz2fnfGqHMc=","A+wPeb93ML2hiKARCJuS0mr6pbrWdyTY4ZMlcsZXlqg=","BinzBtixoGgsd5TDLala2uoL5IP+T2McK53CUFQSV9A=","HwhU7mhhSRchaEJwh532h6EsKKCnk1wLrAly6jmEENY=","BYko98e4UDolhaxDmuTtqTENh/lQQkAv+v6Y70jqcTw=","L+Wk+siIz436ms/O4kn3iOhsBDRBzTYj+5cu5Rms4XI=","KelUBFzMq5YS/4QCrSIsId1c07NNQVZUHVAk3IhbjZg=","JRo5YroPPp+N6IHRBGQ8nDknIJIxKip3HxF5HmOVeyA=","DrBPiVmcuhAO5bvEcE7GONECxnAQg8av7o0mzcZLEB0=","LSBX67SHjEcxMwD4oWHG1rMAjCY+c47Rt39uLSNosII=","D1N8doHqrXUgYfWUahDySPiv4C76pyTZfnY8yMCXFVY=","HkC5qgANcNbuaA8j00ugfqBDVht56LbDBvp4eCMvHPs=","GqOPShGfqcPj/5nQrlSqbLEYDEHXWF704DNnj6yEsvc=","BWYcAjzI/63EJa+O28WkWl2vZJZ7qwO5HG8jg6YZSak=","AjxNnYCbDTr8HCfLax3sZj6WJf1E8fE4nNGyni2xUOA=","CfrA65IxhQ3nllOTqL/RXdy78mWWJ43HibPkBwPbQrY=","BAuEqwBzcQPtWsMS9dROJ9R0nNGRBRv4piMbtHgONU0=","Li60uDVFcsJnzoRsnrIj44GWKLJkVtckSJnlfXDf+Ts=","GYco7Jlq0JU8+Hv+uIEL5cWIrBC3OMytex+LrVDJfjU=","L4qO5B2QqsKpHBzHB3Ltb5g0AFJRazpUvY3ziIcMWyQ="],M:[["K2/XvDo7WVwgbEParHUrdloSJVw3q1GuGDkzc3qLgJk=","BpsXed7D6t7T8H0MPmzs1s/+eNdH+u2tnJBmWqLZLLM=","H6Tv/INJjRmqpZi3dx+IoFVN3dqJ0y3Pim9M93bRO5k=","AWdvXAdBerVMN+yK4agxS97rCZZHaYgVkgQ9/8smv0E=","H057vI1Cd55Yqge/VP8yS4FP5oe0yOuBubfnREjuJ/8=","D2sYyY/In7+pmgTIyWrl2zXClkefSEtoDfkF1MvR36k=","AObNEIg+HhHGwZHTYynzDrAEWvBsLYbQxDn1wfT+9Us=","BCWpZB+wFVi8cXCi/8JOtqUUGYspahYpzChNmDvKh1c=","ADl6fXQ0sKqUE0jeRa7EQs1crSw5iISVDoIzxY3VAzU=","HWbyCPwEQRoThcIuID3AjwusL3zZ36zN7CDTuTJSrQQ=","DsHtOuO+rE3dH9sXucfGSOfsgYhaB6W8vZZ+ajZ281Y=","Cz5gHjal2C4CFDYshBlHTcHMLA7YEmU01po/eQsnxgM=","Fjy046XskuV7JbCVo6qoz9xM5ZJncYzGCQoH4UrxCw0=","LcqQ8+WhWymJX0jXoSkNejNka4liDdCozN46o6UdQcs=","LHjuXqFtOPC+udwHM8S7GJPLM/9nG3N6ESLWT3Kc/yI=","KvMk7E+ed4bc8AQ5x1opS/91PjKSu/YuZkcfpzDxnHk="],["ER0EwIP1Gm/fh0EqU39mAQdtYfQ1CU6haUbvv6SJPpc=","GHquJh7z7iGzcCNRigcWdcbQC96CvX9UQUSKu2Mqdks=","DaKO3n9j91WWolaLLdelhFduWygvKEeVsaeqIWY4IrE=","IEO/5S0pZOSjstpeMBB3Fsx2T5sci6Rj8hWrH38DSYs=","J7SKY2o5tRqTiuo+tVIJFVn7++ceCW1RjEDZCN0lcO4=","F/51o9EbS50qz3hW1t6ju6xireDFATR7FoZPPHPrt/k=","IybD3KeqtrGFJlT7E//0KhUsqWMhJCFsx8xvbTdSKlk=","CAxEKQkif0qdqS4zI3+agssMb30MQVW96lxlF7BG654=","KxwA6gCJP5+RMxvJBzl9uGXDfTvGxLObgc2TFpb9eDc=","CS8Dx+mOYcKoWUP/r5wE27AUX8IFXk1b6Qu2i5AQl0Y=","Kg93uzYk/EgmyaKma+TsddvCFkKhb8xBgtLWXA/Y1/8=","EIO3QtNTMqi3m4Dn3ASnL36GaS5Sm2oexWhzNLYH2nw=","BT6V+UVbxkmdRHts7dC2qtnLztl8zxAGDzye9R4o520=","BZBNrjRw1AzhJ0myfWRuYg6FGeKxfPoBbK64nZ407m4=","LlY7ncWj1NWpP0drRm43EBnHf9bupQYSak95J08va5s=","FFYAg9mA0XLdQMlCbP9BRnrOpB1/SP8RrF/MCHui1bg="],["ATPFkT8l/16qhg0DGPaktDSf0i8tU1MOXHhbcJiKOog=","FpU4CU1PdSUpRx4/3cnvmUz61PltzH1jbw/VCbjrnDE=","GZg12pX26yLFkevlFMfyg/Z0/Poet4ff7leBpk8IJDk=","Db2GYlEd1wAJkbOdoSn50DtWWgzS8hjW6ru0miXxBeU=","DdDBGPFa4H5dtVB336RuCBCZVNmeGNcs0sr2E5IOOQs=","B8khv0XjVISKYLDl8pK7A8JGlJi5weTTIvSv0YZ0CMk=","H2lNGsuqsOpbwCahhk1Wi+VVuJwPSbYTTpuJWuFB2oY=","FgTeai2xIr3V2DlUChAF7UAkJbrDuF46ciJNM3QCvew=","JZcM4xt7EM7yISZ7sb4WVuwpFG3wb9tbT2/mYHUjqgg=","FJVvgKZbAfnul+LrBw6d8nEcuLy1ON2Y5TJjbMYHgug=","AdeZroPvZVLzDtxHuegq3AUD3Et02kC6C70syesbClM=","EkF8ABvoYZcBOytIccTpsNzrg5kZGanK+s/lRmb1kK8=","IXH9EflEhUZqgZ4k0KzvCLDIfXi0bZO7lGK0Q/pAzcU=","Ium/KqAv5l48x0+z2D1OM1GGm9MFKMN4lYr0Yu/WRf8=","By6i9c3Io3ifvOpBSpHnsnu/sxUd9RDQgP9O98xz8Nk=","Jg91HHgjq65huPN0jIR5HAvYSs9+toVIcCUBeOmlLPU="],["CIdfR9b1GMjC31Gnhr8iB6reKEBnIo9EDn0DB1IKVs8=","CmiDDxnApymy+Jvic3PTl64RV79QfneZ1CIBZuoJgtc=","KvVgYAs+JavMf3ik1uLNP9mby6B1q4K1XphBvve5IQ0=","EbM6nxgY7X9YHKwCAFHeJv4o3AvYyxpEV9WoRHvb1vw=","BFxhf2BMGsn7jXbo04AyLlo7afp7fCriyOxZZtakx4g=","DmGX/lAjKNDvf5uTA1UxKzRyBLh35/hdm1adw08GTBo=","DN/gmeehVCeN+2wDiLnaoej/Mjogvmpqp6hDgzP4ecs=","Fd7YWdUBwnM/6t3eIv82+oroWAOux6IE9CsfZVO8xlU=","LUAmv6ezehmjAKuvLh1cMtvNQiQO2GD2gfYd1tYhTO8=","C8y2acsBbUmEZJRPcZLs/2cW5stfiV0nFby7tlsSiMA=","Bd4QmcZfCKmQrA8fRewvuHLHceECddzPpPzhFGY50NU=","LEZdm164UteTOLQnsxhNlB80BGFyqCzOROK45cQ3lHg=","I5GAdcj6CSm+/CsXH5nr6d3WaDWU75qD+E1Kz9lZLVk=","Fdf7piusV75dl0UqPAbZ+nV/FE3xZkee5zBpZ0gKKH0=","Arbxb4ErqQOQE1WVXMTduZ8k8cbiZDCUflGBGmgxG78=","D2Zzt/tL6M3qdKqngCycc/8NU6mOlKK8YGhdiQok/es="],["C6n0ShB6gcsj+6ZvK8NBUnKPX1ymhAZkmn7+R8lHPyE=","AYrjkIbuu5jR/F8F+g+H3csUmwr+ONG7uFplaXiV5j8=","EBVE0TFFTyC1SbJKZeyE8bMiH9m0NGHdxtFWgzs0xSo=","Am8vWNY8pu9Zu5UgbOPtMSSIXsIXYrux2x1qd3HsZlA=","Jbl0/FEp2CrkxiRuNfgC4DRA6tCZlYZTE8jKkcggwtE=","LUCb94vW9qTspzl9BlAj8LtnMiB5JdPOS+759iHaK6I=","F/cyzBNUsftHbnBWjS3LC2aD0wsCQV39OFUEc2qobeY=","BA2w3v5rpHl7dKQxJc802GorM+eiLicQsPt6VWiJOqw=","KeiQNJQkFKH/aDPW4idC1BBuD1830fKrgOVETlpSycc=","Eh0rpb2PIy7PRKrPEETNarb5Px5TfX0VQXVP1J9RsiU=","DwkT607n08AtjOc9HOwrbLsXapISmzSilK3wZiQ/9r0=","Cg/mbA1N4AzHdhAIcyoAl/sU1kZfnR34NeBCP7IH2Xk=","CJjtHsGkNof/aroy3l+BlDRSigdSs5KDMYmbBkay8GE=","EeCyND7zcdLW0igFl08lObblENdh4NoXDQ2pAJWhMmI=","HVnVwQsMndNHiZN32jW35nfH057xtJFmuXSn8ryZyUY=","GhW34t4nEl8uanT07HzSRV8bv66xFV8a+Bm9tf5UJB0="],["BUKDKrI7bHpLVHoQZgNxUqJELpmMU4G6l2mEExU7pvE=","BMXrx3E0TMBhJ2VxC/yxwuYJerw9NG8ElJX317fwbLE=","GlF0DNpeRepNS9e/XOVGamahGvtbyTzxDVMJ4H1BDk4=","LrbtVoN3tpatPLI3Bk7GjjkMJIhuHxItIdfPMpDcbQg=","GBWJsUDJEJ5JL8PsfYyo48JafOWN8G8T70NWHVjFkm4=","IFptWqstIktmjHD8tBWC7p6+H/CZKStLxQr4spLA6kI=","KCOaiC3HsvP/e5qo3p49ga9zbU7m7ZkdXGtPpUAUj0M=","GrFfL95vU1535hXIwmAhk9RYYMwBWEnfV4+f75pbsoM=","AytiZvJAF/3hsoHQ/iBt/zC1OdXFuhO1MS5IjY1vGUs=","BONY8lmjMkT0BYoFYRCiaBa77Dx2q2pfe+k8ngyS8+s=","JamsLR74Sr2YkntSwk84eW6mDmOFjsW1AZbX4WnJO4Q=","L1IfJLwCKGriv4SE+7w5hDiGdV9Sv+x9PdXfeNNAch0=","HcP3pllTChOsytGBtuJlR0EI2LFGkmZVLfvDjLZ50G0=","K6OYRTk/zHdv04PlNdVnYhx/ZABag6b39IIivJAgkqg=","BHMP4E4BCMmlFFpcSOYMVFfkcIUiFXv+D4KvXGZNbqI=","B1oJ5B503ooqx/7ydZHnanfIUeGlEYXzHpm14I8BzHQ="],["C6H3ZDZzYJUpQsy27fBRyPk3kGqBZkHg0eni7SaQb6g=","Kfqn2tyLfpWI1KYB53vYCq3ycqG/7DxEPKPMrIHZ4eE=","EyRVi4pdS6YbF3kBKL6fJEDACF3V1gZbiPCjslN72t0=","GPqvHJHgAvfbvRL0CL1cW5LzjgLONjWCSCHgNH+vU+w=","DuEoiymFXi443SYpKzniYFKYQTRFONZJmZajLnzFI/M=","I4CrBR0KxYCn0Rb0qTN+sxCQpMfsvU5jjncXt6Ur8QY=","FYkmuelLEPyzIbKTu4qGR2J6W9MTFYCNOXwclPZQ8s0=","Jk+tzHkaoY52dRqJUkLDDNu9EZepCkVtwnjhC/C/9eU=","LqAUth7VdTkiOb2UEcCmxCArczTPLg3YwwQFKOSj39o=","LaJgOibU/ew1MYIEulBgZj4VoLHk2TlSWNXm7srqj7E=","IKDj9OEknExq8QDf32P4vcaex4hbzQ0sLpjZj5u50QQ=","AvHT7tNgGPlnlxHgML265RIkte+4sesc3KiriGIS8Ps=","DjiLsQUkJAbjcggOmXoxOSz0/72caUFj/DZurncOQ10=","JRQ2ScE+CNSwC/NNKqGo5FD4l4jid2aJYhcEcVXFvx4=","EuwkI5uhsPyflSVQoiOlLSCdjSK4shrCSIGicZJ2vg4=","B5wElE1QtHd90L6+lTYAZFzsqdZfugIPlzZRRr75xs4="],["LgYR+kyjmF17+vUS8hpAgRQfTtDcSwIoNNPLbP2Lf/w=","Ks80kwErvYGHJOfO2iQx6XyJM7+utddGO1Eubo6Pf8w=","E0cwJLpBn8KndD59+PyDdaqxUNN1OlQlCoCNZvLQa5E=","KUN68bFPY3ofDjmVXyYEvyBDn8sqCQ40aqZanr5peI4=","IG5NRFMVt2QoDMZDuUefSZRuqG1zBLaixpKsNNfJjTQ=","E4LDwkvySJ/p79gKFj5lARH12YheWKntcp3KH5p05Z8=","F80Rhk/Sxz0IZ9NyZLTKFN+TWoLypvQyxJmBNfpfSqA=","LeJ5/Pd6JwgjqRps0ar7WOnjqzL9/ws7BcmNVU22+tM=","Es7VJU4mCp23q+DL6iY5ZoD25X3AdzKnVdQJ73USALk=","DvX57muhrh0SZM8aNuD+S4BDqwvd+bnDIA+2h6jqXIM=","BrfhjQG0f/jk7wgHjoEooGaTvmV0iUkqxBlahUcivf0=","I6p8zDdRt0DuyfNaKZhryVik28fEsS6rK+g3Zwbesg4=","InPDcOtYEMA5A2BdfMlNWpKvaqqnuETzUYnndAan6Gs=","KnMQ51+v6QLiAoepGr44iq6EILHqRmDdfBWcJrljLNE=","IAmDmXJe4V2T/9PkgeSnuVyMUIP51pv/FxTup8fYLUk=","AsorrHwaoMZOaEEj8P/iIXOSMFK2oB88Kb6AE3/Ylyw="],["Dm8jwO9vFZ3saDQah4MPuGS2wIy5VKFKJQCHZpeJf7c=","I7NGEufQUvazEsoODPcANK0jLZv2PIiCEIU4O29uxKM=","E/FbxkU99vk4NEZVBTTcV67bEBOeMFPoO6/dmTVhdfA=","Dt+GvxsVmf4nxm80lIYtdd93ZAcKgmPPiHePcoeTjY4=","FkFkjCa1otwpfaqm1N22ovJYunOPkJTnxc2m76jJk7E=","KAxFIq0P/ZLDkelMcPhxILg0GJDDMprwUGJfK+UvOkE=","HXcgmLYVSSHbjnUG5vA3LKRPIK8zhuE7z3H/XcDWGxs=","BT7YrVUNiZL0uYFJIBg92Dm/NV6sqMx7BwIKImFKgIo=","HU+bpP2M5O8ZO5+HD0SVYHlTjWO840T5AWrF7WOpml4=","DVPWHIpSFODEcVJ0rWel1qLPufw8HnkdQd4iyLqEaKQ=","Es+HJTkT1F0ofpdfK09bkJ0WqH2JyIkFf2Zva6YTibA=","KwiM0woQiZurwyW7oyqjQ9Mp+ah4JGnE0l8PI3/2B/0=","GZcv/d54mOyL5Pso5LGe+qQ8fuIMiOKQluvocuHBlHU=","H6aURwP+ABKhbuYEJSn/AryAQxPvjG2LD5EKdeb0dzk=","GCN69zO8REGKyE5iP0g6a+KLjyHQM/vwmdZFuiDx/CY=","E9kDWg3HmLBNzvDwjt0kFST9yg6VupysBdIHvTF+Gc8="],["AaeipKCNh+dfcgMCvq18ohyPfC7S3rrO2bixstpGHLw=","EWgMxugLDkMKTNNgcBf6gzHYbE0DqW38GHZ8l8vgoZc=","ExS1T4eGCWJEUyyfBUs3ljbitYv9zrPUjfsiELUptOU=","EzayCOANjrrIMkapbr3eNRBj+j9jWIfnU6DOPinH7t0=","GIe+h/ejUkEEgu873PfvF5duCH64mQx21+lxxEwEgjk=","H0BalIMxHhSXVo8b3NbVjNa8gTmCoOcVYbYgADuIggQ=","IJV2vnLbewyf4rgykSXn3/BImo6QCl8UwebkhgQTQmQ=","ACeXArE10UTt6UMZUmnAC/Yg8Fi/AYbOn/88s4siJFo=","AsnDE1z2S4nrW3FNey682B/H7a5jfMYRZZHfIItrJYM=","JS54tIOK1QB/UYu5xqTOUBhx9xEo7uPwyXhM1ksYP78=","KafVVOn/vuY5hnhC/Q59QeqbG8liG2VPyzmPcclbZo4=","MFoMLCxNNZmOmROCn1YCUENj8hvXIDRzULYEGT55vD8=","Bh144ZU9GUPi2WgzW3PhX+zviQdelslD05cCshTdxfo=","Jh+XW6vXaSgiRzuOOflIuc+YcwqXhd45MXnUu5nazcg=","Hj1s7zf5vawj0bOBpsWNDs8Gpuv1jfp6mVpEPtffaOk=","HWZX15GDEWnFa26aIB+LeyQCRqLQ+FRDBIm5g0VAMtQ="],["HYAF30jIVlmH27RCtILK5b/BDuSG7MW2cM6GE0WXnR0=","H6dy695vNzJERiPWf+mREWKY+PMKLRAQyK5hMqPWkH8=","BWqOzSMqZ0xj17YD74zQYyHFYN8v0/bCZJr1dkZ/15g=","JkY0HrRLSADVYITLSFAPrEj8UziR9VfpZ4TMYATYkos=","Ix8smL2o1Iu0ptnJi7vBYCcjWiKh7U+IvI06blgiCfI=","HK/Ptikm+8BIV7C9fXOSuNit0WtcvvtUtNUxKCbomUI=","C3qx7xf/YjX3c38EQWGQLwPVlM9KDMZ7T/tHEa3h6w8=","F5qCt38sy5SzjrWCrEq7sW30KezCJHG+c8x3ZvltmUg=","GLY2hfb+0qoZBIVjeEQhUd0foBx85hIdI+Hp7iC0JVg=","Cieo0a9qBGCuFyTzLyGgawNmaNCoY75Q/MR/7FdjzpM=","GGdWd1BY0JxjnNq7rNAb88J0QVIVb79+jz6Zn7YQ7Tg=","CL2d3RkteXoZ3R2gSb6zn6ZZZZiicDHqHCsolm2WGAw=","GUGEqCXenptj7Xp70HElPvWQPh51pQU225PCYxGnIBc=","Lgiyi9zEF9lkOzAICFon9KmHZ5LTkVyLnaNWem3WzoI=","KOVbC+1ZGRIW1dvh3QWyLACbB53od/1UqvVAHSyGfgI=","HInY+XXwMEKCrY971BwSw7GKxrgOQGX8zaQju7P/p4Y="],["KBIiVII/iSast+mPVX55YoLl4ScWGIWOdtSdCIbaFvM=","LmPxdAMy9X6DF/JZLr2NsIEnFNZgQTLVJeM+GbPJhJQ=","AJi3QJdsKhAx51Ey4FC/ODi3OdBhWCVDwcf5XBUu4mI=","BvU8ef7Z4JhI4RKgdC2K6EoEvZulqidlseXt+xYCFA8=","H86okobcHbYf4REWBq85bpjLU9q1GZdQql5dEVYfsUU=","ChLhYmIOcb7rIDvlZZRBawg+fpTuwj4PRKX/6eFZUIs=","Gxu/Tp9wYFFxag4omQyvF1cwhqXYGMA4g2aWgIsS2OU=","CJ7+0A6dmT9fwdWvLytdR6m3Dm1aYD+6qo9lECEj79c=","KyAuHSYmxnk9aKrPnDqP/7J831oLg/+PNQT5qyakPRU=","AwSKJl0O60DlpTFjOsIruCX3XO6QNuZqBhvj1NJIyGI=","JTLddIf8rg3Dp6xQuA7DMMb7bUz4hfETWYi/bfwBCm8=","Es7o49HKwcqEUXqz3vSHxGCuwFg0j/IgyAG3iXmvnmE=","IcDRh03sr5BhMYPqgnuRwbKVGDn3HzKcucmwdT/67+4=","AX6e0ZHFZB12iw5V7A1KhfblQZ0y9WaNOX1bbLgFOH8=","DGyewxyeO+B0SRn8VVx3wMElknvRbeKAdxKzXKJt0EU=","IIKe89+cGD+JZeScjzFcKZWmRGp2BTVD63UBRfGndAA="],["JBTUrvx7SFffaBMo5opYLSOy3P/Veajmru1sYQUOBc0=","EgLjSdHXuAWEbpCDTvyRHraxDCoJ6uqintKIvXebFPE=","AkuW2+v6ttI/oywsjndYyyQLrNgUMyPFPNtI3Itl+OQ=","KjyfVa+s7nNaG1FVJkJjhK0EQpH3aRl02cBcY0tDlH4=","D3v8+rF9s0wUTO5EY2verfq0Smv0/I7zhOyJpK6e0gk=","FyA8TS4aQooXviwn0cTFlg38aqNvIr3ei+VqDNROcas=","IqjudDZ0E+zPeqA/3UIMa7YlWm3YIIHWsU7ampdSMps=","IeJfCn+O3DjeJbpgWobMCOCMywPnfF4Lntq+dHaLYMA=","BqeN/eFFjuNBoInBX5U6IZNSff+0P1Us2tWV2nxv7MY=","A/2U5Ru9poQ9MaKCUw1UJAqklhZdZE1ddzex5afWDVI=","Au/lKdsd48Adb+f7inHx6qtq8WQfsfeq1PK4jNE8n+U=","DKtQSyKjVz0JUJ+F0/vZTpRBesslOSNCus1oQAbDcYU=","HLM60rp90MIGNENDKoR7zM53Wo2vho4MR0kFpPo21w4=","Cq830fU90FVuNH7HBZYjeQd81UMZjhwnWT9EVFISYfc=","KmB/rNOTb90OhOm8PktLrIboECwrWtFcrlUNKLNlTnM=","FKK9Wlb4cAnbmBVGUzIC86+BLS701rA38oMIU7n5A5w="],["L3EMctbaGcfYfL/9VWZbRysCZdE+IyapozuW6V03RrY=","Fo/cMtSqjckDStSk+v7onw7VyYDT20JNOPjOXNBMI3w=","FbvVYZ8NWXkIBPK5s34Gn8kJonltH3fQxiYJ3totAng=","HhbpyiUC1pYCO840JyRK1lU86Gu8TDSaNLphBnxrbWo=","Ad0KVQJ0OqqfWDvQrTXeE62NX8mPGWHyYSrUwo/Z+fo=","DtLPrns29HCn0faUD5FOjs0yK/1rUPmtn2oiJuepXbQ=","LHhfnYg09c9dCPEG1fmRg0D9QUq+JPCp/yuOBJK0TYM=","DY28P8hUwGZcMMSIRte7DrGNPXik9w/vB/JC5FuGXqo=","IvYuReUAhGlqwlEqJduZJSRM8CFLa1Q9Op+DuOjlj/o=","Lya8E65IUgpDnJ9Uars1oSIqMH44+vw+f/yEP2x3160=","Cvgl98oktKKF9UR2LZ3v3JnyuFwbifxf8gedPVDm1Oo=","FgWQloQp9ID1VhHGRIkS/fQj03v0g8NqzMwayaKdKlM=","K7Ms9g+NRp7bG2xWST1Mkzi0BRriUU1LYILvGLHVIoo=","Kkpy6d/lvyX2/edQoYR+W0Qpi6WPtQS+V6WV5/zNxAQ=","DFCaS/SK126QQQvqNKiRl0Fgi7u2tVA8k+cyA28HnRI=","GZcz2kru2NbNFIRhYX6ORt4i03IEMfwWBWGbEqf9Tio="],["LihUQdC+2Qu0HWSAg2hQ5NdtqCEbBKI228fDwwMgwA4=","C5rp9e5q1wplG0tm409SGxMNGMSUZNhv5dSxggSJAo8=","BHYAVL1dBxMlSL7XZX8XxhwDjrzf3UAlx7gC4IlI4Qg=","AqTG0yWXecOW74Fzrl/oe9YR2+JdHASK2pYwbbHjpA0=","GVnbAfXIuwz0g0kDc+dbBFG4e0PlkYG+C2AWZ08/Xvs=","GEnNCRDXLqzDLYkbcfr1ALy5PhzvJQSvRDuU+LHOchI=","BLXcIFe4gXCnGKEC4MqRd6/HV+4mdzoCkMa6sVnKT7k=","F73zOAcohLUizjxQ70cRCRudr0ikM3S9wKgww35dzcg=","LZN55psXggi4SWuKCgqQ1XiyHwkMUwQr5HZ+PBDTtA4=","AUBX0C5evPM8Fm4Y/pBN76njQqGeiNQjNjd/HF5n7DA=","F4GN0CVLKR0Nj08aRYxqIdiEEVNmGBK76YaxQDzycN8=","HJXCkXNTxTtM2391Cg/obOEPjVvbAYAy0/eTeX18CjU=","AklbPBv+xgdBgIFJMz/EPwTXnexWWCwpKCn/37PBo8Q=","Kt7IVJ3/3nI4sr2m53MpkKkRcAyNNSiLqjnmcBWVMjE=","F4B0MDuQ2JheN2WEuLjft/lS+PTPhNgV+Quqo7ZExMY=","H1/AYAKLoH0R/JR39Pr/55qBBA6poExWgmdkSJXmc38="],["KWSQGitC6a6hplk2Yq654SB3oodDS9pOwgEuNqGdyVw=","BsIZSvcvrFjKE6Kl4yIxBO9JpUD9Lq6g1nqSDYVnBAo=","ClSUybz6Bqpyw2/SLZj+ctwU3A5OdOA9F1XzisNAUK0=","JlyiERgLASw3jgGY8LX3dYwVXjZ1+t+SynkVa9Vv4zk=","IfZZ/tr2wmF/F9Y3zW9UoneC9OhDH4evXIWRkyzn2rc=","HkY64/TDvQR6oQSfTwkaLx1dNVDj1YAfz/aPml5oKPQ=","J0EhkforLlMnoR0pDktDmkEk9IFFxh/07OhEikNz6t8=","Czp2nIs3FWImA5XuTzSPiLsFai8OwPmOTmM799lDYV8=","GttMh0M9hm6P5a4m0BR345YoecIMjDoXDAcnFnwG0Lg=","H8Ju0Cfbe55yQcLHYBdmYvY0ugWpynqFDhhK5YjL4hU=","EBdftvgbFkNq8waC82+6s5bt23gppQ6UbHXyfiYJh8c=","I9MANzu46/fbzzFKPAsf3s1criP357uRW822pngrV/s=","DwQX+mI3Fn50FSUmEwbBdmTcPvqSR6oNS8//OOid7e4=","Ho/SCoAw/dlOLENT2PgrSyEr+Ie8WWFYFIkLD5KkfZA=","GFcoJjhd/G7spNPHHRELBKuuATxUUNnklHo9AZu0G28=","IIt8jB/4Qi1KG9E6AqlGgc4hfZJfQNKHX3Pe8U3noiA="]]};_15.default=_default$1;Object.defineProperty(poseidon15$1,"__esModule",{value:!0});poseidon15$1.poseidon15=poseidon15;var _poseidon$1=_interopRequireDefault$1(poseidon_1),_unstringify$1=_interopRequireDefault$1(unstringify),_$6=_interopRequireDefault$1(_15);function _interopRequireDefault$1(he){return he&&he.__esModule?he:{default:he}}const c$7=(0,_unstringify$1.default)(_$6.default);function poseidon15(he){return(0,_poseidon$1.default)(he,c$7)}var poseidon16$1={},_16={};Object.defineProperty(_16,"__esModule",{value:!0});_16.default=void 0;var _default={C:["L7WDdis3WSxsWpXrHQZpS2xvncTxrUhi3Y9eZ8t6P1w=","Eun0bNgjG7A9QCi/ehHXwOMx3AXAiObcPR0AHaWLhaU=","EnXNcDJvUvgWp8U/5i4yPv5hpbjTdH9t7Fg3qCWHOvw=","BufRZbV7ApnSPnUKdeouEsnHoWlUxApNEJBKYeh3NUE=","L2fyOpPvHiFaSt0uy0G+9LnYXvkTUGXZkoAONPqYEIs=","Fp65lS4qhiPvON5X4V4kLfOIAZSJ4Bt8hPqDnYZNzRo=","D0zUBLQCTKE6UTujFW1N6cs6okDGg7Pg63JTvJjItfY=","HEhr+uOrAy/1GejcptxB6gYLDvkIMSe9fCxOCJ/UWso=","EC50WGQlHOlAxnseL0vE0n/ThRVxzmgTuqxmXozAx50=","HmptYgQz0iKTBE/+NqXypynBKczj7rC9r9zQ1SvDurU=","CPOr+XrY0Bz9hlH/LVduPWjsxHqtgrQYjZITi65gO20=","KD2j8c+Ed9mCHuYDeLHDnHJChRGhudZoPAMCk4wkjOY=","LZnNjYjknguryEy9WK28FDp1omuhb5ZGai5BYpc0Q30=","Fx7danRWpMJf74qm2LdI6thpNp9ypOUChh/QN92o93k=","L6tkaUNp46K9VzwMw4NpXAKjgeeFeSo/q9bhyo3y06E=","DGFVlE9k92lPyOzSormiNwVow8iY25Ux3BjHJHT5r+c=","HuDlz64DBiIkkhDNzacUN/KPCxcwZTwJFe+/wIYHw8c=","J0Hhp7xrossWKFjE6EVNug0OEtzZVtEnvtBxc5ul74Y=","MBGUpmMwmrjYCkNIIqb2VSWF6IjUmFgYRfVL5jTryTo=","GIrSU0fsJeaoobWZGz6W34H1XL4sUrpIdBwE79Rx8pY=","LRoKAyVUxQsiaZSW3sSHsBQB8lKC9YfhtXX8mMn71kg=","LEf+ZTO9NKdgCE6NTEiMTKKzvRHCJJMXmsgamfikSp0=","L9tBTrgGm1Vz21wR7eBFpgCfJnqNkI29fZDWoPAo8o4=","AJzr+ettBvsnj+c21roJ+T4N8qBA392l/n2a0PuUv2I=","AdVaOACmTugnA6sVkdGK2wAlnRaCduGw+tRxjL/gWWY=","Ci9rBZJV7e1truR0PAj6hNw8UbrjF5BABWs6jfOJgq0=","F89JwFaDhOk3+BtBxixHbburh7vW9NkiiwRCkpnMgbU=","Kyj2Cz7hKEAdrdPZTclvABuUMvcOobOzIZ2A02mSGqI=","JfDP0zJX3izDJBXmXr/sQkbZChgegUX5OH3vPExeDYw=","EXw8K3AuzA0SzfJk/Cb7i07GCrN1LSDx0tfEQM1GEnM=","CshgPugZJ0p7rGE7bSZCC8ppodFHBy3pCqOdSvgDds4=","EsOx3DfWZRI/p0ouaO4ymkL3XbQtKxwFWnHBbwTURVs=","EHsPVQb9wud0Zo5BkrlZQQpKjgyegtBcXLuovpPXPzc=","G9ufXiz3rvabJvC+yLvVALo6Vq3cslUFyHfGYqgQiZs=","AIIkp0ao9yy6YZWCvXIEuOIdPO1zcLt/x37lEkHBz3I=","DS+1yHl6KKFb0nZl3FEP96+66Vq9MteIbSI9GuhuwvU=","ITl7RcAk9szuu7nRsOQ2RPbKdtLenrBQXIYvBdczBYY=","DiBzBebTAotcRZ32CQOW/j7tuuDPiIThX6W0/Zxe600=","HNpkbJTDJPhNzMAvd6cW2qhudnfFcEfKoAJnJMEnid4=","AzktHBKe7PiA373X0wtKjTXFc21x5uGHn64jYiEaeu8=","KkZ3VYXMnlvOpIIWTmaIGOxU/XbZ0sfZM74JD3poeLc=","B1bXkce2cN+9GOu6/sVvwUg2Xx35lRi2NKSRoiA8njo=","FoLSgf3d9vNLQqS60LJg1ZfoI4h4wdegIYCmmdtPqn8=","C6Bp3sABImKcLuu+b5hCBApA2KEjJ7wITvNP0ULLoss=","JdGQo8HiNNF07BTajbkDqN8KdukSF/kZPciR8ZZdGrM=","IgYnDNf2yw9GklYK4t4O/x+tn4YQAFOj6lLbMvbekt4=","ExNbQXGtdS85BvegInQG2MUNyuWHtaZxxj6uwLQu/Yk=","D/mjNDKH/120lfZC0ypx8ZPOJWUO6aPws81wzN8R9M8=","LF+/hrLfdcnxTuILMU/ks9f9NRlZOtjHOs5pz/ZAapQ=","GtbfqrLL2zUK8PK7qDwhQ4oHjwnW9Qp2UJZGkHUwfIE=","Jt7zq1T/4E0hbXK98+NDRcIfKccV28lkpw0VZSJKYv0=","GtgCs3yWxq02CjFssIg6FcPW6VHz+Bsp8tpRepMpfDA=","FpYxd7U7UWK/L5gpUUyhrGAZa0KKd3CoC+ASpC65hOM=","AyBlKbcj2ASrWCxEY+HTnsV59kFeDDwQDE3fy4ehtus=","G3CA5bNrimeCMHiC7da6nENxSjGVRDYHJfEMvkA21Wo=","H1Ad9mfOQPICMnKzLsEjhU/eyoz6jSH6X4+R9LPG4VE=","Kdz9IEisC16y2yAxamy4BUkM+qp/fFLP4yXQ7j88gTI=","K1wKTzrElHHe/0dmLPQMIFPhq5vYyQJZ/TmViBnxzCY=","K9FS56cEWrZKlC1q+QLMKZXOyj1fpSmPEL3kZ9IOs4M=","GSQYD8YIww1xymvBlva2tlkV2Cq7aqpm30FUCI2+8rY=","COeoSj7J/qLFaWkENuG4n46Xh0J8wur4lfhr7zemprw=","G7k2zYqS46yx1Ahhrnq117Cw5NFUjhNuJ1HiYWMs1dY=","L2/bBKbdug2gPvcKNsiRLOQHuB6WP0xOxKBeHBr9u6o=","Az3TdRfE4GVXozS8TCcqvBmIU+OBWZpfCw8kjV6U15o=","JXvZNqpW1xsNZLqYAG04uoX9B+LFVkQ8EQHeuTDWJ1Q=","HBiZckZp7+Gx2bF9Vib6fqUtYri8k6Uvpp60paDWaas=","E25AB712nQWQltzhuNFujV69kmLWRjg7gMzsw/Zwji0=","HN77BWYYtShiZffRzYXNrZRdycbSA7l3VnAKaKfjBeg=","E772QK871o7duZ5lMuBfp4cXGrIQYfLVEoJQVViw93g=","IixDtExYH6+SRDD+WxZ04V5fYrF06TYpno+kGu4ADBc=","DLdIkUnXh4S1Xe7xaFPj+vEpjnjaXD0Znk9iVu7DvJQ=","GYjPiwmCt+uzxd8b5KoJfKWTEYFqwcUt+H9gR3nl2Bo=","KoYkPVU34OG7lGuoevwEFBpPRoO3OopkL0MBE7WDTXk=","CBDkdnwPg7CO7kXHQ6KPaqD2xHgXnckjpzDACnd8CA4=","ERBRtvbmRbER7hb41yd8VzZUQle5k99Rmh7CxWvNz9A=","E45jcYahrqEM0ZKfR4vnXq47qQiDdaXxAy65A4n70W4=","HEjofDpfZYXH/rkAn5WRJ1E5ZYafZzErXcSuEJHZexM=","G8keOSNznYVXpJ33PWsY6s0/HYQ9L5oZ1aVE0s9hux0=","H1XLhtROiXW8FIPlb9uNp8SuU+HsMbhLstoCcAXUUn0=","J99CgNwP6eQLPGn4HuNbnRDDp37hqlaMuZ3jwlozxEU=","L1yfhyYGTZ7yrnC5yLm9jGe9C04B4z2hTusIyehJALE=","GAOfya3Wnhw4+qMgu2ob8P3vRP6wk1iC3wGZIMh6+C0=","AyeQN4jDJF2mqwCx3QVO8KiQnHRjgdNr4yxjVA9q7dg=","H56dGukMGPGLMzhuGQKDzXlbAKXnANm0UL8wWXv94yI=","EzXyolHZfB9P6Yyd8vXgtJqZFbY65qyGBxWkUM4EXGk=","IW/ePEfUTbEsqbOJC3RlUeFN5h1h6tqoKHK4sC0IwP0=","IK6l6id9XBeZvwVlA9FunBgGfM5SNlVSBQCkUJVY1t0=","LJhz/uTzanZORjPK5Y1ZdXkOiHjQL2aH/Vrs8P6kXHI=","DFnQapgngRiqMUwKLh/xOHgqEBZZJkMUH8EerEWO+gY=","IO0ooOXdbTUo9t20cp+tQhrQeIAvKDUiizjASs21yz0=","JCqEygEoZH27PvPaJcs4fUIvVxFx21CEXVjqa+q5Dd4=","KawUoLErWB2LdrceIZet/1aHkJDYTlw5lS+R8r+MOXs=","A33N2yUw7VzambOJDJ5+oLCRoA9QaHvaC2Iz2gu5tCI=","JaiYf7b0wYqgHS5UKWl9Ye7EgwowGmDDVithrjKQypI=","HJv3HxE7Yce/cZ2Zu1rr8Mq+hxKzBPHh7y0XoJjHms8=","BKDJ9Zr0M/Ry8d6SzDnWBNTOg2npHE35/rbXZwbRDiE=","DTAONScK3J5F9DFfPD2dk5rp5t3RBe1PftOAXSn7DXw=","A7PV/pjNPUHWVgONhPP2PVA2zoOasQyshtkxvG9Jxx8=","DU/x6OX0ccDLYMS2TiXUYFimS6MNn9Umtt9SjzalxYU=","DmmDM3WYX2yZ8yz5BH7XIxmnjRzEUldLFgrlAfkQa3A=","IYotoacb8tlJVDXBOCboG8T7xS9+nnaAHXbvptFQbV4=","Igt8XH3yWdKO9ch4GNN7Gu3TMcXtZOK+NpY7qm8OLt4=","Beb/O7LDw9Nv7jCXQ4HH6eQlfPyxdSJpdfgMeCZgHX0=","BuohMEdQOEgtQ7QNcB8uVxn4tSkeMucOfstnyElSwV0=","Do6j4yo5zS8FJBYJE0JO8BqZtJDs+36shE6b+Fi5sBQ=","KU5cuG5N667g1Q250hgo1U0plqbSycGEFyxuWPq2bxY=","G3am3GGPcCOy6SAYFrVuBGAKH2AHcEdXog3npFMTfuY=","FYuH4ftO4DoM82TXc3/qW1BcjyZdheU82LbtIbj34Mw=","DWhF+P+oOukFyQuTm8Ahe5ahFOrhkRQreznMz2oF+Rg=","AecLh6pe7DH8/KVvAd5vDhar1o6UAWpoYvH9hKx1Prk=","Fa/QjZzY8Rn2uEwbzxvYMhv8Jp98pLoxL3jBjO4GMyo=","DooYr1CIjA5nihjbA16V8+UU0SrdJbMSn8sKEXW/INY=","BaQjt2oGb/2Gv6ziSmnuoBnXQqwlZzz7zi1sjY+pWfk=","HNZjP8eBdp3km7BgIi9w52TApZnPpj3KVGzHcKjJbgE=","C97GiPtlGkGoRUurcrzre0uaTmThWndZr5bDkQ8a8e0=","Fv4vZ8uB30ChOu4Gy8o5GqnzY8i2ETlw2ld/AOy2hjI=","DZ4wMWza307nhhu/BY+YZLpBlJqX2A9XL08yHFyBwmY=","K3JQ3itnAUPSeVdnvmK0AbM8qHMX1Rd0My79wNVh4uw=","IRkRB82Xzm2C2PJFgNPzEjhP+PfDcqam+EvqRhlDISY=","LT0U0BmQO767OESVH0kq5kA07/MR9vrS5+4iTfEiq/g=","CxdhU3q/5SMT0phHlODwy1pn+rbH3mBkqbI6nBaC5I8=","JkjAIeoiNA2cFb87TeEBnKW7KxVPUorL7IebowYMXnE=","IQODuSlaz7Cv4KJ3mQT/aFEJecuDCM1L4bp01Q+OvS4=","I2a+ufsK77KyeRmpNqkOUXi2ySCnza6ywk2v347sT2I=","CsC6u/6wWsoLr8hqE3NFAIpHhYKK7K5udXJuUrGUc/U=","FPTj+Sn6MJ/3a3cCL5g1WIHTpGGYJvj0bz8zB7ftfL8=","JsF6cFwfsW/JO0mRKjsCYjmqNxRxFlSK8ixQsXxj0vM=","HAQbVgUnV6qLJRyc+TrITxY7UClEa2udX3NzjHFWnBs=","HbhHr1X03uSwSwfYx1be0EsQw4Qjq9qIz5VWhuGbTZg=","FKn2tSdspkxx64VCEyTqItqeWUGMPz0Wii4lYUqrslA=","Gell2AFPqiFSCoefpwYvjNg+g9I9NOuW9hVctpj8xa4=","JymDtHuYfJSqcEoByIaYwof2bNajWwxTsK4kglcyhJE=","F5CCRF9+kAUPJ1FhOhi+fGFUQ6WqvZ7jDdWuGu0UHQ8=","KkXZkXZdaBDnxt6Vt1EHf/Os0ani7YQdTjUWQbUxr3c=","DOgGAK53e3V33LDDjjAX3bvLzoa+2qePPugP6PjtnEY=","GDbv0ynt6ZntoCmsdpM+UdN5wuyfgRBgkdTdgRhLSpA=","I8L59cMrn8nYoPBqH7lDQvjg9yhxUyrmIuac0mmDy9Y=","Ippg3p6nuaMa8FN6FfwMyPThh0sFsCmheqYGm63HBwk=","J8HKzYR2NQS7namV+5wR3+HeT5tN4AcMYkWNwG5vcYw=","Imkl47KOnTWDMGERQSx/sxJaYinVZJnUrUzidfuUWm0=","LUw+9rhkn9UhwxfUQPDeIXDH3AzirP5VR8liZSNyKaA=","LhYzUtPGwgSk85xjR+0qFUbaHBYsF7N/5RItvgyjjYE=","HVCUSrUmFOz3lKmeydk2Ssl6yxc/AaV5PVX5rb6kw6A=","K0vXC18fQ09w8flS0CsDFyP3aa4YIHeBs376fYYLajM=","AdqEGUvq5ZnqvN0NnKKc7gXI1wEYryLXlJZmS6Y9lT0=","CxRpwUhq2DemSkiJwkrNYMeXX1mnAYG+vemVD8BLlNo=","GR4tz026QQrFD36apJelx4O/+9zC24Rxy89wtW5QEEA=","AWaGB/34ZNVPS8YqemS8yE58mSilv4IV/fvyKHdnMxc=","L5lnIo1wVCbVASx2ThdU4fQ+HLnb3imo2kuoYq5GSRY=","AXTBUUjNZMapx+Jb9+ksDu2Tup2dINydmRJ7mDf4Qq4=","D+rgvM2QYfAVeKegAzlN8CDQmLG11NmU6cewHVwqbj4=","Ds0UaPulsxQta2o2mL0n6ylh8iMtpWFIkerm+y9QH4M=","I7i7K2bM5xsIBVhsnQH4LB96zWYIuhQ3cFKrUii50qg=","KWwpQsBBc1qAaH55sDFZ6gvMnIKIv2HpMrFtmndBhwM=","Df5/nJQXyJKhqkJeNuq9GoMHvxQXjMG/8w3icIBKxrQ=","D5yAwe2dv6UmTsDKfykHtFWCqhqtyPIkTrgm82MCB14=","E8dqng72oq/hJFPVLFreB5yUXeZwCt6ZnSZU8A4OHbA=","CNFJNsUcnVv6iTTqaXUlYOf3LTPG22gsbuqo03r+crM=","K7/SnnEDK9bfNibK541dfZULglGqmtOHuv8M7MVa54o=","IK3Z2uKMC2xWrPjdj7+Lgq7oueRkcEJDB3GFRoxseiU=","H+yWuqhth0FG/stJUwi5J8vGPvCs8kgSUs/ul313oFE=","EH+ULNH32wKoT/QQkTsHyhQGfAjjzuaIPIKfg4PbVq8=","IERqVIgCRjLByloD8+DZkn23kRtI0K2jRc9ELVdPcI0=","FsRcbuLgm9hgIEoSVQz+3xwVz1rnkhD/VsOgZ76YIjI=","CVr6yenA5786N1ev4aWbHNLIqd0KQBanaN5OOUxa/0o=","F4m41QxPRwogQKjJdUBTDrSkuhiOBYxc+Y7v8phjY8s=","GuSgk/H/BW1D6x8XbvrFnmTbsLMKF7+c6+c5ztAtfuo=","IHhmSFKSOvjuBaw5O7G3F3Gu4jesS8E/7vXt24JLUhI=","BFwmO/0sgM9WP9HdCTkZ5hcCxBgGZ87UcQnyIpPW9jU=","Bb1orf6SKepfkbm5t8ZIkwJ4/5zUI1p03aopibjtG2g=","K6YUe/YfrG/p+J9dA0JLvT3SWr0bqAmUmM3eh6g1CKY=","BsKcGpZDFuX/RoIB7NpcXqso5csMvsH4P79V+RHb9uY=","CzpC4QxbMqTbSuV0KRe9KitkhNWNBpmI1A9LLF2SNRE=","HvBcRB5cRJ3N4rAQTMDPCTOMh/we8knkchm+AfiQDUw=","E0a5dNNVkj+IErG4HNac6sArou1CB+B4sbzdZbmcHEs=","BkG+hD3FurraKJOgAIVgOLDEgMc7sSIiQvXBgrA2ZWY=","Dgq5dU+lVBhXYznHSlGNoj2kUS70TZGPPOetwDh3wOg=","BSTtqajPdMiu1A8n6AShGPR52jYzECnY41+jBnqKLmA=","LZzCaWi5VtKC2IKtJgYmkq1XVBriB86Qo260CP/MHC4=","IIvoFELw7qIAFNfFDP4/hJfD7vWdI6x1Z22G5t9nIXc=","ChA8eRgp5fkekUOqrzc8Ewvov8NXnzYIsu7yPdonJ3U=","JMJQ6163stAMKQ9UjyWLQgbaBQ/P7EOTIGmBRqaHtNE=","BK9hHcdWIovIfHkeq8lBK03FOeSCsRNg3eLosVxc6yY=","Lt2kwMjNtqwfdmrzDylsMLrSmn+jRcSSxf1GHIOnStQ=","JKV8yXrHE9Ei0goPRa8yoZLVfuLfAQoqv5MtP+3FMaA=","K3hpJW74RJ7xYyaGwuTuv2x9wBkl4XG2owU8AMf9k4w=","H8LK3B1CWY+or5oIffl9EVZPlhJEhvnTYnSlKQdxY38=","FyGDB0DqtdPoJMpQHZ27J5wzzKRtlXz03/2GxGQ4Uvc=","Blusw4Renh2xZmZ5upGYllqWBPnQ4XpQnTQ1Rhvdqss=","FLRpAly+OuaVSABKdauMynPmaPP9vlsEEhSdohK4YpU=","FpFVYZXK7m258+kqdAuOPfl7pluUAdZAcXIPw/W5PRE=","IEN2DAhG7xqDB7iJZAw0lbzRe4VfrSOGbNyUCp6b8gI=","JUw5qTN9rgd+NO/8sr9hSdqx/0xHB39WWhFkzBYGXfI=","Fv/4G4Tctu6BlfyaK0MYPvLJPrpp7QH9ZiFa/UEYvHs=","HdP99JPld5HicM8eRZMqA4ca50nYsHGyEMETx0bO0+g=","GfNMMNKeKy5x0Oe1iXW1LliVEApkLlJQn3NJlHBmTm4=","DlM3irUk/eNbr79bBz9gM303zHuwJOTXcLR4yrce/e0=","AmV6Qvt/5w9p+900z3fizB2b5dq1w99URoQC6YI7cww=","JweX4YETGuRU++A1t0yBhXTbSwsUYXFFYUv80X2Gb10=","H+hQxu6r6MwyQQX4eA14ArNSY2OcwJ18J+LD0zn+xTA=","ETsP2E+Jaxcm7X4yTwN9Sbz8YRBzQbpQ5s5Ge9T7A5M=","BFUwHJw6lXaGTlNJuduqJLtacxlJKeICL5+UYtxg/Fg=","Hniv6ec/T6w8BgPxqZRPrJU+hkmmOrnKOG4U92zJgD0=","Ki34BizU5AGev60yavdfB1rZkQESyeVtz1wUAq8utac=","IxmdLj0hPFk+oFDFta2fafGwywo7x4WSdQlIHZNlp5s=","ERLz9SBsrW6gb4Hn6T9tomBdEhEffYLa2rchqGKCBFQ=","KnhQl1ND3S2XNqQfrZYXOr347JVaXb8P71mKNCewbNc=","Do8My1VHOG+zd/jrA84xov2ZY3yCiKzIJLs8fhGXYkc=","Lf+gy3mCohX6o65Yfz0Kj9s4vWf+SX1uxqmvOFp95f0=","A4EE2HWGHBb4aWYw//D1ZKtjZ+67VK7ABESr98oBCX0=","LhwUYFBST80FnlVElsc2XcokmDH4884ZFUo6TyXAoV4=","HxsAcROyVxY6Izj33NMQGYmLyd6M1DPG9NKg1htKiVs=","AkXUFMAhPSs0GRg47OUkg7m4I61fxgsNG1+qGdxJlCg=","J7ibKusgSYz8TqELcFe4U80GDZ9Dq9oLYuwKy1DvsLQ=","HHfMxlF4netarI08Yzrg1hAh+ST9Feo/ZLIZBpLwuEo=","E0SrlgMQg2SnHNCPKROPF7gTouUHxaNxJlCUw/8JFzM=","CW9H2kCb4rh9cqW03/52jkZLnzQxSFYcyPf2WZZHMzg=","KpY6LX2/G2ZIMkylyiAQBXB8aPGQM4YCEG/3ocgYAHQ=","CiSh+/jp6l4O2bL29FGQuvmOsTDyPjpZuYgAR0zObX0=","Hvw5MmWT2zVx0fgfbiOe+7tiWEjiBAQ6Pq42G3hNqMs=","AoePGZQ3+AzrYRWkzGmtQwbLkMr30zpX7ix3L8sOfEM=","FOcUEWrwLqxoyi8tf9xWAtFLDjFWv2id2K8CIl9n1qU=","HMT4laSURCpMa9C5vkTqjVwWTqCuvc4Ra/biLqnJ3/c=","H3LZ9XzOaaepU6nR6taOD+5ihHjVmzf8zx5xByn58rU=","FQQSJFLtH9ACHCdLL5DoYNYhxTA5fUmZYlcyhBwkF1w=","D4TCGF3yV0JsxxYL4AFm+r8nk/F7Tc+VVTeELMOevsY=","JiEYdc/rHwhAKQa24QCD6r80GIwPHJ5u5mZvx0mRYbM=","H9r5pbfctIfrQ06uOjobYyBFxPNnJ6FgDaXGfXFivsY=","GoLHxA4LM7w76Pg2xLWMEWe53TuJpkpA8lD7peeZJgM=","Jqgw1Vkydf0Jg4ozfc66nXO2sLzeV5TzeVosfZoAW+s=","HKG1EDG1TWwgnGAJXrpGPPJ6/B2H22C4UnM2WGv1rDc=","Au0LLA/ATpndNz8Ro/zlKAApFyKk9g9p3kSwvjabQwE=","E4v5Jsn32Z87NWeG7KBtA2lsNKKz5wRcz001A2uo9eM=","FMkATTqkeTLsxDtk9IASKW7sYXWZiyfUrp5nrDfiUt0=","Lo/OHavgzfP8Xuv62Pp63G+K/al+QpFy2bdT3eS5j9U=","CG2Gw8cx/kVya6/FF2tYQ/0E3WT1gIBnfbGsmf0nnDQ=","B8UiqpWCMTwQejYpQD9Uafd36GuD6nLVBghxh6jnK9M=","D4rhHY9vQm+vhRbjUAE7539IklElgO0052DaHCmLaOk=","C6WqDms9x8Z4BP24S8G7zB+ETpBGpmJKkQFzzaQVS80=","EloFfBCeRshtSgedOqQ5aviz4BNlVWobVPOdjt5m/SE=","KMpsEBAnCtxJYaqDNc6DaWskvttLtHPfwV6C0wW5XXU=","HWNpN4YdqhIhXwMd0x713bXSmP6KaH8VQcET3GpvmC4=","LnVTNeQCLXusCE3M4UmFIPgK6T2pfS9lcVAn3I8G8N0=","Bx8nE7GnkzoKIPUHuRIFZK9+OZvss8Nk3E1P8A6CyEs=","L/1dqCgOMpmeGaFxfhDImvzgxvgfXTKJ49X85izg8yg=","HdFP5jZelBUX3bj7MI46k/VAA6tL9fKsx6e8KLUTPXc=","JxARKfx/zmIoDKLFiOwVfZblruXCsNvyBJ7SSywTBdc=","IZGf4lN4Tw2zltT55MdzUjhrm3JIkEN1S6iisfSsEmo=","BwJ5WKj1MYd9HOus+CjdiwF6ElydKHWVNzpaOeWM+NQ=","D0wSt2gUrcHN2zr00c5pAJNO0hQgPP9Nqjwyf57OVFY=","CNmIaD6vSRWKfJrocUYGj24c91RVqdgiMWRfcpDRCzY=","AnLnRCbQdNllj9lSa4YWkH1Wc6707jNnhQf4K87vWGg=","GkcJ3640z13fcAbXwpC7WMdCl8jEgY/fXzlQtUySRSU=","IgAri0F1dQR6DtXTWRQ67aGeiBDFNJnqS1fehtRBraw=","JFdIaOyKSnAuoM+lW94uo7+yKCH22IpmGDUnscf48Ok=","ENlm3n5oCIdBLu/YfYEdxGsCQIhtaFSTQzjSESGBl5g=","LufH4+ipeQh97e0C5yVewGexxGR8xxS5bhooJY1waWY=","BwKfBnlF7R9pRolNZuKo8XUTt8rr1Aya3K857O7+uoY=","I4+W3OIsEMmsqaGYLubuqHt86/rlo4d4K0mmL+paq/w=","C0aGbFJIL9SSuqM5XgoskEcLQC5Tiz2NDFByLlYh3R0=","DXZt8qEQ7+JaPZwAcJz1MJpxw+2nmUGfw8uw9pzOKuY=","BwFDt0DFTHEI9fYYPOhDcfdwdQ3aBLp2Xvg72j+y1e4=","FwC1efFeUMKtGM933d1UnaAApsg5Del+ftDY5o3XfVw=","CWakx2cB0JZ2oIbpXZC+z6B7uANGQiRM9q7wClQNI0g=","Db7+i+8K8lWY9UEvhOAKPdTofeZTB1ugxdp+14OXC/Q=","Fm2GN0w512YAlshyeOJwJMqDkZfmXNLzQeeliMU4f6A=","JRWDve0VTrI5YlF1RYhxLQ4beMKc/US0Xymp/VLOrsQ=","EE+i82HPaWCCxfztR+eKdfOTYxQuh3s9gsVcaG5SYno=","LpN7+Ekwl2WjUO2HkalthZogNyKbtqZSvGre0mTHxbk=","Kx2f9/twiDUIxWAh9X4/nqHbrGynQRaxfukmwewxkKs=","BfY4TBm+migG6JLIEJF8ECJBiL9D8EGk6WM/Nw+rzZ4=","Ls0yEeBe8npQ6M68Qv8LGDz+Id+rI46p73Yimz8QkwM=","E0zEJKJt8n0G3+zc4mQaAb0QLn/xoHmi9+AstcBND74=","Bkkb9t8DhQmZJrMiGX8DZrJ1fX3WLuPCoE+bTJU0BRw=","GV/CWg8OUYk2r3Ouvf2W2bOKQ1NQSw/4wUGJhlUpIMw=","IdkFLM4oz25OlAc/hjzo7fEvAuwyhiN/nSI7YjlmYoY=","C6qPcwyjHwP+7PrDSpbDrHrxSAeRB70dFyQZF5FzIb8=","JVgTiSEPbfx3TTcW4ZeEmE2Tg39G5RncdT026yrH7Ts=","JOAOL8sZ9kJNcjoC3uUDlrd5okbaU6GiQPG9iJqJcKY=","CD1IVLMO4GedLbQQsgfg46Z1eIYxxaNWzIdzKWATTHo=","AK9UQW1zQzyi7S8WE1knJ3C24wCTgdcSmPgiPerPrxE=","DYYRLgtcqTj6ftvsqewW6enrRYnHdwb/OGtPEh//EC8=","Ii7rCxapt+0xCIkX6+HNPeKlHxXh45IpoIv3NPss9U8=","JqsYh5evxzMiywL455V44OKW+ZG7K8/rtjXRISEW9Do=","AYmjMJViSp/oQ+42frIyJNuQyNeWFJQfQwCSAr8/dpI=","DLEW8FxbGI1mChUQDk5TIT+ckaLHzEhJdGjuAJIEFV0=","BncWe6Zc4xztgSxXIRYCER/Domu+kiaRingZyUKBGWs=","IDhwnnz8w6H9UOyER2yQhwdI67MPZDG9E2/emc/eJS8=","ETBLRx8HhGS8IATCJNwFpMTsXbCg0V8yQTDhJ5Onruk=","Jdjiq3+HqtN52j4+t/XTXyl+uAxDDHZa3sf2N8T1kuw=","AlJwX1TVW/KbMCN/jRKq0rIbSl06eqrpgvfN49pjCGc=","Hbnt54rw6/JtwYj2+nVmPuyPZbbJpe04+7NCHex9fkQ=","KJFb36tyNThKAFLtc4OfO2YAp61jKCIqW1z26DOiN3g=","Ckj9mw4AJ59R8kC0cpwTYHQPAD6ASglXnijAM8R9WyU=","AEqolejBJOpiZD4dR7KBYsQEqjkP1Fwy+coAwID+wAc=","L2/yw9uXFHrQRZTRhYmUtBb5iqEkO/ud7qZcEJ3ydxw=","JPT0+vfOT0BambmXrL6U9PdWRv59Zpd5c35q6npZMYs=","LG3og2GPYb9/P32NJ6YH1qfER3SRtKUFlVMSoerTvBA=","CE5tTjgh4TP7kd3xfFKjw+BW3FIR2ZxQel+OsBDyBR4=","GCaVd4rCUDvVqyMvega/ZwqVD6sPUmkeZthdZ49+xLA=","FgMzRh76oqua8MgxCE1U52adijnFzbZ7Lc9B08T8XgU=","LNFBQmrvg7YLrySpGWT6A6ShWpVtuWuf+LGALPeIaQc=","Hvz0beQNAx+EM1A/NbV+fgXnMzKS/E6H6M9pAWcXYCM=","E1ZlNMYh2AbtFi7+ht4T6Z9boLh7dmK7x7VYq9R/ty0=","E90PPnrXCRhA8PpG3ygEKXpgoAr7XLTK3mLvkwELkH0=","BjB01kcpgHJ0uVgvVFn6XxOlcKoMjBzflw4KZ2z8a+0=","LPC5RjJAGJ+RsNAIHx/fEXAT47v2ay7CB2i2GWynikA=","JBS8CGmJ2cWktDiSMWcuEGcPqg+kY5PtOsuPdZLVPP0=","A1w3UhDEA3jedjo6HKgLb1nucuYLzNyrmYdWdgenpmE=","JGSbIkhdQWSlhJ5v4J5JGAC7l1xMGNvgduxMhDCUQQU=","KP8wFUGR5zS7+INQhtAmlYdw9YwFrfKrh0UbD1tqW5A=","EzPgaO7CRJ7J8+wlCQM6le7n2Ts+IbrL8THzUwIers8=","Gq8B/vA2jabsJdQg32K/f8I47raPnAHv4ICr2SGWmZI=","GoFY6dbv/7P3cEMBNnScE6w7V7CsZ7fnkLh+TJUzFk0=","JnpLzkZEjSUPvEdiQL3ygIK7ez/U/fa0lZ0gLKXCLMA=","GQks4XnGgs5lSFjzPX23U7mmhkJo7qw+AbnHSZ1mk4I=","LLyEM0UFFByFRGo2i9zm9DxMcwArnH+idVuv08kTzeU=","DyKQ16zcJu8g4Ov2x5CyJuwnYYeA1ps0I124BsLPf60=","CJl9j+mKOweyRauxov+STmnJTsUS3YcX0m2ROXb3AJo=","KBJXppMEQqBLYrcu2F4GwmUQ7zVyuddqWkfTnMjs/Rk=","G+0+9Z1ST9OOsoNRrNiSj+aDfO5ELNQSjhfkzqv1xeE=","JFDEIi+SE5HC2IDQVJpmh5sfA25hlrDtBLb2XXUBrog=","E8vIFkUvGnhZxaFah96nxwdLBvUGI7jVNa0x84CGIBQ=","KkR9q2Dpo1beBOCSN7Cl6COZcHLFV8KDmNw0NJzmsQM=","BAOvsp1YvXqZhcR/j8XiMGGcMGvDueUAHlZBeB4qJ2c=","AfGzTXTHuksknp7RpAPt667bfN1omX12lwLGFnXPn+0=","Dl48VO2t812YSSxGl128ji/wjBOFir6PzeX/dAGCtkI=","DWO6ZgA3sJrYkfKnPuaHzZP+JqzRAvkK1ax/zm48wk4=","Cvty7Pj9AuFpmAzY9NaSzu7O1/VEBqZJ2gtUITgXdQY=","ChjRgpO1OwQwV8SMrudS93fry77Wysh4rm3X+CPa+Ic=","A0GHWGAUm4AjiZ2lSZEvbKYz0M1kMIF4ta8wWDECXJs=","HnT0f0MOHZ/k7a/PZIQpPUddu9MuTbevsQk0TWshfKE=","E5POMDxSwtcny0AERGuOKtIsGPPGuq9/C5gHtNyrYO0=","KZaphoiziWsSv4RGMASx5s/UH+v6gqdsOYKcAKWQlWM=","EQEniES7HtFTKojJRe6j8XccC3F32ekKifwU4Vc1wPI=","D/lE5YSVw/rPnovOPqfmO0XgCURT1t46R2808Ly38HY=","CWhYkrFkeTai0G7CkEI1oqRzI2+64AB4E4MrOyh0ehE=","LflZVmp/dPB6bY2w7kjM4z2D122Dzfty+OYBy9qKYZ8=","E3HDDfhPb6F3F9yr8hJAsfYrag962I6pdLdEJFdr2y0=","Bj33il0q5lk32GX7ZlM1jxEKFiC0YiIfxTci4+WRS/Y=","BpQ8OzuTpR91ue8Cfn5InEAx/5LfyebMjBRHZe1FWWM=","JYpjAeHU7Yb0MMEhuKegKsQaRTENbsz7HiXFDhRNVSo=","FpRsFgUJvaDmoosxDR49RlSW9Q8zHroSo9M16A0Czv8=","Ioo3fcBj7pXqk4MgPgnNxE7orUzko71qzPru682zr+Q=","KdViyDM1WhMkbq/tnLgWtwDkMmiPnQFh6zRfk8htHDA=","Brwy6FGfumNkr0jGPUaHlOQ+rwRKEi9d91BttzKBFXQ=","BbX17k4d4BZUhe0uiJ3mUkRZfOl5W9EwKZXWRItwmcw=","Io4PaudZArjG81Hjr+kRhS+3JZTaxthLslAfbB+2K3s=","Gt7ho1f5vQe5ql1d5sHPE6uF48Y3VyxEBRgCVaayYss=","D+jiMPemU+cNfma2jN3jsJHJC74zku1wxlfMGFKcSNA=","F/Ljt+Kl6VnKxLLiq9WyBO0dHaeI7LYB4gnpE1tCd24=","Dl67jZq3suz9dPXH2FL7cu6h0pQ45YSdYMO+EQ3M138=","EXb/YLCakw/DeL+lv64TfX6RSywuXUFxi75Zh+pCBKY=","HCieKo9O/FvwJyv0UBLnxTsuolk1PKX6wTRSVw8Owwo=","CJcIXKgGLfQ0pPlSb2Xe9rkN9CJESFpy4jti28OtSy8=","CHAtd8brSFSrmg3CAKlJYCI4Hh/DNgb4onbK4KAIbt8=","LVV94ESwupk0tOhMFMJ5C3ff1zxglk+sQ8EoNK4WAjY=","G3xxtUcpVIUlGmAeeVpb4pHskxDQmvTL9sbx2dl/B1k=","DC/6nQjQH3hjrPMnQeb0D1phTVtbyWgNRFC8w93P5+A=","FrTfdglIDcSWycgMIFyxMNx1o2vIbtOXU3+4Yhu1Wqs=","J4hwKFAiqOYsAH6hqA37mDEIkzkWR01wWX6yI9s40SA=","EtCG8kJwmVUy9eml/g9FQhHfbg1wpPVkjewVMrztCCI=","FAUbWyRscGFYGORgBypjNTU+0Lqv7nyifdHtMjoaRgs=","ErZPP7NJF0AjTEsqnCKw02FeZAk3Tb1RxoSA/+2DxXg=","Hbp3w3FVz8OkDmCjyrIqZe09CzueFKCI2g94I183jEY=","LTze58IOmB33hBSvvBGsC6VTiwXYs+5k6T3fedFq92E=","HnLsZFkESoVFzwT8l1zqQ5aTJBGYX2P2nPWr/Qeeozk=","Az3kKq3zQr9juN+ojxg0MW7AoaIDH+a5kLiTnq2QI2c=","AQM6+kIPwxHfhzz6Zisap0wyk7Mvr7bdi1CVe0DkU4w=","AyRgifxzWioQ7/gZiN3fa/bLNspMlOX4EdNKE4r3aV8=","GEN4h33CnqyW1w8sPCPQOxW7XMM+9Gqk19i8dDbi4TM=","JKRXCcvP+4Zl4Abm2hOHGLlhoR5fgzr8FN43JzoU+rI=","Fe35xWurzM+1l3I8Ti7MTp8npmIsFh6Q9qoYnMwoxHk=","JKWzc6QbYoS1jf/IU+V8HpTdgBi/YVXc959TmtOPBYg=","ISZngWrfs+quI39LxQA4NyR/8WbPjLof3UMkTzSqVA8=","HviT9jcVg2jpqWt4k7E2k9GgjaxPRSMQiwqZzWDWJ+c=","Al0U0dnQOarCrNTS3aP3OoCIRq7XFZgXKJ24/wGlEsI=","CdGHCdXNHmajClrypAICoG4sS2RW++KMVQn8+PUBAJc=","EOSeRRWrI/EbqZsKjrK5wMAP/THil8wOv/S3ChkISgM=","Eg2PPeU00550poZqCVqjA4zVqKbaLIw68RxqV4ePvSc=","EIahxnDAs4pGFeK1ydpFJDWyjLYYp1XLjk1sxKGF4Ng=","FD2k8eVsKZU5DebVwgOoGg+FNK5v4bVIvAbtZu63G4I=","A/Z/DGgudBhvqKQxha0QWJhteCkDfJvE79EzA98lZbk=","LMyCARXxc9bfGQY3+GD3VZg41i2khHaKqRR+OHGP5PU=","FseMAD2xet5JZAJtnIBfmPa8wY9asIS/bbR4MktMu/E=","LO1z/vwsyvZbKJ6dvFZetxGPlKHlW0McF2ZZpOIDALs=","CANV0mdEbmV/T6SERda765K9ByIiS2I1QQL6+ZXIzw4=","HXsDXi40RxELVpoKKF/MdYSOntsF8mB5CxhCgnyqacg=","De99aTIZZXTfqju5PkVeswc688b1sjUQrzBORK+dRes=","HXvul7g6UIqvq8/CFelL5sMZyRoGpEbv7qXS62Qz0B8=","KX3yDxFo3zUqwvby66N8AfLh3OjGyatv30vU9zqKphs=","JwTaahciNWNVUD0saP4bTMgcfsjseeYCk8br4s0Pu+Y=","LuHJNiFWkEL8tXh5hrFix3E8P0a6mA+Ew1YF85xr0Jw=","FD2tsnApQ/DBq19NvFRHQScbX+rMQQd4ORu9Md8n1Xo=","CStIgNYpdRyIDFKlg+fIl7lvjkAX0DYVJAtYsJlxA0c=","Lfu54w391qYQn/YJb6eIC73KYwr1hamN3cJsPAugax8=","GD9e+rzQuztbzcMHowAECP+iJ9fqCdHkZyi4pB3BCxs=","GI7BG45Cef5daIXK5otHsOLzsbFJGCPVbUW37guBm+8=","A7ky9C8FdFLPfmO+HXkd8TWxIDoFoe6HGBt5Vp3Zyvk=","DwBOQRhmvzgn7od/8muQMOgjSvkc7Bq/Sx5j7DdstPs=","B7KaK/JsMlNVmskYZuGL0kIxhzxijGxUCFAg6dlOTgY=","DdSTMkR32rP7guv5u17LJhsWBT/94HgMehA/UiTtDZs=","FaJIHZoC8PZg8m9zGABnLU8BOGqIs5pIEwBST/fW138=","Ag/Kjemx7BsTBgaUWRNDhexzbOPUf8/jHJA23kZlmdU=","E/EwBswhxEE9EmuQNDDH0PkYQ/zIyp1vKeCI1T5tVtA=","FWInAyHzUdGf8DDNsQYZBuyvHVRahCYR39L2K1F/rcw=","KhusDRN2J3FKZNJc/4A7Vjl+t8SfkW8hLDJeNuCZohs=","CmJrhBPENxb7OUdareWl+mAyvmWHChTHU225aazNn08=","AdhhSnUBuFCLlyuzqYZdfr4Q2h9++aS3yq4ujb6v3jg=","LEzVQhO8nBGFhJIlc+3Ql5aH/+YBlO5heomXEJX/FxI=","Jztn5Eu+DzbgP+G7fQJtOuGNdCgOpmD362revxNiQ3A=","I0Xtw6SU/QhicN+OwzNwIbv+2zE+Zm7RM1jYCNf7lr4=","FOMkDUALLzfEYnMeqxq/oxIf/0RSrfi48eotff7+W5Y=","Jv7RAML+GK/UVY21aQ8fXBrkhI5F95hLl1oSeyw+Q/w=","CU8MBDLj3WHdWfePPK57LOrMfqUuHkKWGBMtKZNWGz8=","AbaVKNHLBl6hu4y0/81vcnpDwYSZioxSKJcT5S8aTxo=","J/QeVT+dWHqEes7am8N0raI/1aMQaGQM6IUfKslBa50=","HnjcV5njGuAEfsQzjM+LU2Nc6/7sfeBQmKyaSfUbThE=","FAjbI6AZUWP1f/VzObxpV3uWqnyfWyNHz/7nxsrNOJU=","CkXtKHS6oeVYU8qGnYjs4LGPknUqamIpkvLECoD6G9o=","AIxp4RYo718lz1qpqGxYGSKT7ae4A4sPzb6exDo4ezg=","BEGL3dG2N7Vm6YOvcXSEDzEW/u5j7PgRujwYMgi3NFc=","IVzaZHhzXrFD/7kGdPz3W6TWD4Hy4TujoUiuMvctS0Q=","A1V3pU5RZpYzSUTTVfj18ZzcAAaj2PGcv1KjFfypJlc=","FAB+CPIFCmcmetyJma+r8t9AjFJLYtZiQuB7yoRrc08=","HTTcFvebbjDtWmYc03wZF44bm172gUEEsPAbMEL7wfE=","IQKHOD+OqdAiMwWDA3yXx4vGVZsG2pmNNIbHhFGOKPQ=","JPFOhSkNadUBojR1cHIP+4Be36PEJXTxDBc2MdwVqTM=","MBFiAkuye7y+dgb1D+f/Yfnvb+xscPrySF0RhZ9ZJJo=","ARLsfPGrd7qI3wvyucmtzVu9OQR5hVex+xfJ8JrrwK0=","AEBeWIiFRoQ5jKoKRH8Qd/IpTSPE/hiL0dkCS1x4bJ4=","JkgTfW9I6S4bzKysvjCERzmfY1g3CDRuLr+Yfzl8jxk=","KCjtcDkwPNKrGsB+JOLKjfE1YvGXSyyfKz+udC6twjo=","AV5txYPk4fRibYaZkQFw+qMjXVTU/awkgAEMvEODc28=","Dg2QHxJhNtuK5AgDU4puY4pnvklaiw2mUj3RUr4kUU4=","FfHWuIcX83YDH0yduTiZIsgyda8+Zb0G8WOUV9iuptI=","LUotS+9CCUUS2iXx/ERRl9pBFsvxpfGd7acTKbP9PMI=","K3VRa5DIMYdaUu/sZjs6wkQwCkrqM5DLt5yrBKQcnDc=","It/nuhqLg7T/nlmOT4U1aOSSEu7AvrVmy9g6WAyRNRA=","FzVtIw+dpNJF6V0xk5xUaP1rT+HUOl5qI8MlvreBjoU=","AHcapaActVHWdOzHekVm0wQT88bz+YiD8il7sq+QFwA=","IDjCvcV9kv0igm/Hbm0Iwrnw38UoT/+SBnyncRhp8fc=","G7steDEp1WR9zYaNQGi0yykXVTQvTRiWZ8q3P1iRPFQ=","DPo81ioiVpvZ+D2sdZgvXZrnP20R6UXbTxaR5H1pDN0=","ILi8r7IZwOjMdMVkw2Xn8arc6+nR3jB6fYv+vZpZRIo=","Ez+PSTJM5Vq+E8UgZbn9VSXRmuH9lcloQA78LTKj5Vk=","Hjk+KBbRhLtv0GJPD6fQvix2fODNqHqiI1hjVktvDsU=","Dqn5ltp3eSlpf9nAtweBKOcKzkTg+cW9K0CAlrpqyrI=","H5mCObsTWZ2yXFYhQ+En2H9/epTTIXesRszrh8uZArs=","JzGVT/P6k/5hE0ll0/LboL+sz8kep2ylljjS+pxKego=","GNB6mTn6+lEuLbP1I9HK1d5e5hONwtaMjKBtWrtK5lU=","IcUSLwDw21/YTOHXwjcOAZ+oJp/nYxVg8wpMeR8ijg8=","D5TL3knXu3R/G3qDvbw/u6zJXGg1V2e+7QLWj0RFBMs=","B3hlhVd9gWOMjfbG++lP1jL3rX41zv++Nn6co8ozwWU=","E4mfobQfEvm6nYW3K6MQ4Chzb1IAKTvBXfVCwfP986I=","Gj4rSjQQuBDQ2NjpG8CrvFhDyQ4fGWkCkkkB5KQj3ME=","JGk81SmIhlA0OL5oUnflgMqgxhCQzn3g59QOSdErkZA=","HLiHB9OFBIgo7kpP9GUdJrDGzkQDgBtw5l0DZChb0l8=","LV2ONshy9boImQXnSLAMFzitUQPlYzQlDbjDT4n0y1g=","HfSP0EGw53Yv/3hAhwZP27uvKSQqNb3Gokx2TxIB450=","Ia6hjWUmT0hsmGs9zeery8DOH4JBi2/p3EIO9yj5pa4=","KVqXjWsRQ9403tb4Hir1C7r56To8T5jwe2mpEpeCGNo=","BPDwtU4vmt1RfFPxHehlps403zUtDIt7Dqj8oFIaO18=","DE2qa9iigGlc63c8I+qTbq4wua7LfSlzLz0AXo9r6HU=","AnW1+VDla+0BMgnjTJiVn61Rsr3rrPsVHimTyGkeHxk=","FC5iK46wlNFWR/1pEW9ZpSfYmEcQq4Q3N5IGvJW6sGQ=","CazJD7pSV0I1t+vpSzr7EHpou37W1gshcUIZ/BcNVbA=","JlErTlNZHxhxCbK0829BMfwLzRzGBraFOqIFJrlZHd4=","MEy00lizCmeYz14/yG5JGAnKculEBmFgon7GDGaH+u0=","CfJNhGlxeiu9s0dAlCy2aATtZ9kyt2jIe7a07PNU7M8=","MCpgTRSlzqSdBBHW1ml5dXjePt7dS+5ZUQmlCfIAX3g=","FwV6kv2C8ndjuYwBN6Papq68gtHuhNwoZSHEszrRas0=","F8mMPmsU5cOL/T0ZGOezLYXUMk8W5DRImS/xK9AGOnk=","LYW6ppK74B7o7Pq44guAuMASyW1p9pS67vwlO7mOSec=","IqcTrtFgfTbKrrRv/0EeZMG7MWDbPzQx+swHlp2rTU4=","L3rk1Kz8hJf9pKwNCCytOBlvJlyGCJI1CT4arFPGfoo=","Gv1SlEYoye72pNXPIanc9vpJsdofvZyXaXqlDc1s9xI=","GY6HTrMYdbV5bDCBQk2nOpJwjs106A7e1cisSSqAEf0=","AU6ht47GJHEU1GFc4NEeKAwzsKH7rGNvVfBDpevwTKc=","I7R5ezv/sh20J35OsTl55ndKzwRS3qs9BX7WwOtfFxI=","J8hcHBRwds13f0G5nS5VUw1NQ7NBEhGH0BBjfLtmroY=","H4RoNwl2OfrUPA9AakApo6ttgJwaJ8YeSLFcG3E2Xx0=","JrM4v98VAxE1f4BkSe6Bsv0p4/L0O638eEiUjdd4GvE=","LMxueXM3Rfm3WcHrX6NnHcPZkGXoQT1lPrJIN6m9xUQ=","G3+6a9KFte514ZXeK7sYnoIt7RmihnxTI8f2xXXBmNo=","GEpchYWGmW8IrFz1tfZzZ9kc/NcbNeujd4fkTnz8YbE=","I5FXa6kRjbEodOUWnpPHKfiq73HS3tyB0oPdlT1Z4Kw=","Bv1hO+9kavpPHVf3EoUY+DNQ5e/A5B+BSNLru9kZQFg=","Hs8UR5SHrY+OXkZ39z2+gfPON37Hvtn78MCg8WuRJxg=","Bv6YcPA6j4NJjnPs8uIUUyuLEUoUzzs0LXYj6dUZK2c=","BLjac5elGRU/B1b3LJtiZw7V6YPAKkEJEx5yddfy0bM=","KxxA/L332duF+Biq1/szO3JJ23kdH2X0P1Kad+MRiZg=","J4+yHkytEQCRcC5cjNyEQlvKCIKGdy8YFzCPMQl4cFc=","F37wPDQzKN79UijffU5E1M0jlW37E0RIpIWxllcpJbQ=","DSAWVL/N1Ay6UuUb1BnA+VwSEB/BBj67jYFVTHHBYVM=","A7IcSjcCasXZYhGVcti7q7RTND91wNVcdAqtE5aNbgk=","BypSFk4xdfY1BPvnoOAlCdBQ5VUkkOI9fJyCQvqHDOU=","Aw0MGEt0PjQBEUsfOVsS+2qWIZHHfFvf7xZZd836y+g=","JLo797kTSAOrPch/2enCfxKXZPkcNOtTtVfvP+qHo5o=","E+BdXE4dutRohd/yevvwIffhu9Qy0Knxo9/88zAKekg=","ETov5ukBnoPg6JhBDDUybBDN0BQprLsfq1+qnPR03i0=","B4rryP8poC6JUU6aW+tWkLdeWY0q8vkBa7+9rAL0fRc=","Ld073wTX0UScEuYAMLlxtExld6tWD57+joZygu8RY+k=","Ig+vNqAX/v2d9CgqlGUTWFpPbPpbxfl2aGH7+kPKGKw=","Drai6p9oJwZf5mb/PRMYKAkjpjT5HvqeQ6IjBgJXiB4=","C+lFjpz9bMZInX8g0XOPPlGbXCKtFTUstEQQXvS4moo=","GSXSRjW/rAlDGxc4Njb2nyJLrtNXdijeM9Gigs0Y79o=","CkCYiUcp1Eu5aksmXPmAkAOe/2z4sXDOPdb45CVm3Zc=","GcnUgO84qhMQW1dKQZUgqn0JKmjtbnYXEGWAPaUEgr0=","HApsB8vA1quJSGTfzp30BrBLsMP319TwCzQDVRQRwHs=","HUC9QM2uZHz/OLSSia0szP/Gab2UpqpyT6L+Iy1OawI=","KO8tS7NPtP9nMWmqHN/L/XqGmXSVf/fse+9Mcx29tmY=","Gy1daxcbAUiUfVX2GwaYKChWcPS4Q9Kap/RJO8xaiSM=","DqCmflBKVeB/yGjthfPLJEMYNUCdteZlPMMfwwfSnr8=","FKmbvLj/8GdyFJ377QED3ueLViKvwNmcyyvN4GcywEI=","KPcRZ26K6MJEPD+CqLdl7cF8/G7SVLfSM4+SK2hDqOY=","FF7voBSgLZzvO9swUgbfsdzU5Li7kVE+rdE3TDjpQZU=","I3nSnV6cadb7qMomFlbJ0DcCNaN493zKKFDPs9X8IXA=","LRLOT7Ae1e5sRExZWDzRom2OdFRDpnIatIc517JoXh0=","La2l/KznTXTb6+iNr9dUuFmYmwkkC0OkbgPcb7psj0U=","LiM4ZXXi8PH5fk+whDihNyjf1QMNOYGS/6qh/G2l0Vk=","Jw1YkB+Iig0zMTkddLctNf50mEmt1kGc10fWzWfbLVI=","KeSLFXy0B/nOBp0PgKRTfNnocXnZ7sqzUMeNaZCk4OY=","HRXVBjG+cj4s6L+LVZ2XWvNwVXq+4ztlFM7RvH2/v3A=","GalUqlVWlpcILZcBfLZsxnbQO+1lQqWKIjfnSDro49I=","EUbYzULm4eR7UdXYBmDX4Xq0NGeipbXIwNJxv5KDcVE=","AoGjvCh3uC6al5a+++jbNTaq/xK7zr2R3miHQy83u0Q=","JxkE1vmN594ccCddPjYsOYWy5+vAc65ZBYrCtOcTlOs=","Gwfw+IHWC3zt3+Tf+Hj8cWLJLYwje1JBAX/Aoq70OIE=","K80nAaY3Nec7Ale3PWOsfNd5LPlu0KD6POO/YiCDWus=","Ex8l6KqWY8/4/NxPMlQ0/hRAVvrauwHU7/wCAUjwdWY=","HgPGJFHLv7gqakyFE2i5qc95Nmvkx5N+8W6JC8ps1sY=","Ko0wF/KyGoGNPIyTJWa9G6qqfEVgC6oJkKpnpJMJyzI=","AXTCDhENEG6wOM2TGNRmkaaF13e3HYhS1FYCRi7F46Q=","JjnfBz+jJ4nQ6a+rDzRCJIjq4G/XXvVZleNp4bFdvd8=","DBcNaPEzEldjuncUYksAdHX7Z4ehsXBDkmlj2tFq/R0=","L7KZNASDoXObAQjmMaxuiRc2clOna555k7Gq2faU7Ck=","JYjP5CGmBwIhb6C9VnyyZq8QQpI7xstX7Wi7kEiPNfM=","Isj9RjhWS53pDKNeZhll6m8B83/2Fe8wgEb+E27l8Bo=","AXzvCcmAqAxOU9coS1sqEN0c0KtBJg0zzBnfraiOVEc=","HZ8KMCLEdk+eXmQEOXu/RL4EnlGFysSLxymslIqwEzE=","G79rFK0+dma9WMfpdQ97ufbW9wxMKr6R4g/FHMXsKMU=","FMjSPnsVeHAkeU3DPFjauMEXtRtFiPXsXNjFn5zDDcs=","G5H8jmKnnpj1Rc2iYI8ppBaWQaP3FerXi/SUgiVV9WU=","CukEFHYgvPBKS0qWebJxP92M1QKW1CyjGFSOMrgeOzg=","Fm8+MyV3zhDIc4kbXMdC58NLtNYrV3MxZojlEPTYK4s=","AUHgiL/G4Aei2Cz3F5VHIMspuXswyMgSXV+bRsLiZiE=","EY4O5CAtEnoFd6buopu2FNmcEDT+Di50Zekel8g3qik=","KXC48x2bmvs9O5EtkFlKhHugSD3aSwk03xJ4uhS8Lsg=","L0peqkt6/z/NBsnWj6LjLktOYprrk+zLVSyflvvaPd0=","ApHWzH6OUVKQL1sFwTACu6lctUZX7zk+krzCO5u/f/w=","LiIar0BwwsDXNbWwpSCZxllNOJNpFMk5PY7NIycIjEI=","ED1mn8RrB6r2zESJ6FckGBUDAAgX+MH7XUcbKzYXnyI=","ENvjc+1wZ0ATqTm0agfuT4wZHj+2OfjQp4HR/7qC/pA=","EWIpuhz1gP+G7QBrkgcDbmnMDxtV1AiKs04Bo/JfpTE=","F5uzk7m+6O+RiiuiI5/x5r1j1tSMrUq28tMZ8pmb5PA=","JXqN0BULElS1hRIph+O/zd5/kU03TSvsBZXEavvAmXo=","EBX3+IcdurDRIVcLC6ZBeYCi0RspL7KjesdMim4Zjfw=","FgrPPcmNnR/7FersIofVzHQ+89FvuL1AlGokYz0jgl8=","BjxzVSsZ/m9o6d+UOKWBgn7ObDFSARfCNTxnzwcU1bE=","A+jIDa+IeTjNNV7HEKnjL0TEdSCqul3P+cYsS8BBKoI=","GsP3gc2WdsQeoh/St80/OMx5Xra6RaUlspHGa4znumg=","GJ1xIUkybXGwMn+bcQLKD5MEP9vPQAwY479wEGSTNUo=","JakSdh+Ni938+8CZvJlKNVF2xUoYMfjupVcsR2WSwco=","EVjJdY/bvWVR/SzNYV274L7elpps0PKAQOk7UjntouY=","KOe1bNKbFhM+Zjg6IO2qanebavuCdyNEzSwll5qaXu4=","AsNZf+rxA67wzw2pbHgXv+VxOCjGE+MmyXXKEwmSdwA=","HEy2AxVUovQPzRtxIjqXl13en09cJsoIZ4hwoTntk8k=","Lsco/ntpzEIfGNlr96gmyhsEJh8kqY/pweigpBtktYo=","B54zH2XIqCuHWSLIRJu96joRGmgXnl0t//9gXhykfco=","AmzYE/JIBwM9fAJEyfB5D7gNow5ePB5F18cDLyqqGDE=","Bb0RwrZN4ac2+TrI/34MFm+MVwpvBo3tr3IifoXBFFE=","JeFuxb5ojhN7LMzug1Qo2rk5NRsyJ+i+v66F86H5wnA=","CzgHOYGwr0GP5p6lXtob5dKJsvDeO93kfuZIPwM7Fs8=","G0C+Ux7froGjPkBjj+hfiAZ5GaFN0d55Po6xUg2zor8=","GzQ30PQFqyfBhWVpmcU4pnZUQ48oVis6AOrDlecTODU=","JavpbdwhssF7a/s6ipCirAUbOHHIf7njU4PPbXIjiIo=","JeP8k7zf/rQovfjBJJGWPkrKGEdYRLZ/xWdsc/0Os1g=","A6+WtLlywzcbB2ghNZz6rq+WOKByxPk+CKsRnmx0Kac=","IypIcy3yWZsJ8fFjHWgSkwP/bUAJj4smAJg+VTRDXBE=","DN1RipGzj+2kaB07yZIYLuER4EQOmGDNxxzbNq6Aweg=","G4IYmMQ7TzriAH6ZTqg6hNP6Y+dZXbL0ExLN+tHPJJk=","E4YgOuQTwZQqM2svoIA49OkuWVLlI7vffPM3gRPvDP4=","BCVlflepQQ66A2Zc8c6O/z4N6UabAy1Gi6Fdkgj8ILU=","J4hK3ky07sDJHIF34Jcb1am4RK8YjSisGYDMtCX+aYY=","DsgXMN4IeJQq9LOCe4vZrEy7Hzq3rpfNG7E1sLfHj0w=","CpPxyWKeyQceJoFIxlA84YAPTMPFOJw26e3j7rq7cCU=","B+nFjdfEdn/KXMvNe92KT0vqeFhUKymHQ2YGVAAexS8=","CXXgdhTM/jzzn9AgjpfK1JxlowrzWQsk3xAW5qetmzk=","AoPzAsmJdaQYojLTJj2A3XQwARPYUd5te17zx/kplFA=","K5mZP4EnLABVPHGCfp4ksycFSecDUVpnBDk7OJSn03g=","A8zmPO8LzuS51cdToZDCSRJ6YotO/11Vfy7AW10DPJ0=","K/TOE0Ch5xf9jfUl1GQ5N16zZCIoranbrKWATmmYUHo=","GulFPcuIkM5XiyIdhGYSozlqskrIBX7Uggnv2/MRZc0=","J2TT43yCx2OCwsR/SpPdjnP9x8rb7Gi9OwO03XXAmHE=","FQ+UGaO21G2v4FKULhXtSW5bFiZIt93Tz1W/HlL3Y28=","CHbcJCyNKqGD0YTLvENA1amjpHTqhKmQRpmdlceIS88=","Ia6GrQtprmnkub4M6uAWZ4lanZOBocDebThk0ijo7FU=","C6CudfPHYunvoReUyBIdK3vG6+448QX+wANZWZJBlYA=","EKFqv9azg2DU8yV/PFHJ+5TsX4Rd2D4MSsT3eY8tkHc=","CdzZsAfQRQfAvHcsDr+WTUluaXRhdTvRu4G7w5WD3jw=","CxuyoQlmGO47riJWP2P89+hagX9jRVAUJsJxos8ZdeQ=","BEx2UgaPuwmRrtaURUAyG9awmh8NbpGlS4r026GEccs=","IU6pVcSypRB9iFo3c03lya/O90TEgVWT+XC72sUdtV8=","FoTTbc2GQItoIwyp+Y54SVe/t1UqklPq7odoIL7jEKo=","AWZs652c+ky+0VmuaslFUWsJPOWJxZ39Wr7/bGwu4Gs=","IVGpnve8B3B+9+IjhkyejFCDYwLymarQXeNa10xAna8=","L1bhUyYpW9cBpAMU5CzP1cpOCBT6VNMS53F+SI2gWVU=","EWrgCabEu0wowBZxY2T7fnvjshcjdV4WB7GiYrkaFq4=","L9vnH1PVTls7y4UM5hdD1nW+YB10Qw2euAc/aBQgUYk=","ARqR875CS5VbIkHXU+PW1bDEj/nGi6ho+KYRIyukQvU=","HHyc93USVQcOvdDj23+X5dlVZNM9KzKTyv+gQ05teI8=","Hrl5Ihwx9peNQ+dWinzudwnWi4blbXfsiVh9+qeCYbU=","JjtI5G7f+J8t5dzSWIUNIAVD7l3eMUWbb7UkGmvO/XY=","B4W5VZxdoL1XqAFQwim7LXX1EJTI4aEb/qU44hfS7PU=","I88a1axXZYXsz5cJG+V88Oo7uy06+RdPgEJYJCQyHZo=","J9TbS9sw6k4HVQ2eB3uoqdXKodQYwadqEtxx7FWIEYA=","EV9iQv1UErEgjNQCPYz4f7YtM6gpKyMcr42CVwGraBo=","CJu8gwlPZOKTyRrnmot+AJ0PZ5xn3BnGJZewThQVxCQ=","HUobPnptJqjIHX6fS/CK8L8TcNzQ0hAUae2H1GnSRq4=","KGhYPpvesQU4Ni1/7YmX6c60tDq421sKSy8UCUOuUqg=","C3lFnqgOcVOegHnPs+quA85tDjyFZVfD9x/JgwlbQ08=","EZEZ1O0W641HZsY40MNKzBWaK44k44kow7qHWJDqGYU=","C/2+S0N3IFN39pw81ek+zSqcs7SuLBVB2OdLZOllp80=","DUEXTNa1xMDTSy9NhB8/naTxAOIM9hQIZO/m7uVMCKE=","IcWRW4bSIRBn0Z/poxgjQEO4C1MxJ0mJi1N3g8vk4cc=","EDikqc+iDKui0j7wZOdBl5LoOjHwyr3k7qsuSZcv144=","AXzAB5+YYxdxR4WMidPX8xra6/vkyeB07KvSC30iQ6Q=","KU/35eNvdpDWD602uATjVlnoIRfs1E3u63nli7jIdNg=","HwP12BDfpi7dMlIavR0oPCQWoo/KokTTZ4ju6xlakEE=","ACET4nFeqJPQDRAbsw5uFwIVfRD6/+hQlUJ9ydnK7sU=","LpLCm3okOimdkueBlfMKmWo/U01XkaMqC+KLt+iWDH4=","ALswCsdFZESfhyZ039nhehhUMvH0YzF8351JnIfPhZU=","JQ6DXM2g5Gbb1ZpUHh0DxPvtY3rGtxXILDKvWI4bsCA=","Brd2xQJKtjdMhPVSjKeTBDnaAS1BL5Np7jbbM/xDWCY=","Id+LMYpEzF+dVLvvyXqRt4eRK91c3KlfR+ucyJq80eI=","Hk4er10XKdVSMLr7F0PeRzKhjWapaShJcB+aJedMqbk=","JozrN0lxk3mxTqBixjs1lEnnCtWBbfAUy9ECrGR/Iig=","DiUrIxwfDvGMjWr72Hnqp/nmHepzJHyjr2Kzweh5T78=","B5nBTuwgQ4oOU7aYgskMbZI5tzZ75Q9kzpLZl0wr2v8=","D8BQAAyCGkz07mv02RukbSysIwURjrwZRoSi3LfXOD4=","JhqM7DHBKJ8jWMc1MO1+AcLu+Iy61AEOwJ0DblfSqcQ=","D+U2ycfdpQcKN/0xE193pn+fOphrHCPeuD6FeTzzz4k=","Gf/drv21ADK1jgi083exwOs38GN1/3jnq3tgV4Hd6Nc=","LiBEE8U0RTUQBDFhEPU5hJrnlx+Hf7CEGxnudT7iCD0=","Kq2YaC3+CK0smxX0RVogHUqWOsfbsYmkLSs+HD4DERo=","LIn4VVRFlLCMpDp8MsMcDZCurzABMsi0pMxmhDoYGuk=","F6ofI24OidbIITN+yQvXp4sy65uv3Z6D/4x7G5eEgos=","KQ/qrv8pjYh9WluqR/4uhAcOt40gedeRrLkGepeawaA=","JhA7hziWhnGJdBL7QkbahurGkjXEoacap6koA0kV9n0=","Aopw/OoPJ3l4Eg20vUeKawnVTqqKl9Np2seXFpibQ8c=","JJnR5FRMbblOne2bqT/ZIWJobkEgmd5brxIyEbQTjKA=","ChqqaqqX4Mcij/rlF7WTkiEa8476ZwqgYgetfwW/Cvc=","JbYYnM9qs6dZZBrnk4Xz594ON1phwmDYTZGzMPg2Fto=","F0awuYL+/Z2Q585yzbX5LODGmQ60OifNU++hvOiB62A=","KJ6V2FjSur4lJlF9hQWHw2Can0rTKmRt5R6Ga7oLQr4=","MEhBGuIc7Rsx1D00lskuZqJtU6JPJQ4X8yjDWNl8Igw=","A37HEXkLW5gZ7S8g2gkqa++pvETL5sHCHzPT77F2iPs=","LUAp3nK/AeWTe/o0/01eu+rLAQ6oFtn81uevkdmmcUo=","BGb9iyODbY5FoXUaHQ0o2wA80gVFqI5BMYxXHDj9OxI=","Ay7fXfbYM7VJCEDgFAJHIY1iVMNpfQBw/c+/bxFo6EE=","JAmOcz4wem7knjj/0BBYmlHB3yEoLYJ4j1vQz4ko0eE=","LV4vpeYwBCoHMeyE9KVIQg3VZ0thSz3oPlynB+yzJwY=","DnchDcnyjwqguTML2mmCWOQpraPhDwhPUGaq3IbX3gE=","AuvaoJk/anAucQ+PxHOS16DlGGKUunjMveKRNRCHtPs=","BWZ2VcL1SyQThbhvz+J00fJFaZzWqmC2/lFRAubtnA4=","DPl666gk5Fhcyec8YvAzS47UzOEna5OVAfwvv2ss8t0=","Gw2B1YuFqA1f0QtMOZ4LqWA+DWDHpjyJyDOd+ss92Iw=","FlJhgG1XTgYS2TXv8wZHVK7w+fyGmEseMdqZaWG1Ze4=","JUPBIup+CEBrfFqJ84VXnFhc5kfZjsRAC2247L5tr8g=","GKrB6TMywGlWkYUogLMI8GnYdJ+UySNywTZ7ztFx7gE=","G/Y8/7Ra5vCDWN8BUqzhcFi7OmOwsfJWfmnUK0QEi6s=","ICg9BEPIQ9+izMsoURn7ShIJTJDOatoPbe8R7Gyqa5Y=","HZVP3WOz7hOmyhPf/pgyqp2eXy4ezT5AcnLYfCgSULI=","AxuA7zDrD2OcM/1OfVt3jWB85iSrfAu82bKSG23QsWQ=","G65vI0YfaCpjicYHZwyiyXW3aLpJIlQ9/gx43N4+2FQ=","DBXTS07w1t0yTx+o7wWL8ktXQZweSTlq7MaylFVieA8=","DJXZH0brWHUGxXu8LM+HoPxTSKwNrTdetAmqZM+S2pY=","LR2hXKUiqhhodAuegBoAjdt4hGV66JUH+5lFcyZ4bds=","BXLM1/xv4Gvpvyv6i0iRo35yiAXGCfHigqAhRIDmKJQ=","IBa6dm3BTr6yack5+YjAsOXXoW8mSeOId/L/ilJaiKY=","HVcLX/hXMOmtjDJhtq6FdJmSIVdP2oqX8ZutUNwuxyQ=","FDIj0CfLIvQrIKJYYDM2V8JDoF4W+KD7B3hKP4s/g7I=","D2ftUw8xUEv+O4cyVoKl6bkW11yqe1s9XiIsf4ZBfc8=","EBOFFkaUeClP7wUIFR6oFk8UbI43fpBjfEYw0LRd5Tw=","KG3L25yF5dbGgGa2lyC1UPRhWDdLiOdrpICRZhtZHhk=","GJAXrQ7GWZZV+l9cBBsYnUpQVag5FOXrFWUgnUQ2bx0=","EjvOn9QMfxli0AZoVgzDGSQovCKWyS/ROkLXW0G0QaQ=","H5ql4lOHmFBzyiINp98qbO+LYKCJ5K/ZPhTus9XcteY=","ED843bbhpmmqQuoce5qwV2HxgEoV/iLya9NDZ2VDJqA=","EjieAQk3eq1Ca+RxY3WEHC/Uq1mLYLaytOei74pIrno=","IE7wpP5o2/ISNxQxJlRg061jaRJFxWzNT2mQuYlTfZo=","FCXH4fX1pCcIYzQ3Zy+Mz/HBe/dNvvoemc0EDNGT+5E=","HRsl08q/9YQo4mluzqmXWpSEMC0X+hLPM9hBa0/h0pk=","I5CBhnZ/B/E9CtrRFihPLxeRRHULDx/9zmLrR5fsIOY=","DXVEc9fIdX6CKolxjLfXxazRElyl4NEnGEhlUqN0GXQ=","LVneccZbhnjdedns05FRl9FhslORMpkjjvjT0ozBLWc=","Ky9jjc5sXcBL/L+0DW1UflJzDN+8p08MC75f4l4KbkQ=","IIMfMxiNqt93xILB8667/MubwnVZQGhEQSdvgAaTx1g=","G96gOocRKsX3HSewaQ61eL4gp+qwLM976UqbUEMGv+8=","B/GQYmxc5ANnCrsj9zkRL/uR3CNIGRgNg94jTedDox0=","IdA6isxQAsdWXf2E/jAB2dcCWSnHF0neJTgr+Tg8cM4=","A3+OH58xC5CQhc7ZOLYA1N0GoUfVGDmS2XkqxEWPeTY=","AmgMtCDqSuScIobkl608u1U2CHWitp4X4f0JbrrFMcU=","E6OgbR+4J/8UBhkhYusjs+J+lM/aaqBahqteMl5d81g=","BwYJJ7PGQRF0ZkjWqEM/+PNzpFNIQeXL/+W8QbnmiPA=","HUFDUmBFxsQYyn7fv5hQ/SYNIxtSsgl/0iQRBBy+744=","BPbbJTC3GaN2xufUic1/vGUufS0JBk4+lESXjJvhl6M=","BULvw99bzvaZ8Pp75ccc0y0lPyBIi/cNc0JB5DTb8J0=","J2lCS7lqbCHGSlBhB9SIX+U2A8Cf+7AYYGWDMKsbV/w=","EjvNsM9uevtHuGaCfbcjMuk8VxUG4HPEmK0akr766vA=","FaHSWrZNsDU7M60QCahnJ2CX1aYLSxjdAr/oVaSVKyE=","C5y2/X5v+uyCRqzUHkPgcS/XbVyuVqlAds2BY1TbMb4=","HzjB/+VHDINnZ3yMZbP4MZTNnH0ugIChwxUTosI5Esc=","DzIjfS1u0AscqVTfN8MMmI+JQV7tgpEz9ac2NNBfDGA=","GQX3boJeFnH4Z/tYWPJeU6RfjzBqmhtt7nAzZH/IrRU=","CRx9VOAgZ63AeUSU79CtkG6MM4pSTDf4JfkAOsMS0Cw=","LbpaIZQ1mAQfkIYMjpIiPXURx0vrRkjKquS43jhw8/g=","KTo1C8PHidv3wuWgFUgGeKdV681o4csp5B0dKULFedQ=","BJ0BmbbA8rMSLX10sxrqj8twGiT0C6X+aY3mMdIvYkg=","K5MlKRyhSMhuq8LrMsrkd93oMPAo9Ui1tcbhQ/uKto4=","CWpu6YxWhr89WGoOVJYbCjr9bVLaN3Ei6Fo1UAn0pWA=","E/zHfMtKCR6kUqP0oQ/K3bqnqxjrP4hQi9EorS6lqBg=","CRmfBhVu2nyBAzQ7NEurEfQ1UbuVB7zNR6KSrz1Pumg=","L8QXxXbj+ptrOKguAyhCLC0tq5CHnkL+pzAzp1YhZrA=","J6gaDJ5dDJj8/mea/eDK7c4sX9ZnQkkugNzpX8rHn/E=","BGe/jVN9voI9an1kyix6JBei13WPwaif+TME/etNB5o=","Bx2CvKkq7+djbxDJzhb35bQTFBKK5ZB+GIS6oYNEJGk=","FHPkQ07uMLLn2zTa7vsN9H0fXpOayiU5SqEaaG687LA=","IwNAMBTt2DM7h9XMTLCP+inudS9qNnxcmRj447gKzUk=","IT8vNBdJ3McC++uOuRauZXVEXNnU5f1b8Eerp+wl3II=","BkNpvqTGdtN+/jpl29Qxbg4ba1GsSL+cAbUsFbJOihk=","JhiTQVCZUeY647AiOXCY5fqTU2JSgBMbMdrDocGDeWc=","KMUatGMBLYup8Lf47skczXaR7wVwIXiS1XSUxvqmq9M=","Kj5aZgdTwPczgnYgzz0jUeTxcRM/dJ6uDKslrFqk8Ms=","C/MU2ddeNUhs+fYvZTlYTQ+W/P3+oWF7dqRkCZnz0Qk=","LZY2hFbF/ibRGaV0LQFNuehv6w4jFcKje/v34CygFJQ=","Htjy90Pkr57dYtmt1jRHTVQRNxLl6UjwW4LQbntZkT0=","AI1aBHojOWq2scAtEIl0slrhNeTw3mgFYnygdPPFiok=","BH2KtsUjUNZU+GuJQvENLAAhv+nf+h2yVNzFAorvcQA=","GZHIV7MPPtilj+Ip2lwT/gfXUZmZjfEJIQaK/tCaajY=","Ai5IZrivFs63/UVzesNSgFscV1RW4VNanp2fenngpbU=","CghAzDcg5lnzEdrM/mNI8ofOHdRzkSw0l5pI5psGqlQ=","Dk/5EO45IMWH0GENsfvgi/3C21OBkmJjsXdpiBDdpX0=","FV0nsESFaSC721Zn02GlNsP4xaXYWZ4qeVXf/ud8Jm8=","DNwAXVX1dcYaQ9iij9u+8+7DXlakOKuZaAxNHvrmTns=","Ix6Hupimf4bVAWUfW3S9U8/ia57gnAep2Dcba/fEK+Y=","BrTYeAW/t1+cN6YeEOVXkSLTaTJ8NE1RbizmyJOYs3k=","FuZtFtP1cK1do9weyz4Ys4642OBbLo54hEkaLhsuViw=","DGamNAycIM9m3j1u651J6Kc3wjM0PfjYR+WnGO1RGKs=","FUpLGVdRR7ZnK7CnIc5AlX+uPjNsgsf8oZmrMOdRInQ=","FeS2pwzavyxN6YQZ2oEdBiyo6d/L45vHVC9m97YL9j8=","EWGtj7ogdgoTv9e36h04JX7f+oxSvo9BAIfJFvUEr74=","J7g7x50q1NpLXvSYLpG4EHSYXPIzEaZY29DtMB6Q/Fo=","GkEVcw11FeiujQAA5I9s78yJMZBWbZTTnbFVF/QB2d0=","GpwrO5ekEIgovXa8QZaNMUArQEGq3EFtZcIJlu5qxq4=","FWrrUOEcOa+UbFMS+w4U226RlJBXHg7WtVVVbDH5fZA=","FNJVB9uGnigtB1nN8W6BAG+vnxDmY4gwMJl6uJQUnio=","AzaXe6VRD7O4Er85+hlGWUp4qZwAEB7xAXJ8Lo581oc=","B/i7dx5Y5XYQF6lWLGsoW5PWtwmu2hhtlmFhl1efG2g=","FUxHiiVmKU0vltg0MjAJrw2+8V2mLe+BccMJoF7R3Wo=","G5OL8wbef0gyXeWYd6vL/i7qCJ6rCQOALHvz+5UyYn0=","GqRGiQz2W+bOf31gO9QuA7f+wNIBZo92DdYJ0xtYfiA=","F+t+5Bw4dHN0p7HxRXh6x1uNVC0zSU1l8O0Ayk7Rft0=","HRuV6eTc89+QGq/hvaLMgjcDL9Nu1QjGHItBCfggu2E=","CZ19+XyrUibMfjo1zqpjXCKrARDpOmJRbwNwopZ0KfA=","Fh5TsvEO6aryJZbGIUgOHeIJBQP8xVqClcI9Rbr2j5Q=","C5u1PWYDZM4aUiK9zyqAoWGTTj6S3lBX1mjc9J3qmfU=","HIRXomXBdW3nVxswKQ3LSPoL6yt9HkQRQmJRWFSAgyY=","J/nG/QuQmDAQ1go32ApYq7DzUA1tFsm7TWpSrJHEpJE=","JogM+gTsre39o6JKlWc01KvIri+SZENpyEYN9fIWR6s=","LztY6by+N+lc3ZmQrrJkgsVesqlAnijlbK4k38643eg=","ERcQTezGeaZq8udYjZcYBbUYrCGfrIB4zVIqyJgMaYA=","AcdFQY5M3YDqGKM571kOWDYrOCOx/tLWqO2UIZB3HPw=","DK2KlU7GZ2tC5DyGkCQyoeF+LPSvWjJ0vBvmcm4dvj0=","GzC7mJ2wM30EMg/M3H1m8LsVtDd/zhp1tCeL+qYdX1c=","GaVXoXIAX4QkLUDFa+fDeVXPdNoiNVew6t3rW1XGGB8=","Kh+IPF6ttpZNSEdHn1LIJQtMzKD9spIji5N13MIY9Mc=","FioORNuPqgLb4apSsWgHEKjcpgkTh2lcsiwf+ESSg0E=","DtmUS/5IVC76EMnyC33UxrFVhOEmvywByOBFaLyK4h4=","HVPAdsEF2mf1z9gi/MnCkd+ikjxMbSdd20XZJslxHC8=","Byugos2uV7WDuh1y8Jx0XlD04Wre3WSIyti3k+PSrc4=","JuctxgnCkBhz1Ap+c59wr3IqpDmg/kF9dWjDjjj0fOE=","HzyrZaq10MxkWFGaFNKw3930wAWmMwPRc49W1MQWAr0=","Hfs0WrVllw6VyJuil7Y1XesvIwK2YXnh3FSJg6rgLXY=","C2Dml1NSFb8Q8csSCODmmb2IWYGZxtjWUuabkK2A5sA=","CBWTeG4wJlA5awpF/49iNmMQofU4adBVcoRIGsS+4lg=","JgJ2pG5sYkeB86d3qbRbSDWnUcawFuWE2jWjwwmEQ1E=","IBILQEUWcxN4TQwstO3gev5/sGBVGPb1DOwbiktorHM=","AfweIpJnivjcXcHy8fVzw6xOGVxamFfkD66SMJvHaKk=","FMAEetALfXNqjYF+Vh5YLpAbRIHjgxZWixviZ+d1uTs=","JQtOatHH74ymwlHCev8QHXvh/CX7xIRHfLvk6Q1FbS8=","Ea77wMSh24Hlt0WB+B96g857/u/Oq3SrS2raDYrKKsw=","EAkX4IhnJIHIPOnj/LPbMvtyqDMy5bJ69VpIxzpvmok=","A3te7b9NqXYX9TuJg3CTM2diA4jTjhagvaandZcUu88=","CvmLGoVsUTh3Z7wmFGiIsoBuZmQ7RG/MP5GFn7Oc3bM=","AP3QCLysaX6BE+ccHA5JBPUln2CqQ+1Eh5bA7ZSPutQ=","F4Hh/PUEbibxm9rzQW6mBEVOJU/rCkk5BfVmtRUQtZY=","DoDu8U1c4GhHpRsOnkVBs6uUyufKKlNtqaJkyDkYWUw=","A33KA6a14VC1BWQSgILmmApncD/LeD4OPhIDMAT9drs=","EJwo3LhzsyctQL6wo/6PT9seei7Fp5s8Q3wZ3E5WH2c=","GUk8D1w3LHrQxPCWv0wgZgLq0j0Zdz9nZvE1px4Be+o=","GxC+lly35G8VTjwIo2ZWwuiVS11QfJSfdZe5ccA94yU=","LeJucAMg7UzJhlUNnk1qFlYRVnDzQR9fUDQERFtK238=","Edhqxx3nRgeFner/PPCT+AdtKGIKiGIcCaeqsSCakaY=","LDw80T8jE4loFwEkGlT1jJ9q8ev9bO9Pow6fovpOAqI=","B4hkvnpfNsB/qSSOmBgQQPxakRgVmEuHUPlEv6U2UDI=","D9cYfLYJauDhLk4nZBmgPtwNMkYgM2LVg80GSmx5//A=","FeYmWWgp2ALwrb8kdulWbhw2NIsCJe6ufji9Dj6y3aY=","DUbe1VIdFlxPsHJWovf15IGfbYit6RC5rT+mxdffqxA=","B5U5e95Gtal6I/cqi5JqMp880rtiAFBufoMqu2RTuKc=","EwCOFRm+MCk09CADKduVG3AOMi2xqH3VeYwrnhJZ6aE=","Gj9AP2RHN6RmFeBHpCrK3t+z2E/MtzmZyrYn+2BQEj4=","DJIbwyqfyerGBl9dxjRhWe+fbc7ZZJiWsU7b86qCZPg=","AHj5ejfVX1D71juH1ZXcZl/SBu1siHUJrafxrw0eZJM=","G8Y5MhQWKlICbQf+dw5TB2PHJbdTnZshnMV0lDl3xtY=","EhiYwBLsiFFPFViAw2wXVcFYk5CJ+KiVtWVAHeB7xg0=","DxvKRmuyTdzGDOkrmu/nv/Qn0eV+VvZU+9zDYuseDWs=","CvN57E2NZTMiGPUTjcEo1BsbNaM6XQ78XbtsiBREiQ0=","BPIQhjkt2+Iika+QBwm+h/5OnVKx3WWexWO9hI1C3Xc=","A1iU9YDIJsZp2RKmlmR47PoZqxu+gOWnDGoYZ8AsjZU=","LOuRXS5Hh83I6Uik6jWuBLtqAsByDFHs+ZialLiXlII=","BjPXfaXtiPnBJ8RZow1fjMC9hTd6Y8TnVB/3NSceZvc=","IvcTdZVFF180PQAmXDrZFWrpmjXzBFoDRG/NiP8zFo8=","E+MDRTfiuCB6ItF1NHTyxLv7ED8kc+xQg0jdxQ1gKXo=","EiNoZ6e94hq9KXp3AY7q/kuEDfZ/eE0baYHX6R1wQks=","Fa0Q1oCTRP12o4uZ9F/D0Q6Y8LTRr07t9GHEPpKmwOY=","Bec1LZXcHHogMTpT5m5pUlkCoX4e1DhZRTFC/ElSm4Q=","KfbibY1hQeGVXZ+zImp0rHHzk7Fqr6tB48eH5x+/4ZY=","HKPAtAVtureXxUaIg4oHTP+N5r1qdce2CB8ROx/jc4A=","FB0xvXHca8jErVlYL1m5Y8BWI95GGZQ4un7b5L4qRmA=","EGNTj6RGVzmeEll60MkiD9YIF43jmeWpj+ir86xBDIM=","ChrvcGTMmqMZNd2lfNxO4PEQTUNFvPLkKsSKyj+5FY0=","CFKAeTEo4VVsu/s1yaqXqgdMSmDYFpQn39o2bkJoaqw=","BqPI2ruaAECvVnHLHdv3JbSExoNg71EW6bfsBf4KaWY=","CaX2WW4IkdzF4no7mMz1N6zJqLt0+FAiCbQ23AcbtMk=","EWIEEpQ8V7kCrzYm7P9gj3Hj+VjIfNABSiH5TJ/zVek=","BSFE17lOrjPeDWzOsuJsgpt/ci7S+bYBBgb8bzi3zGM=","B60co0bW9MwXv+WCdMGzVWWQksWCleTA54ERo4euqx4=","KWMFLdNtM4PzWMgCQwja4hJyE2QMeF8gKo2DJRJE1L4=","BIlpCl1WNytFdjLXfMyLgKokh0c36aBd4mnhFhjtaf4=","HAH/8Gs3pRfTnsev2mbudo/TnsVomx7N6/MSmcN2zGY=","BrMMFYMY2bXIHt7oBSKvr3LogPoyfMsH+Nh922bxXt8=","FtVx/HHl5KljA3PRK4WkEiaDIs2UcH7uDWeNK2Jm6ew=","Bn3ZgdpgUgh7vkTtNXiYvowQj7ftahNIGmUJATAM1YQ=","ARRPM78b26kD6wtDRJskaHvZlfDbvLZU44rrlKbZOhs=","FhQDZ4W6Fsw+FYv3DCFPwFhOQz/RQAnVdqZ4eXDsC/0=","JXdVIoMAljWBZi+g52f0LVvG/WQvBANyxT06H+6Wkt8=","DehiiitR1w4w//0lHbTcYY33MIHQHfFhIYKy87wHuhw=","L7PIuW/hfMFDJ+hIphAHrH8EMtO0DwgC92TOfBaGZCg=","G2gDdhfqZfhj2Cjyu+RBIouddtlGPYPXeeXuoN3JIpc=","KILBZUfLaPiAa3etgT7jY3I1PpvRwAb9GWECBQh3RBE=","C78J74OTmJ0opo0eC/m0m5M10MNhETZJThKOX3tk2LU=","AscK9tNsB/TktlSz+K2Ysska8Jt7+3QHmXeqh/mbE5Q=","A+ft69GMw/+CuDWtCLxMM3G31VKG98SMdH2TASf2K1o=","LQJN8EGVS6I0Qd2SezCh7RAo6S1MNRZDKWdCqXQTm28=","KYwNH8Lzbo//M0JWvFzX6eQ7iSyhdikrOmTXYifMSak=","GOZBaViJjsiYhTU2MElsLF9XLsUNwtBO8XhpeY+a7+o=","LVOifCwH+5YFi4jJeJ/D+OHTYaQSvxZLKqDmbnALNng=","BVJ3BBy3oSKxYYsF/7k/cjQW6o7raBMIXdVKmds+sT0=","JkPm1d7QajtUCjoX52y87Qbqzkx/jpXpnbCaHPZ0+yU=","BMfQDNd2fhwKgzdaexHUO8L8LZrT/2NmiQomHFPDELI=","D4nR5TENBnZ7LwsSZtVr5lPYNkiHjqJdecS6BdcZLiY=","LmqQRKX0j6m7de46dZnacX3MiZbOwAPSbeh+SU7U6Xo=","LJnB/2padXKVQMQJs5+u2Th3WbVzHwQB6Gyd+arQjKw=","E+rXJn3GzWFikxg2sHdFvxQuvzj7sWwDCkEAVar0Hmw=","F6hxBclsICbHd6ozpTKS7iAMu5+FXZkJSaNtVdV2980=","Lq07bdr0lmG9S/P2zR8SEnuOJte6+TZgBYYdCKur1M4=","GUf4wNssWCYEeSIqcbaS5O6/M8yiz/gvLtYvkPUfF6o=","K7gRDSEJxqHy7Fa/cuBaFh6UkZu7DYVdW7NRYlpAnoY=","AX3XbLDbpJVvi/tTEagyIuYL9d8uIDFrM2aT0ocadF4=","G2of2ljAhKkJMuJpuOVvtRy3dB3jJigOA12diZJaRTw=","F9lVEURpczerLcKULLd0vEJECN/D/hgZs7sw/K9AS2o=","Eqtou3uio2+mRfkPxyINT4LoOE4jGwnOmTk4o0ng1bU=","Dajf/Hvzyj0q3L02IDWuySlrx06mfR6Uovb332oNkhk=","FJbLPsfNpR2F93bYYTsEMOl018OnpqhD5m+iUx2idXg=","LoGVfS9zqrRKWQMK/8lFsmFy/OCbTUNRrlPs2sgt2Z4=","L76Na6UCcpa5jwJ3sn4ofkxZ6bH4RiTgCX2zkPplwJA=","KATUXJbS2EIsjB3a2MERXZKuwrFpMM1wB5vUTPQf2Y0=","K3uotkocsv5ndFvlI/9GpMjAQICS+qIzPEXRg0ghFBU=","D1BrHbsbXt8rLZO/vCl8EX3yEtYSfLKcbuYKL1e54hU=","LptSx/BQsueb03fUe9wdgkb63z23mYJjZMS37iEzIH4=","CBUfrychALRZ6jG3LDq8KqDM1xrdouwBlolcmy+abDU=","B33YpUYUG+CNrKFkYA410Q1NTp9TYWPUHCcMev7bWOc=","MGHlVZBBHp+BFHbW7ni9r9iPT8PUvmC1Yet54OF4MeA=","D1AAwm5zgkpFMA0EIOgdjP8+hYA4fpMQ1PRpCM3pqS8=","CR2DHPFerUdRG5OvdcgwW1VhCzEW0HoWT+62rush96M=","HTo+c11JmRAwWQebWViNtfoHa5TqjHCsfqbNun96lVM=","HonSs+MOxmTukpw4hCchwHRFCgy7QqSpKWVLN1bQu7o=","HEu9X3Lzun0UhOUX2lwK9yI2NBtqjpkf6eAqGcskv3E=","KnyB94E7guOyY/xXOcqyPF6zXYTH2CEj8IYl23tPuWM=","ANSOQGLPJe1gfRebw9hOH0nTDiH3g4OGrDsgNwGumIQ=","F/QzBZQvNWYmWXK6VUPUqIRdrAyA4svLVqqxedKFQVc=","CNh3F9Xqzz5bs/tHN3alzEfS74Bb2h53BZAmx8Zil0E=","GebidVAL0OgCA6ogwP9l95hUVcsAlgiKW5uN4xSQCkc=","CW0PO238XpIz26qs9pvHCgqqob9sDgTgLew7XPiIn4Y=","ALmlZDSbrk/82wRTy3IwrsWhXxjszfGRDBDdetOu+wg=","I31EnBVI24mHkXV0zlQLHM0k7v2Q4oEHhmoXXHwWrwA=","Eu0I97nRK8MEVr9CTywFxryRKZDecxjiJX2YpBPkfes=","KWEWAavhjSb1wZgmivXzKbJfQrjwemWEn9vfkAOECOA=","Dhcofut30IX+egsQ/hZUA2jksbRXQlv8qGOO0Q9isgE=","KdFYE9tmZQ1ftjPP4PxW4kKsPQOdHeIFsKJheMRkNOM=","B/5/e+H8s2quFaMxcenQ1/Lg4ZPnieV7y48BbggRYYI=","H6h74Zb5ONoinOrETuND2o8sP5VsjlAJXTa3MSO36w0=","JP/bUvT0Q+38BrjzGpNXJTxqFXqg7TURlDcZbCMI/S0=","LUvKd0VxIyCP5FCOpOtJxhcDK2vHNfxTmbDC/W4Lb3c=","AjEdfwzldj8EvhIOgE1+iU94nbnr4vhaYmWalKJ9O/c=","G2vvjVHpRR8A1frwmng5O6g+WO0iSi4hwAOWWL/3mZU=","CQjWBF2W0RE8T8MDNt8wEbzFa6ZuyofsjSB1oXana94=","DZTz7oCDMB+OOIEAjGZlHDL3QyTUFCOuCFnrwJb3a1A=","AeqJ4RuH5v0AYjSJ1t3am/Z+/XSnA9O99YvAn2igES8=","DQdFfcPuz8bud8etqsofWjaeCW3vNp5mUZqIcBuqt4Y=","JgRho/drsGYJTXZAZYerY3chf+1SgiLaKb4sx7kPHS0=","GiKeOT4tMMeXglC/7zFl8mdkPrPCLdnxyxreV+wb3B0=","FK4jSWlFSE4ViCJFC+4dWd8opVKvydvc50jjZVPSF4Y=","AKKHIAq32SWpRVPmk60w1ReWHXtbopPZ1rpnlTQ4unI=","F4uBh0hjNhTpIt4xWD8nxBfDZYGJU9QM1E8YBC7h0dc=","AISuiu71+3ksNs1XOgsS8N0MkdbUR2d54dmbKSWgVDI=","KKaqYNVw8Jmbdy18g89Vg8myPf859jOI3aQPbqStzvI=","Gv4qSDkTKwyuSU929vuwn8l6Lc/8PPRV9kTfoeieAZ0=","H10AwMOiS8EVeYcgsfm6a1L+qkRSKtH+wsGsnMLPqa0=","KAwgMl0Qxcn5UmV21gGdwCSPEFigr9XaWgzGWm3rzpM=","CqNOA687Aoy2fR9N7H14lHijy3OifwHHX4S9Rm7Zsyw=","LeUe/rNt1/W+6bZ6/hkq1+9Kv2O0YhJHvog69wiCgHQ=","FDy6YVsGIj9VYr0KKKYaM8+N2hNMK0GVThpWbdMLvwE=","FDUanSfWcLeuormZuxh9fssFKfkgOqA2FC5Sd+aBX24=","BGkikEKUkn5rWAKAUBOQAYQwMvaWetigWiBEJXEeGOw=","LgVuHONp6pA8Rzq/eYiiTYL+n+DIe3yaYFxlbazTxao=","ByRTk5EvhTAu17XTYB/Lv7qm81kgFF7wxZzojBpqkhk=","Iwn+bDBu9zb2Hcr2W/bZs50Q0un89o7eN9UR+ku97hE=","Fw5DMtohfLNWLiX14gChnPNvhMmGKW5x3h+yYSW254o=","Hj6svBHpyBkCdNcLvV3QrGSjdFlct33AjjPuXg2Cxgk=","CZgya4+T5tp6RguvbL/R0p2zdzBwvsqwAcW0r3bMJOk=","JX2UDtDNdmR+LT9io4kZs8YjJqSUrJ4Dn4KiLvHmiJE=","D0M10Qv8Bal58DjekNr3AnK73CQm5JiGRmUOFkxWJ7E=","HeKnKunSpWMsPmI55h3ng7e4TIv76X35Zcc53KdgkoQ=","EvRLDoxpTnu9Vpnk/QynNKjJzD9Zui6rSjKc9csikok=","D+JpJnT6wv4Bf+59kiko3L0xWOognXlIo9dppwnZDUU=","EHWrsOWiCM7hiEETGrTIcwXxRBqvy4CM//aEd8xPssQ=","GmTPjAIOcSszTcgWTyR975CYVT3K16RAw0n+kCQ56Tw=","KWpRpKuZDFk0kiufVT4FMpPK9GMW4Fi8ea0To398gtM=","E471yoSYDhHcm1TOAr1RZiG2XqeK4JdMHbmmcgwAIjw=","KKdc2tU53DAKLpUYu/tHz+zOXaAc8ekCEHgmBRgTALg=","JtK5IznY1Es2h3CaupXDgEODYP34i/x6AROCvSp4WeE=","HfEfvLd/Dt5QZQS/tAiOMnmnn+a4TDpRr1EqX6nirjY=","HCR4+nYqvGB/sKFiokc7nkyYOFngzPUdq95fp8jWd4k=","Ld/gLN61dZMy6uTite3VOBIFUVZTt6dmlnuCnKuA4Y8=","Bn+dCCxK5S5T6wKsEIDTGpNTfqJNdKUQyJt9p5vDFY4=","AQ9WNJFpqYwB9+jaYuUV5Vrr1NRMRQN4MBL1iKN8coA=","ArA1h5scVwSVQ20lCipFvYVRC4prlRYppKW/76pxF/w=","EFnk4zILjC1mpraxUR+gnmGcSydCAe6HQb53/Fs5prM=","B5lLkTaBRGnLCihgZ/Yys0m1riTa54sFbORdcidS65A=","Jp5HDojL2Tb0w17F8AQrnW/BOPPcpd46g6mTIcjB5Kc=","Ep8/CXsqpXRv/ISuF6/5qJKmvEvJZatL0cZa3e/BYOA=","GfObQnz5SmWqe/dqQFtDwNC0qCTI5g3dZF1m8Kkeu8k=","HLgvfOSHG0qwT3dGnQEAhX6Y1tlQ2+jvZONWgc+IjDI=","L86ga7PE+ckVhBiSG4xKsTgNFVoTmJRkiuzuiRJBQTs=","DIjS7R1v/FhEVQJ1IkffU0wld7GPyD+EGf6jNyflb24=","Ch2lgaOdtOjb5PX2hjJ+fK+84HjKfN/inKXTrnSrHSY=","DVbxHRkwCyFKYwl2nCOBbZEJtBX+ax+7F95vrX1+Ess=","LldFvY5l3y6MSQRl2Ok1fpr69Vqhgrikak2LR8o+a+I=","HagDw9CGBkQjGpWLF9LCLqStoTR8V0j4q2ikAud/6Oo=","FGptH8hCjKZ5++jGlhb/Z5j1moJ9R9r8Fa80/lGC8I0=","EuoHMe/z5TyIGqzA6nfBY+MAAc50oPV3N3kFn5Y2D7A=","IcRVkQmWGH7Gd8CDc+IMQaMKLUwGzq8huR8LFKE8kEY=","GJiQxo5g2XWsbkTTQ7Kc2h3LoJ4KZ+YeLOyLL7n22Mg=","IRLflsv1uR5PGSaej8dPJP82Y+1WMqJsnDtyUrUCz9s=","BcS4Kr+wwVKSPVbw//BBGjtdEb8AU5RF/xg9azFw+80=","J9iP4o8SxR6Ur5srPxQJmvznOjc2qf4cyJsR/UuERHo=","F0ULM7A1qX62E9KJ7Pd19AAwRNhh60GWOl14ME672QU=","DumIqevI5gjWMf5DJP14+nfgDkAvW0sEdHI+5H3cJv4=","FKiVZtwvD/C2Tfr12HA9yfdKD57jlZYYMsGU4yV+Dt8=","DOZn2TF349rJkB7DI4+w9AO33rNwvAaVE0KL5wATRkw=","AWqsQMpF+Bir/vnBWHBKl5syogixVXZHxgbehoWCGEw=","B0Xyzr5MfrOhcLOqtYJdXCvLqMBNZt4QB/WHsqHlNbU=","MGHxiOtU3HGhnGmPGTHuJh7Gkpf3nEIIBa4HUUlnA9k=","G3GkF9Es5zo7enAloU+PtRqQ/eya+bHc2AZ/WDD8F/4=","Krqtl74ou/Qzm1pL4uJLV+jZzBR3X1txeujLInyMWB8=","FXl8WgcssAzao6l86pabzVP7KYTCO3rbI3tgZcZQ3HM=","Kd9+2ss0okscUtgULFM4uY3DQMDPJ7zaloiR5juKems=","JAI6xCCyf4OBS9GCqEP26+Vzm7G5xob1nOihqUeNcEQ=","C6tAXtEcqlQ/nNbYhjpl3YAN0I6MlJnl1qWEdIADOfU=","EnDROaDdima9nTYKngERzEQLOa17OrRpSzzlB7pkqSI=","BNciUDpzQaaQ8ziXe4CtZtBxCqZcbye9SYI9fBLH+PA=","B6CDAM9VxgGR656etjtASXmAiDeWhWrOthR+OQ31cUM=","FDbqOgM5mpWHENSnb6kUCzLVGA0W3YN9ozXff74Y3EI=","A+WXKp7lRz0r7nBoOkBUCY1B+vikTAPqnQnMpGCxhq8=","ISmJ1JVA/AvGsaLRUOO9dqYhuizbRHWrG3KwtjkdiKM=","Drf0ALDpoqRjVRClN5tKA9+NVsVDNPyMcT25a/s6XZk=","IzjDSP2VavbhkZCaIqmQCazFO/2BgJJvWRyn94+PmGo=","Amr8x3YBHIvsXjL1bxSaUR0GTfCc2yjwlltwFVjmODg=","IdpIa6CqRXcEFXiycWIh8VtbsFTvJ2zZpDg+ZGo6I/w=","BKzNu2ylAy+nOWwlb92PUr90EtEfMYwvgpOqHJgyuEk=","Leio1JYMEO6d/oqwGP6jyHVTmS9ZvLrjbNQq9LRVvFs=","IVrh9X4kIbszwrTC6FQITOoLErz2GlOWMFep6q+hmn8=","GoHfPHkbsIdolIrmP9u6G9Qu/LAJ/7B6rYgLMbuKpoo=","FBmDRxyXwN69zU8PCFFFNkkA+6hCnh5Vg6TlYd2tW8k=","AXbLembFhuwfSAzu7fMyzWzVUI1LVaGjKGKJoXiGTB0=","A6J6E3jmARh7gd/dduP/gZDRcNHM1/fPMzy2H15qavs=","F+HYkZtq2njJ0YI6/oJHFP0JSEBjEbIaK5TToNHAip0=","Fh1kI99k4asenbYEgJ06xf7HZ21X1C7zE40/DSIRb6I=","KloYPALsR8AisvZWQqSTcw64bZd+WZwNV7HVfiHLq7Y=","JzTMM2cCZFpXaeF2tiYnsK2Jno0+8k6ENXIU3qBnXho=","GaC8Wk7WW1GJDGCZRib4bXytNxmHngD9F7Tbby7wmqs=","HbYIfqn0JoUmWEfeE93xjcRGsVj4S/ogpSfWLsmEE5g=","HVRL3zwvELSu7rhUOvVDCXBfeidfCT7cdpAZe6Oly6E=","KxqHYSeSG3Xb9Nfadaa+23QUvF1VyZjb7kn0fOIA87g=","J2qzNQYuNhl/5EJET52UUMt24XHADD6/t2F78K+67qg=","Av7VjVkgsFvHQstlodflDdjmobrtwntt461qT7vCWbU=","H2AKUp361v9i7xcZdK1w5283M/DJjg6xsQyV8TZ2CVo=","K6NersLDj0+qrOUrvMBo0wshFJpgiNBGeVJULp3YMds=","FmMOQqqrwCAWPofBv3RjwQB9/c4+HOnFwo/mTBt98JM=","FYXjxpKyfn40K/u0vUIY5+0B7+E8ldqqymLS9UVfZQY=","GNfPnAmPc02ioE+Town3dIIOFB+aqS6M/KQtjiLGHZ8=","BkanMqfVLoq8BEHsmwTSr2/36qCFoiwM/YKtAkO25k0=","BP+pV4ReHgHykW8iQ4Ffjl48djYfNoDiWSGMDSjznxQ=","I9PIkP1lJbeBT9PDJd7i/6EfZ+FMuL894ispBYJ20dA=","IAAxVyOlbL1naSFGz0Kc7kCVLrxgezEA8hNUvgYFwt8=","Dwkr2zmVMF6/5ydRLr7sHqSNKazJd8/RFpWIMm9Q+Zk=","G4BZ5hYie5qDYJnp7jcyn7WiQX47W6/tcx2q7hK5saY=","HY5gsl8fsdC5faDxfglCWK6qQLFCyXqGOyRfeHx12uM=","HNc41lGdPoIqZ2en2/0jQo42HjclqVv2LTByOkFO0dw=","IyyF1JJZbTJDzXIInFDzppH9efvWC2y7rOFmGibHpek=","DeYL21ik58fvvZW1UBfTIBt0bnippvS+vrUcHW7k5ko=","AvwQGgIwYFQDXvWbYOHj76ssP2UCf5PaIHVuir7xIFc=","A/U+us3vVytzvqmVUAZHgtKRlDag8rXZIjstqXTjygk=","DieDTMj76jiBzkPZiW5gebjoydtNdxktqria3TJq7sg=","JNQGFscTuQmffI86q7xzHvUuDpZpOnRqOH2M5nbW9w4=","FJ0n0MsBTlzpxBp4p2qP96N1Ad72A7Vr8Dl+3RduDGg=","ALzJeO9pqAUXOnvx0dVlGIEwMlAuSh13Ktkammp+cAw=","BpZKCvuryGovSR6GJw6tRPSfmGIriPTET/hoMPzOFkA=","GTQhInE7ZiMbCny6GZPF2QTUJ56XhzX6B85oMtpNbmE=","JvU1wgQkJnqRAF/SJCMKSu69OsB5pYp4pjUg1YcW9x4=","K8Q+kwkFIWdkiBRFTL13lW9zqmmyAclPtReEWoxxmLY=","DZkio2Q7TJ4XW1ffWX8QtwpG6e2kGVZMM2dbavt/6/E=","EbQ4+x3wpFV/5rFAW2cgrUoVN/4bQviEuEEAf1XGGv8=","FJXer6G9Hye3VBE46uIHc7oB0NnsELdxcHlV54/a6jM=","Jqc9ShBahmEaAb0i2Q4OtS3QNAunR293EZDP5YerfZM=","Ft2rzm5t3TKp+KOmdIUe2JduD1PB9/bG9aKMywDZcxc=","BYHrplWgON5JbHhdMdZakZQEvCXwkip3S8OZpn/hIvc=","BldippdOt87YD/QrU0vFRe1s3ghD0lg+5wIrnOQP5vk=","F7/xpw42toSi7Z29lVMMvps4uH126utjNZ/9JQt4xeI=","GOaCie01IZSRcvBuilndmwdNw8nbyCA9j884GMcKGp0=","AqjY7gPV8DppwLDSsfNXknR7NCnwC24BH0oUE0Xlcks=","AwAkOr7UsY4GH7ERCrrGMo/1XcUxYjiPnbx1N0mUa48=","DyrOIYdxJc8ueKvpavt5/bXVcqNp8dpPLde1d29mUq8=","JrfpK59Ph3ayua8x7YUPyB3/GPcLFlyERydfbqXBuoc=","GHizpPrh05glOG+uXxmaGztfj1BFWrUAJRfL0ut7X6c=","AGLQ2J6We7b6TJh8CoP2W8x5XA6pd7bdY9Yl4G/7ClU=","CgOyeLJa4ufTGzEIKg0MxXyOekMvJM6f28zZNHXz0TU=","EA2hIOwq53KSHHwEuD7Y7naC0gd89HdACGyYDgTjj2s=","I0IiOyBaKwJ52eXwzn8Pm813KDmjTFLFfQdQvh5ROF8=","Lff0OXv8QtysWEgPVzFod/mqIbqQj3AVPfoZt+UvNu4=","I2IlhMhqirWfuvJWlIHZZNHhX4BzuvqMbpL8LAsYf7Y=","Br+AjM5lH1gaGrJSYdZrdPYEtwSAr2BUzEX4HaMpCsQ=","D1PJcnAs3uD5/KCnBQXLqvbJYFkJ3eA8/kwzczH9/XI=","KYixp5+NIml8DVG1N6mzCPl5eSscpHzECLi9i6b2eQ4=","DEG+AQxBiWCS90CTeR2QyFwEBPkoYfdLoXdt5toPPoM=","L4jBkqgioqCy8SyzSeFeorPzscg+or9UYauwEPgL8+8=","A6RDpLBwnr1AiRxZPtUoy56fZe7MQK8fIxV0t8lzgYk=","KPghHsGaTcGR91c3Ht+3iGlu/CsLWS1l2Al/OOcj8TE=","CruqfvI6XZhxDkKmab+kIwWt/B+OSeBbs6vclsjKc+w=","HwT7VKCe4t8oa2xeCJVguPph4GK8kPtymNUhNJEhGrA=","BnnBu7/X9NDywsGNgpSNBg81Y/KKGmMsmfLGSkYegmc=","K0TXDr6Web92gbLhoySeKbXYABCTZ6ekj//1PpaaE9Q=","I/P54AkTjwmYtT+EEJMwekGsOANI72YuNI3ignykmeM=","JIEacM66Un6mx/r1di9YE1kchlFw0oeaCLytSWsjIBw=","AapTWBH7sT/jFfQRzuA+IKSjxI7G2vp1/tDhI1LDS7s=","CuPfPk5ZyZmxZgb/OJAsdhY04rSdY+pxaSmmHotXMGs=","DsGsyquKduQ8SYTzgNL9Sh+Lu/SaFriJRn90JMsGlF4=","GxbvxXKcgVZZvLG+z9HhlIZW/63/B5eNE4tUNJ+Xt28=","EfsVFK4bA425dQgV2rXX7pKc+4BnSsxUG9BnmxH/B10=","A+igi88J7sHcLq2XhKkZgQzsZJk+tAzUk5nC6jHvJ/0=","Iy3AYXtgNcmPZv/EqJRdH4eN9eMljptUIXjWuhtoTkI=","ErLF1RoULX+KBUAiji/zzsd46R5P9wHe6iNexxQgR/I=","CdbyIorNudSgZXesn4928shY/1MblX+JuCKo0o33Dws=","JuYQGP5LPvbZZpVMdMY+HhWHeE4nbsGYIytl49HzttE=","C+6WNbmsUQCZucgt1iIgXGfxNhlyJlk5wMGX98SKDoA=","Lvx0VngrkCY/V4U+soB+Z6iM8V8sx1a39KlXC8w443k=","KD+y6NaxjsP0EV0EMXU+tvrP6Z8JnsZ5q9hWkX3CL44=","KIm4cO6YaI+u6IY6VISvy2eHSzOp8MF5S0apJj4YGrQ=","Bde9vz3w8B+6+cH72H8NjcNUh15FFnhHaupLDuDAFrw=","GyMSSjZ4Adk7j7/SIusn0UmuLumMa53DC7Kc47UB96c=","E/Vzuq7TKqY+8u5RydJamWzJzbMzv73SuV4qOjI7n00=","AP2GxjEq5TjFgMb75n4HU5ZDln8HXIHPxQTUoLUdTVI=","EdB+GQdI0V0ARHtMZTsFWIdnfR0MuJmkpwkOoHqgs5M=","G4++s8cVB3sKCU1241cC/+vEdA/syj+u6WCNRgwc3q8=","ApdCPiEYB4RSe9kL5j0CH76MS9uLIEOY7h3m89QfzDk=","Bp+tSy6vmp/UiRvl9PEo70zBHkWXysfFXjsr7e2MBaQ=","GzUfMOIEwhKl6oa33imbHfdE0HyP9/f0lEUUmFFgxJ0=","A8gUu3Bvc/kzuwPTv/g/tbeT2DjC3gAInV1YIYPJVKA=","JjwUgq+SZy8o5kyj1NxTdIYuLmCwLJ4vqV3sqdlbn8g=","INU2Mti9UkLZ3JrY+rxIxsYMb3GiNYB7GzvQ1C4YfAI=","ExKDOEbU0CHmuFRHjajZ1j8eH+NqCMapWVLuTRuCRX4=","I6vlmMvJcf8LZiXkQQGOH/hOoH7Fo32zrX/y4Y0e/fQ=","GJsTShqnLIBrqQ1wWA7nWNlowaCsvB1f06qYgedCt4Q=","IXOTlvgZPU7AFUy7MC1yJudWO4A9m2Y5p8oGVynYem0=","DRe9pbDysI8spHYPvI/sGclhwOuCGVZaIBfBm4/q3c8=","IpT9ILYqGFSBlUDlVgMCtFQDFI226YkL3gsKiD/hkJs=","K8qhIW1XN0dcAT28PYxU42vgGW3HHqCYGwFgk2nSBLw=","D/xi1Zy473HwPVt8/73z8eios5Bsj9Jbm6hbdW93TlI=","KCsplkSICQaMJfs0MNu1vbA46cOBDVVNerPKH7JbCOU=","Ixt3Z6TLsAiPzxVv/4xxy98Csn4x37z3WXr0n8yZ1hA=","DVLpcD1P0LQkY51LgXO8jucwvD2zyVncHx42c3ur6GU=","Do0SBfdokOlL60RglVrpe1vylWccsdCcWBuA0Mlyl1U=","CbXivIKKvvqTpQG/dcCmdob9igzxBv3PrWWo8guos2M=","CO5iC7c0IsazyVBqlz7Q91T52BBhSP1ibNWgTUOGgA4=","FN62iYOvK9s3a4czA+B/RnLXd5j4+opIGiLCI+s1fRk=","De2yMNlVy5sCuopYYBAETkxuyoNzGStf/9ElKSfOCbE=","FqbpAIDqGqTg0ZKqE/cBp4EUI3PA2amFpMpacObKIPo=","F8/kbtZEHu4ems+/z2ae+zhvJw0UJCmz0cao89mEz5M=","CdQ8vVQ0hrMWlLsfhW2HbPPxNbhqoOL0WImWaRIoDzE=","GBRXZC5pFlfVskFLeoG+tYQyqxyau1iMfhstofHoqpY=","FAUEYUg5/Rb5DxpaKknxnIsuCjoKxn0foqMc7UPzons=","EgSHBhyn0fo0DxGy1scRXq+5cVaVKUJBcbsdPxD7Kv0=","FnjqHJqfY/H/DR62X/fH1ccEsqDaw7FVBftFIkzM44c=","KYlkwoKNUqF2S0G1+0YHUq4birEI+8BwvRvhW7b67XM=","DOl7byd3w6Xrhv7GoOplqCPLm+5lJTFXoLlzOsakTAE=","Ao6BkjG1VB57UkPP9vBEti5uxfuK3t0rar+Hmt1fj9I=","HQSikXB3MHPDaAoNc7oHWegGMLuyeY9KbnfAA6FFttc=","KsMuXZB7ySF3lSW8ua1K4ajHgv8Kvu3tMnh+slJ1rdo=","H3YA5zbfg3QE8MMnIFz7kxzqSLsUcsoLRal0trWZi5U=","KSHcpcDcO9MX4MoVV+LnLG38SFb/9NcF94p+H1X1o+k=","FPgL/FIfULjXlFekwunXVT8/M8N2Se4YpDpICrLNW78=","La4FmsFwebFfa20N5kemzpr5zJtd9WWfFpvoJuCudFo=","J60fxtpUZbi5AT8MzpbbSvHdDRjieZtzzFQWNlCEptk=","E+qyP9At4BTjBVtKtCiBUJxrYl4ESI6O6ThVfGaIJh8=","GM+17HdesWg9t6cyeUXfRFAuRBoAgrv3YIJf3AUFTcM=","Jsu/vHGc8GV9mKb8p40lcq2yMBk4oewZv3NBeMIghlY=","DM/i+XbOK6QI5DHKMZ6Vv77tWSdB4Lsz2mOgP8hALT8=","Fzh81mghT3Nq9YLcv4bACoDct3JQvgMcLgIHE5HVN9U=","LZrPjqptFebaf/qxThY1PPc39+VYXvni5DrKxsyHl0I=","A5Okwe6DevrrEBFM7RL5a7kITdSkwnUNcA6Ha2yu+/k=","DwQHpxGLaRDdkJ6JSWa0JEDWFtpAPgoHs/hvS6gBHfg=","L3c1dl4nif1NBceDUMNca4SmmnTH9p4K+pk0Lxxs3Dk=","DbqReNLvavHgHNwt5+hVeEGMJq2/N20GPLa1sRgfQbQ=","IUT/1Wk5XIMHP4guz8oNjJQosyyUadt3YNN3hkn+J10=","KYQTfF4gEti9ebHVkIeRW5l6iq9WjfNVvPUx9AFDd6U=","CTTzshkSkc8+YxgiCHwZ+DWijMSbmHQngyJM5s7oWI8=","DgulkYqky8OMR2SKWyjYPHrC/2ikEn7OmINrVCmsMHg=","BJo3NKjiov8voKAeWmw8z+N9Cf7WyPXbp+9MRrXTO5w=","Kf/4GSEo+uvG+oQywVYrwBtyibP7UoXinRKjVWzArEk=","IgGCDePPpKohY3vHQq+qOcNhGVEzBZjmGtPc2BkIGOE=","CUghUnZX5xfcF3EnobEFMaKp0Y+RQaEujJ8C0ffsGh4=","ELWNqjbFbvLypN3hhpjichEvzAHmh2mGjp7xte27T8Y=","KdrWjOWIJLpdibez5+wf3ZXCU6a2qytsQY1TpX4+6PU=","HvddDfL+JJ5vzsbPVWmbvWFrux29s4TWqiH1xrV5Om8=","F1SRQmewsJqUhoX9fWBpLabGvJkNO9hsBdFAkTKSCjc=","D1k8mXrgqUJrT+MFS2BjU3SgSbxVr40Tc1oKkDkZpm4=","CqkYVMq2enoeKYKo5RWEWnGRNTD/Wu6YyR7r9542GCU=","EvLmU6c6kHc2e2q9416mjLoUEGKt59NYOwXaLI8Lqtg=","FpLDf5Zmf6YsYZ/hoOeavfhtm91yQXKCKNtgCf/b9Dc=","BOgzYgsTnVDgM9/tOzk5RXT2MTceMcK7DpxEq4oWhJA=","FPE9/T5Ygagg7OH+SERiixTaq5wPvv6IrNGJXENXZhk=","BFi3gzDXkCtOhPcMJQv6CBySuh3ili4ZyrYosYYI09k=","LFIHflutps71OXAZORcXJkFAuKmbfS/eUg7InTEZIxI=","Ad4vV8KBMyJkUAGVMa6G0WCg5ygJ8BWTwXceTsynojw=","CnYfzSNMK71mG814j1sUpe5CVRkLgf0xU8AD1ooxmac=","DryXThf3E/PqDYsS5GP9WvBFAUkGbW5yMi2NDh4baDE=","G5bgJBtyIakxJSFSVqtggTWyIU4vBMEno+RR1/j3eH4=","HfNiOoGs0XsOtFzuZjjR3R6Elm44zerYjKX5+QlvvM8=","II8Rk7dPSPUAIdHAzZd9vGpV4vaO8O8AAM0ho4zlvwg=","JGNSuzbrUS/082/Y33IEL2nPZ/F0RSGJihF7bvrseJU=","Aw6U/0AYpalyUwDydKYZ3kkBd9FATa2agpnvKeCwTxo=","H1I1QDXkSsBQ7obKYxwORetfdbRNbn8BsIBeKAZqzMo=","JlklDk8uzD08xaHHQ1WqAfK0w66sYH9983LBW4Xsvj4=","G+IxG3i1wSRvrYqMNG6D5sCCLfWVV1iLVRG06CHivyw=","BQm13k3/cy2kNDcpcrRm0RVNGU4QkVtDR9/QZlpyv58=","AyR2gIUKWGLAj7yw/vbHOd8eiAQ8Ol5zUx9oL5P46XU=","LREFQO/2h6lFAQ4EDcQEl6PRNguZBzur1pEVQdML5fM=","B7ohs61PEz9pYnshHBLzJE0atVOubWodqoiNAECwd3k=","IAd9tlFWqN+3wxYKgdYuEZsqhhEYvj3VCc3M7/2ojRA=","HP6iuJhLYrKPvWuNvhNCQOK8ENa7vTwvc6MIhxCwmXM=","FUm6l/xTiGdQbzSZKafRuGITiG6NKr+2D84DaHmP0pQ=","JGJSq3zzRemCcXIl+VTnTnMDzgybGySx3Ab+EP3O5KI=","K3UNd9qVd08r7hKbMU0cPdXjArZmwr6kbPiGWF1atts=","I2/UlHd0OV1/lCNSfFujTKvW96lQHM0zNTI0ki6JbhY=","GKSRev+7d1Fmf3Yp7Aha8akC6bVHGgLIngVnjWILsNA=","Asz7d/ndl9fmqLqe3kI2QhTFKgLIoKQgzNB2jfyhcaE=","GNtJtPmfaFkG93KTiYBoJXKDehNw8CPQ+jefzxweyFQ=","IEDcCeh3y6AE1AYbNwHGqSsD/KQcHcbr/1JcdqH59+s=","C+xcRJTAtd2728vG+oj0ODBVJbTAivWYYAVcH4tz7Nk=","KHnuxH5ylznR956D96ceYx7M7CyDtD2t1u5WhB+DofM=","AaUMOgGAWQQuXOlaeJkU5cKAC09O/hczbFsqIWQQAY0=","GVC5jCK488yFXBZ8fZu9/U6jeqyYsSsfsBclfD5/KT8=","E7dxDZIYwLFp7koSdnFSdM6aZGhzDS3ncxNJrRrp33w=","HvgNkIBe0oL6T14ShD7Uq8jyL1tZ8E7hM0kgmou1ge4=","E6vEgtQe8ituPQ25J2t1WZBEQ4r4lAtcjVjn3+gMRMU=","Jn1hZw5T3QNOeVuyDCCRIWOlgkhwnVq6ipXA369QsCw=","JEQc0c2BReQrRx+C5Pf5wo1FrCxV5OYNPmbXTotWORo=","A1X+iD91waQ1PBwNrO7y06camnTGIFMZnkMbj6gcuNI=","BVG1P8kq5jwrLsvfQM6TeiCV/OBkdILmSg/fUVz0Lqg=","KLaqpK7iVgcdmYi/8bzChO1op2FGIjkuU0ZabqkSWLw=","LfMdhH2//LBEQljmmHbtO3RjpJRUvmq2JQqERsagFwM=","G9IkU9NpUP8bobSbzEP5ydS6OIt4DEP0rTIWudqNoSY=","ITq+J5y4l/p0m26YGAocgiVVis2IZnvfoUBwuqZdyBI=","BIU6jq55DDTldRiT40upMgJNnFScendR1Ta+nMmva5Q=","FSQvvjFHfZ3gxDHSXQyONdSJ3NTJn933LE8K1MSS3U8=","EvYyPzHhRXYyiVep85NFHdyGiqV2ksoye8Whaek6ujk=","HdogNbdYDmO6soU13DkvJAhdWdC7+7VJkbo+6VY6GJk=","EyUbtzoo2ua9SYUB255sWMT51FjoaVWWZpss6QAHYp8=","AjHs7dKCgTag923c3cWPnLOnfKBcTA+5XdtpYEA5Eyg=","IAKnGpJvziah537kn2iEbDcbdMp63dZtp+xShrt8VKs=","LKtvD5i/EH80XiLb7xaxXq2UQHCYqTOtBZGzxFACOKU=","BAGnShe1FPBTLhubSqRCGt3+xyafk0h1s01Pc8+eh2w=","J8eL+j0kbahPzHZcqLAOzfa6yiyWd5ao6MjhxQG/W0M=","GO2YrNLI8UCtPVZifZ8Oi0HoTjDdHBZeQEPBxD4y9mM=","GI1R995w4hiFPESkDlBbOPRcrKjJLVCQ1HTy0BUw2xg=","GTC4mzMDE08fkAiA/Xw5x7oAqWqXL8T0Oxfhnj8fPUo=","H8yEJqSTZzYZnuaCnF872UfPYt0KkuetSvTLr7SQsKg=","LThHlx4zaETWJrbDntJT1plAAr0H7JRrUh4G6Zk6LUg=","JCF9aDuYydYwpwTDvEVQy/cOoU3U3XcKukW0H/OsAwE=","KK7yaeCj3uZaHfQ00bKtTcr46ECxodBns1OimG2U01o=","I4s9InoBKuE9/LbwsGURuaHX3d8AkymfBACoh6kOBw4=","GX16Y0k/Ies+mREZRMwTAmlGH3vYjTAvizV7t9aGgX0=","G9ysmI7bAKNQVWfe1vlEClQt8J4grrATxDlyu/s8p7Y=","EWkXEWO9zCwMi9nlax/KZuRL9h+SQzQ82x4THMA0sLU=","CrZqvLeGlDeyT6zs7hyJsY/40tAkBGv5eLhEoaXdEjs=","ILmlVaiznwz7xgMafM3mwRhavNBuP2+ixmhQOLh02rI=","Ay4HAo0f73a3zLncVP9PQdoQMf+olSxkpUN5g+g4zOg=","FXNpQ3MJW8MQbpK2tieuTH0P+OSZyy6kJtBE7tgYzwg=","AaYC39NS5D7LL2n8vVaLYKFAq1L6n2W1OvExI9URywQ=","Hiv0+ldOqQfv6yhfZ2a0oX2zW8thhshKBGAtQ4puMhY=","JQXI1BdznyHSFiEQ22Z3AXvdRunhBb1KPVYUfDcyegw=","DmVFSc19oVooCNBthhF5bAAChvp30C9qAjDevvyIwhU=","BvunMsYWx4KM7FV//s1uOuIq61LHKiEOAH/NxcN0AHk=","FlgyGtnD0KNjnvu54jr/MJUSWZ8N8lGZi7OwO3ylaSo=","KzMFLGGDh7i2Z3mby4Vmprb8Xizj+UQNAl/akVDUqCs=","FBCxrp2yGODKZU3nDwXOzHlTznEK76SIXwhjuOA0cMM=","GEjoDtFEk24xIt48cGz7cH6j/OMQR+Yyx5Y4qwHe4ek=","J6J//V58+h3FVB28lACFvT3FkLIUc9BThPjEY/srqTY=","KblBJvVTaojHY9AwGuNmq/JIa9MA2zEjdi3zy5PR2YY=","LVuWzdAsYQFKIo+rraWXpl4cV1d3IkgAmAK7pFC2BJw=","AgLFNQpqN8bxWREu+lFr6XDC+I4WwBqoRi1i7k5SBD4=","LKxxjYa7aLgM/D4Xy3QGCdQlqlR67hT5EFtNqUkNqN0=","KD4aOeisCxkTlD6GGKGcicXHS1jVkpmxH9En8Cz8mJE=","Eaa88O5rC59vYtwMSBaMrdV26NhjkPhcR0S9cOPB6Wc=","EmghdxQRGGrbVe1+WeWEgyu4w1RN7XIn6NcHpbNNYTc=","EwHSgKEr78AvmhPzqSUB2nIIJ5vAPZnnctpJDnrgack=","KOcpzZyicWz16CsMFUf/PEiVjMxJ+Ab5381vjZCy5CI=","EP+SZ8OxkfL7N0UNTgFaoTeyXxIpRDDpNujRJKH5jV0=","LBm0mdPcT4VF0xzKalimJAyyzVzgIEI5387dsrd9FCM=","L5JyeBLIYvWrJUOuiLtVOfymqXzTMfpOXgLvcjEBfuI=","K5vM6hjQP13k3Lmk8QrID7RL50b6W/MHJP4EwNV2gUs=","HIW7F2HZfkpXb69cU7m9tHmg+8N4GN2osqvLNl4Kc/k=","B9rp6H3zekAU0Rh4tJ4FcWKKIP8+ahAikdIRuPux6o8=","K5s73+NCmHk1ydeA3xPwYfbOmk5rRwzBvHx6qlMHUzI=","Eq2r4odJi+nd+rJO95m8Sb59WPBpy0m/AcnEsVBdBYY=","KyBqEaku21R0rnq2W4/oXUUD3jtvQzB2f5OOfGcGD8Y=","H1QMSDfEpKddj4MJNcbS5Ncx8jDdp7pQUqUNVyQ5wBk=","BU24cmBQr9oOigxrXq9fln2A/g5LhRecFj82lwcA0qc=","LOqa1Lr+E2zONJ/G6q4tsFBxEYtLgvJZignNyNsAWvY=","JS9pnqc51VZC74oitFtY7qjVWQD47X85H7Hwd9E/lPc=","HwYbBLX5J7IQjHtr55XDyTFJZRBwALE7tjKD9BklrYk=","CEWe6nOpSvNh08ZW51+X0n9vHkJQP86Oy7rxmikYaDU=","Gz1wD+f1GVPiJ1YE05HxNsH9qYaj0wIB7Q+hQCCKyBI=","KOVgKHmBlu1esNiO2QXVsMR+nWEQx1YypaLuioakhh0=","Cb2Q8jM8TCy9S/ft2t0f56keW5iQivpVl4HZiiV5RMg=","Fbwabmuq1fawwq4zeKJSsUKZ4K9m7MtrJmgUJ47RJ40=","GcUvDcyqRBmaf0/DO7R9Qdaggc82MX5/4Vno/msfCok=","JUe7X/INteDFkpg+VPyWLw9l9HhZiyzF/s1y8WlImpo=","HvC8pwA2878dfT8pTIsKEFdpEXJ5PFvmWLjVX45TN6U=","BBmNWOzc+vC5wtas7e9SU30QQxNrYkpaH1iKQM3spSs=","LF7fVl7SBl19BP731PfhsXIqLQZMAFSXJeBxWUfCb0s=","K7oz+9SosZ1sxShZJZN5o7Rqn6F8xcRXCVZQPvNOuLc=","Lpj62COrqap0Cq4ISGDwQIGljeObuxAe76EZzWpHH7A=","LSDCzQkKvQUzqgXksl7ZR56exLIetZx2VjcIO4epWSE=","EJZ77unaJQXNxTvlyYN2cujzcpxqeEsBOXnYq4o8Cok=","Eh+3rGhe8T90/4Kc0YrxQLvtJQ21iW8P/OukLV2AOj8=","AULghYdohOZXLIaJmKDqMXdvOKsw5sb/dMu+8UHckG4=","I8oEH/4SMfzKEtYwyNtZe9hEGRiVcU3RYj6vwgVsG8s=","GjB2e19PAdAMKwGkTwG18TalJY96UT1vfQYn93iXDVE=","G6D/ZTrmvYFXP615AVM8x5SAaqYW8aJjwG/N8HA510E=","CUpZRaiBhC2AZ7p36eaZzPx07oUXYg5rCQ9WJ7/XKT8=","IchPIyiDwEGgeOHPYI7B8woHuIWfbrju9yKfxryobwM=","EPg/5Ss4oJG/rQfey/KV6GEMYxEoc7sFt+8I9wQ/e84=","A3IzQB4D9ZBxkuR+cz95LBVSDH9Jdagod9tt6mOP1Ns=","ExdD9lvtot5+S8+qekvco50Gb5ydVxUp5i5/XOR1EqI=","LD5vtwBwI2bdRtN/llpFSGnWo/G479kM6pC+DcFd7sE=","C8oujdVxnySQaZ6sa/wrPnxlkTF8dv+xUW0SbOPsFiw=","CerS6+oSmlYCOvpy/xt3xuhnpy34GDn7dsJSP5RSIFo=","GaIQ1742Buv5rs2bDI86sLsECZWEvOWnrio1oPgIzmo=","G0TfBepG7BIxgYAI7M+DjmJ6+yzkt3mKqob2CcJCNjQ=","Dk2Xj6LtBQffpH3RVLUQBtJVeOGNbJ2D+HNeagy38cQ=","FU5NGlBvwMEAGfL4nRhvSvii0basOtqDHssA86klymo=","I/J/JGTBFvVaW3SCoc9ebHvJnxLij7rcb9SCYHLrduQ=","LfGWyS1TVYF4BcbMPKEClEDifbg7F/rkDDX+NRiVR1M=","K3qJrRQZ6F9NQU8aNy/spqq91p9yH2hPNP6CmyBIyNA=","IsKddIJIF6BCOrHXDVydUkmxahgQNFUGaef6NX2dwz0=","LURVm/ZTwRKRj7AzyBU73ORJsPHnaeRruR5frJfvfPE=","IdcPGBsyL3SrUMQy3flzah43OMTog2JYiUNNpQ2ITI8=","KkN7lw/zJkW9UwP5R0tXQ0JzM8ZmPRf0TZGOnyygBdQ="],M:[["GWt2zv3Mf2pUxx1AEUoLuCaUyTbxVzrHrB6j/M4f6Tg=","FEDcJXj0RpTRjCX4ktmMI8/bh6dyIAAg6JeCPUvITTs=","I67rDGSZuEv8Mq48Qt+XKHmP0u93TxUYuHC8V9E4WQA=","HtnT6Sdqy3tNrlProUiAb9m7B7LdBhhyEvq33L5j1yw=","L/V/P36VsDQR23kKhmR0Z1gRlxJNIXUg7y5jMqWzUYU=","Ffrvv4WEo4lptKcZ/+XwLCGRqMztoLd1FiID0wuAIIs=","Hm6qsRkVk94NicuyOZq4qpVdgprZWUKM1Tm+MLcv3pw=","KjuwIMilDTEO9bXHfMQIsHf+JIFFR1TEVo/2aP5fCXQ=","BR+BXEVLYBXH6/kMKXuQ6WBM02rMavB/mbXlH96zIjQ=","KLdcKsFn/fGEclMXx7u4CD5axbupN7z6bO/LaeQEi/A=","AjrzJFmWg9m3G2HQk9Y9y72X5ElXMz0ml/3QYMHktYU=","BaB4aKfJX1CgFYef583x62wxfk1InUUVII3fQKMjKeo=","LFtKZbxVrF++695Tzl+miIL67SqSp7P1cygyxy9/LDA=","Fz+JXkcsTrFqKv87jgQX+zK4PrHjIzRxx2oFUFBdBgc=","IGywOMwyhSbQw9xa8ZQ32DIZdRxe6PYbDp4vWIE2a+M=","AkDFeJcWFmbyjQALiNM1OSHZZ0IPQBzoa77kK+KHpPg=","Gq78Lpkl/NRTmW/agEBj/asnazfF9R39/vklW07BDMA="],["Ew/FRHf9lTN3/COrvXpBvmdkiSqHh8dZwUQP4BM8hS0=","Bl4TTLjYREfW6h4XkyvUo0Hr7yVoMTwkWU+vnX7KIRA=","DnbEA5K9X0WLwYe+VAmTEqD+//RLRBY3Ag65JnCm/PM=","C5gXZeyuad1687EP+kJLiusgbMT0klcmXGdTscxU688=","Dk+wRKn8tAh+NRNB8l2YsTmbV24tZlRTTzSCGaCs34Y=","MD45yojo2m5cljVkcS34p/hQGnr0qZDkzOwZ5fj8gF0=","Abd5ldvzDMVfnUzUhJztlJNJ2oEjmgFUQP2zi4dqvuU=","I2Q63TC+IEc00CnPA0yVgURVEGDBkBxCCijJaI7DaoA=","GUaiariVP5vlWBBfpRefF152okQp2tXVMsLOs8/qBck=","JItTP4deXujnUc76Sx0HMvzTAVHDpcxKu7sek7RlXUU=","LnocUdph3SFKF4nW8e4pV/adIbHxbR+UWOslpAZQC9M=","IGXjdO2x88u9KRncBNFK2wcGLdAewVAbhVIufg+vkl4=","LzZTWoOgnPCfw4ogpyVHeuxWZo8DSjZKn0pWBf/9M8w=","ESPTyX/45rWJ0Ri8QMoLmsEq6QlVjyWCVR96QjRbRiE=","FgswyHTZwGcEySwmbHpbf9lmpipdsAjxv/30Q7EJmoI=","E2HSfEKntL1urrmKM5WSYWwNTY/Orf2xZGgWK9+ojUY=","APHo+Ghgw7XHi8FN+2fSLGvriZISNliELyP3WuOpLpk="],["LJyR9IZhdxuu72d0V4p49pw1XI6QcVb98m2znSRGQT8=","LGsTPoCr74SQT6SnX5aPuqvviQKG1f0RuHoeUrfrbQ0=","LOhUbLWfQg7eYWkudk4On2cVsWosgEfNgTHJdkb1DSQ=","Ctrq8od2uBPVGPZFx5Ple/FgZ/2A65Id1aZ+iVZGycQ=","IIagG4FkOKKkHFnkPXP6mqzwwk5Pa6winWX7pZkiVUo=","I0hYDeSarAHOj8taorRn9nh92Klszs1vtH331aQwc5g=","H7a9bfZQ0n6MrAWsC0Xu8HAOMIsptL1B7s/1gCftxFw=","A+lxgjfBcA190hPgJvMH6AALOFFGf+2eb1H6UCDCNpw=","AJJa81ozZoAayAox1j90X6gHvaEFYDRa1XK+9M8s4NY=","D4aS1kpbaalWxOIAa/7DREd/318MmquGZgmEK511Jp0=","K9/n60+oA7wdwAUqRthQ7j4JHrqKfxJXloL29v1QRNQ=","E72swTe7z1HYvJ0oGTHW5xEi3G6T5//ouDXjOTd1w9Q=","B9eM4MHIc5GgagbIPTANUlJLKfGDiE4wDg6t2s0F8Gg=","CYTBMrKaBfK1BsoHwG/pplhPNruHUG0tMWpPNTysXx8=","GwD6qFE2sb/EluDqmmKEyuUlqpZhL/7rUUgIlVaTh54=","GeHkZTZwTOzqw+q5kb2AbjR75AoLeVbc1wNzUv28Q0c=","GcJUC7sc1OCPEFQ3BjyUXP7yiundULl+C3lfjcWuNOI="],["HewLr6PoGQYh5eCV73UeoDyDbbuARbKnP405fPuBUZI=","J8cjMvWaABNbqpS94pSRHRNdHZX1PFLrizuVWUN0kG0=","FuZGYRRNgWiFsy8/eAlwNHd4gmjVfBSx2TmiaynLfvM=","IBjbOGo+Tlfq2o2RQIsVUGHfBQFA+yL5pPNPtOLQJCg=","EiY7fj895giZosIv7pGZcs153Ciah/MfG0S68kOdyHw=","EOQg7cttp2Fwsk13fOnTFhLtsVk+ptMOjP2s+2l0+ZE=","DryzWPlfhLcZxjHUBFzvA6xvwjj2g0Uizr0C5HQRu28=","DEji8wT3MNSOg9rlx4pGGIUAvIBApJVC7qXvGiG50iI=","AOdm8Dr7t69jDqqK/0/mDzgQ8w8/RDhJjv4BhjM9rcA=","G4p5CdfnvU8LzIADlo44SsLotAWtBc9hA2TT7LmC234=","HZLkIT2ECjMOy9sIaT2/mpcbvWIpBH64igPzNMre8ic=","DTs/uGpEt0IkKaJJiEyFZErxl1ZBIG5hAHDALvWp9M0=","Jcfo+vbEihVsuR2BqZfGZz0yaUo/3WT16VlOn1BLrYM=","LXr4NMnN8bOMjP7SGPHvDOC5kI3p56p6VRDE+5F6AoE=","F1r15Q5Whewtuxz3os0l1FaA9s3faNfAeV3smLh/anE=","Eh9KGNe32WUKq2JevoaVqAeUOfKrAMCQJ53nRyYjTm4=","IfCPmzwj86AlGBFKlpKbbRBW600dsUfODIiC4bD3vRs="],["Cl9SrW7EqKo3fY3SrjqvbuoMaMY6HQNPvaZxM8oLhcs=","CHSI9zWx/i+jxscUjElo5/NHmxQYoaVmdDwcohXc/Pw=","Bs8NuS+GsnMu5fuIHvAXYBLcSt/YSbm+TeF4RqbOXZk=","BnxEEXRdtsaqZZ7HN6WGqPShzeA1LjCqAGN5SGX8HAQ=","GZCSQcrFAojA0SND4MEs+bl5C0Be8KkAGqa+AokGOqk=","AdJblLt8ScAXDuH7Klgktw5FVLzFS2yPjMDMnXTxml4=","AydOc12y+vGGeHUoJUJy7gGWfmrp2CUUE3i4NU2EOWU=","DKwyA2LiNbRY1tNkzQ//kU88BWrbsDjcKoYaSff3DiQ=","ERHtema6LM1L6g1D7shuo1q0AlOhIJ42N/ED3LhPxCk=","E+c2zHC3yCijjdY5Ts52ucza4spPQ5Y0MlAv6MKtGf8=","HygFCEl2sUL3x0pBb/Q5/xvNi457BXATAEB1SmG3GRI=","J6pQoOXVWIwUhujn/I3aZUif/7hmdWwhj4fnKAzd+mQ=","HzzG9l2dNDcIJaOP0fSPUJ98VhcbnnpiTZsOzfasTqs=","GxFxN5HqTLLhfIxYZ1AgQ9Coz5VThMHHk8UGt1/A2yk=","EEVg6VxJ/rt6Awhi7bOjPCsqPUFLBTay5U4lqzbo8oE=","CMRfPExIb2tTeMd5xge1FyALtwtVM72s7xhRn2Jbkls=","LSGTxne7zVanT8KuUKtPLMaap3zPwzx3B0UtWtrHfts="],["IKtzlL/as0TLtvISOACg4jUI4hJb/nlatKdnzstNkwY=","GfDi4UGJbq5tVtGCtoe4psZMu1ngMbdJ81gi/H7jU/4=","GPdUqVsK8ORwb/kCS7E1Fkq9b8Fu5AzC1oUtiKL/yfc=","GT/g6bSAEPoxnDO4a2sY9CjzI/ojfKkYo4+qqRuklWc=","AR/wkd1VG21YYgPuDK+uL3ZS6SOrqCV0pTtjKgZvSIQ=","HaPgBgHKP8DZCxl70qR0tG7+Ov87LPrx6+Ffoa+t8ts=","AE70GUVVnB+wshFssr4fBDv86NvJb+7MzaR8v2i+WbU=","LwU/3xpy1q2Mnfl6BNY3kW8l40JbbcM+mcp8rFzH5Mc=","Ha90hCx+eRBDSa05lZLFxMzhb3nhqG9Q2UFZh3LMqVM=","KujajQsSmiL4NNDSNMiRfC+Hf/ANwWIVSY1LdI+0DfE=","CZsKYzCSakoVZN/pT5oRBLuDdLtRioneCMWRwX36oFk=","C5rr8EEUbBGRmXV+qM7uWrzqnsQs2yi5IcryHoSEeFE=","BV7yceOIJ4sayjTTywARa9b3y1hLPGnw3ip6/I2Y3rg=","Jvvxo1GWP7vatZDb12DOYoQnNSWhtGxB8pImxlM59LM=","Ev1nhjsuA7b7RSJPsEH/KA6TZ0K1TI5U04I+CQ4UQWk=","AGAM8mY1stVGQxUHWJc5AQ0bdXzqrmF7+VuOHvqYZD0=","D1KPWRK+SUVdQyOyWeMM4phNgXBgHutL1wlrRzU6t/w="],["EQ6jIrDCZHbGe/osG50XE/k7O5z4Mgzg3NS2Qoi9oHo=","KZxH8ePsxVerHJq+NvDSug7OAQUeB/CFjpepzhb1Zk4=","HMBTpqTW+W2nfl5zrbnUm8TQ7yzC9p+t5IBAt/jXE4Y=","CVWOzFi+5PPFePYkid2QCECpiJCWwKYhFKotsEWh0DM=","CT19VWPjzNC18VqbCT/muGOqzM+a8R/+qbKVt91CsfY=","BF3AV5ymbn4JbU3Ya4guaK8tNdcM9eOxeDyqoOxCQlM=","DaAvZBDiQFih6QQSzVMCxXGX97GvKplJb5z/P/1YgI8=","Lftt1ZitpX6nGo1o5pJGCPDseDiAhojuSz/NUh975tI=","EFcGK0C9zx/iqu9FiYyHEUZ5mpLIfQ/OZDAta8gxct8=","JubRiup1qUhhoCMztTZM7Oqnit+7dCgXIYyjr2B7kQ4=","BWW5ZlkCWTXZwCXHqyCxYR2wC2fsxRQms0L4x6F/7YM=","J3a95SoSWUcsHMAg5xn4IZHew6t2mbfQ/Xad0/45KZc=","DBoyTEnRX4eTGCGYm4yEN+qetG7Tqs+Ilf0cwxEFPmA=","J+aFaOnP/Qf5JT7528NWJR3GstapA9bHBGtekOG83Jo=","HbDn4BciqtIQ5SlsNukQPoLRV2XDGBNNF3FGodn9U1g=","Cu+KTkfV7HYOBWWues2r5+jpiXLeht0vRHqvIWq0zBc=","CMAMTls0Z/AZAfZPn4nBW7C5CRjUiLcwyswylmkekgA="],["BU6r5hMWgfoB+8bb8+fVNZXQ+ICZhxghQriQrIr4nL4=","Gkvv4RwCMMYt5E/6/qDekDujKMbWevc2gDEraPms/9o=","AeQGZfW7jFwNycEfOdR+nTPnF6+jG6dPkvhzelXv4TQ=","I8Sr/rgxkjYqriGy6e5c/HZb8QAPeYw65wEzVWq8eL0=","FmnkS/AiOnf0j/+8n08gtYFPYYWuEaIQ+P38tfcdYD0=","LVs/UjqWaMvkiHiBv3tAGE+XhxPjWN4nDYemAOXFyS8=","EMGFbygvVW189tSik2IVBnJLptPFguTCYYQvKkvbDsY=","IsxDSfa6o6jgth/ECrlyEOS9Oz3sfwW7jvg5yEaSr7w=","EtAZ43zRvXb+4GW7c4CpvYMxpNvNHJx3Z5K8GQRcI7Y=","J6o4+gUcQ0GJ31e6/YByPuKb3M1Z+8GqmvEYkdNyLmE=","DwuTNttcFtRy/aP7msE7EzlMCaufSE7PatIGAhe1iWo=","J1pvWWIzVNcdOLTiAM4ulnaqt06ouDZvzjO9vEfQWG0=","Auu2cw17r+rCP8C0V+qCTu6jxV7KY0vySyrCqaIUg+E=","D/IV6x443GdDLiYt8n7afDqpQZ1bbimb2UjpcPw1pi8=","JH+cf6YQMiU1/rBnbP9UnxwXfQ050/Hu5kLpJTqvuC0=","KtC9n3HieFCEqguEYWt9raBTIHxBjmX0A1vmagzcjBI=","D8PM7wDWpkCAq77U/tkLacXlgDE0witCzcoKYPA+wzw="],["Ik2BH73vjsCgBtN2oBnlfJO9WWIToHgjt9Srzh/Y5iE=","FAdi0wxcOgsHULFACoap4vXPwlMbcpNw862f4dzUP5Y=","CXbXw4RLyN7qDwM3+JsqExMC/9LQqHAYHKX9X7bU+2M=","AVJgQgHKffBZlOnV8FjztnSc6mOqDLW04cOgC2ZnlY4=","GrbY/jn4e7DuW4g+6iclyqUsV1dA1awwsFj3cRPQUjk=","G2K6gDeoPxJhVEwwfwGdvqHMaoTUgeqJYLD8ZwdF6K4=","I5q8fJ+GauwoaFwm9OBGqS1DYNNstQiQ9CLhjtb4p7I=","Av7VoDIAQXZkU334+jAna4XZG9LtId4z2QH7TYJDmFc=","CZbK502WJ8o8VsZGCV85cwJ00l6CxCziHPeJJT1Io/A=","ME28CTaGI1bgAksqMt+jCFq+29M38iuJBivmFNg8sIM=","Kn3o9f9HbYHTk/HSdGNsqVbwW9QivJ88wPrABUtYywI=","Esb2yDo1MPrO1gyI8ZqC/RK32TinmGTtIKVFpS/c4R0=","IB4D8f9nJilHOiTzLS1QKs3I/dKIMBTedMmPQKGVs+Q=","EYw+/pIMnD+QfIZ3Q9NdLMv/fInpwxu2oXxVLvkrbAE=","D3Bf66XwHLJ7J8EEvJPwyXT1Yfom1WFPap2eR9A7xlU=","KNMnocLWAS2eaemjtMEa0zbTwNzf9MXITd3fkR62RfU=","G85n9NyZVH8sr/G1xtY+PuJWWkBBkGZFM8HGXdnY1TI="],["DmkfykIxKKfUr8qlgrGpR5m6H10qXVO8K7pWu+yyJ6E=","GAqkur+nU5dT2cIi5eM1mspZ4Gu+/Hzzo/+k+WH6HVs=","LFQofu42jV1S37BoKC1o5rCbdr0bXJMzs2hIrCd3RPU=","L2U2GkrtMg/NA6RcRN2nQCE1cfOXXOILlr/9lgy8biU=","I1vxeLW1YmLZiL/GJwiw+F1XOFzeK02s+ebVkt6yr+Q=","F5TsKw7rIvvXU7IfzZSee+2zBfFaWer3SpYcMEZjX4U=","CD4c1ZQ0YatQWyADEb3kAD+09+0WqljIvCjy4I6faSI=","IqZ6iHdpgtahX1d9z3gKxIXrqub99vvlC5XqJmp7YFk=","LRGI2efmrCTEssncPfz7D+R4LWifMblLH7Fe8p0R8Z4=","JlxDyIbwfQJSANVs0kawFnCz6Cq0gvWHmxBgjMBaN/w=","DybQXpOPgxe9YI7/CJXTUtynErZTsUkvjC6payb5OB4=","JXaJpOIvaodoqv5UIY0x3k5An9v0IxlYJTa7WDMTo5U=","HtxX8XThMitifG+dvieuJwPD8Rw2SzgYi/QdjKDBcJo=","F7OfOGNtXv9eBu/wietWBRpgK8j0vxuwrSss0QzwcTg=","MGCU7P5jMAsvlbyYoEBseJjYaFIzCntp+bBLVASz7vM=","Ea/syFWQVDvS34q5Ur4WRnCj8yWT6WLUvUk7zTyE+E0=","Gouk830jFTichWDXTaxXKkRHoCFFUWKHBT5rnt77yi0="],["GJ4nnJLeC6tmcH5ubjEFJOYVzUxqrMZlNyo7jjctjOY=","FyCOqc1Nwabe6+ao0noxgatfhsanBub9AH/B62eOneY=","Ioo0iMq7+fKe/AvOIRoJAxlys38l6jWsqEDcIzGgzzU=","IhIsYxP8mkxtD5RNPOI4JyvzUUext4iqsrjbzrYCTHY=","BmSaE+ZQI6cTqu5Th9OI42Ca6bFLpNoQZC7gt7ShZjQ=","HtTJXGKDtF7AzYj1EZdvBj6ivrBpW4r3zBBYlZOnl4w=","Ff5ippsEOClDldob/JMnLYh5fO7vZmuiRD8MFG+Kt+4=","KweaHQm51KdtTlDEXAH7dQixxEOo+yHr0oUz4F3viGQ=","DDRJan21q7MwsvbOmtrvWubjCMj8LFY0CXrjUqp0V9Q=","BP/iepLLQwDndDiO3DFHq53MSrNUw4D1HKei5/4EY8Q=","KLc7M1xy8HdIcaIDDUROX7lUl5wcVo4RL7kRpGxmZ2g=","GVghuZrywhdATuWC4piJByujzZlLdJVcJhta02Tlqcc=","IKVvzjcSK3QAq2GmXqyBXdGA9S+tKDX3/ZZJBjUjiB4=","I1EykS2y2gekdQxe1d8lkOcYQErvxIvmlTQy9kQkBC4=","EFnbXpfyWCawu+/Wv6pulJbFXvWoj+/pcSaR9vvfQpg=","CwUMiCBzpYHnZyI3Bc2VEMBMMBaMUP/gyYdaKLaTgpk=","EV5gxOKTfrU8bkpUiPgBJm6E0HVHoLHNkbGPSe/vmSA="],["HZvLvRe5OxkT0vec3xKEREEjcgbwKUdG2T+OW9zrRyU=","IAB6D103eYeJ4KjvaDU22c9IMaZWbrcntBGR2fKXRxA=","Frrkn167H/6Ia2NNIV3mHr9PRNHNxPhGcN+O1pMQv+I=","IpqltUemN4DY0SniCf25L4VmJhbVnakIB15mj9gXgi0=","KaWx5OLyVEVJat7CMO1To1mTs3YwrstdduVmCNG3jMY=","C/znsSAGi5owAp29s2vgHQcegWP6FyTxPGyom+Kbcp4=","IAVVaLMzZ7wSv0rtegkJwXNYildjxqGnWYunxsfjwqU=","LfH/hmRPzEKhkyzxXTFO7UB2CCRvFKgJhyX/e+gJyH4=","HU+w8Y8xyCcLRjbmtdejPkVbEFDeEWQYLPy3OczpZdo=","Gdbx0RDZ+HPbAC/y7YKJBb1sxdeSHCONdWnaqbJAHTI=","KCoB6PLOCcvdhi+Y/auj+a8CRD7cliyzSALQRHfeHiA=","MEtnkAjoofCUSEI6BYieDfZjorZQVcqe5amd/hP7mhY=","GZgUftrzqSqxecYawsNq9crz54vL+2hM/qFdsXuDWQc=","AopFcstlQmHPk1hDWSPmWv+PQDk3UnSLdqz9Lj9XVck=","Fb2ZjCcp2+rMwptdbk8P2WrQpgN8hKGhp4UWn7M2+24=","B83zMJ4TD5zt3WiK84hTafus9tikTeTUUGZ8DXZBIT8=","FS1HrLmwbJ0SwhOKMUFru7uZGmXcTU+O+Ro91yjmO2o="],["EXkYRjWpeA7hMS3MPRXH7wQrGK6UCWcOKMTH8PubYI4=","Ip2kQaMCkpsLrpN0G3x14RM3x5flch+dfuWSNc2ppAw=","Liadx49w+RA7K87T7b1B4VbmSRCIe03d+KPu6WD2Abc=","Iakf7YvtFJFMT9SRtvpNy657O4s9RWMDr4hsMoq/Rpk=","KfB8Hv/GW1WJ4cpSy+AL1l716WLQEgAwJnC23Oee6wA=","BQanpd5rVuvsXnCKcKPOyzos/SXnog7UleKVqTAjxag=","DAKxSPShVZtZfNMg8AwCuWp/x8g4Eb2GoeecwxBrIgE=","JKRm906ZpgKJT0IQEPQ6gccIsbStB2QlGQuFNH9oWxo=","H+4YiIQlcklwvSiXtUx/qOnDZ93byEhNo3hk+v+fkFY=","GXEcQddvZKNxq6YvP0ZxDe4MOq0he3ywC9EmE7JO9Ss=","J3DRSiIBUvpwgwQL6bPNOMis6eIHBzSGvPr8rXBnSLE=","CN/+aEqjP5EdNemmRLS9v80VpNpJtlMYFrYOjOT2teA=","HL+rfLBeLyglSyML/OAX8AX7Ty3Yk1rRF2WzR9IANmc=","IdcmmlPTcSsgVDsAOa7MlGZSATPSmehEIACzMYSjnoQ=","If3lgKGYhrEzWPGKMtWv9oW0vXfZTwZ/RPbnqTNQ/So=","BSMr+VgH5IrYKh60vEgemwcg6VGW3+Nh9VxNHPx5Jtc=","E2AmRriLoxwNVEx1e9kYFyeDXb5pDDBYOiPzf1L+Xj0="],["DkhGYYKugzOvGJGmqhlzZ0HtBoDVfJMe3hP8B66C6Is=","ETe1xhuWhL7EHk36p2Q4JWYipDeOpOZGooRLvIW/gcw=","H0uFVSuWDRwYt7j2avcwWmdz2bBfr1Hg7RpfLvL5Xn0=","C6ilSRSIb64WcAwC7993Z0E6C+xaGe0M8KfYrGDB8cM=","MCiclnjAMw+Fz442JoOmFE8iuEGqCPWG8hndntrveLw=","BIkASPzb3mNmdhzVj8xqwKM2DZpkIz0+pNjWvooj7EU=","GkFi6KdwREe+DB1NXPL3d2cPSEHqJ6wnCc1r/+7Szr0=","LpRLRJwTac6XZvpvT5modjC1wfLWNnekN6U31htsdHA=","Itbnh/RNqmtlk9/eVXbS/fXcBEfmWh1edxLk5iw73O4=","Dgjdtp1e/ZScPWceTnjk/HYoxl7Bz7wYumoQGqGdv2Y=","J6VzA2UJqKKakOqjTSra7V7R7GsgcnTzxcoj2tOIDlc=","ByNyCD9iGVvMK1r6sQOBmKPwVGti0XHqIcN8jzFVEXY=","FR4LwhEOQwDdgqTJJELEdRxlspRCbIwyDGnmGDGVjOs=","E/Gsw4nE+OdSzH5LgcN64hMMYN+ci36H3F+3RZyvSRY=","BoI6m6pVYjcysC+icLL4h/04BKhcGn8qNV3z++/GncE=","HkGTbmvAw+1mXC4kZquSFrmXP+E22fmq2Vh4wbVgfG4=","Bldm0pgDMaVcCjnYO+eL0Se67nfVOiQmjgZMcdqvK2o="],["HJ1W9xwvIsRNOowXv1tARS4FRx8Lbf6f/kcl6yn3NGQ=","ETADwdx7rzXkU2+V9Oqy87rdosehxrWvyVYjSt4+cSk=","DV+5sOFQPyuSaXxHO2nPdtOPwSkS4sPLM5ltuwzfqjg=","LhZKUk7iLrWokD+uHzWjp4+ILz46mJK2/0dTuqyTSUk=","AfncvefQWBNKUQpxHQNtHxgA5HOmOzOn4PsE3C4J468=","KFsgeZlwtYxjrJ9K9WTODyggm2GAIhTaW/r9DPJMZxI=","DOPdcn/dEai8cxUA7/ojdjCJzjMyy3MPn+VxRu4gSBA=","AQeXRspR2VGKDDCSlspIIGKSeYkQSUJ3viu2WmsTSzo=","I6hdT5Htpp8xDEUdfUgML0DA1TOC3dP8qq5ie5YXFw4=","JAZX1n+SteQmGs5DT9KGIGwxVWU3jOi4FmFSPw5t3FQ=","I4SjhLzCxKF/98nj59Ex05FzxDEzOpx8HW/XEQ4lkCs=","JVR7UbLGh05FOMqbNAk7cUrTao81bkx44NZrHxkAOPs=","DlnhqZDsAPcu3Dckg0nXpab3vK7xWBEEUPHlmF8KXZk=","BmxgkJNvawVPF96pFoKVQzKz4y2PIKCuFx1BcxbTYi8=","GyVmKEOwmGqxpOmnZhk+/KR8cNSTZPA9UMXttbVRfr4=","JkdjVHfuX6nnrFmD+S2zTXM2ZGxjxj4t1T1guHFL11k=","JtsuhakAbvXBHNZ1omfULv759a+QRmsqr3XuqAJLALs="],["IjRUb16FQej3KteUiRlQsysc2JHMZndcW2NZYWQunBU=","G2FGj6tZySXxmGGGvLl5ZahYUjolgtQ0MZqVJa5xFY8=","ARKR71FKENbwZR5K0NpdSkieMBiSeHnalC3v299wHd0=","LfL7LC4yHjzOE9FgkXBaQMXHlfi0G2Hf1q59l9Y1eLQ=","Abqvj/lrsiJLw0z4DDi/EwhvHkKbzuwSCQ2KfDdqmoI=","B7DXDM/xtw2tm7SwFC4/bcW8ldN2av+tN4zFBCSE3sk=","EfKO5dqA0Z4xWBtWakOVN0ZtnKf98UtwhoML2KwTxMs=","ABPXsD6Pyfpkf8ps3KlxRpAd98Z1oWSRPCvSo7buPLQ=","JEDnhheaf7z+jSmrGND8bPo4PPt0f3otFbd9gtmw2dM=","BWFJIhcSuI7CkfwhgyQULQKHPN1TGZZ5/OTfy13akRY=","FixbvIG0RCe+ToLF5SU71mwwVPXFtzsospI4SHhJp5Q=","F48qqN+aEe8zVY3Mk0lx92l+Ymz+8A/83rbzycGn0Qo=","JK/ZL4Dld4j0D7srefKUVNxIX7r7WnJj9GK3yEtOUAs=","BJKuX1rCpRAuqW5grIN1VTaHFRrkQELb9YmSMsjyEAo=","ENyxH4FcfinGa+HdPF92AsmOn7FofC2CW0h4nFIfvQs=","ChHVh8t11IVE7sZirSfKas/smPeot5Y6KU5LsymxcN8=","HdawlctoRZ3Pa9rdQ0qoH4ClWgjmeCxlOpOv2KZfMmc="],["FMCdFVxdQoGYwjS1U9ozjyJ8vBKw5C8rnOcVY+4UlcA=","EX/VKHcPsX9xjimi2Rpj7Hw57x3TA58JQ/cX0YBCU9U=","Eg50FtdDCOJAR/aCjGiuKLwoiyFuiiXosOvPc4SA45A=","BpleUQ/XZpN0w50nkD80KsW/ihRkgH8wi+9hC3bLaT4=","HYFLPBdlbCMn+UzAJHJ4C4hriDlPGly+NNxPRP8TT84=","A7kNo0sZjLyhfjSqyYsWmHXs9zrrXG/x8Ayf5TWqmQI=","J/p3oGWHkeZ1V4HDZ2g/nJMzpBNk94cO3/GTWjR0hdg=","BtbuUxuj/c7QXiTPkQPQli3SJ/HeaSwBmUg+kqskulk=","HlB5Ib58dhJIef/OW2LdDpYlnpjMZMJyCNYrQL/j5II=","BoGtrqec9FfbVwGTHw7i8V7LsVntUM90ahW4XG+KU3A=","HmGWFHUIvy7chyxOiXqWd3ixGfaftDGn9kbSAY6rQBA=","Bo76NbxiASSrfYiZAXG65BAq0h3937OH3w3gyKOhiek=","GwEiJKTwUN+EESLRfF6k7e18jsIDR0OkMqLO6JOXbyk=","II2BQVG83N38+DWpWMJZpkd7/kszknEO352AeHolxdA=","KPkB/KqGCw3EGSre+OpK5Vr2zkMsheDOTQc+UUqyQlI=","G9Y5h5cxgjyHH5zUcU48xWpusZiEtzZk7tJLEZKRGaA=","HT7oXwePvuzaJHPvwr7dG6fsb0eV+q6uOw3kjTCAxiU="]]};_16.default=_default;Object.defineProperty(poseidon16$1,"__esModule",{value:!0});poseidon16$1.poseidon16=poseidon16;var _poseidon=_interopRequireDefault(poseidon_1),_unstringify=_interopRequireDefault(unstringify),_$5=_interopRequireDefault(_16);function _interopRequireDefault(he){return he&&he.__esModule?he:{default:he}}const c$6=(0,_unstringify.default)(_$5.default);function poseidon16(he){return(0,_poseidon.default)(he,c$6)}(function(he){Object.defineProperty(he,"__esModule",{value:!0}),Object.defineProperty(he,"poseidon1",{enumerable:!0,get:function(){return fe.poseidon1}}),Object.defineProperty(he,"poseidon10",{enumerable:!0,get:function(){return Ae.poseidon10}}),Object.defineProperty(he,"poseidon11",{enumerable:!0,get:function(){return Se.poseidon11}}),Object.defineProperty(he,"poseidon12",{enumerable:!0,get:function(){return Le.poseidon12}}),Object.defineProperty(he,"poseidon13",{enumerable:!0,get:function(){return He.poseidon13}}),Object.defineProperty(he,"poseidon14",{enumerable:!0,get:function(){return Me.poseidon14}}),Object.defineProperty(he,"poseidon15",{enumerable:!0,get:function(){return Fe.poseidon15}}),Object.defineProperty(he,"poseidon16",{enumerable:!0,get:function(){return Ue.poseidon16}}),Object.defineProperty(he,"poseidon2",{enumerable:!0,get:function(){return le.poseidon2}}),Object.defineProperty(he,"poseidon3",{enumerable:!0,get:function(){return pe.poseidon3}}),Object.defineProperty(he,"poseidon4",{enumerable:!0,get:function(){return ge.poseidon4}}),Object.defineProperty(he,"poseidon5",{enumerable:!0,get:function(){return ye.poseidon5}}),Object.defineProperty(he,"poseidon6",{enumerable:!0,get:function(){return xe.poseidon6}}),Object.defineProperty(he,"poseidon7",{enumerable:!0,get:function(){return me.poseidon7}}),Object.defineProperty(he,"poseidon8",{enumerable:!0,get:function(){return we.poseidon8}}),Object.defineProperty(he,"poseidon9",{enumerable:!0,get:function(){return Ee.poseidon9}});var fe=poseidon1$1,le=poseidon2$1,pe=poseidon3$1,ge=poseidon4$1,ye=poseidon5$1,xe=poseidon6$1,me=poseidon7$1,we=poseidon8$1,Ee=poseidon9$1,Ae=poseidon10$1,Se=poseidon11$1,Le=poseidon12$1,He=poseidon13$1,Me=poseidon14$1,Fe=poseidon15$1,Ue=poseidon16$1})(poseidonLite);var e$3=[poseidonLite.poseidon1,poseidonLite.poseidon2,poseidonLite.poseidon3,poseidonLite.poseidon4,poseidonLite.poseidon5,poseidonLite.poseidon6,poseidonLite.poseidon7,poseidonLite.poseidon8,poseidonLite.poseidon9,poseidonLite.poseidon10,poseidonLite.poseidon11,poseidonLite.poseidon12,poseidonLite.poseidon13,poseidonLite.poseidon14,poseidonLite.poseidon15,poseidonLite.poseidon16],s$2=31,B$3=16,i$7=(B$3-1)*s$2;function x$4(he,fe){let le=new TextEncoder().encode(he);return $$2(le,fe)}function $$2(he,fe){if(he.length>fe)throw new Error(`Inputted bytes of length ${he} is longer than ${fe}`);let le=T$2(he,fe);return k$2(le)}function m$4(he,fe){if(he.length>fe)throw new Error(`Input bytes of length ${he} is longer than ${fe}`);let le=N$3(he,fe);return _$4(le)}function T$2(he,fe){if(he.length>fe)throw new Error(`Input bytes of length ${he} is longer than ${fe}`);return m$4(he,fe).concat([BigInt(he.length)])}function _$4(he){if(he.length>i$7)throw new Error(`Can't pack more than ${i$7}.  Was given ${he.length} bytes`);return P$2(he,s$2).map(fe=>L$4(fe))}function P$2(he,fe){let le=[];for(let pe=0;pe<he.length;pe+=fe)le.push(he.subarray(pe,pe+fe));return le}function L$4(he){let fe=BigInt(0);for(let le=he.length-1;le>=0;le-=1)fe=fe<<BigInt(8)|BigInt(he[le]);return fe}function C$3(he,fe){let le=new Uint8Array(fe);for(let pe=0;pe<fe;pe+=1)le[pe]=Number(he&BigInt(255)),he>>=BigInt(8);return le}function N$3(he,fe){if(fe<he.length)throw new Error("Padded size must be greater than or equal to the input array size.");let le=new Uint8Array(fe);le.set(he);for(let pe=he.length;pe<fe;pe+=1)le[pe]=0;return le}function k$2(he){if(he.length>e$3.length)throw new Error(`Unable to hash input of length ${he.length}.  Max input length is ${e$3.length}`);return e$3[he.length-1](he)}var e$2=class extends B$6{toString(){let fe=this.bcsToBytes();return i$c.fromHexInput(fe).toString()}},n$6=class{constructor(fe){this.buffer=new ArrayBuffer(fe.length),new Uint8Array(this.buffer).set(fe,0),this.offset=0}read(fe){if(this.offset+fe>this.buffer.byteLength)throw new Error("Reached to the end of buffer");let le=this.buffer.slice(this.offset,this.offset+fe);return this.offset+=fe,le}remaining(){return this.buffer.byteLength-this.offset}deserializeStr(){let fe=this.deserializeBytes();return new TextDecoder().decode(fe)}deserializeOptionStr(){return this.deserializeBool()?this.deserializeStr():void 0}deserializeOption(fe){return this.deserializeBool()?this.deserialize(fe):void 0}deserializeBytes(){let fe=this.deserializeUleb128AsU32();return new Uint8Array(this.read(fe))}deserializeFixedBytes(fe){return new Uint8Array(this.read(fe))}deserializeBool(){let fe=new Uint8Array(this.read(1))[0];if(fe!==1&&fe!==0)throw new Error("Invalid boolean value");return fe===1}deserializeU8(){return new DataView(this.read(1)).getUint8(0)}deserializeU16(){return new DataView(this.read(2)).getUint16(0,!0)}deserializeU32(){return new DataView(this.read(4)).getUint32(0,!0)}deserializeU64(){let fe=this.deserializeU32(),le=this.deserializeU32();return BigInt(BigInt(le)<<BigInt(32)|BigInt(fe))}deserializeU128(){let fe=this.deserializeU64(),le=this.deserializeU64();return BigInt(le<<BigInt(64)|fe)}deserializeU256(){let fe=this.deserializeU128(),le=this.deserializeU128();return BigInt(le<<BigInt(128)|fe)}deserializeUleb128AsU32(){let fe=BigInt(0),le=0;for(;fe<U$8;){let pe=this.deserializeU8();if(fe|=BigInt(pe&127)<<BigInt(le),!(pe&128))break;le+=7}if(fe>U$8)throw new Error("Overflow while parsing uleb128-encoded uint32 value");return Number(fe)}deserialize(fe){return fe.deserialize(this)}deserializeVector(fe){let le=this.deserializeUleb128AsU32(),pe=new Array;for(let ge=0;ge<le;ge+=1)pe.push(this.deserialize(fe));return pe}},c$5=class oi extends t$5{constructor(fe){super();let le=fe.constructor.name;switch(le){case m$6.name:this.publicKey=fe,this.variant=0;break;default:throw new Error(`Unsupported key for EphemeralPublicKey - ${le}`)}}toUint8Array(){return this.bcsToBytes()}verifySignature(fe){let{message:le,signature:pe}=fe;return this.publicKey.verifySignature({message:le,signature:pe.signature})}serialize(fe){if(this.publicKey instanceof m$6)fe.serializeU32AsUleb128(0),this.publicKey.serialize(fe);else throw new Error("Unknown public key type")}static deserialize(fe){let le=fe.deserializeUleb128AsU32();switch(le){case 0:return new oi(m$6.deserialize(fe));default:throw new Error(`Unknown variant index for EphemeralPublicKey: ${le}`)}}static isPublicKey(fe){return fe instanceof oi}},p$6=class ai extends o$b{constructor(fe){super();let le=fe.constructor.name;switch(le){case h$7.name:this.signature=fe;break;default:throw new Error(`Unsupported signature for EphemeralSignature - ${le}`)}}toUint8Array(){return this.bcsToBytes()}static fromHex(fe){let le=i$c.fromHexInput(fe),pe=new n$6(le.toUint8Array());return ai.deserialize(pe)}serialize(fe){if(this.signature instanceof h$7)fe.serializeU32AsUleb128(0),this.signature.serialize(fe);else throw new Error("Unknown signature type")}static deserialize(fe){let le=fe.deserializeUleb128AsU32();switch(le){case 0:return new ai(h$7.deserialize(fe));default:throw new Error(`Unknown variant index for EphemeralSignature: ${le}`)}}};class InvalidTokenError extends Error{}InvalidTokenError.prototype.name="InvalidTokenError";function b64DecodeUnicode(he){return decodeURIComponent(atob(he).replace(/(.)/g,(fe,le)=>{let pe=le.charCodeAt(0).toString(16).toUpperCase();return pe.length<2&&(pe="0"+pe),"%"+pe}))}function base64UrlDecode(he){let fe=he.replace(/-/g,"+").replace(/_/g,"/");switch(fe.length%4){case 0:break;case 2:fe+="==";break;case 3:fe+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return b64DecodeUnicode(fe)}catch{return atob(fe)}}function jwtDecode(he,fe){if(typeof he!="string")throw new InvalidTokenError("Invalid token specified: must be a string");fe||(fe={});const le=fe.header===!0?0:1,pe=he.split(".")[le];if(typeof pe!="string")throw new InvalidTokenError(`Invalid token specified: missing part #${le+1}`);let ge;try{ge=base64UrlDecode(pe)}catch(ye){throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${le+1} (${ye.message})`)}try{return JSON.parse(ge)}catch(ye){throw new InvalidTokenError(`Invalid token specified: invalid json for part #${le+1} (${ye.message})`)}}var F$4=120,L$3=30,N$2=330,o$8=class Yn extends a$7{constructor(fe,le){super();let pe=i$c.fromHexInput(le).toUint8Array();if(pe.length!==Yn.ID_COMMITMENT_LENGTH)throw new Error(`Id Commitment length in bytes should be ${Yn.ID_COMMITMENT_LENGTH}`);this.iss=fe,this.idCommitment=pe}authKey(){let fe=new n$8;return fe.serializeU32AsUleb128(3),fe.serializeFixedBytes(this.bcsToBytes()),c$m.fromSchemeAndBytes({scheme:2,input:fe.toUint8Array()})}toUint8Array(){return this.bcsToBytes()}toString(){return i$c.fromHexInput(this.toUint8Array()).toString()}verifySignature(fe){throw new Error("Not yet implemented")}serialize(fe){fe.serializeStr(this.iss),fe.serializeBytes(this.idCommitment)}static deserialize(fe){let le=fe.deserializeStr(),pe=fe.deserializeBytes();return new Yn(le,pe)}static load(fe){let le=fe.deserializeStr(),pe=fe.deserializeBytes();return new Yn(le,pe)}static isPublicKey(fe){return fe instanceof Yn}static create(fe){return _$3(fe),new Yn(fe.iss,_$3(fe))}static fromJwtAndPepper(fe){let{jwt:le,pepper:pe,uidKey:ge="sub"}=fe,ye=jwtDecode(le),xe=ye.iss;if(typeof ye.aud!="string")throw new Error("aud was not found or an array of values");let me=ye.aud,we=ye[ge];return Yn.create({iss:xe,uidKey:ge,uidVal:we,aud:me,pepper:pe})}static isInstance(fe){return"iss"in fe&&typeof fe.iss=="string"&&"idCommitment"in fe&&fe.idCommitment instanceof Uint8Array}};o$8.ID_COMMITMENT_LENGTH=32;var A$4=o$8;function _$3(he){let{uidKey:fe,uidVal:le,aud:pe,pepper:ge}=he,ye=[L$4(i$c.fromHexInput(ge).toUint8Array()),x$4(pe,F$4),x$4(le,N$2),x$4(fe,L$3)];return C$3(k$2(ye),A$4.ID_COMMITMENT_LENGTH)}var D$2=class ei extends o$b{constructor(fe){super();let{jwtHeader:le,ephemeralCertificate:pe,expiryDateSecs:ge,ephemeralPublicKey:ye,ephemeralSignature:xe}=fe;this.jwtHeader=le,this.ephemeralCertificate=pe,this.expiryDateSecs=ge,this.ephemeralPublicKey=ye,this.ephemeralSignature=xe}toUint8Array(){return this.bcsToBytes()}serialize(fe){this.ephemeralCertificate.serialize(fe),fe.serializeStr(this.jwtHeader),fe.serializeU64(this.expiryDateSecs),this.ephemeralPublicKey.serialize(fe),this.ephemeralSignature.serialize(fe)}static deserialize(fe){let le=h$6.deserialize(fe),pe=fe.deserializeStr(),ge=fe.deserializeU64(),ye=c$5.deserialize(fe),xe=p$6.deserialize(fe);return new ei({jwtHeader:pe,expiryDateSecs:Number(ge),ephemeralCertificate:le,ephemeralPublicKey:ye,ephemeralSignature:xe})}static getSimulationSignature(){return new ei({jwtHeader:"{}",ephemeralCertificate:new h$6(new S$2({proof:new f$7(new g$1({a:new Uint8Array(32),b:new Uint8Array(64),c:new Uint8Array(32)}),0),expHorizonSecs:0}),0),expiryDateSecs:0,ephemeralPublicKey:new c$5(new m$6(new Uint8Array(32))),ephemeralSignature:new p$6(new h$7(new Uint8Array(64)))})}static isSignature(fe){return fe instanceof ei}},h$6=class ss extends o$b{constructor(fe,le){super(),this.signature=fe,this.variant=le}toUint8Array(){return this.signature.toUint8Array()}serialize(fe){fe.serializeU32AsUleb128(this.variant),this.signature.serialize(fe)}static deserialize(fe){let le=fe.deserializeUleb128AsU32();switch(le){case 0:return new ss(S$2.deserialize(fe),le);default:throw new Error(`Unknown variant index for EphemeralCertificate: ${le}`)}}},c$4=class os extends B$6{constructor(fe){if(super(),this.data=i$c.fromHexInput(fe).toUint8Array(),this.data.length!==32)throw new Error("Input needs to be 32 bytes")}serialize(fe){fe.serializeFixedBytes(this.data)}static deserialize(fe){let le=fe.deserializeFixedBytes(32);return new os(le)}},l$9=class as extends B$6{constructor(fe){if(super(),this.data=i$c.fromHexInput(fe).toUint8Array(),this.data.length!==64)throw new Error("Input needs to be 64 bytes")}serialize(fe){fe.serializeFixedBytes(this.data)}static deserialize(fe){let le=fe.deserializeFixedBytes(64);return new as(le)}},g$1=class cs extends e$2{constructor(fe){super();let{a:le,b:pe,c:ge}=fe;this.a=new c$4(le),this.b=new l$9(pe),this.c=new c$4(ge)}serialize(fe){this.a.serialize(fe),this.b.serialize(fe),this.c.serialize(fe)}static deserialize(fe){let le=c$4.deserialize(fe).bcsToBytes(),pe=l$9.deserialize(fe).bcsToBytes(),ge=c$4.deserialize(fe).bcsToBytes();return new cs({a:le,b:pe,c:ge})}},f$7=class fs extends B$6{constructor(fe,le){super(),this.proof=fe,this.variant=le}serialize(fe){fe.serializeU32AsUleb128(this.variant),this.proof.serialize(fe)}static deserialize(fe){let le=fe.deserializeUleb128AsU32();switch(le){case 0:return new fs(g$1.deserialize(fe),le);default:throw new Error(`Unknown variant index for ZkProof: ${le}`)}}},S$2=class ci extends o$b{constructor(fe){super();let{proof:le,expHorizonSecs:pe,trainingWheelsSignature:ge,extraField:ye,overrideAudVal:xe}=fe;this.proof=le,this.expHorizonSecs=pe,this.trainingWheelsSignature=ge,this.extraField=ye,this.overrideAudVal=xe}toUint8Array(){return this.bcsToBytes()}static fromBytes(fe){return ci.deserialize(new n$6(fe))}serialize(fe){this.proof.serialize(fe),fe.serializeU64(this.expHorizonSecs),fe.serializeOptionStr(this.extraField),fe.serializeOptionStr(this.overrideAudVal),fe.serializeOption(this.trainingWheelsSignature)}static deserialize(fe){let le=f$7.deserialize(fe),pe=Number(fe.deserializeU64()),ge=fe.deserializeOptionStr(),ye=fe.deserializeOptionStr(),xe=fe.deserializeOption(p$6);return new ci({proof:le,expHorizonSecs:pe,trainingWheelsSignature:xe,extraField:ge,overrideAudVal:ye})}},z$1=class us{constructor(fe,le){this.verficationKey=fe,this.maxExpHorizonSecs=le}static create(fe,le){return new us(new K$3({alphaG1:fe.alpha_g1,betaG2:fe.beta_g2,deltaG2:fe.delta_g2,gammaAbcG1:fe.gamma_abc_g1,gammaG2:fe.gamma_g2}),le)}},K$3=class ls{constructor(fe){let{alphaG1:le,betaG2:pe,deltaG2:ge,gammaAbcG1:ye,gammaG2:xe}=fe;this.alphaG1=new c$4(le),this.betaG2=new l$9(pe),this.deltaG2=new l$9(ge),this.gammaAbcG1=[new c$4(ye[0]),new c$4(ye[1])],this.gammaG2=new l$9(xe)}static fromGroth16VerificationKeyResponse(fe){return new ls({alphaG1:fe.alpha_g1,betaG2:fe.beta_g2,deltaG2:fe.delta_g2,gammaAbcG1:fe.gamma_abc_g1,gammaG2:fe.gamma_g2})}};async function be(he){let{aptosConfig:fe}=he;return m$b(async()=>{let le=await O$1(he),pe=await j$1(he);return z$1.create(pe,Number(le.max_exp_horizon_secs))},`keyless-configuration-${fe.network}`,1e3*60*5)()}async function O$1(he){let{aptosConfig:fe,options:le}=he,pe="0x1::keyless_account::Configuration",{data:ge}=await m$d({aptosConfig:fe,originMethod:"getKeylessConfigurationResource",path:`accounts/${d$d.from("0x1").toString()}/resource/${pe}`,params:{ledger_version:le==null?void 0:le.ledgerVersion}});return ge.data}async function j$1(he){let{aptosConfig:fe,options:le}=he,pe="0x1::keyless_account::Groth16VerificationKey",{data:ge}=await m$d({aptosConfig:fe,originMethod:"getGroth16VerificationKeyResource",path:`accounts/${d$d.from("0x1").toString()}/resource/${pe}`,params:{ledger_version:le==null?void 0:le.ledgerVersion}});return ge.data}var f$6=class fi extends a$7{constructor(fe){if(super(),this.publicKey=fe,fe instanceof m$6)this.variant=0;else if(fe instanceof u$5)this.variant=1;else if(fe instanceof A$4)this.variant=3;else throw new Error("Unsupported public key type")}verifySignature(fe){let{message:le,signature:pe}=fe;return l$8.isInstance(pe)?this.publicKey.verifySignature({message:le,signature:pe.signature}):!1}authKey(){return c$m.fromSchemeAndBytes({scheme:2,input:this.toUint8Array()})}toUint8Array(){return this.bcsToBytes()}serialize(fe){fe.serializeU32AsUleb128(this.variant),this.publicKey.serialize(fe)}static deserialize(fe){let le=fe.deserializeUleb128AsU32(),pe;switch(le){case 0:pe=m$6.deserialize(fe);break;case 1:pe=u$5.deserialize(fe);break;case 3:pe=A$4.deserialize(fe);break;default:throw new Error(`Unknown variant index for AnyPublicKey: ${le}`)}return new fi(pe)}static isPublicKey(fe){return fe instanceof fi}isEd25519(){return this.publicKey instanceof m$6}isSecp256k1PublicKey(){return this.publicKey instanceof u$5}static isInstance(fe){return"publicKey"in fe&&"variant"in fe}},l$8=class ds extends o$b{constructor(fe){if(super(),this.signature=fe,fe instanceof h$7)this.variant=0;else if(fe instanceof m$5)this.variant=1;else if(fe instanceof D$2)this.variant=3;else throw new Error("Unsupported signature type")}toUint8Array(){return console.warn("[Aptos SDK] Calls to AnySignature.toUint8Array() will soon return the underlying signature bytes. Use AnySignature.bcsToBytes() instead."),this.bcsToBytes()}serialize(fe){fe.serializeU32AsUleb128(this.variant),this.signature.serialize(fe)}static deserialize(fe){let le=fe.deserializeUleb128AsU32(),pe;switch(le){case 0:pe=h$7.deserialize(fe);break;case 1:pe=m$5.deserialize(fe);break;case 3:pe=D$2.deserialize(fe);break;default:throw new Error(`Unknown variant index for AnySignature: ${le}`)}return new ds(pe)}static isInstance(fe){return"signature"in fe&&typeof fe.signature=="object"&&fe.signature!==null&&"toUint8Array"in fe.signature}};function d$5(he){let fe=he;return fe-=fe>>1&1431655765,fe=(fe&858993459)+(fe>>2&858993459),(fe+(fe>>4)&252645135)*16843009>>24}var f$5=class hs extends a$7{constructor(fe){super();let{publicKeys:le,signaturesRequired:pe}=fe;if(pe<1)throw new Error("The number of required signatures needs to be greater than 0");if(le.length<pe)throw new Error(`Provided ${le.length} public keys is smaller than the ${pe} required signatures`);this.publicKeys=le.map(ge=>ge instanceof f$6?ge:new f$6(ge)),this.signaturesRequired=pe}verifySignature(fe){throw new Error("not implemented")}authKey(){return c$m.fromSchemeAndBytes({scheme:3,input:this.toUint8Array()})}toUint8Array(){return this.bcsToBytes()}serialize(fe){fe.serializeVector(this.publicKeys),fe.serializeU8(this.signaturesRequired)}static deserialize(fe){let le=fe.deserializeVector(f$6),pe=fe.deserializeU8();return new hs({publicKeys:le,signaturesRequired:pe})}createBitmap(fe){let{bits:le}=fe,pe=128,ge=new Uint8Array([0,0,0,0]),ye=new Set;return le.forEach((xe,me)=>{if(me+1>this.publicKeys.length)throw new Error(`Signature index ${me+1} is out of public keys range, ${this.publicKeys.length}.`);if(ye.has(xe))throw new Error(`Duplicate bit ${xe} detected.`);ye.add(xe);let we=Math.floor(xe/8),Ee=ge[we];Ee|=pe>>xe%8,ge[we]=Ee}),ge}getIndex(fe){let le=fe instanceof f$6?fe:new f$6(fe),pe=this.publicKeys.findIndex(ge=>ge.toString()===le.toString());if(pe!==-1)return pe;throw new Error("Public key not found in MultiKey")}},s$1=class Nn extends o$b{constructor(fe){super();let{signatures:le,bitmap:pe}=fe;if(le.length>Nn.MAX_SIGNATURES_SUPPORTED)throw new Error(`The number of signatures cannot be greater than ${Nn.MAX_SIGNATURES_SUPPORTED}`);if(this.signatures=le.map(ye=>ye instanceof l$8?ye:new l$8(ye)),!(pe instanceof Uint8Array))this.bitmap=Nn.createBitmap({bits:pe});else{if(pe.length!==Nn.BITMAP_LEN)throw new Error(`"bitmap" length should be ${Nn.BITMAP_LEN}`);this.bitmap=pe}let ge=this.bitmap.reduce((ye,xe)=>ye+d$5(xe),0);if(ge!==this.signatures.length)throw new Error(`Expecting ${ge} signatures from the bitmap, but got ${this.signatures.length}`)}static createBitmap(fe){let{bits:le}=fe,pe=128,ge=new Uint8Array([0,0,0,0]),ye=new Set;return le.forEach(xe=>{if(xe>=Nn.MAX_SIGNATURES_SUPPORTED)throw new Error(`Cannot have a signature larger than ${Nn.MAX_SIGNATURES_SUPPORTED-1}.`);if(ye.has(xe))throw new Error("Duplicate bits detected.");ye.add(xe);let me=Math.floor(xe/8),we=ge[me];we|=pe>>xe%8,ge[me]=we}),ge}toUint8Array(){return this.bcsToBytes()}serialize(fe){fe.serializeVector(this.signatures),fe.serializeBytes(this.bitmap)}static deserialize(fe){let le=fe.deserializeVector(l$8),pe=fe.deserializeBytes();return new Nn({signatures:le,bitmap:pe})}};s$1.BITMAP_LEN=4,s$1.MAX_SIGNATURES_SUPPORTED=s$1.BITMAP_LEN*8;var p$5=s$1,r$2=class extends B$6{static deserialize(fe){let le=fe.deserializeUleb128AsU32();switch(le){case 0:return u$4.load(fe);case 1:return l$7.load(fe);case 2:return n$5.load(fe);case 3:return a$3.load(fe);default:throw new Error(`Unknown variant index for AccountAuthenticator: ${le}`)}}isEd25519(){return this instanceof u$4}isMultiEd25519(){return this instanceof l$7}isSingleKey(){return this instanceof n$5}isMultiKey(){return this instanceof a$3}},u$4=class ps extends r$2{constructor(fe,le){super(),this.public_key=fe,this.signature=le}serialize(fe){fe.serializeU32AsUleb128(0),this.public_key.serialize(fe),this.signature.serialize(fe)}static load(fe){let le=m$6.deserialize(fe),pe=h$7.deserialize(fe);return new ps(le,pe)}},l$7=class gs extends r$2{constructor(fe,le){super(),this.public_key=fe,this.signature=le}serialize(fe){fe.serializeU32AsUleb128(1),this.public_key.serialize(fe),this.signature.serialize(fe)}static load(fe){let le=d$6.deserialize(fe),pe=y$2.deserialize(fe);return new gs(le,pe)}},n$5=class ys extends r$2{constructor(fe,le){super(),this.public_key=fe,this.signature=le}serialize(fe){fe.serializeU32AsUleb128(2),this.public_key.serialize(fe),this.signature.serialize(fe)}static load(fe){let le=f$6.deserialize(fe),pe=l$8.deserialize(fe);return new ys(le,pe)}},a$3=class xs extends r$2{constructor(fe,le){super(),this.public_keys=fe,this.signatures=le}serialize(fe){fe.serializeU32AsUleb128(3),this.public_keys.serialize(fe),this.signatures.serialize(fe)}static load(fe){let le=f$5.deserialize(fe),pe=p$5.deserialize(fe);return new xs(le,pe)}},h$5=class ui{constructor(fe){this.signingScheme=2;let{privateKey:le,address:pe}=fe;this.privateKey=le,this.publicKey=new f$6(le.publicKey()),this.accountAddress=pe?d$d.from(pe):this.publicKey.authKey().derivedAddress()}static generate(fe={}){let{scheme:le=0}=fe,pe;switch(le){case 0:pe=U$2.generate();break;case 2:pe=v$4.generate();break;default:throw new Error(`Unsupported signature scheme ${le}`)}return new ui({privateKey:pe})}static fromDerivationPath(fe){let{scheme:le=0,path:pe,mnemonic:ge}=fe,ye;switch(le){case 0:ye=U$2.fromDerivationPath(pe,ge);break;case 2:ye=v$4.fromDerivationPath(pe,ge);break;default:throw new Error(`Unsupported signature scheme ${le}`)}return new ui({privateKey:ye})}verifySignature(fe){return this.publicKey.verifySignature(fe)}signWithAuthenticator(fe){return new n$5(this.publicKey,this.sign(fe))}signTransactionWithAuthenticator(fe){return new n$5(this.publicKey,this.signTransaction(fe))}sign(fe){return new l$8(this.privateKey.sign(fe))}signTransaction(fe){return this.sign(S$3(fe))}},c$3=class li{constructor(fe){this.signingScheme=0;let{privateKey:le,address:pe}=fe;this.privateKey=le,this.publicKey=le.publicKey(),this.accountAddress=pe?d$d.from(pe):this.publicKey.authKey().derivedAddress()}static generate(){let fe=U$2.generate();return new li({privateKey:fe})}static fromDerivationPath(fe){let{path:le,mnemonic:pe}=fe,ge=U$2.fromDerivationPath(le,pe);return new li({privateKey:ge})}verifySignature(fe){return this.publicKey.verifySignature(fe)}signWithAuthenticator(fe){return new u$4(this.publicKey,this.privateKey.sign(fe))}signTransactionWithAuthenticator(fe){return new u$4(this.publicKey,this.signTransaction(fe))}sign(fe){return this.privateKey.sign(fe)}signTransaction(fe){return this.sign(S$3(fe))}},o$7=class{static generate(fe={}){let{scheme:le=0,legacy:pe=!0}=fe;return le===0&&pe?c$3.generate():h$5.generate({scheme:le})}static fromPrivateKey(fe){let{privateKey:le,address:pe,legacy:ge=!0}=fe;return le instanceof U$2&&ge?new c$3({privateKey:le,address:pe}):new h$5({privateKey:le,address:pe})}static fromPrivateKeyAndAddress(fe){return this.fromPrivateKey(fe)}static fromDerivationPath(fe){let{scheme:le=0,mnemonic:pe,path:ge,legacy:ye=!0}=fe;return le===0&&ye?c$3.fromDerivationPath({mnemonic:pe,path:ge}):h$5.fromDerivationPath({scheme:le,mnemonic:pe,path:ge})}static authKey(fe){let{publicKey:le}=fe;return le.authKey()}verifySignature(fe){return this.publicKey.verifySignature(fe)}},d$4=(he,fe)=>{let le=he.bcsToBytes(),pe=typeof fe=="string"?Buffer$4.from(fe,"utf8"):fe,ge=new Uint8Array([...le,...pe,254]);return new d$d(sha3_256(ge))};async function R$1(he){let{aptosConfig:fe,accountAddress:le}=he,{data:pe}=await m$d({aptosConfig:fe,originMethod:"getInfo",path:`accounts/${d$d.from(le).toString()}`});return pe}async function Y$4(he){let{aptosConfig:fe,accountAddress:le,options:pe}=he;return A$9({aptosConfig:fe,originMethod:"getModules",path:`accounts/${d$d.from(le).toString()}/modules`,params:{ledger_version:pe==null?void 0:pe.ledgerVersion,start:pe==null?void 0:pe.offset,limit:(pe==null?void 0:pe.limit)??1e3}})}async function Z$3(he){var fe;return((fe=he.options)==null?void 0:fe.ledgerVersion)!==void 0?Q$1(he):m$b(async()=>Q$1(he),`module-${he.accountAddress}-${he.moduleName}`,1e3*60*5)()}async function Q$1(he){let{aptosConfig:fe,accountAddress:le,moduleName:pe,options:ge}=he,{data:ye}=await m$d({aptosConfig:fe,originMethod:"getModule",path:`accounts/${d$d.from(le).toString()}/module/${pe}`,params:{ledger_version:ge==null?void 0:ge.ledgerVersion}});return ye}async function ee$1(he){let{aptosConfig:fe,accountAddress:le,options:pe}=he;return A$9({aptosConfig:fe,originMethod:"getTransactions",path:`accounts/${d$d.from(le).toString()}/transactions`,params:{start:pe==null?void 0:pe.offset,limit:pe==null?void 0:pe.limit}})}async function oe$1(he){let{aptosConfig:fe,accountAddress:le,options:pe}=he;return A$9({aptosConfig:fe,originMethod:"getResources",path:`accounts/${d$d.from(le).toString()}/resources`,params:{ledger_version:pe==null?void 0:pe.ledgerVersion,start:pe==null?void 0:pe.offset,limit:(pe==null?void 0:pe.limit)??999}})}async function x$3(he){let{aptosConfig:fe,accountAddress:le,resourceType:pe,options:ge}=he,{data:ye}=await m$d({aptosConfig:fe,originMethod:"getResource",path:`accounts/${d$d.from(le).toString()}/resource/${pe}`,params:{ledger_version:ge==null?void 0:ge.ledgerVersion}});return ye.data}async function L$2(he){let{aptosConfig:fe,authenticationKey:le,options:pe}=he,ge=await x$3({aptosConfig:fe,accountAddress:"0x1",resourceType:"0x1::account::OriginatingAddress",options:pe}),{address_map:{handle:ye}}=ge,xe=d$d.from(le);try{let me=await b$7({aptosConfig:fe,handle:ye,data:{key:xe.toString(),key_type:"address",value_type:"address"},options:pe});return d$d.from(me)}catch(me){if(me instanceof n$b&&me.data.error_code==="table_item_not_found")return xe;throw me}}async function te$1(he){let{aptosConfig:fe,accountAddress:le}=he,pe={owner_address:{_eq:d$d.from(le).toStringLong()},amount:{_gt:0}},ge=await a$c({aptosConfig:fe,query:{query:p$a,variables:{where_condition:pe}},originMethod:"getAccountTokensCount"});return ge.current_token_ownerships_v2_aggregate.aggregate?ge.current_token_ownerships_v2_aggregate.aggregate.count:0}async function ne$1(he){let{aptosConfig:fe,accountAddress:le,options:pe}=he,ge={owner_address:{_eq:d$d.from(le).toStringLong()},amount:{_gt:0}};pe!=null&&pe.tokenStandard&&(ge.token_standard={_eq:pe==null?void 0:pe.tokenStandard});let ye={query:d$g,variables:{where_condition:ge,offset:pe==null?void 0:pe.offset,limit:pe==null?void 0:pe.limit,order_by:pe==null?void 0:pe.orderBy}};return(await a$c({aptosConfig:fe,query:ye,originMethod:"getAccountOwnedTokens"})).current_token_ownerships_v2}async function re(he){let{aptosConfig:fe,accountAddress:le,collectionAddress:pe,options:ge}=he,ye=d$d.from(le).toStringLong(),xe=d$d.from(pe).toStringLong(),me={owner_address:{_eq:ye},current_token_data:{collection_id:{_eq:xe}},amount:{_gt:0}};ge!=null&&ge.tokenStandard&&(me.token_standard={_eq:ge==null?void 0:ge.tokenStandard});let we={query:y$8,variables:{where_condition:me,offset:ge==null?void 0:ge.offset,limit:ge==null?void 0:ge.limit,order_by:ge==null?void 0:ge.orderBy}};return(await a$c({aptosConfig:fe,query:we,originMethod:"getAccountOwnedTokensFromCollectionAddress"})).current_token_ownerships_v2}async function se(he){let{aptosConfig:fe,accountAddress:le,options:pe}=he,ge={owner_address:{_eq:d$d.from(le).toStringLong()}};pe!=null&&pe.tokenStandard&&(ge.current_collection={token_standard:{_eq:pe==null?void 0:pe.tokenStandard}});let ye={query:c$p,variables:{where_condition:ge,offset:pe==null?void 0:pe.offset,limit:pe==null?void 0:pe.limit,order_by:pe==null?void 0:pe.orderBy}};return(await a$c({aptosConfig:fe,query:ye,originMethod:"getAccountCollectionsWithOwnedTokens"})).current_collection_ownership_v2_view}async function ce(he){let{aptosConfig:fe,accountAddress:le}=he,pe=d$d.from(le).toStringLong(),ge=await a$c({aptosConfig:fe,query:{query:m$e,variables:{address:pe}},originMethod:"getAccountTransactionsCount"});return ge.account_transactions_aggregate.aggregate?ge.account_transactions_aggregate.aggregate.count:0}async function ie(he){let{aptosConfig:fe,accountAddress:le,coinType:pe,faMetadataAddress:ge}=he,ye,xe;if(pe!==void 0&&ge!==void 0)xe=d$d.from(ge).toStringLong();else if(pe!==void 0&&ge===void 0)ye=pe,he.coinType===o$i?xe=d$d.A.toStringLong():xe=d$4(d$d.A,pe).toStringLong();else if(pe===void 0&&ge!==void 0){let Ae=d$d.from(ge);xe=Ae.toStringLong(),Ae===d$d.A&&(ye=o$i)}else throw new Error("Either coinType, fungibleAssetAddress, or both must be provided");let me=d$d.from(le).toStringLong(),we={asset_type:{_eq:xe}};pe!==void 0&&(we={asset_type:{_in:[ye,xe]}});let Ee=await B$2({aptosConfig:fe,accountAddress:me,options:{where:we}});return Ee[0]?Ee[0].amount:0}async function B$2(he){let{aptosConfig:fe,accountAddress:le,options:pe}=he,ge=d$d.from(le).toStringLong(),ye={...pe==null?void 0:pe.where,owner_address:{_eq:ge}},xe={query:u$b,variables:{where_condition:ye,offset:pe==null?void 0:pe.offset,limit:pe==null?void 0:pe.limit,order_by:pe==null?void 0:pe.orderBy}};return(await a$c({aptosConfig:fe,query:xe,originMethod:"getAccountCoinsData"})).current_fungible_asset_balances}async function ae(he){let{aptosConfig:fe,accountAddress:le}=he,pe=d$d.from(le).toStringLong(),ge=await a$c({aptosConfig:fe,query:{query:_$m,variables:{address:pe}},originMethod:"getAccountCoinsCount"});if(!ge.current_fungible_asset_balances_aggregate.aggregate)throw Error("Failed to get the count of account coins");return ge.current_fungible_asset_balances_aggregate.aggregate.count}async function de(he){let{aptosConfig:fe,accountAddress:le,options:pe}=he,ge={owner_address:{_eq:d$d.from(le).toStringLong()}},ye={query:v$6,variables:{where_condition:ge,offset:pe==null?void 0:pe.offset,limit:pe==null?void 0:pe.limit,order_by:pe==null?void 0:pe.orderBy}};return(await a$c({aptosConfig:fe,query:ye,originMethod:"getAccountOwnedObjects"})).current_objects}async function ue(he){let{aptosConfig:fe,privateKey:le}=he,pe=new f$6(le.publicKey());if(le instanceof v$4){let ge=c$m.fromPublicKey({publicKey:pe}).derivedAddress();return o$7.fromPrivateKey({privateKey:le,address:ge})}if(le instanceof U$2){let ge=c$m.fromPublicKey({publicKey:pe});if(await I$1({authKey:ge,aptosConfig:fe})){let xe=ge.derivedAddress();return o$7.fromPrivateKey({privateKey:le,address:xe,legacy:!1})}let ye=c$m.fromPublicKey({publicKey:pe.publicKey});if(await I$1({authKey:ye,aptosConfig:fe})){let xe=ye.derivedAddress();return o$7.fromPrivateKey({privateKey:le,address:xe,legacy:!0})}}throw new Error(`Can't derive account from private key ${le}`)}async function I$1(he){let{aptosConfig:fe,authKey:le}=he,pe=await L$2({aptosConfig:fe,authenticationKey:le.derivedAddress()});try{return await R$1({aptosConfig:fe,accountAddress:pe}),!0}catch(ge){if(ge.status===404)return!1;throw new Error(`Error while looking for an account info ${pe.toString()}`)}}var Y$3=new TextEncoder;function sn(he){return(he==null?void 0:he.map(fe=>l$b(fe)?j$2(fe):fe))??[]}async function W$3(he,fe,le,pe){let ge=await Z$3({aptosConfig:pe,accountAddress:he,moduleName:fe});if(ge.abi)return ge.abi.exposed_functions.find(ye=>ye.name===le)}async function fn$1(he,fe,le,pe){let ge=await W$3(he,fe,le,pe);if(!ge)throw new Error(`Could not find entry function ABI for '${he}::${fe}::${le}'`);if(!ge.is_entry)throw new Error(`'${he}::${fe}::${le}' is not an entry function`);let ye=W$4(ge),xe=[];for(let me=ye;me<ge.params.length;me+=1)xe.push(j$2(ge.params[me],{allowGenerics:!0}));return{signers:ye,typeParameters:ge.generic_type_params,parameters:xe}}async function on$1(he,fe,le,pe){let ge=await W$3(he,fe,le,pe);if(!ge)throw new Error(`Could not find view function ABI for '${he}::${fe}::${le}'`);if(!ge.is_view)throw new Error(`'${he}::${fe}::${le}' is not an view function`);let ye=[];for(let me=0;me<ge.params.length;me+=1)ye.push(j$2(ge.params[me],{allowGenerics:!0}));let xe=[];for(let me=0;me<ge.return.length;me+=1)xe.push(j$2(ge.return[me],{allowGenerics:!0}));return{typeParameters:ge.generic_type_params,parameters:ye,returnTypes:xe}}function cn(he,fe,le,pe,ge){if(pe>=fe.parameters.length)throw new Error(`Too many arguments for '${he}', expected ${fe.parameters.length}`);let ye=fe.parameters[pe];return U$1(le,ye,pe,ge)}function U$1(he,fe,le,pe){return $$3(he)?(p$4(fe,he,le),he):Z$2(he,fe,le,pe)}function Z$2(he,fe,le,pe){if(fe.isBool()){if(D$5(he))return new d$b(he);if(l$b(he)){if(he==="true")return new d$b(!0);if(he==="false")return new d$b(!1)}R$2("boolean",le)}if(fe.isAddress()){if(l$b(he))return d$d.fromString(he);R$2("string | AccountAddress",le)}if(fe.isU8()){let ge=P$3(he);if(ge!==void 0)return new U$6(ge);R$2("number | string",le)}if(fe.isU16()){let ge=P$3(he);if(ge!==void 0)return new p$8(ge);R$2("number | string",le)}if(fe.isU32()){let ge=P$3(he);if(ge!==void 0)return new b$5(ge);R$2("number | string",le)}if(fe.isU64()){if(w$1(he))return new y$4(BigInt(he));R$2("bigint | number | string",le)}if(fe.isU128()){if(w$1(he))return new m$8(BigInt(he));R$2("bigint | number | string",le)}if(fe.isU256()){if(w$1(he))return new B$5(BigInt(he));R$2("bigint | number | string",le)}if(fe.isGeneric()){let ge=fe.value;if(ge<0||ge>=pe.length)throw new Error(`Generic argument ${fe.toString()} is invalid for argument ${le}`);return U$1(he,pe[ge],le,pe)}if(fe.isVector()){if(fe.value.isU8()){if(l$b(he))return t$8.U8(Y$3.encode(he));if(he instanceof Uint8Array)return t$8.U8(he);if(he instanceof ArrayBuffer)return t$8.U8(new Uint8Array(he))}if(Array.isArray(he))return new t$8(he.map(ge=>U$1(ge,fe.value,le,pe)));throw new Error(`Type mismatch for argument ${le}, type '${fe.toString()}'`)}if(fe.isStruct()){if(fe.isString()){if(l$b(he))return new a$9(he);R$2("string",le)}if(fe.isObject()){if(l$b(he))return d$d.fromString(he);R$2("string | AccountAddress",le)}if(fe.isOption()){if(G$2(he)){let ge=fe.value.typeArgs[0];return ge instanceof c$n?new z$3(null):ge instanceof S$5?new z$3(null):ge instanceof u$7?new z$3(null):ge instanceof d$c?new z$3(null):ge instanceof g$4?new z$3(null):ge instanceof p$9?new z$3(null):ge instanceof z$4?new z$3(null):ge instanceof T$4?new z$3(null):new z$3(null)}return new z$3(U$1(he,fe.value.typeArgs[0],le,pe))}throw new Error(`Unsupported struct input type for argument ${le}, type '${fe.toString()}'`)}throw new Error(`Type mismatch for argument ${le}, type '${fe.toString()}'`)}function p$4(he,fe,le){if(he.isBool()){if(T$3(fe))return;R$2("Bool",le)}if(he.isAddress()){if(E$4(fe))return;R$2("AccountAddress",le)}if(he.isU8()){if(B$4(fe))return;R$2("U8",le)}if(he.isU16()){if(U$5(fe))return;R$2("U16",le)}if(he.isU32()){if(b$4(fe))return;R$2("U32",le)}if(he.isU64()){if(I$2(fe))return;R$2("U64",le)}if(he.isU128()){if(v$5(fe))return;R$2("U128",le)}if(he.isU256()){if(h$a(fe))return;R$2("U256",le)}if(he.isVector()){if(fe instanceof t$8){fe.values.length>0&&p$4(he.value,fe.values[0],le);return}R$2("MoveVector",le)}if(he instanceof b$6){if(he.isString()){if(x$6(fe))return;R$2("MoveString",le)}if(he.isObject()){if(E$4(fe))return;R$2("AccountAddress",le)}if(he.isOption()){if(fe instanceof z$3){fe.value!==void 0&&p$4(he.value.typeArgs[0],fe.value,le);return}R$2("MoveOption",le)}}throw new Error(`Type mismatch for argument ${le}, expected '${he.toString()}'`)}var n$4=class extends B$6{static deserialize(fe){let le=fe.deserializeUleb128AsU32();switch(le){case 0:return o$6.load(fe);case 1:return d$3.load(fe);case 2:return u$3.load(fe);case 3:return l$6.load(fe);case 4:return A$3.load(fe);default:throw new Error(`Unknown variant index for TransactionAuthenticator: ${le}`)}}},o$6=class ms extends n$4{constructor(fe,le){super(),this.public_key=fe,this.signature=le}serialize(fe){fe.serializeU32AsUleb128(0),this.public_key.serialize(fe),this.signature.serialize(fe)}static load(fe){let le=m$6.deserialize(fe),pe=h$7.deserialize(fe);return new ms(le,pe)}},d$3=class bs extends n$4{constructor(fe,le){super(),this.public_key=fe,this.signature=le}serialize(fe){fe.serializeU32AsUleb128(1),this.public_key.serialize(fe),this.signature.serialize(fe)}static load(fe){let le=d$6.deserialize(fe),pe=y$2.deserialize(fe);return new bs(le,pe)}},u$3=class ws extends n$4{constructor(fe,le,pe){super(),this.sender=fe,this.secondary_signer_addresses=le,this.secondary_signers=pe}serialize(fe){fe.serializeU32AsUleb128(2),this.sender.serialize(fe),fe.serializeVector(this.secondary_signer_addresses),fe.serializeVector(this.secondary_signers)}static load(fe){let le=r$2.deserialize(fe),pe=fe.deserializeVector(d$d),ge=fe.deserializeVector(r$2);return new ws(le,pe,ge)}},l$6=class Es extends n$4{constructor(fe,le,pe,ge){super(),this.sender=fe,this.secondary_signer_addresses=le,this.secondary_signers=pe,this.fee_payer=ge}serialize(fe){fe.serializeU32AsUleb128(3),this.sender.serialize(fe),fe.serializeVector(this.secondary_signer_addresses),fe.serializeVector(this.secondary_signers),this.fee_payer.address.serialize(fe),this.fee_payer.authenticator.serialize(fe)}static load(fe){let le=r$2.deserialize(fe),pe=fe.deserializeVector(d$d),ge=fe.deserializeVector(r$2),ye=d$d.deserialize(fe),xe=r$2.deserialize(fe),me={address:ye,authenticator:xe};return new Es(le,pe,ge,me)}},A$3=class As extends n$4{constructor(fe){super(),this.sender=fe}serialize(fe){fe.serializeU32AsUleb128(4),this.sender.serialize(fe)}static load(fe){let le=r$2.deserialize(fe);return new As(le)}},n$3=class vs extends B$6{constructor(fe,le){super(),this.raw_txn=fe,this.authenticator=le}serialize(fe){this.raw_txn.serialize(fe),this.authenticator.serialize(fe)}static deserialize(fe){let le=t$6.deserialize(fe),pe=n$4.deserialize(fe);return new vs(le,pe)}},o$5=class Bs extends B$6{constructor(fe,le){super(),this.rawTransaction=fe,this.feePayerAddress=le}serialize(fe){this.rawTransaction.serialize(fe),this.feePayerAddress===void 0?fe.serializeBool(!1):(fe.serializeBool(!0),this.feePayerAddress.serialize(fe))}static deserialize(fe){let le=t$6.deserialize(fe),pe=fe.deserializeBool(),ge;return pe&&(ge=d$d.deserialize(fe)),new Bs(le,ge)}},o$4=class Ss extends B$6{constructor(fe,le,pe){super(),this.rawTransaction=fe,this.feePayerAddress=pe,this.secondarySignerAddresses=le}serialize(fe){this.rawTransaction.serialize(fe),fe.serializeVector(this.secondarySignerAddresses),this.feePayerAddress===void 0?fe.serializeBool(!1):(fe.serializeBool(!0),this.feePayerAddress.serialize(fe))}static deserialize(fe){let le=t$6.deserialize(fe),pe=fe.deserializeVector(d$d),ge=fe.deserializeBool(),ye;return ge&&(ye=d$d.deserialize(fe)),new Ss(le,pe,ye)}};function t$4(he,fe){let le=fe.bcsToBytes(),pe=new n$6(le);return he.deserialize(pe)}var s={mainnet:"https://api.mainnet.aptoslabs.com/v1/graphql",testnet:"https://api.testnet.aptoslabs.com/v1/graphql",devnet:"https://api.devnet.aptoslabs.com/v1/graphql",local:"http://127.0.0.1:8090/v1/graphql"},o$3={mainnet:"https://api.mainnet.aptoslabs.com/v1",testnet:"https://api.testnet.aptoslabs.com/v1",devnet:"https://api.devnet.aptoslabs.com/v1",local:"http://127.0.0.1:8080/v1"},p$3={mainnet:"https://faucet.mainnet.aptoslabs.com",testnet:"https://faucet.testnet.aptoslabs.com",devnet:"https://faucet.devnet.aptoslabs.com",local:"http://127.0.0.1:8081"},a$2={mainnet:"https://api.mainnet.aptoslabs.com/keyless/pepper/v0",testnet:"https://api.testnet.aptoslabs.com/keyless/pepper/v0",devnet:"https://api.devnet.aptoslabs.com/keyless/pepper/v0",local:"https://api.devnet.aptoslabs.com/keyless/pepper/v0"},n$2={mainnet:"https://api.mainnet.aptoslabs.com/keyless/prover/v0",testnet:"https://api.testnet.aptoslabs.com/keyless/prover/v0",devnet:"https://api.devnet.aptoslabs.com/keyless/prover/v0",local:"https://api.devnet.aptoslabs.com/keyless/prover/v0"},e$1=(he=>(he.MAINNET="mainnet",he.TESTNET="testnet",he.DEVNET="devnet",he.LOCAL="local",he.CUSTOM="custom",he))(e$1||{}),r$1={mainnet:1,testnet:2,local:4};async function vn(he){if(O$2(he))return yn(he);let{moduleAddress:fe,moduleName:le,functionName:pe}=L$5(he.function),ge=await on({key:"entry-function",moduleAddress:fe,moduleName:le,functionName:pe,aptosConfig:he.aptosConfig,abi:he.abi,fetch:fn$1});return mn({...he,abi:ge})}function mn(he){let fe=he.abi,{moduleAddress:le,moduleName:pe,functionName:ge}=L$5(he.function),ye=sn(he.typeArguments);if(ye.length!==fe.typeParameters.length)throw new Error(`Type argument count mismatch, expected ${fe.typeParameters.length}, received ${ye.length}`);let xe=he.functionArguments.map((we,Ee)=>cn(he.function,fe,we,Ee,ye));if(xe.length!==fe.parameters.length)throw new Error(`Too few arguments for '${le}::${pe}::${ge}', expected ${fe.parameters.length} but got ${xe.length}`);let me=l$a.build(`${le}::${pe}`,ge,ye,xe);if("multisigAddress"in he){let we=d$d.from(he.multisigAddress);return new h$9(new f$a(we,new b$3(me)))}return new z$2(me)}async function Kn(he){let{moduleAddress:fe,moduleName:le,functionName:pe}=L$5(he.function),ge=await on({key:"view-function",moduleAddress:fe,moduleName:le,functionName:pe,aptosConfig:he.aptosConfig,abi:he.abi,fetch:on$1});return An({abi:ge,...he})}function An(he){var me;let fe=he.abi,{moduleAddress:le,moduleName:pe,functionName:ge}=L$5(he.function),ye=sn(he.typeArguments);if(ye.length!==fe.typeParameters.length)throw new Error(`Type argument count mismatch, expected ${fe.typeParameters.length}, received ${ye.length}`);let xe=((me=he==null?void 0:he.functionArguments)==null?void 0:me.map((we,Ee)=>cn(he.function,fe,we,Ee,ye)))??[];if(xe.length!==fe.parameters.length)throw new Error(`Too few arguments for '${le}::${pe}::${ge}', expected ${fe.parameters.length} but got ${xe.length}`);return l$a.build(`${le}::${pe}`,ge,ye,xe)}function yn(he){return new A$6(new U$4(i$c.fromHexInput(he.bytecode).toUint8Array(),sn(he.typeArguments),he.functionArguments))}async function fn(he){let{aptosConfig:fe,sender:le,payload:pe,options:ge,feePayerAddress:ye}=he,xe=async()=>r$1[fe.network]?{chainId:r$1[fe.network]}:{chainId:(await d$e({aptosConfig:fe})).chain_id},me=async()=>ge!=null&&ge.gasUnitPrice?{gasEstimate:ge.gasUnitPrice}:{gasEstimate:(await G$3({aptosConfig:fe})).gas_estimate},we=async()=>{let Fe=async()=>(ge==null?void 0:ge.accountSequenceNumber)!==void 0?ge.accountSequenceNumber:(await R$1({aptosConfig:fe,accountAddress:le})).sequence_number;if(ye&&d$d.from(ye).equals(d$d.ZERO))try{return await Fe()}catch{return 0}else return Fe()},[{chainId:Ee},{gasEstimate:Ae},Se]=await Promise.all([xe(),me(),we()]),{maxGasAmount:Le,gasUnitPrice:He,expireTimestamp:Me}={maxGasAmount:ge!=null&&ge.maxGasAmount?BigInt(ge.maxGasAmount):BigInt(2e5),gasUnitPrice:(ge==null?void 0:ge.gasUnitPrice)??BigInt(Ae),expireTimestamp:(ge==null?void 0:ge.expireTimestamp)??BigInt(Math.floor(Date.now()/1e3)+20)};return new t$6(d$d.from(le),BigInt(Se),pe,BigInt(Le),BigInt(He),BigInt(Me),new r$6(Ee))}async function On(he){var me;let{aptosConfig:fe,sender:le,payload:pe,options:ge,feePayerAddress:ye}=he,xe=await fn({aptosConfig:fe,sender:le,payload:pe,options:ge,feePayerAddress:ye});if("secondarySignerAddresses"in he){let we=((me=he.secondarySignerAddresses)==null?void 0:me.map(Ee=>d$d.from(Ee)))??[];return new o$4(xe,we,he.feePayerAddress?d$d.from(he.feePayerAddress):void 0)}return new o$5(xe,he.feePayerAddress?d$d.from(he.feePayerAddress):void 0)}function Vn(he){let{signerPublicKey:fe,transaction:le,secondarySignersPublicKeys:pe,feePayerPublicKey:ge}=he,ye=h$4(fe);if(le.feePayerAddress){let me=new p$7(le.rawTransaction,le.secondarySignerAddresses??[],le.feePayerAddress),we=[];pe&&(we=pe.map(Se=>h$4(Se)));let Ee=h$4(ge),Ae=new l$6(ye,le.secondarySignerAddresses??[],we,{address:le.feePayerAddress,authenticator:Ee});return new n$3(me.raw_txn,Ae).bcsToBytes()}if(le.secondarySignerAddresses){let me=new u$6(le.rawTransaction,le.secondarySignerAddresses),we=[];we=pe.map(Ae=>h$4(Ae));let Ee=new u$3(ye,le.secondarySignerAddresses,we);return new n$3(me.raw_txn,Ee).bcsToBytes()}let xe;if(ye instanceof u$4)xe=new o$6(ye.public_key,ye.signature);else if(ye instanceof n$5)xe=new A$3(ye);else throw new Error("Invalid public key");return new n$3(le.rawTransaction,xe).bcsToBytes()}function h$4(he){let fe=new h$7(new Uint8Array(64));if(m$6.isInstance(he))return new u$4(he,fe);if(f$6.isInstance(he))return A$4.isInstance(he.publicKey)?new n$5(he,new l$8(D$2.getSimulationSignature())):new n$5(he,new l$8(fe));if(A$4.isInstance(he)||u$5.isInstance(he))return console.warn("Expected AccountPublicKey, but got PublicKey. Please wrap your public key with AnyPublicKey."),new n$5(new f$6(he),new l$8(fe));throw new Error("Unsupported public key")}function gn(he){let{transaction:fe,feePayerAuthenticator:le,additionalSignersAuthenticators:pe}=he,ge=t$4(r$2,he.senderAuthenticator),ye;if(fe.feePayerAddress){if(!le)throw new Error("Must provide a feePayerAuthenticator argument to generate a signed fee payer transaction");ye=new l$6(ge,fe.secondarySignerAddresses??[],pe??[],{address:fe.feePayerAddress,authenticator:le})}else if(fe.secondarySignerAddresses){if(!pe)throw new Error("Must provide a additionalSignersAuthenticators argument to generate a signed multi agent transaction");ye=new u$3(ge,fe.secondarySignerAddresses,pe)}else ge instanceof u$4?ye=new o$6(ge.public_key,ge.signature):ye=new A$3(ge);return new n$3(fe.rawTransaction,ye).bcsToBytes()}function rn(he){let fe=sha3_256.create();for(let le of he)fe.update(le);return fe.digest()}rn(["APTOS::Transaction"]);async function on({key:he,moduleAddress:fe,moduleName:le,functionName:pe,aptosConfig:ge,abi:ye,fetch:xe}){return ye!==void 0?ye:m$b(async()=>xe(fe,le,pe,ge),`${he}-${ge.network}-${fe}-${le}-${pe}`,1e3*60*5)()}var S$1=1209600,i$6=class ti extends B$6{constructor(fe){super();let{privateKey:le,expiryDateSecs:pe,blinder:ge}=fe;this.privateKey=le,this.publicKey=new c$5(le.publicKey()),this.expiryDateSecs=pe||a$b(u$9()+S$1),this.blinder=ge!==void 0?i$c.fromHexInput(ge).toUint8Array():v$3();let ye=T$2(this.publicKey.bcsToBytes(),93);ye.push(BigInt(this.expiryDateSecs)),ye.push(L$4(this.blinder));let xe=k$2(ye);this.nonce=xe.toString()}getPublicKey(){return this.publicKey}isExpired(){return Math.floor(Date.now()/1e3)>this.expiryDateSecs}serialize(fe){fe.serializeU32AsUleb128(this.publicKey.variant),fe.serializeBytes(this.privateKey.toUint8Array()),fe.serializeU64(this.expiryDateSecs),fe.serializeFixedBytes(this.blinder)}static deserialize(fe){let le=fe.deserializeUleb128AsU32(),pe;switch(le){case 0:pe=U$2.deserialize(fe);break;default:throw new Error(`Unknown variant index for EphemeralPublicKey: ${le}`)}let ge=fe.deserializeU64(),ye=fe.deserializeFixedBytes(31);return new ti({privateKey:pe,expiryDateSecs:Number(ge),blinder:ye})}static fromBytes(fe){return ti.deserialize(new n$6(fe))}static generate(fe){let le;switch(fe==null?void 0:fe.scheme){case 0:default:le=U$2.generate()}return new ti({privateKey:le,expiryDateSecs:fe==null?void 0:fe.expiryDateSecs})}sign(fe){if(this.isExpired())throw new Error("EphemeralKeyPair has expired");return new p$6(this.privateKey.sign(fe))}};i$6.BLINDER_LENGTH=31;var o$2=i$6;function v$3(){return randomBytes$2(o$2.BLINDER_LENGTH)}var eventemitter3={exports:{}};(function(he){var fe=Object.prototype.hasOwnProperty,le="~";function pe(){}Object.create&&(pe.prototype=Object.create(null),new pe().__proto__||(le=!1));function ge(we,Ee,Ae){this.fn=we,this.context=Ee,this.once=Ae||!1}function ye(we,Ee,Ae,Se,Le){if(typeof Ae!="function")throw new TypeError("The listener must be a function");var He=new ge(Ae,Se||we,Le),Me=le?le+Ee:Ee;return we._events[Me]?we._events[Me].fn?we._events[Me]=[we._events[Me],He]:we._events[Me].push(He):(we._events[Me]=He,we._eventsCount++),we}function xe(we,Ee){--we._eventsCount===0?we._events=new pe:delete we._events[Ee]}function me(){this._events=new pe,this._eventsCount=0}me.prototype.eventNames=function(){var Ee=[],Ae,Se;if(this._eventsCount===0)return Ee;for(Se in Ae=this._events)fe.call(Ae,Se)&&Ee.push(le?Se.slice(1):Se);return Object.getOwnPropertySymbols?Ee.concat(Object.getOwnPropertySymbols(Ae)):Ee},me.prototype.listeners=function(Ee){var Ae=le?le+Ee:Ee,Se=this._events[Ae];if(!Se)return[];if(Se.fn)return[Se.fn];for(var Le=0,He=Se.length,Me=new Array(He);Le<He;Le++)Me[Le]=Se[Le].fn;return Me},me.prototype.listenerCount=function(Ee){var Ae=le?le+Ee:Ee,Se=this._events[Ae];return Se?Se.fn?1:Se.length:0},me.prototype.emit=function(Ee,Ae,Se,Le,He,Me){var Fe=le?le+Ee:Ee;if(!this._events[Fe])return!1;var Ue=this._events[Fe],qe=arguments.length,$e,Qe;if(Ue.fn){switch(Ue.once&&this.removeListener(Ee,Ue.fn,void 0,!0),qe){case 1:return Ue.fn.call(Ue.context),!0;case 2:return Ue.fn.call(Ue.context,Ae),!0;case 3:return Ue.fn.call(Ue.context,Ae,Se),!0;case 4:return Ue.fn.call(Ue.context,Ae,Se,Le),!0;case 5:return Ue.fn.call(Ue.context,Ae,Se,Le,He),!0;case 6:return Ue.fn.call(Ue.context,Ae,Se,Le,He,Me),!0}for(Qe=1,$e=new Array(qe-1);Qe<qe;Qe++)$e[Qe-1]=arguments[Qe];Ue.fn.apply(Ue.context,$e)}else{var ot=Ue.length,nt;for(Qe=0;Qe<ot;Qe++)switch(Ue[Qe].once&&this.removeListener(Ee,Ue[Qe].fn,void 0,!0),qe){case 1:Ue[Qe].fn.call(Ue[Qe].context);break;case 2:Ue[Qe].fn.call(Ue[Qe].context,Ae);break;case 3:Ue[Qe].fn.call(Ue[Qe].context,Ae,Se);break;case 4:Ue[Qe].fn.call(Ue[Qe].context,Ae,Se,Le);break;default:if(!$e)for(nt=1,$e=new Array(qe-1);nt<qe;nt++)$e[nt-1]=arguments[nt];Ue[Qe].fn.apply(Ue[Qe].context,$e)}}return!0},me.prototype.on=function(Ee,Ae,Se){return ye(this,Ee,Ae,Se,!1)},me.prototype.once=function(Ee,Ae,Se){return ye(this,Ee,Ae,Se,!0)},me.prototype.removeListener=function(Ee,Ae,Se,Le){var He=le?le+Ee:Ee;if(!this._events[He])return this;if(!Ae)return xe(this,He),this;var Me=this._events[He];if(Me.fn)Me.fn===Ae&&(!Le||Me.once)&&(!Se||Me.context===Se)&&xe(this,He);else{for(var Fe=0,Ue=[],qe=Me.length;Fe<qe;Fe++)(Me[Fe].fn!==Ae||Le&&!Me[Fe].once||Se&&Me[Fe].context!==Se)&&Ue.push(Me[Fe]);Ue.length?this._events[He]=Ue.length===1?Ue[0]:Ue:xe(this,He)}return this},me.prototype.removeAllListeners=function(Ee){var Ae;return Ee?(Ae=le?le+Ee:Ee,this._events[Ae]&&xe(this,Ae)):(this._events=new pe,this._eventsCount=0),this},me.prototype.off=me.prototype.removeListener,me.prototype.addListener=me.prototype.on,me.prefixed=le,me.EventEmitter=me,he.exports=me})(eventemitter3);var eventemitter3Exports=eventemitter3.exports;const EventEmitter=getDefaultExportFromCjs(eventemitter3Exports);var o$1=class Wn extends B$6{constructor(fe){super();let{address:le,ephemeralKeyPair:pe,uidKey:ge,uidVal:ye,aud:xe,pepper:me,proof:we,proofFetchCallback:Ee,jwt:Ae}=fe;if(this.ephemeralKeyPair=pe,this.publicKey=A$4.create(fe),this.accountAddress=le?d$d.from(le):this.publicKey.authKey().derivedAddress(),this.uidKey=ge,this.uidVal=ye,this.aud=xe,this.jwt=Ae,this.emitter=new EventEmitter,this.proofOrPromise=we,we instanceof S$2)this.proof=we;else{if(Ee===void 0)throw new Error("Must provide callback for async proof fetch");this.emitter.on("proofFetchFinish",async Le=>{await Ee(Le),this.emitter.removeAllListeners()}),this.init(we)}this.signingScheme=2;let Se=i$c.fromHexInput(me).toUint8Array();if(Se.length!==Wn.PEPPER_LENGTH)throw new Error(`Pepper length in bytes should be ${Wn.PEPPER_LENGTH}`);this.pepper=Se}async init(fe){try{this.proof=await fe,this.emitter.emit("proofFetchFinish",{status:"Success"})}catch(le){le instanceof Error?this.emitter.emit("proofFetchFinish",{status:"Failed",error:le.toString()}):this.emitter.emit("proofFetchFinish",{status:"Failed",error:"Unknown"})}}serialize(fe){if(fe.serializeStr(this.jwt),fe.serializeStr(this.uidKey),fe.serializeFixedBytes(this.pepper),this.ephemeralKeyPair.serialize(fe),this.proof===void 0)throw new Error("Connot serialize - proof undefined");this.proof.serialize(fe)}static deserialize(fe){let le=fe.deserializeStr(),pe=fe.deserializeStr(),ge=fe.deserializeFixedBytes(31),ye=o$2.deserialize(fe),xe=S$2.deserialize(fe);return Wn.create({proof:xe,pepper:ge,uidKey:pe,jwt:le,ephemeralKeyPair:ye})}isExpired(){return this.ephemeralKeyPair.isExpired()}signWithAuthenticator(fe){let le=new l$8(this.sign(fe)),pe=new f$6(this.publicKey);return new n$5(pe,le)}signTransactionWithAuthenticator(fe){let le=new l$8(this.signTransaction(fe)),pe=new f$6(this.publicKey);return new n$5(pe,le)}async waitForProofFetch(){this.proofOrPromise instanceof Promise&&await this.proofOrPromise}sign(fe){let{expiryDateSecs:le}=this.ephemeralKeyPair;if(this.isExpired())throw new Error("EphemeralKeyPair is expired");if(this.proof===void 0)throw new Error("Proof not defined");let pe=this.ephemeralKeyPair.getPublicKey(),ge=this.ephemeralKeyPair.sign(fe);return new D$2({jwtHeader:m$a(this.jwt.split(".")[0]),ephemeralCertificate:new h$6(this.proof,0),expiryDateSecs:le,ephemeralPublicKey:pe,ephemeralSignature:ge})}signTransaction(fe){if(this.proof===void 0)throw new Error("Proof not found");let le=d$9(fe),pe=new P$1(le,this.proof.proof).hash();return this.sign(pe)}verifySignature(fe){let{message:le,signature:pe}=fe;return!(this.isExpired()||!this.ephemeralKeyPair.getPublicKey().verifySignature({message:le,signature:pe.ephemeralSignature}))}static fromBytes(fe){return Wn.deserialize(new n$6(fe))}static create(fe){let{address:le,proof:pe,jwt:ge,ephemeralKeyPair:ye,pepper:xe,uidKey:me="sub",proofFetchCallback:we}=fe,Ee=jwtDecode(ge),Ae=Ee.iss;if(typeof Ee.aud!="string")throw new Error("aud was not found or an array of values");let Se=Ee.aud,Le=Ee[me];return new Wn({address:le,proof:pe,ephemeralKeyPair:ye,iss:Ae,uidKey:me,uidVal:Le,aud:Se,pepper:xe,jwt:ge,proofFetchCallback:we})}};o$1.PEPPER_LENGTH=31;var k$1=o$1,P$1=class extends B$6{constructor(fe,le){super(),this.domainSeparator="APTOS::TransactionAndProof",this.transaction=fe,this.proof=le}serialize(fe){fe.serializeFixedBytes(this.transaction.bcsToBytes()),fe.serializeOption(this.proof)}hash(){return n$7(this.bcsToBytes(),this.domainSeparator)}},l$5=class di{constructor(fe){let{multiKey:le,signers:pe}=fe;this.publicKey=le,this.signingScheme=3,this.accountAddress=this.publicKey.authKey().derivedAddress();let ge=[];for(let xe of pe)ge.push(this.publicKey.getIndex(xe.publicKey));let ye=pe.map((xe,me)=>[xe,ge[me]]);ye.sort((xe,me)=>xe[1]-me[1]),this.signers=ye.map(xe=>xe[0]),this.signerIndicies=ye.map(xe=>xe[1]),this.signaturesBitmap=this.publicKey.createBitmap({bits:ge})}static fromPublicKeysAndSigners(fe){let{publicKeys:le,signaturesRequired:pe,signers:ge}=fe,ye=new f$5({publicKeys:le,signaturesRequired:pe});return new di({multiKey:ye,signers:ge})}static isMultiKeySigner(fe){return fe instanceof di}signWithAuthenticator(fe){return new a$3(this.publicKey,this.sign(fe))}signTransactionWithAuthenticator(fe){return new a$3(this.publicKey,this.signTransaction(fe))}async waitForProofFetch(){let fe=this.signers.filter(le=>le instanceof k$1).map(async le=>le.waitForProofFetch());await Promise.all(fe)}sign(fe){let le=[];for(let pe of this.signers)le.push(pe.sign(fe));return new p$5({signatures:le,bitmap:this.signaturesBitmap})}signTransaction(fe){let le=[];for(let pe of this.signers)le.push(pe.signTransaction(fe));return new p$5({signatures:le,bitmap:this.signaturesBitmap})}verifySignature(fe){let{message:le,signature:pe}=fe;if(!this.signerIndicies.every((ge,ye)=>ye===0||ge>=this.signerIndicies[ye-1]))return!1;for(let ge=0;ge<pe.signatures.length;ge+=1){let ye=pe.signatures[ge];if(!this.publicKey.publicKeys[this.signerIndicies[ge]].verifySignature({message:le,signature:ye}))return!1}return!0}},c$2=class extends B$6{constructor(fe){super(),this.accountAddress=d$d.ONE,this.moduleName=new a$9("account"),this.structName=new a$9("RotationProofChallenge"),this.sequenceNumber=new y$4(fe.sequenceNumber),this.originator=fe.originator,this.currentAuthKey=fe.currentAuthKey,this.newPublicKey=t$8.U8(fe.newPublicKey.toUint8Array())}serialize(fe){fe.serialize(this.accountAddress),fe.serialize(this.moduleName),fe.serialize(this.structName),fe.serialize(this.sequenceNumber),fe.serialize(this.originator),fe.serialize(this.currentAuthKey),fe.serialize(this.newPublicKey)}};async function h$3(he){let fe=await D$1(he);return G$1(he,fe)}async function D$1(he){let{aptosConfig:fe,data:le}=he,pe,ge;return"bytecode"in le?ge=await vn(le):"multisigAddress"in le?(pe={aptosConfig:fe,multisigAddress:le.multisigAddress,function:le.function,functionArguments:le.functionArguments,typeArguments:le.typeArguments,abi:le.abi},ge=await vn(pe)):(pe={aptosConfig:fe,function:le.function,functionArguments:le.functionArguments,typeArguments:le.typeArguments,abi:le.abi},ge=await vn(pe)),ge}async function G$1(he,fe){let{aptosConfig:le,sender:pe,options:ge}=he,ye;if(K$2(he)&&(ye=d$d.ZERO.toString()),U(he)){let{secondarySignerAddresses:xe}=he;return On({aptosConfig:le,sender:pe,payload:fe,options:ge,secondarySignerAddresses:xe,feePayerAddress:ye})}return On({aptosConfig:le,sender:pe,payload:fe,options:ge,feePayerAddress:ye})}function K$2(he){return he.withFeePayer===!0}function U(he){return"secondarySignerAddresses"in he}function Y$2(he){let{transaction:fe}=he;return S$3(fe)}function _$2(he){let{signer:fe,transaction:le}=he;return fe.signTransactionWithAuthenticator(le)}async function $$1(he){var Ee,Ae,Se;let{aptosConfig:fe,transaction:le,signerPublicKey:pe,secondarySignersPublicKeys:ge,feePayerPublicKey:ye,options:xe}=he,me=Vn({transaction:le,signerPublicKey:pe,secondarySignersPublicKeys:ge,feePayerPublicKey:ye,options:xe}),{data:we}=await q$1({aptosConfig:fe,body:me,path:"transactions/simulate",params:{estimate_gas_unit_price:((Ee=he.options)==null?void 0:Ee.estimateGasUnitPrice)??!1,estimate_max_gas_amount:((Ae=he.options)==null?void 0:Ae.estimateMaxGasAmount)??!1,estimate_prioritized_gas_unit_price:((Se=he.options)==null?void 0:Se.estimatePrioritizedGasUnitPrice)??!1},originMethod:"simulateTransaction",contentType:"application/x.aptos.signed_transaction+bcs"});return we}async function B$1(he){let{aptosConfig:fe}=he,le=gn({...he}),{data:pe}=await q$1({aptosConfig:fe,body:le,path:"transactions",originMethod:"submitTransaction",contentType:"application/x.aptos.signed_transaction+bcs"});return pe}async function M$3(he){let{aptosConfig:fe,signer:le,transaction:pe}=he;(le instanceof k$1||le instanceof l$5)&&await le.waitForProofFetch();let ge=_$2({signer:le,transaction:pe});return B$1({aptosConfig:fe,transaction:pe,senderAuthenticator:ge})}var N$1={typeParameters:[],parameters:[y$5.u8(),new y$5(y$5.u8())]};async function nn(he){let{aptosConfig:fe,account:le,metadataBytes:pe,moduleBytecode:ge,options:ye}=he,xe=ge.map(me=>t$8.U8(me));return h$3({aptosConfig:fe,sender:d$d.from(le),data:{function:"0x1::code::publish_package_txn",functionArguments:[t$8.U8(pe),new t$8(xe)],abi:N$1},options:ye})}var F$3={typeParameters:[],parameters:[new u$7,y$5.u8(),new u$7,y$5.u8(),y$5.u8(),y$5.u8()]};async function tn(he){let{aptosConfig:fe,fromAccount:le,toNewPrivateKey:pe}=he,ge=await R$1({aptosConfig:fe,accountAddress:le.accountAddress}),ye=o$7.fromPrivateKey({privateKey:pe,legacy:!0}),xe=new c$2({sequenceNumber:BigInt(ge.sequence_number),originator:le.accountAddress,currentAuthKey:d$d.from(ge.authentication_key),newPublicKey:ye.publicKey}).bcsToBytes(),me=le.sign(xe),we=ye.sign(xe),Ee=await h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x1::account::rotate_authentication_key",functionArguments:[new U$6(le.signingScheme),t$8.U8(le.publicKey.toUint8Array()),new U$6(ye.signingScheme),t$8.U8(ye.publicKey.toUint8Array()),t$8.U8(me.toUint8Array()),t$8.U8(we.toUint8Array())],abi:F$3}});return M$3({aptosConfig:fe,signer:le,transaction:Ee})}var i$5=class{constructor(fe){this.config=fe}async simple(fe){return $$1({aptosConfig:this.config,...fe})}async multiAgent(fe){return $$1({aptosConfig:this.config,...fe})}};j$4([u$8],i$5.prototype,"simple"),j$4([u$8],i$5.prototype,"multiAgent");var n$1=class{constructor(fe){this.config=fe}async simple(fe){return B$1({aptosConfig:this.config,...fe})}async multiAgent(fe){return B$1({aptosConfig:this.config,...fe})}};j$4([o$h],n$1.prototype,"simple"),j$4([o$h],n$1.prototype,"multiAgent");var o=class{constructor(he){this.config=he}async simple(he){return h$3({aptosConfig:this.config,...he})}async multiAgent(he){return h$3({aptosConfig:this.config,...he})}},r=class{constructor(he,fe,le,pe,ge){this.lastUncommintedNumber=null,this.currentNumber=null,this.lock=!1,this.aptosConfig=he,this.account=fe,this.maxWaitTime=le,this.maximumInFlight=pe,this.sleepTime=ge}async nextSequenceNumber(){for(;this.lock;)await c$o(this.sleepTime);this.lock=!0;let he=BigInt(0);try{if((this.lastUncommintedNumber===null||this.currentNumber===null)&&await this.initialize(),this.currentNumber-this.lastUncommintedNumber>=this.maximumInFlight){await this.update();let fe=u$9();for(;this.currentNumber-this.lastUncommintedNumber>=this.maximumInFlight;)await c$o(this.sleepTime),u$9()-fe>this.maxWaitTime?(console.warn(`Waited over 30 seconds for a transaction to commit, resyncing ${this.account.accountAddress.toString()}`),await this.initialize()):await this.update()}he=this.currentNumber,this.currentNumber+=BigInt(1)}catch(fe){console.error("error in getting next sequence number for this account",fe)}finally{this.lock=!1}return he}async initialize(){let{sequence_number:he}=await R$1({aptosConfig:this.aptosConfig,accountAddress:this.account.accountAddress});this.currentNumber=BigInt(he),this.lastUncommintedNumber=BigInt(he)}async update(){let{sequence_number:he}=await R$1({aptosConfig:this.aptosConfig,accountAddress:this.account.accountAddress});return this.lastUncommintedNumber=BigInt(he),this.lastUncommintedNumber}async synchronize(){if(this.lastUncommintedNumber!==this.currentNumber){for(;this.lock;)await c$o(this.sleepTime);this.lock=!0;try{await this.update();let he=u$9();for(;this.lastUncommintedNumber!==this.currentNumber;)u$9()-he>this.maxWaitTime?(console.warn(`Waited over 30 seconds for a transaction to commit, resyncing ${this.account.accountAddress.toString()}`),await this.initialize()):(await c$o(this.sleepTime),await this.update())}catch(he){console.error("error in synchronizing this account sequence number with the one on chain",he)}finally{this.lock=!1}}}},i$4=class{constructor(){this.queue=[],this.pendingDequeue=[],this.cancelled=!1}enqueue(fe){var le;if(this.cancelled=!1,this.pendingDequeue.length>0){(le=this.pendingDequeue.shift())==null||le.resolve(fe);return}this.queue.push(fe)}async dequeue(){return this.queue.length>0?Promise.resolve(this.queue.shift()):new Promise((fe,le)=>{this.pendingDequeue.push({resolve:fe,reject:le})})}isEmpty(){return this.queue.length===0}cancel(){this.cancelled=!0,this.pendingDequeue.forEach(async({reject:fe})=>{fe(new n("Task cancelled"))}),this.pendingDequeue=[],this.queue.length=0}isCancelled(){return this.cancelled}pendingDequeueLength(){return this.pendingDequeue.length}},n=class extends Error{},m$3="fulfilled",f$4=(he=>(he.TransactionSent="transactionSent",he.TransactionSendFailed="transactionSendFailed",he.TransactionExecuted="transactionExecuted",he.TransactionExecutionFailed="transactionExecutionFailed",he.ExecutionFinish="executionFinish",he))(f$4||{}),p$2=class extends EventEmitter{constructor(fe,le,pe=30,ge=100,ye=10){super(),this.taskQueue=new i$4,this.transactionsQueue=new i$4,this.outstandingTransactions=new i$4,this.sentTransactions=[],this.executedTransactions=[],this.aptosConfig=fe,this.account=le,this.started=!1,this.accountSequnceNumber=new r(fe,le,pe,ge,ye)}async submitNextTransaction(){try{for(;;){let fe=await this.accountSequnceNumber.nextSequenceNumber();if(fe===null)return;let le=await this.generateNextTransaction(this.account,fe);if(!le)return;let pe=M$3({aptosConfig:this.aptosConfig,transaction:le,signer:this.account});await this.outstandingTransactions.enqueue([pe,fe])}}catch(fe){if(fe instanceof n)return;throw new Error(`Submit transaction failed for ${this.account.accountAddress.toString()} with error ${fe}`)}}async processTransactions(){try{for(;;){let fe=[],le=[],[pe,ge]=await this.outstandingTransactions.dequeue();for(fe.push(pe),le.push(ge);!this.outstandingTransactions.isEmpty();)[pe,ge]=await this.outstandingTransactions.dequeue(),fe.push(pe),le.push(ge);let ye=await Promise.allSettled(fe);for(let xe=0;xe<ye.length&&xe<le.length;xe+=1){let me=ye[xe];ge=le[xe],me.status===m$3?(this.sentTransactions.push([me.value.hash,ge,null]),this.emit("transactionSent",{message:`transaction hash ${me.value.hash} has been committed to chain`,transactionHash:me.value.hash}),await this.checkTransaction(me,ge)):(this.sentTransactions.push([me.status,ge,me.reason]),this.emit("transactionSendFailed",{message:`failed to commit transaction ${this.sentTransactions.length} with error ${me.reason}`,error:me.reason}))}this.emit("executionFinish",{message:`execute ${ye.length} transactions finished`})}}catch(fe){if(fe instanceof n)return;throw new Error(`Process execution failed for ${this.account.accountAddress.toString()} with error ${fe}`)}}async checkTransaction(fe,le){try{let pe=[];pe.push(q({aptosConfig:this.aptosConfig,transactionHash:fe.value.hash}));let ge=await Promise.allSettled(pe);for(let ye=0;ye<ge.length;ye+=1){let xe=ge[ye];xe.status===m$3?(this.executedTransactions.push([xe.value.hash,le,null]),this.emit("transactionExecuted",{message:`transaction hash ${xe.value.hash} has been executed on chain`,transactionHash:fe.value.hash})):(this.executedTransactions.push([xe.status,le,xe.reason]),this.emit("transactionExecutionFailed",{message:`failed to execute transaction ${this.executedTransactions.length} with error ${xe.reason}`,error:xe.reason}))}}catch(pe){throw new Error(`Check transaction failed for ${this.account.accountAddress.toString()} with error ${pe}`)}}async push(fe,le){this.transactionsQueue.enqueue([fe,le])}async generateNextTransaction(fe,le){if(this.transactionsQueue.isEmpty())return;let[pe,ge]=await this.transactionsQueue.dequeue();return h$3({aptosConfig:this.aptosConfig,sender:fe.accountAddress,data:pe,options:{...ge,accountSequenceNumber:le}})}async run(){try{for(;!this.taskQueue.isCancelled();)await(await this.taskQueue.dequeue())()}catch(fe){throw new Error(`Unable to start transaction batching: ${fe}`)}}start(){if(this.started)throw new Error("worker has already started");this.started=!0,this.taskQueue.enqueue(()=>this.submitNextTransaction()),this.taskQueue.enqueue(()=>this.processTransactions()),this.run()}stop(){if(this.taskQueue.isCancelled())throw new Error("worker has already stopped");this.started=!1,this.taskQueue.cancel()}},i$3=class extends EventEmitter{constructor(fe){super(),this.config=fe}start(fe){let{sender:le}=fe;this.account=le,this.transactionWorker=new p$2(this.config,le),this.transactionWorker.start(),this.registerToEvents()}push(fe){let{data:le,options:pe}=fe;for(let ge of le)this.transactionWorker.push(ge,pe)}registerToEvents(){this.transactionWorker.on("transactionSent",async fe=>{this.emit("transactionSent",fe)}),this.transactionWorker.on("transactionSendFailed",async fe=>{this.emit("transactionSendFailed",fe)}),this.transactionWorker.on("transactionExecuted",async fe=>{this.emit("transactionExecuted",fe)}),this.transactionWorker.on("transactionExecutionFailed",async fe=>{this.emit("transactionExecutionFailed",fe)}),this.transactionWorker.on("executionFinish",async fe=>{this.emit("executionFinish",fe)})}forSingleAccount(fe){try{let{sender:le,data:pe,options:ge}=fe;this.start({sender:le}),this.push({data:pe,options:ge})}catch(le){throw new Error(`failed to submit transactions with error: ${le}`)}}},h$2=class{constructor(fe){this.config=fe,this.build=new o(this.config),this.simulate=new i$5(this.config),this.submit=new n$1(this.config),this.batch=new i$3(this.config)}async getTransactions(fe){return H$2({aptosConfig:this.config,...fe})}async getTransactionByVersion(fe){return W$6({aptosConfig:this.config,...fe})}async getTransactionByHash(fe){return y$6({aptosConfig:this.config,...fe})}async isPendingTransaction(fe){return O$3({aptosConfig:this.config,...fe})}async waitForTransaction(fe){return q({aptosConfig:this.config,...fe})}async getGasPriceEstimation(){return G$3({aptosConfig:this.config})}getSigningMessage(fe){return Y$2(fe)}async publishPackageTransaction(fe){return nn({aptosConfig:this.config,...fe})}async rotateAuthKey(fe){return tn({aptosConfig:this.config,...fe})}sign(fe){return _$2({...fe})}signAsFeePayer(fe){let{signer:le,transaction:pe}=fe;if(!pe.feePayerAddress)throw new Error(`Transaction ${pe} is not a Fee Payer transaction`);return pe.feePayerAddress=le.accountAddress,_$2({signer:le,transaction:pe})}async batchTransactionsForSingleAccount(fe){try{let{sender:le,data:pe,options:ge}=fe;this.batch.forSingleAccount({sender:le,data:pe,options:ge})}catch(le){throw new Error(`failed to submit transactions with error: ${le}`)}}async signAndSubmitTransaction(fe){let{signer:le,transaction:pe}=fe;return M$3({aptosConfig:this.config,signer:le,transaction:pe})}},a$1=300,u$2=he=>{if(he&&he.length>a$1)throw new Error(`Event type length exceeds the maximum length of ${a$1}`)};async function m$2(he){let{aptosConfig:fe,eventType:le,options:pe}=he;return p$1({aptosConfig:fe,options:{...pe,where:{account_address:{_eq:"0x0000000000000000000000000000000000000000000000000000000000000000"},creation_number:{_eq:"0"},sequence_number:{_eq:"0"},indexed_type:{_eq:le}}}})}async function f$3(he){let{accountAddress:fe,aptosConfig:le,creationNumber:pe,options:ge}=he,ye={account_address:{_eq:d$d.from(fe).toStringLong()},creation_number:{_eq:pe}};return p$1({aptosConfig:le,options:{...ge,where:ye}})}async function _$1(he){let{accountAddress:fe,aptosConfig:le,eventType:pe,options:ge}=he,ye={account_address:{_eq:d$d.from(fe).toStringLong()},indexed_type:{_eq:pe}};return p$1({aptosConfig:le,options:{...ge,where:ye}})}async function p$1(he){var ge,ye;let{aptosConfig:fe,options:le}=he;u$2((ye=(ge=le==null?void 0:le.where)==null?void 0:ge.indexed_type)==null?void 0:ye._eq);let pe={query:k$4,variables:{where_condition:le==null?void 0:le.where,offset:le==null?void 0:le.offset,limit:le==null?void 0:le.limit,order_by:le==null?void 0:le.orderBy}};return(await a$c({aptosConfig:fe,query:pe,originMethod:"getEvents"})).events}var i$2=class{constructor(fe){this.config=fe}async getModuleEventsByEventType(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"events_processor"}),m$2({aptosConfig:this.config,...fe})}async getAccountEventsByCreationNumber(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"events_processor"}),f$3({aptosConfig:this.config,...fe})}async getAccountEventsByEventType(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"events_processor"}),_$1({aptosConfig:this.config,...fe})}async getEvents(fe){return await i$d({config:this.config,minimumLedgerVersion:fe==null?void 0:fe.minimumLedgerVersion,processorType:"events_processor"}),p$1({aptosConfig:this.config,...fe})}};async function x$2(he){let{aptosConfig:fe,accountAddress:le,amount:pe,options:ge}=he,ye=(ge==null?void 0:ge.timeoutSecs)||20,{data:xe}=await m$c({aptosConfig:fe,path:"fund",body:{address:d$d.from(le).toString(),amount:pe},originMethod:"fundAccount"}),me=xe.txn_hashes[0],we=await q({aptosConfig:fe,transactionHash:me,options:{timeoutSecs:ye,checkSuccess:ge==null?void 0:ge.checkSuccess}});if(we.type==="user_transaction")return we;throw new Error(`Unexpected transaction received for fund account: ${we.type}`)}var i$1=class{constructor(fe){this.config=fe}async fundAccount(fe){var pe,ge;let le=await x$2({aptosConfig:this.config,...fe});return(((pe=fe.options)==null?void 0:pe.waitForIndexer)===void 0||(ge=fe.options)!=null&&ge.waitForIndexer)&&await z$6({aptosConfig:this.config,minimumLedgerVersion:BigInt(le.version),processorType:"fungible_asset_processor"}),le}};async function G(he){let{aptosConfig:fe,options:le}=he,pe={query:h$e,variables:{where_condition:le==null?void 0:le.where,limit:le==null?void 0:le.limit,offset:le==null?void 0:le.offset}};return(await a$c({aptosConfig:fe,query:pe,originMethod:"getFungibleAssetMetadata"})).fungible_asset_metadata}async function h$1(he){let{aptosConfig:fe,options:le}=he,pe={query:f$c,variables:{where_condition:le==null?void 0:le.where,limit:le==null?void 0:le.limit,offset:le==null?void 0:le.offset}};return(await a$c({aptosConfig:fe,query:pe,originMethod:"getFungibleAssetActivities"})).fungible_asset_activities}async function M$2(he){let{aptosConfig:fe,options:le}=he,pe={query:b$8,variables:{where_condition:le==null?void 0:le.where,limit:le==null?void 0:le.limit,offset:le==null?void 0:le.offset}};return(await a$c({aptosConfig:fe,query:pe,originMethod:"getCurrentFungibleAssetBalances"})).current_fungible_asset_balances}var b$2={typeParameters:[{constraints:[]}],parameters:[j$2("0x1::object::Object"),new S$5,new p$9]};async function x$1(he){let{aptosConfig:fe,sender:le,fungibleAssetMetadataAddress:pe,recipient:ge,amount:ye,options:xe}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x1::primary_fungible_store::transfer",typeArguments:["0x1::fungible_asset::Metadata"],functionArguments:[pe,ge,ye],abi:b$2},options:xe})}var a=class{constructor(he){this.config=he}async getFungibleAssetMetadata(he){return await i$d({config:this.config,minimumLedgerVersion:he==null?void 0:he.minimumLedgerVersion,processorType:"fungible_asset_processor"}),G({aptosConfig:this.config,...he})}async getFungibleAssetMetadataByAssetType(he){return await i$d({config:this.config,minimumLedgerVersion:he==null?void 0:he.minimumLedgerVersion,processorType:"fungible_asset_processor"}),(await G({aptosConfig:this.config,options:{where:{asset_type:{_eq:he.assetType}}}}))[0]}async getFungibleAssetMetadataByCreatorAddress(he){return await i$d({config:this.config,minimumLedgerVersion:he==null?void 0:he.minimumLedgerVersion,processorType:"fungible_asset_processor"}),await G({aptosConfig:this.config,options:{where:{creator_address:{_eq:d$d.from(he.creatorAddress).toStringLong()}}}})}async getFungibleAssetActivities(he){return await i$d({config:this.config,minimumLedgerVersion:he==null?void 0:he.minimumLedgerVersion,processorType:"fungible_asset_processor"}),h$1({aptosConfig:this.config,...he})}async getCurrentFungibleAssetBalances(he){return await i$d({config:this.config,minimumLedgerVersion:he==null?void 0:he.minimumLedgerVersion,processorType:"fungible_asset_processor"}),M$2({aptosConfig:this.config,...he})}async transferFungibleAsset(he){return x$1({aptosConfig:this.config,...he})}};async function F$2(he){let{aptosConfig:fe,payload:le,options:pe}=he,ge=await Kn({...le,aptosConfig:fe}),ye=new n$8;ge.serialize(ye);let xe=ye.toUint8Array(),{data:me}=await q$1({aptosConfig:fe,path:"view",originMethod:"view",contentType:"application/x.aptos.view_function+bcs",params:{ledger_version:pe==null?void 0:pe.ledgerVersion},body:xe});return me}async function M$1(he){let{aptosConfig:fe,payload:le,options:pe}=he,{data:ge}=await q$1({aptosConfig:fe,originMethod:"viewJson",path:"view",params:{ledger_version:pe==null?void 0:pe.ledgerVersion},body:{function:le.function,type_arguments:le.typeArguments??[],arguments:le.functionArguments??[]}});return ge}var p=class{constructor(he){this.config=he}async getLedgerInfo(){return d$e({aptosConfig:this.config})}async getChainId(){return(await this.getLedgerInfo()).chain_id}async getBlockByVersion(he){return U$9({aptosConfig:this.config,...he})}async getBlockByHeight(he){return X$2({aptosConfig:this.config,...he})}async view(he){return F$2({aptosConfig:this.config,...he})}async viewJson(he){return M$1({aptosConfig:this.config,...he})}async getChainTopUserTransactions(he){return C$4({aptosConfig:this.config,...he})}async queryIndexer(he){return a$c({aptosConfig:this.config,...he})}async getIndexerLastSuccessVersion(){return h$d({aptosConfig:this.config})}async getProcessorStatus(he){return T$8({aptosConfig:this.config,processorType:he})}};async function A$2(he){let{aptosConfig:fe,jwt:le,ephemeralKeyPair:pe,uidKey:ge="sub",derivationPath:ye}=he,xe={jwt_b64:le,epk:pe.getPublicKey().bcsToHex().toStringWithoutPrefix(),exp_date_secs:pe.expiryDateSecs,epk_blinder:i$c.fromHexInput(pe.blinder).toStringWithoutPrefix(),uid_key:ge,derivation_path:ye},{data:me}=await E$7({aptosConfig:fe,path:"fetch",body:xe,originMethod:"getPepper",overrides:{WITH_CREDENTIALS:!1}});return i$c.fromHexInput(me.pepper).toUint8Array()}async function E$2(he){let{aptosConfig:fe,jwt:le,ephemeralKeyPair:pe,pepper:ge=await A$2(he),uidKey:ye="sub"}=he;if(i$c.fromHexInput(ge).toUint8Array().length!==k$1.PEPPER_LENGTH)throw new Error(`Pepper needs to be ${k$1.PEPPER_LENGTH} bytes`);let{maxExpHorizonSecs:xe}=await be({aptosConfig:fe});if(xe<pe.expiryDateSecs-u$9())throw Error(`The EphemeralKeyPair is too long lived.  It's lifespan must be less than ${xe}`);let me={jwt_b64:le,epk:pe.getPublicKey().bcsToHex().toStringWithoutPrefix(),epk_blinder:i$c.fromHexInput(pe.blinder).toStringWithoutPrefix(),exp_date_secs:pe.expiryDateSecs,exp_horizon_secs:xe,pepper:i$c.fromHexInput(ge).toStringWithoutPrefix(),uid_key:ye},{data:we}=await a$d({aptosConfig:fe,path:"prove",body:me,originMethod:"getProof",overrides:{WITH_CREDENTIALS:!1}}),Ee=we.proof,Ae=new g$1({a:Ee.a,b:Ee.b,c:Ee.c});return new S$2({proof:new f$7(Ae,0),trainingWheelsSignature:p$6.fromHex(we.training_wheels_signature),expHorizonSecs:xe})}async function W$2(he){let{aptosConfig:fe,jwt:le,uidKey:pe,proofFetchCallback:ge,pepper:ye=await A$2(he)}=he,xe=E$2({...he,pepper:ye}),me=ge?xe:await xe,we=A$4.fromJwtAndPepper({jwt:le,pepper:ye,uidKey:pe}),Ee=await L$2({aptosConfig:fe,authenticationKey:we.authKey().derivedAddress()});return k$1.create({...he,address:Ee,proof:me,pepper:ye,proofFetchCallback:ge})}var i=class{constructor(he){this.config=he}async getPepper(he){return A$2({aptosConfig:this.config,...he})}async getProof(he){return E$2({aptosConfig:this.config,...he})}async deriveKeylessAccount(he){return W$2({aptosConfig:this.config,...he})}};async function d$2(he){let{aptosConfig:fe,options:le}=he,pe={query:v$6,variables:{where_condition:le==null?void 0:le.where,offset:le==null?void 0:le.offset,limit:le==null?void 0:le.limit,order_by:le==null?void 0:le.orderBy}};return(await a$c({aptosConfig:fe,query:pe,originMethod:"getObjectData"})).current_objects}async function f$2(he){let{aptosConfig:fe,objectAddress:le,options:pe}=he,ge={object_address:{_eq:d$d.from(le).toStringLong()}};return(await d$2({aptosConfig:fe,options:{...pe,where:ge}}))[0]}var t$3=class{constructor(fe){this.config=fe}async getObjectDataByObjectAddress(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"objects_processor"}),f$2({aptosConfig:this.config,...fe})}};async function m$1(he){let{aptosConfig:fe,poolAddress:le}=he,pe=d$d.from(le).toStringLong(),ge=await a$c({aptosConfig:fe,query:{query:w$2,variables:{where_condition:{pool_address:{_eq:pe}}}}});return ge.num_active_delegator_per_pool[0]?ge.num_active_delegator_per_pool[0].num_active_delegator:0}async function f$1(he){let{aptosConfig:fe,options:le}=he,pe={query:w$2,variables:{order_by:le==null?void 0:le.orderBy}};return(await a$c({aptosConfig:fe,query:pe})).num_active_delegator_per_pool}async function A$1(he){let{aptosConfig:fe,delegatorAddress:le,poolAddress:pe}=he,ge={query:$$5,variables:{delegatorAddress:d$d.from(le).toStringLong(),poolAddress:d$d.from(pe).toStringLong()}};return(await a$c({aptosConfig:fe,query:ge})).delegated_staking_activities}var t$2=class{constructor(fe){this.config=fe}async getNumberOfDelegators(fe){return await i$d({config:this.config,minimumLedgerVersion:fe==null?void 0:fe.minimumLedgerVersion,processorType:"stake_processor"}),m$1({aptosConfig:this.config,...fe})}async getNumberOfDelegatorsForAllPools(fe){return await i$d({config:this.config,minimumLedgerVersion:fe==null?void 0:fe.minimumLedgerVersion,processorType:"stake_processor"}),f$1({aptosConfig:this.config,...fe})}async getDelegatedStakingActivities(fe){return await i$d({config:this.config,minimumLedgerVersion:fe==null?void 0:fe.minimumLedgerVersion,processorType:"stake_processor"}),A$1({aptosConfig:this.config,...fe})}},l$4=class{constructor(fe){this.config=fe}async getAccountInfo(fe){return R$1({aptosConfig:this.config,...fe})}async getAccountModules(fe){return Y$4({aptosConfig:this.config,...fe})}async getAccountModule(fe){return Z$3({aptosConfig:this.config,...fe})}async getAccountTransactions(fe){return ee$1({aptosConfig:this.config,...fe})}async getAccountResources(fe){return oe$1({aptosConfig:this.config,...fe})}async getAccountResource(fe){return x$3({aptosConfig:this.config,...fe})}async lookupOriginalAccountAddress(fe){return L$2({aptosConfig:this.config,...fe})}async getAccountTokensCount(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"account_transactions_processor"}),te$1({aptosConfig:this.config,...fe})}async getAccountOwnedTokens(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"token_v2_processor"}),ne$1({aptosConfig:this.config,...fe})}async getAccountOwnedTokensFromCollectionAddress(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"token_v2_processor"}),re({aptosConfig:this.config,...fe})}async getAccountCollectionsWithOwnedTokens(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"token_v2_processor"}),se({aptosConfig:this.config,...fe})}async getAccountTransactionsCount(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"account_transactions_processor"}),ce({aptosConfig:this.config,...fe})}async getAccountCoinsData(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"fungible_asset_processor"}),B$2({aptosConfig:this.config,...fe})}async getAccountCoinsCount(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"fungible_asset_processor"}),ae({aptosConfig:this.config,...fe})}async getAccountAPTAmount(fe){return this.getAccountCoinAmount({coinType:o$i,...fe})}async getAccountCoinAmount(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"fungible_asset_processor"}),ie({aptosConfig:this.config,...fe})}async getAccountOwnedObjects(fe){return await i$d({config:this.config,minimumLedgerVersion:fe.minimumLedgerVersion,processorType:"default_processor"}),de({aptosConfig:this.config,...fe})}async deriveAccountFromPrivateKey(fe){return ue({aptosConfig:this.config,...fe})}},T$1=["A name must be between 3 and 63 characters long,","and can only contain lowercase a-z, 0-9, and hyphens.","A name may not start or end with a hyphen."].join(" ");function D(he){return!(!he||he.length<3||he.length>63||!/^[a-z\d][a-z\d-]{1,61}[a-z\d]$/.test(he))}function c$1(he){let[fe,le,...pe]=he.replace(/\.apt$/,"").split(".");if(pe.length>0)throw new Error(`${he} is invalid. A name can only have two parts, a domain and a subdomain separated by a "."`);if(!D(fe))throw new Error(`${fe} is not valid. ${T$1}`);if(le&&!D(le))throw new Error(`${le} is not valid. ${T$1}`);return{domainName:le||fe,subdomainName:le?fe:void 0}}var I=(he=>(he[he.Independent=0]="Independent",he[he.FollowsDomain=1]="FollowsDomain",he))(I||{});function E$1(he){if(!he)return!1;let fe=new Date(he.domain_expiration_timestamp).getTime()<Date.now(),le=new Date(he.expiration_timestamp).getTime()<Date.now();return he.subdomain&&fe?!1:he.subdomain&&he.subdomain_expiration_policy===1?!0:!le}var O="0x585fc9f0f0c54183b039ffc770ca282ebd87307916c215a3e692f2f8e4305e82",v$2={testnet:"0x5f8fd2347449685cf41d4db97926ec3a096eaf381332be4f1318ad4d16a8497c",mainnet:"0x867ed1f6bf916171b1de3ee92849b8978b7d1b9e0a8cc982a3d19d535dfd9c0c",local:O,custom:null,devnet:null};function d$1(he){let fe=v$2[he.network];if(!fe)throw new Error(`The ANS contract is not deployed to ${he.network}`);return fe}var b$1=he=>{if(he&&typeof he=="object"&&"vec"in he&&Array.isArray(he.vec))return he.vec[0]};async function F$1(he){let{aptosConfig:fe,name:le}=he,pe=d$1(fe),{domainName:ge,subdomainName:ye}=c$1(le),xe=await F$2({aptosConfig:fe,payload:{function:`${pe}::router::get_owner_addr`,functionArguments:[ge,ye]}}),me=b$1(xe[0]);return me?d$d.from(me):void 0}async function Y$1(he){let{aptosConfig:fe,expiration:le,name:pe,sender:ge,targetAddress:ye,toAddress:xe,options:me,transferable:we}=he,Ee=d$1(fe),{domainName:Ae,subdomainName:Se}=c$1(pe),Le=le.policy==="subdomain:independent"||le.policy==="subdomain:follow-domain";if(Se&&!Le)throw new Error("Subdomains must have an expiration policy of either 'subdomain:independent' or 'subdomain:follow-domain'");if(Le&&!Se)throw new Error(`Policy is set to ${le.policy} but no subdomain was provided`);if(le.policy==="domain"){let Fe=le.years??1;if(Fe!==1)throw new Error("For now, names can only be registered for 1 year at a time");let Ue=Fe*31536e3;return await h$3({aptosConfig:fe,sender:ge.accountAddress.toString(),data:{function:`${Ee}::router::register_domain`,functionArguments:[Ae,Ue,ye,xe]},options:me})}if(!Se)throw new Error(`${le.policy} requires a subdomain to be provided.`);let He=await P({aptosConfig:fe,name:Ae});if(!He)throw new Error("The domain does not exist");let Me=le.policy==="subdomain:independent"?le.expirationDate:He;if(Me>He)throw new Error("The subdomain expiration time cannot be greater than the domain expiration time");return await h$3({aptosConfig:fe,sender:ge.accountAddress.toString(),data:{function:`${Ee}::router::register_subdomain`,functionArguments:[Ae,Se,Math.round(Me/1e3),le.policy==="subdomain:follow-domain"?1:0,!!we,ye,xe]},options:me})}async function P(he){let{aptosConfig:fe,name:le}=he,pe=d$1(fe),{domainName:ge,subdomainName:ye}=c$1(le);try{let xe=await F$2({aptosConfig:fe,payload:{function:`${pe}::router::get_expiration`,functionArguments:[ge,ye]}});return Number(xe[0])*1e3}catch{return}}async function K$1(he){let{aptosConfig:fe,address:le}=he,pe=d$1(fe),ge=await F$2({aptosConfig:fe,payload:{function:`${pe}::router::get_primary_name`,functionArguments:[d$d.from(le).toString()]}}),ye=b$1(ge[1]),xe=b$1(ge[0]);if(ye)return[xe,ye].filter(Boolean).join(".")}async function W$1(he){let{aptosConfig:fe,sender:le,name:pe,options:ge}=he,ye=d$1(fe);if(!pe)return await h$3({aptosConfig:fe,sender:le.accountAddress.toString(),data:{function:`${ye}::router::clear_primary_name`,functionArguments:[]},options:ge});let{domainName:xe,subdomainName:me}=c$1(pe);return await h$3({aptosConfig:fe,sender:le.accountAddress.toString(),data:{function:`${ye}::router::set_primary_name`,functionArguments:[xe,me]},options:ge})}async function H$1(he){let{aptosConfig:fe,name:le}=he,pe=d$1(fe),{domainName:ge,subdomainName:ye}=c$1(le),xe=await F$2({aptosConfig:fe,payload:{function:`${pe}::router::get_target_addr`,functionArguments:[ge,ye]}}),me=b$1(xe[0]);return me?d$d.from(me):void 0}async function J$1(he){let{aptosConfig:fe,sender:le,name:pe,address:ge,options:ye}=he,xe=d$1(fe),{domainName:me,subdomainName:we}=c$1(pe);return await h$3({aptosConfig:fe,sender:le.accountAddress.toString(),data:{function:`${xe}::router::set_target_addr`,functionArguments:[me,we,ge]},options:ye})}async function X$1(he){let{aptosConfig:fe,name:le}=he,{domainName:pe,subdomainName:ge=""}=c$1(le),ye=(await a$c({aptosConfig:fe,query:{query:G$4,variables:{where_condition:{domain:{_eq:pe},subdomain:{_eq:ge}},limit:1}},originMethod:"getName"})).current_aptos_names[0];return ye&&(ye=l$3(ye)),E$1(ye)?ye:void 0}async function Z$1(he){var ye;let{aptosConfig:fe,options:le,accountAddress:pe}=he,ge=await C$2({aptosConfig:fe});return(await a$c({aptosConfig:fe,originMethod:"getAccountNames",query:{query:G$4,variables:{limit:le==null?void 0:le.limit,offset:le==null?void 0:le.offset,order_by:le==null?void 0:le.orderBy,where_condition:{...((ye=he.options)==null?void 0:ye.where)??{},owner_address:{_eq:pe.toString()},expiration_timestamp:{_gte:ge}}}}})).current_aptos_names.map(l$3)}async function ee(he){var ye;let{aptosConfig:fe,options:le,accountAddress:pe}=he,ge=await C$2({aptosConfig:fe});return(await a$c({aptosConfig:fe,originMethod:"getAccountDomains",query:{query:G$4,variables:{limit:le==null?void 0:le.limit,offset:le==null?void 0:le.offset,order_by:le==null?void 0:le.orderBy,where_condition:{...((ye=he.options)==null?void 0:ye.where)??{},owner_address:{_eq:pe.toString()},expiration_timestamp:{_gte:ge},subdomain:{_eq:""}}}}})).current_aptos_names.map(l$3)}async function ne(he){var ye;let{aptosConfig:fe,options:le,accountAddress:pe}=he,ge=await C$2({aptosConfig:fe});return(await a$c({aptosConfig:fe,originMethod:"getAccountSubdomains",query:{query:G$4,variables:{limit:le==null?void 0:le.limit,offset:le==null?void 0:le.offset,order_by:le==null?void 0:le.orderBy,where_condition:{...((ye=he.options)==null?void 0:ye.where)??{},owner_address:{_eq:pe.toString()},expiration_timestamp:{_gte:ge},subdomain:{_neq:""}}}}})).current_aptos_names.map(l$3)}async function te(he){var ge;let{aptosConfig:fe,options:le,domain:pe}=he;return(await a$c({aptosConfig:fe,originMethod:"getDomainSubdomains",query:{query:G$4,variables:{limit:le==null?void 0:le.limit,offset:le==null?void 0:le.offset,order_by:le==null?void 0:le.orderBy,where_condition:{...((ge=he.options)==null?void 0:ge.where)??{},domain:{_eq:pe},subdomain:{_neq:""}}}}})).current_aptos_names.map(l$3).filter(E$1)}async function C$2(he){let{aptosConfig:fe}=he,le=d$1(fe),[pe]=await F$2({aptosConfig:fe,payload:{function:`${le}::config::reregistration_grace_sec`,functionArguments:[]}}),ge=pe/60/60/24,ye=()=>new Date;return new Date(ye().setDate(ye().getDate()-ge)).toISOString()}async function oe(he){let{aptosConfig:fe,sender:le,name:pe,years:ge=1,options:ye}=he,xe=d$1(fe),me=ge*31536e3,{domainName:we,subdomainName:Ee}=c$1(pe);if(Ee)throw new Error("Subdomains cannot be renewed");if(ge!==1)throw new Error("Currently, only 1 year renewals are supported");return await h$3({aptosConfig:fe,sender:le.accountAddress.toString(),data:{function:`${xe}::router::renew_domain`,functionArguments:[we,me]},options:ye})}function l$3(he){return{...he,expiration_timestamp:new Date(he.expiration_timestamp).getTime()}}var A=class{constructor(he){this.config=he}async getOwnerAddress(he){return F$1({aptosConfig:this.config,...he})}async getExpiration(he){return P({aptosConfig:this.config,...he})}async getTargetAddress(he){return H$1({aptosConfig:this.config,...he})}async setTargetAddress(he){return J$1({aptosConfig:this.config,...he})}async getPrimaryName(he){return K$1({aptosConfig:this.config,...he})}async setPrimaryName(he){return W$1({aptosConfig:this.config,...he})}async registerName(he){return Y$1({aptosConfig:this.config,...he})}async renewDomain(he){return oe({aptosConfig:this.config,...he})}async getName(he){return X$1({aptosConfig:this.config,...he})}async getAccountNames(he){return Z$1({aptosConfig:this.config,...he})}async getAccountDomains(he){return ee({aptosConfig:this.config,...he})}async getAccountSubdomains(he){return ne({aptosConfig:this.config,...he})}async getDomainSubdomains(he){return te({aptosConfig:this.config,...he})}};function bind(he,fe){return function(){return he.apply(fe,arguments)}}const{toString}=Object.prototype,{getPrototypeOf}=Object,kindOf=(he=>fe=>{const le=toString.call(fe);return he[le]||(he[le]=le.slice(8,-1).toLowerCase())})(Object.create(null)),kindOfTest=he=>(he=he.toLowerCase(),fe=>kindOf(fe)===he),typeOfTest=he=>fe=>typeof fe===he,{isArray}=Array,isUndefined=typeOfTest("undefined");function isBuffer(he){return he!==null&&!isUndefined(he)&&he.constructor!==null&&!isUndefined(he.constructor)&&isFunction(he.constructor.isBuffer)&&he.constructor.isBuffer(he)}const isArrayBuffer=kindOfTest("ArrayBuffer");function isArrayBufferView(he){let fe;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?fe=ArrayBuffer.isView(he):fe=he&&he.buffer&&isArrayBuffer(he.buffer),fe}const isString=typeOfTest("string"),isFunction=typeOfTest("function"),isNumber=typeOfTest("number"),isObject=he=>he!==null&&typeof he=="object",isBoolean=he=>he===!0||he===!1,isPlainObject=he=>{if(kindOf(he)!=="object")return!1;const fe=getPrototypeOf(he);return(fe===null||fe===Object.prototype||Object.getPrototypeOf(fe)===null)&&!(Symbol.toStringTag in he)&&!(Symbol.iterator in he)},isDate=kindOfTest("Date"),isFile=kindOfTest("File"),isBlob=kindOfTest("Blob"),isFileList=kindOfTest("FileList"),isStream=he=>isObject(he)&&isFunction(he.pipe),isFormData=he=>{let fe;return he&&(typeof FormData=="function"&&he instanceof FormData||isFunction(he.append)&&((fe=kindOf(he))==="formdata"||fe==="object"&&isFunction(he.toString)&&he.toString()==="[object FormData]"))},isURLSearchParams=kindOfTest("URLSearchParams"),[isReadableStream,isRequest,isResponse,isHeaders]=["ReadableStream","Request","Response","Headers"].map(kindOfTest),trim=he=>he.trim?he.trim():he.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function forEach(he,fe,{allOwnKeys:le=!1}={}){if(he===null||typeof he>"u")return;let pe,ge;if(typeof he!="object"&&(he=[he]),isArray(he))for(pe=0,ge=he.length;pe<ge;pe++)fe.call(null,he[pe],pe,he);else{const ye=le?Object.getOwnPropertyNames(he):Object.keys(he),xe=ye.length;let me;for(pe=0;pe<xe;pe++)me=ye[pe],fe.call(null,he[me],me,he)}}function findKey(he,fe){fe=fe.toLowerCase();const le=Object.keys(he);let pe=le.length,ge;for(;pe-- >0;)if(ge=le[pe],fe===ge.toLowerCase())return ge;return null}const _global=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,isContextDefined=he=>!isUndefined(he)&&he!==_global;function merge(){const{caseless:he}=isContextDefined(this)&&this||{},fe={},le=(pe,ge)=>{const ye=he&&findKey(fe,ge)||ge;isPlainObject(fe[ye])&&isPlainObject(pe)?fe[ye]=merge(fe[ye],pe):isPlainObject(pe)?fe[ye]=merge({},pe):isArray(pe)?fe[ye]=pe.slice():fe[ye]=pe};for(let pe=0,ge=arguments.length;pe<ge;pe++)arguments[pe]&&forEach(arguments[pe],le);return fe}const extend=(he,fe,le,{allOwnKeys:pe}={})=>(forEach(fe,(ge,ye)=>{le&&isFunction(ge)?he[ye]=bind(ge,le):he[ye]=ge},{allOwnKeys:pe}),he),stripBOM=he=>(he.charCodeAt(0)===65279&&(he=he.slice(1)),he),inherits=(he,fe,le,pe)=>{he.prototype=Object.create(fe.prototype,pe),he.prototype.constructor=he,Object.defineProperty(he,"super",{value:fe.prototype}),le&&Object.assign(he.prototype,le)},toFlatObject=(he,fe,le,pe)=>{let ge,ye,xe;const me={};if(fe=fe||{},he==null)return fe;do{for(ge=Object.getOwnPropertyNames(he),ye=ge.length;ye-- >0;)xe=ge[ye],(!pe||pe(xe,he,fe))&&!me[xe]&&(fe[xe]=he[xe],me[xe]=!0);he=le!==!1&&getPrototypeOf(he)}while(he&&(!le||le(he,fe))&&he!==Object.prototype);return fe},endsWith=(he,fe,le)=>{he=String(he),(le===void 0||le>he.length)&&(le=he.length),le-=fe.length;const pe=he.indexOf(fe,le);return pe!==-1&&pe===le},toArray=he=>{if(!he)return null;if(isArray(he))return he;let fe=he.length;if(!isNumber(fe))return null;const le=new Array(fe);for(;fe-- >0;)le[fe]=he[fe];return le},isTypedArray=(he=>fe=>he&&fe instanceof he)(typeof Uint8Array<"u"&&getPrototypeOf(Uint8Array)),forEachEntry=(he,fe)=>{const pe=(he&&he[Symbol.iterator]).call(he);let ge;for(;(ge=pe.next())&&!ge.done;){const ye=ge.value;fe.call(he,ye[0],ye[1])}},matchAll=(he,fe)=>{let le;const pe=[];for(;(le=he.exec(fe))!==null;)pe.push(le);return pe},isHTMLForm=kindOfTest("HTMLFormElement"),toCamelCase=he=>he.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(le,pe,ge){return pe.toUpperCase()+ge}),hasOwnProperty=(({hasOwnProperty:he})=>(fe,le)=>he.call(fe,le))(Object.prototype),isRegExp=kindOfTest("RegExp"),reduceDescriptors=(he,fe)=>{const le=Object.getOwnPropertyDescriptors(he),pe={};forEach(le,(ge,ye)=>{let xe;(xe=fe(ge,ye,he))!==!1&&(pe[ye]=xe||ge)}),Object.defineProperties(he,pe)},freezeMethods=he=>{reduceDescriptors(he,(fe,le)=>{if(isFunction(he)&&["arguments","caller","callee"].indexOf(le)!==-1)return!1;const pe=he[le];if(isFunction(pe)){if(fe.enumerable=!1,"writable"in fe){fe.writable=!1;return}fe.set||(fe.set=()=>{throw Error("Can not rewrite read-only method '"+le+"'")})}})},toObjectSet=(he,fe)=>{const le={},pe=ge=>{ge.forEach(ye=>{le[ye]=!0})};return isArray(he)?pe(he):pe(String(he).split(fe)),le},noop=()=>{},toFiniteNumber=(he,fe)=>he!=null&&Number.isFinite(he=+he)?he:fe,ALPHA="abcdefghijklmnopqrstuvwxyz",DIGIT="0123456789",ALPHABET={DIGIT,ALPHA,ALPHA_DIGIT:ALPHA+ALPHA.toUpperCase()+DIGIT},generateString=(he=16,fe=ALPHABET.ALPHA_DIGIT)=>{let le="";const{length:pe}=fe;for(;he--;)le+=fe[Math.random()*pe|0];return le};function isSpecCompliantForm(he){return!!(he&&isFunction(he.append)&&he[Symbol.toStringTag]==="FormData"&&he[Symbol.iterator])}const toJSONObject=he=>{const fe=new Array(10),le=(pe,ge)=>{if(isObject(pe)){if(fe.indexOf(pe)>=0)return;if(!("toJSON"in pe)){fe[ge]=pe;const ye=isArray(pe)?[]:{};return forEach(pe,(xe,me)=>{const we=le(xe,ge+1);!isUndefined(we)&&(ye[me]=we)}),fe[ge]=void 0,ye}}return pe};return le(he,0)},isAsyncFn=kindOfTest("AsyncFunction"),isThenable=he=>he&&(isObject(he)||isFunction(he))&&isFunction(he.then)&&isFunction(he.catch),_setImmediate=((he,fe)=>he?setImmediate:fe?((le,pe)=>(_global.addEventListener("message",({source:ge,data:ye})=>{ge===_global&&ye===le&&pe.length&&pe.shift()()},!1),ge=>{pe.push(ge),_global.postMessage(le,"*")}))(`axios@${Math.random()}`,[]):le=>setTimeout(le))(typeof setImmediate=="function",isFunction(_global.postMessage)),asap=typeof queueMicrotask<"u"?queueMicrotask.bind(_global):typeof process$1<"u"&&process$1.nextTick||_setImmediate,utils$1={isArray,isArrayBuffer,isBuffer,isFormData,isArrayBufferView,isString,isNumber,isBoolean,isObject,isPlainObject,isReadableStream,isRequest,isResponse,isHeaders,isUndefined,isDate,isFile,isBlob,isRegExp,isFunction,isStream,isURLSearchParams,isTypedArray,isFileList,forEach,merge,extend,trim,stripBOM,inherits,toFlatObject,kindOf,kindOfTest,endsWith,toArray,forEachEntry,matchAll,isHTMLForm,hasOwnProperty,hasOwnProp:hasOwnProperty,reduceDescriptors,freezeMethods,toObjectSet,toCamelCase,noop,toFiniteNumber,findKey,global:_global,isContextDefined,ALPHABET,generateString,isSpecCompliantForm,toJSONObject,isAsyncFn,isThenable,setImmediate:_setImmediate,asap};function AxiosError(he,fe,le,pe,ge){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=he,this.name="AxiosError",fe&&(this.code=fe),le&&(this.config=le),pe&&(this.request=pe),ge&&(this.response=ge)}utils$1.inherits(AxiosError,Error,{toJSON:function he(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:utils$1.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const prototype$1=AxiosError.prototype,descriptors={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(he=>{descriptors[he]={value:he}});Object.defineProperties(AxiosError,descriptors);Object.defineProperty(prototype$1,"isAxiosError",{value:!0});AxiosError.from=(he,fe,le,pe,ge,ye)=>{const xe=Object.create(prototype$1);return utils$1.toFlatObject(he,xe,function(we){return we!==Error.prototype},me=>me!=="isAxiosError"),AxiosError.call(xe,he.message,fe,le,pe,ge),xe.cause=he,xe.name=he.name,ye&&Object.assign(xe,ye),xe};const httpAdapter=null;function isVisitable(he){return utils$1.isPlainObject(he)||utils$1.isArray(he)}function removeBrackets(he){return utils$1.endsWith(he,"[]")?he.slice(0,-2):he}function renderKey(he,fe,le){return he?he.concat(fe).map(function(ge,ye){return ge=removeBrackets(ge),!le&&ye?"["+ge+"]":ge}).join(le?".":""):fe}function isFlatArray(he){return utils$1.isArray(he)&&!he.some(isVisitable)}const predicates=utils$1.toFlatObject(utils$1,{},null,function he(fe){return/^is[A-Z]/.test(fe)});function toFormData(he,fe,le){if(!utils$1.isObject(he))throw new TypeError("target must be an object");fe=fe||new FormData,le=utils$1.toFlatObject(le,{metaTokens:!0,dots:!1,indexes:!1},!1,function(Fe,Ue){return!utils$1.isUndefined(Ue[Fe])});const pe=le.metaTokens,ge=le.visitor||Ae,ye=le.dots,xe=le.indexes,we=(le.Blob||typeof Blob<"u"&&Blob)&&utils$1.isSpecCompliantForm(fe);if(!utils$1.isFunction(ge))throw new TypeError("visitor must be a function");function Ee(Me){if(Me===null)return"";if(utils$1.isDate(Me))return Me.toISOString();if(!we&&utils$1.isBlob(Me))throw new AxiosError("Blob is not supported. Use a Buffer instead.");return utils$1.isArrayBuffer(Me)||utils$1.isTypedArray(Me)?we&&typeof Blob=="function"?new Blob([Me]):Buffer$4.from(Me):Me}function Ae(Me,Fe,Ue){let qe=Me;if(Me&&!Ue&&typeof Me=="object"){if(utils$1.endsWith(Fe,"{}"))Fe=pe?Fe:Fe.slice(0,-2),Me=JSON.stringify(Me);else if(utils$1.isArray(Me)&&isFlatArray(Me)||(utils$1.isFileList(Me)||utils$1.endsWith(Fe,"[]"))&&(qe=utils$1.toArray(Me)))return Fe=removeBrackets(Fe),qe.forEach(function(Qe,ot){!(utils$1.isUndefined(Qe)||Qe===null)&&fe.append(xe===!0?renderKey([Fe],ot,ye):xe===null?Fe:Fe+"[]",Ee(Qe))}),!1}return isVisitable(Me)?!0:(fe.append(renderKey(Ue,Fe,ye),Ee(Me)),!1)}const Se=[],Le=Object.assign(predicates,{defaultVisitor:Ae,convertValue:Ee,isVisitable});function He(Me,Fe){if(!utils$1.isUndefined(Me)){if(Se.indexOf(Me)!==-1)throw Error("Circular reference detected in "+Fe.join("."));Se.push(Me),utils$1.forEach(Me,function(qe,$e){(!(utils$1.isUndefined(qe)||qe===null)&&ge.call(fe,qe,utils$1.isString($e)?$e.trim():$e,Fe,Le))===!0&&He(qe,Fe?Fe.concat($e):[$e])}),Se.pop()}}if(!utils$1.isObject(he))throw new TypeError("data must be an object");return He(he),fe}function encode$1(he){const fe={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(he).replace(/[!'()~]|%20|%00/g,function(pe){return fe[pe]})}function AxiosURLSearchParams(he,fe){this._pairs=[],he&&toFormData(he,this,fe)}const prototype=AxiosURLSearchParams.prototype;prototype.append=function he(fe,le){this._pairs.push([fe,le])};prototype.toString=function he(fe){const le=fe?function(pe){return fe.call(this,pe,encode$1)}:encode$1;return this._pairs.map(function(ge){return le(ge[0])+"="+le(ge[1])},"").join("&")};function encode(he){return encodeURIComponent(he).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function buildURL(he,fe,le){if(!fe)return he;const pe=le&&le.encode||encode,ge=le&&le.serialize;let ye;if(ge?ye=ge(fe,le):ye=utils$1.isURLSearchParams(fe)?fe.toString():new AxiosURLSearchParams(fe,le).toString(pe),ye){const xe=he.indexOf("#");xe!==-1&&(he=he.slice(0,xe)),he+=(he.indexOf("?")===-1?"?":"&")+ye}return he}class InterceptorManager{constructor(){this.handlers=[]}use(fe,le,pe){return this.handlers.push({fulfilled:fe,rejected:le,synchronous:pe?pe.synchronous:!1,runWhen:pe?pe.runWhen:null}),this.handlers.length-1}eject(fe){this.handlers[fe]&&(this.handlers[fe]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(fe){utils$1.forEach(this.handlers,function(pe){pe!==null&&fe(pe)})}}const transitionalDefaults={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},URLSearchParams$1=typeof URLSearchParams<"u"?URLSearchParams:AxiosURLSearchParams,FormData$1=typeof FormData<"u"?FormData:null,Blob$1=typeof Blob<"u"?Blob:null,platform$1={isBrowser:!0,classes:{URLSearchParams:URLSearchParams$1,FormData:FormData$1,Blob:Blob$1},protocols:["http","https","file","blob","url","data"]},hasBrowserEnv=typeof window<"u"&&typeof document<"u",hasStandardBrowserEnv=(he=>hasBrowserEnv&&["ReactNative","NativeScript","NS"].indexOf(he)<0)(typeof navigator<"u"&&navigator.product),hasStandardBrowserWebWorkerEnv=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",origin=hasBrowserEnv&&window.location.href||"http://localhost",utils=Object.freeze(Object.defineProperty({__proto__:null,hasBrowserEnv,hasStandardBrowserEnv,hasStandardBrowserWebWorkerEnv,origin},Symbol.toStringTag,{value:"Module"})),platform={...utils,...platform$1};function toURLEncodedForm(he,fe){return toFormData(he,new platform.classes.URLSearchParams,Object.assign({visitor:function(le,pe,ge,ye){return platform.isNode&&utils$1.isBuffer(le)?(this.append(pe,le.toString("base64")),!1):ye.defaultVisitor.apply(this,arguments)}},fe))}function parsePropPath(he){return utils$1.matchAll(/\w+|\[(\w*)]/g,he).map(fe=>fe[0]==="[]"?"":fe[1]||fe[0])}function arrayToObject(he){const fe={},le=Object.keys(he);let pe;const ge=le.length;let ye;for(pe=0;pe<ge;pe++)ye=le[pe],fe[ye]=he[ye];return fe}function formDataToJSON(he){function fe(le,pe,ge,ye){let xe=le[ye++];if(xe==="__proto__")return!0;const me=Number.isFinite(+xe),we=ye>=le.length;return xe=!xe&&utils$1.isArray(ge)?ge.length:xe,we?(utils$1.hasOwnProp(ge,xe)?ge[xe]=[ge[xe],pe]:ge[xe]=pe,!me):((!ge[xe]||!utils$1.isObject(ge[xe]))&&(ge[xe]=[]),fe(le,pe,ge[xe],ye)&&utils$1.isArray(ge[xe])&&(ge[xe]=arrayToObject(ge[xe])),!me)}if(utils$1.isFormData(he)&&utils$1.isFunction(he.entries)){const le={};return utils$1.forEachEntry(he,(pe,ge)=>{fe(parsePropPath(pe),ge,le,0)}),le}return null}function stringifySafely(he,fe,le){if(utils$1.isString(he))try{return(fe||JSON.parse)(he),utils$1.trim(he)}catch(pe){if(pe.name!=="SyntaxError")throw pe}return(le||JSON.stringify)(he)}const defaults={transitional:transitionalDefaults,adapter:["xhr","http","fetch"],transformRequest:[function he(fe,le){const pe=le.getContentType()||"",ge=pe.indexOf("application/json")>-1,ye=utils$1.isObject(fe);if(ye&&utils$1.isHTMLForm(fe)&&(fe=new FormData(fe)),utils$1.isFormData(fe))return ge?JSON.stringify(formDataToJSON(fe)):fe;if(utils$1.isArrayBuffer(fe)||utils$1.isBuffer(fe)||utils$1.isStream(fe)||utils$1.isFile(fe)||utils$1.isBlob(fe)||utils$1.isReadableStream(fe))return fe;if(utils$1.isArrayBufferView(fe))return fe.buffer;if(utils$1.isURLSearchParams(fe))return le.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),fe.toString();let me;if(ye){if(pe.indexOf("application/x-www-form-urlencoded")>-1)return toURLEncodedForm(fe,this.formSerializer).toString();if((me=utils$1.isFileList(fe))||pe.indexOf("multipart/form-data")>-1){const we=this.env&&this.env.FormData;return toFormData(me?{"files[]":fe}:fe,we&&new we,this.formSerializer)}}return ye||ge?(le.setContentType("application/json",!1),stringifySafely(fe)):fe}],transformResponse:[function he(fe){const le=this.transitional||defaults.transitional,pe=le&&le.forcedJSONParsing,ge=this.responseType==="json";if(utils$1.isResponse(fe)||utils$1.isReadableStream(fe))return fe;if(fe&&utils$1.isString(fe)&&(pe&&!this.responseType||ge)){const xe=!(le&&le.silentJSONParsing)&&ge;try{return JSON.parse(fe)}catch(me){if(xe)throw me.name==="SyntaxError"?AxiosError.from(me,AxiosError.ERR_BAD_RESPONSE,this,null,this.response):me}}return fe}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:platform.classes.FormData,Blob:platform.classes.Blob},validateStatus:function he(fe){return fe>=200&&fe<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};utils$1.forEach(["delete","get","head","post","put","patch"],he=>{defaults.headers[he]={}});const ignoreDuplicateOf=utils$1.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),parseHeaders=he=>{const fe={};let le,pe,ge;return he&&he.split(`
`).forEach(function(xe){ge=xe.indexOf(":"),le=xe.substring(0,ge).trim().toLowerCase(),pe=xe.substring(ge+1).trim(),!(!le||fe[le]&&ignoreDuplicateOf[le])&&(le==="set-cookie"?fe[le]?fe[le].push(pe):fe[le]=[pe]:fe[le]=fe[le]?fe[le]+", "+pe:pe)}),fe},$internals=Symbol("internals");function normalizeHeader(he){return he&&String(he).trim().toLowerCase()}function normalizeValue(he){return he===!1||he==null?he:utils$1.isArray(he)?he.map(normalizeValue):String(he)}function parseTokens(he){const fe=Object.create(null),le=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let pe;for(;pe=le.exec(he);)fe[pe[1]]=pe[2];return fe}const isValidHeaderName=he=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(he.trim());function matchHeaderValue(he,fe,le,pe,ge){if(utils$1.isFunction(pe))return pe.call(this,fe,le);if(ge&&(fe=le),!!utils$1.isString(fe)){if(utils$1.isString(pe))return fe.indexOf(pe)!==-1;if(utils$1.isRegExp(pe))return pe.test(fe)}}function formatHeader(he){return he.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(fe,le,pe)=>le.toUpperCase()+pe)}function buildAccessors(he,fe){const le=utils$1.toCamelCase(" "+fe);["get","set","has"].forEach(pe=>{Object.defineProperty(he,pe+le,{value:function(ge,ye,xe){return this[pe].call(this,fe,ge,ye,xe)},configurable:!0})})}class AxiosHeaders{constructor(fe){fe&&this.set(fe)}set(fe,le,pe){const ge=this;function ye(me,we,Ee){const Ae=normalizeHeader(we);if(!Ae)throw new Error("header name must be a non-empty string");const Se=utils$1.findKey(ge,Ae);(!Se||ge[Se]===void 0||Ee===!0||Ee===void 0&&ge[Se]!==!1)&&(ge[Se||we]=normalizeValue(me))}const xe=(me,we)=>utils$1.forEach(me,(Ee,Ae)=>ye(Ee,Ae,we));if(utils$1.isPlainObject(fe)||fe instanceof this.constructor)xe(fe,le);else if(utils$1.isString(fe)&&(fe=fe.trim())&&!isValidHeaderName(fe))xe(parseHeaders(fe),le);else if(utils$1.isHeaders(fe))for(const[me,we]of fe.entries())ye(we,me,pe);else fe!=null&&ye(le,fe,pe);return this}get(fe,le){if(fe=normalizeHeader(fe),fe){const pe=utils$1.findKey(this,fe);if(pe){const ge=this[pe];if(!le)return ge;if(le===!0)return parseTokens(ge);if(utils$1.isFunction(le))return le.call(this,ge,pe);if(utils$1.isRegExp(le))return le.exec(ge);throw new TypeError("parser must be boolean|regexp|function")}}}has(fe,le){if(fe=normalizeHeader(fe),fe){const pe=utils$1.findKey(this,fe);return!!(pe&&this[pe]!==void 0&&(!le||matchHeaderValue(this,this[pe],pe,le)))}return!1}delete(fe,le){const pe=this;let ge=!1;function ye(xe){if(xe=normalizeHeader(xe),xe){const me=utils$1.findKey(pe,xe);me&&(!le||matchHeaderValue(pe,pe[me],me,le))&&(delete pe[me],ge=!0)}}return utils$1.isArray(fe)?fe.forEach(ye):ye(fe),ge}clear(fe){const le=Object.keys(this);let pe=le.length,ge=!1;for(;pe--;){const ye=le[pe];(!fe||matchHeaderValue(this,this[ye],ye,fe,!0))&&(delete this[ye],ge=!0)}return ge}normalize(fe){const le=this,pe={};return utils$1.forEach(this,(ge,ye)=>{const xe=utils$1.findKey(pe,ye);if(xe){le[xe]=normalizeValue(ge),delete le[ye];return}const me=fe?formatHeader(ye):String(ye).trim();me!==ye&&delete le[ye],le[me]=normalizeValue(ge),pe[me]=!0}),this}concat(...fe){return this.constructor.concat(this,...fe)}toJSON(fe){const le=Object.create(null);return utils$1.forEach(this,(pe,ge)=>{pe!=null&&pe!==!1&&(le[ge]=fe&&utils$1.isArray(pe)?pe.join(", "):pe)}),le}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([fe,le])=>fe+": "+le).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(fe){return fe instanceof this?fe:new this(fe)}static concat(fe,...le){const pe=new this(fe);return le.forEach(ge=>pe.set(ge)),pe}static accessor(fe){const pe=(this[$internals]=this[$internals]={accessors:{}}).accessors,ge=this.prototype;function ye(xe){const me=normalizeHeader(xe);pe[me]||(buildAccessors(ge,xe),pe[me]=!0)}return utils$1.isArray(fe)?fe.forEach(ye):ye(fe),this}}AxiosHeaders.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);utils$1.reduceDescriptors(AxiosHeaders.prototype,({value:he},fe)=>{let le=fe[0].toUpperCase()+fe.slice(1);return{get:()=>he,set(pe){this[le]=pe}}});utils$1.freezeMethods(AxiosHeaders);function transformData(he,fe){const le=this||defaults,pe=fe||le,ge=AxiosHeaders.from(pe.headers);let ye=pe.data;return utils$1.forEach(he,function(me){ye=me.call(le,ye,ge.normalize(),fe?fe.status:void 0)}),ge.normalize(),ye}function isCancel(he){return!!(he&&he.__CANCEL__)}function CanceledError(he,fe,le){AxiosError.call(this,he??"canceled",AxiosError.ERR_CANCELED,fe,le),this.name="CanceledError"}utils$1.inherits(CanceledError,AxiosError,{__CANCEL__:!0});function settle(he,fe,le){const pe=le.config.validateStatus;!le.status||!pe||pe(le.status)?he(le):fe(new AxiosError("Request failed with status code "+le.status,[AxiosError.ERR_BAD_REQUEST,AxiosError.ERR_BAD_RESPONSE][Math.floor(le.status/100)-4],le.config,le.request,le))}function parseProtocol(he){const fe=/^([-+\w]{1,25})(:?\/\/|:)/.exec(he);return fe&&fe[1]||""}function speedometer(he,fe){he=he||10;const le=new Array(he),pe=new Array(he);let ge=0,ye=0,xe;return fe=fe!==void 0?fe:1e3,function(we){const Ee=Date.now(),Ae=pe[ye];xe||(xe=Ee),le[ge]=we,pe[ge]=Ee;let Se=ye,Le=0;for(;Se!==ge;)Le+=le[Se++],Se=Se%he;if(ge=(ge+1)%he,ge===ye&&(ye=(ye+1)%he),Ee-xe<fe)return;const He=Ae&&Ee-Ae;return He?Math.round(Le*1e3/He):void 0}}function throttle(he,fe){let le=0,pe=1e3/fe,ge,ye;const xe=(Ee,Ae=Date.now())=>{le=Ae,ge=null,ye&&(clearTimeout(ye),ye=null),he.apply(null,Ee)};return[(...Ee)=>{const Ae=Date.now(),Se=Ae-le;Se>=pe?xe(Ee,Ae):(ge=Ee,ye||(ye=setTimeout(()=>{ye=null,xe(ge)},pe-Se)))},()=>ge&&xe(ge)]}const progressEventReducer=(he,fe,le=3)=>{let pe=0;const ge=speedometer(50,250);return throttle(ye=>{const xe=ye.loaded,me=ye.lengthComputable?ye.total:void 0,we=xe-pe,Ee=ge(we),Ae=xe<=me;pe=xe;const Se={loaded:xe,total:me,progress:me?xe/me:void 0,bytes:we,rate:Ee||void 0,estimated:Ee&&me&&Ae?(me-xe)/Ee:void 0,event:ye,lengthComputable:me!=null,[fe?"download":"upload"]:!0};he(Se)},le)},progressEventDecorator=(he,fe)=>{const le=he!=null;return[pe=>fe[0]({lengthComputable:le,total:he,loaded:pe}),fe[1]]},asyncDecorator=he=>(...fe)=>utils$1.asap(()=>he(...fe)),isURLSameOrigin=platform.hasStandardBrowserEnv?function he(){const fe=/(msie|trident)/i.test(navigator.userAgent),le=document.createElement("a");let pe;function ge(ye){let xe=ye;return fe&&(le.setAttribute("href",xe),xe=le.href),le.setAttribute("href",xe),{href:le.href,protocol:le.protocol?le.protocol.replace(/:$/,""):"",host:le.host,search:le.search?le.search.replace(/^\?/,""):"",hash:le.hash?le.hash.replace(/^#/,""):"",hostname:le.hostname,port:le.port,pathname:le.pathname.charAt(0)==="/"?le.pathname:"/"+le.pathname}}return pe=ge(window.location.href),function(xe){const me=utils$1.isString(xe)?ge(xe):xe;return me.protocol===pe.protocol&&me.host===pe.host}}():function he(){return function(){return!0}}(),cookies=platform.hasStandardBrowserEnv?{write(he,fe,le,pe,ge,ye){const xe=[he+"="+encodeURIComponent(fe)];utils$1.isNumber(le)&&xe.push("expires="+new Date(le).toGMTString()),utils$1.isString(pe)&&xe.push("path="+pe),utils$1.isString(ge)&&xe.push("domain="+ge),ye===!0&&xe.push("secure"),document.cookie=xe.join("; ")},read(he){const fe=document.cookie.match(new RegExp("(^|;\\s*)("+he+")=([^;]*)"));return fe?decodeURIComponent(fe[3]):null},remove(he){this.write(he,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function isAbsoluteURL(he){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(he)}function combineURLs(he,fe){return fe?he.replace(/\/?\/$/,"")+"/"+fe.replace(/^\/+/,""):he}function buildFullPath(he,fe){return he&&!isAbsoluteURL(fe)?combineURLs(he,fe):fe}const headersToObject=he=>he instanceof AxiosHeaders?{...he}:he;function mergeConfig(he,fe){fe=fe||{};const le={};function pe(Ee,Ae,Se){return utils$1.isPlainObject(Ee)&&utils$1.isPlainObject(Ae)?utils$1.merge.call({caseless:Se},Ee,Ae):utils$1.isPlainObject(Ae)?utils$1.merge({},Ae):utils$1.isArray(Ae)?Ae.slice():Ae}function ge(Ee,Ae,Se){if(utils$1.isUndefined(Ae)){if(!utils$1.isUndefined(Ee))return pe(void 0,Ee,Se)}else return pe(Ee,Ae,Se)}function ye(Ee,Ae){if(!utils$1.isUndefined(Ae))return pe(void 0,Ae)}function xe(Ee,Ae){if(utils$1.isUndefined(Ae)){if(!utils$1.isUndefined(Ee))return pe(void 0,Ee)}else return pe(void 0,Ae)}function me(Ee,Ae,Se){if(Se in fe)return pe(Ee,Ae);if(Se in he)return pe(void 0,Ee)}const we={url:ye,method:ye,data:ye,baseURL:xe,transformRequest:xe,transformResponse:xe,paramsSerializer:xe,timeout:xe,timeoutMessage:xe,withCredentials:xe,withXSRFToken:xe,adapter:xe,responseType:xe,xsrfCookieName:xe,xsrfHeaderName:xe,onUploadProgress:xe,onDownloadProgress:xe,decompress:xe,maxContentLength:xe,maxBodyLength:xe,beforeRedirect:xe,transport:xe,httpAgent:xe,httpsAgent:xe,cancelToken:xe,socketPath:xe,responseEncoding:xe,validateStatus:me,headers:(Ee,Ae)=>ge(headersToObject(Ee),headersToObject(Ae),!0)};return utils$1.forEach(Object.keys(Object.assign({},he,fe)),function(Ae){const Se=we[Ae]||ge,Le=Se(he[Ae],fe[Ae],Ae);utils$1.isUndefined(Le)&&Se!==me||(le[Ae]=Le)}),le}const resolveConfig=he=>{const fe=mergeConfig({},he);let{data:le,withXSRFToken:pe,xsrfHeaderName:ge,xsrfCookieName:ye,headers:xe,auth:me}=fe;fe.headers=xe=AxiosHeaders.from(xe),fe.url=buildURL(buildFullPath(fe.baseURL,fe.url),he.params,he.paramsSerializer),me&&xe.set("Authorization","Basic "+btoa((me.username||"")+":"+(me.password?unescape(encodeURIComponent(me.password)):"")));let we;if(utils$1.isFormData(le)){if(platform.hasStandardBrowserEnv||platform.hasStandardBrowserWebWorkerEnv)xe.setContentType(void 0);else if((we=xe.getContentType())!==!1){const[Ee,...Ae]=we?we.split(";").map(Se=>Se.trim()).filter(Boolean):[];xe.setContentType([Ee||"multipart/form-data",...Ae].join("; "))}}if(platform.hasStandardBrowserEnv&&(pe&&utils$1.isFunction(pe)&&(pe=pe(fe)),pe||pe!==!1&&isURLSameOrigin(fe.url))){const Ee=ge&&ye&&cookies.read(ye);Ee&&xe.set(ge,Ee)}return fe},isXHRAdapterSupported=typeof XMLHttpRequest<"u",xhrAdapter=isXHRAdapterSupported&&function(he){return new Promise(function(le,pe){const ge=resolveConfig(he);let ye=ge.data;const xe=AxiosHeaders.from(ge.headers).normalize();let{responseType:me,onUploadProgress:we,onDownloadProgress:Ee}=ge,Ae,Se,Le,He,Me;function Fe(){He&&He(),Me&&Me(),ge.cancelToken&&ge.cancelToken.unsubscribe(Ae),ge.signal&&ge.signal.removeEventListener("abort",Ae)}let Ue=new XMLHttpRequest;Ue.open(ge.method.toUpperCase(),ge.url,!0),Ue.timeout=ge.timeout;function qe(){if(!Ue)return;const Qe=AxiosHeaders.from("getAllResponseHeaders"in Ue&&Ue.getAllResponseHeaders()),nt={data:!me||me==="text"||me==="json"?Ue.responseText:Ue.response,status:Ue.status,statusText:Ue.statusText,headers:Qe,config:he,request:Ue};settle(function(mt){le(mt),Fe()},function(mt){pe(mt),Fe()},nt),Ue=null}"onloadend"in Ue?Ue.onloadend=qe:Ue.onreadystatechange=function(){!Ue||Ue.readyState!==4||Ue.status===0&&!(Ue.responseURL&&Ue.responseURL.indexOf("file:")===0)||setTimeout(qe)},Ue.onabort=function(){Ue&&(pe(new AxiosError("Request aborted",AxiosError.ECONNABORTED,he,Ue)),Ue=null)},Ue.onerror=function(){pe(new AxiosError("Network Error",AxiosError.ERR_NETWORK,he,Ue)),Ue=null},Ue.ontimeout=function(){let ot=ge.timeout?"timeout of "+ge.timeout+"ms exceeded":"timeout exceeded";const nt=ge.transitional||transitionalDefaults;ge.timeoutErrorMessage&&(ot=ge.timeoutErrorMessage),pe(new AxiosError(ot,nt.clarifyTimeoutError?AxiosError.ETIMEDOUT:AxiosError.ECONNABORTED,he,Ue)),Ue=null},ye===void 0&&xe.setContentType(null),"setRequestHeader"in Ue&&utils$1.forEach(xe.toJSON(),function(ot,nt){Ue.setRequestHeader(nt,ot)}),utils$1.isUndefined(ge.withCredentials)||(Ue.withCredentials=!!ge.withCredentials),me&&me!=="json"&&(Ue.responseType=ge.responseType),Ee&&([Le,Me]=progressEventReducer(Ee,!0),Ue.addEventListener("progress",Le)),we&&Ue.upload&&([Se,He]=progressEventReducer(we),Ue.upload.addEventListener("progress",Se),Ue.upload.addEventListener("loadend",He)),(ge.cancelToken||ge.signal)&&(Ae=Qe=>{Ue&&(pe(!Qe||Qe.type?new CanceledError(null,he,Ue):Qe),Ue.abort(),Ue=null)},ge.cancelToken&&ge.cancelToken.subscribe(Ae),ge.signal&&(ge.signal.aborted?Ae():ge.signal.addEventListener("abort",Ae)));const $e=parseProtocol(ge.url);if($e&&platform.protocols.indexOf($e)===-1){pe(new AxiosError("Unsupported protocol "+$e+":",AxiosError.ERR_BAD_REQUEST,he));return}Ue.send(ye||null)})},composeSignals=(he,fe)=>{let le=new AbortController,pe;const ge=function(we){if(!pe){pe=!0,xe();const Ee=we instanceof Error?we:this.reason;le.abort(Ee instanceof AxiosError?Ee:new CanceledError(Ee instanceof Error?Ee.message:Ee))}};let ye=fe&&setTimeout(()=>{ge(new AxiosError(`timeout ${fe} of ms exceeded`,AxiosError.ETIMEDOUT))},fe);const xe=()=>{he&&(ye&&clearTimeout(ye),ye=null,he.forEach(we=>{we&&(we.removeEventListener?we.removeEventListener("abort",ge):we.unsubscribe(ge))}),he=null)};he.forEach(we=>we&&we.addEventListener&&we.addEventListener("abort",ge));const{signal:me}=le;return me.unsubscribe=xe,[me,()=>{ye&&clearTimeout(ye),ye=null}]},streamChunk=function*(he,fe){let le=he.byteLength;if(!fe||le<fe){yield he;return}let pe=0,ge;for(;pe<le;)ge=pe+fe,yield he.slice(pe,ge),pe=ge},readBytes=async function*(he,fe,le){for await(const pe of he)yield*streamChunk(ArrayBuffer.isView(pe)?pe:await le(String(pe)),fe)},trackStream=(he,fe,le,pe,ge)=>{const ye=readBytes(he,fe,ge);let xe=0,me,we=Ee=>{me||(me=!0,pe&&pe(Ee))};return new ReadableStream({async pull(Ee){try{const{done:Ae,value:Se}=await ye.next();if(Ae){we(),Ee.close();return}let Le=Se.byteLength;if(le){let He=xe+=Le;le(He)}Ee.enqueue(new Uint8Array(Se))}catch(Ae){throw we(Ae),Ae}},cancel(Ee){return we(Ee),ye.return()}},{highWaterMark:2})},isFetchSupported=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",isReadableStreamSupported=isFetchSupported&&typeof ReadableStream=="function",encodeText=isFetchSupported&&(typeof TextEncoder=="function"?(he=>fe=>he.encode(fe))(new TextEncoder):async he=>new Uint8Array(await new Response(he).arrayBuffer())),test=(he,...fe)=>{try{return!!he(...fe)}catch{return!1}},supportsRequestStream=isReadableStreamSupported&&test(()=>{let he=!1;const fe=new Request(platform.origin,{body:new ReadableStream,method:"POST",get duplex(){return he=!0,"half"}}).headers.has("Content-Type");return he&&!fe}),DEFAULT_CHUNK_SIZE=64*1024,supportsResponseStream=isReadableStreamSupported&&test(()=>utils$1.isReadableStream(new Response("").body)),resolvers={stream:supportsResponseStream&&(he=>he.body)};isFetchSupported&&(he=>{["text","arrayBuffer","blob","formData","stream"].forEach(fe=>{!resolvers[fe]&&(resolvers[fe]=utils$1.isFunction(he[fe])?le=>le[fe]():(le,pe)=>{throw new AxiosError(`Response type '${fe}' is not supported`,AxiosError.ERR_NOT_SUPPORT,pe)})})})(new Response);const getBodyLength=async he=>{if(he==null)return 0;if(utils$1.isBlob(he))return he.size;if(utils$1.isSpecCompliantForm(he))return(await new Request(he).arrayBuffer()).byteLength;if(utils$1.isArrayBufferView(he)||utils$1.isArrayBuffer(he))return he.byteLength;if(utils$1.isURLSearchParams(he)&&(he=he+""),utils$1.isString(he))return(await encodeText(he)).byteLength},resolveBodyLength=async(he,fe)=>{const le=utils$1.toFiniteNumber(he.getContentLength());return le??getBodyLength(fe)},fetchAdapter=isFetchSupported&&(async he=>{let{url:fe,method:le,data:pe,signal:ge,cancelToken:ye,timeout:xe,onDownloadProgress:me,onUploadProgress:we,responseType:Ee,headers:Ae,withCredentials:Se="same-origin",fetchOptions:Le}=resolveConfig(he);Ee=Ee?(Ee+"").toLowerCase():"text";let[He,Me]=ge||ye||xe?composeSignals([ge,ye],xe):[],Fe,Ue;const qe=()=>{!Fe&&setTimeout(()=>{He&&He.unsubscribe()}),Fe=!0};let $e;try{if(we&&supportsRequestStream&&le!=="get"&&le!=="head"&&($e=await resolveBodyLength(Ae,pe))!==0){let ct=new Request(fe,{method:"POST",body:pe,duplex:"half"}),mt;if(utils$1.isFormData(pe)&&(mt=ct.headers.get("content-type"))&&Ae.setContentType(mt),ct.body){const[gt,Ht]=progressEventDecorator($e,progressEventReducer(asyncDecorator(we)));pe=trackStream(ct.body,DEFAULT_CHUNK_SIZE,gt,Ht,encodeText)}}utils$1.isString(Se)||(Se=Se?"include":"omit"),Ue=new Request(fe,{...Le,signal:He,method:le.toUpperCase(),headers:Ae.normalize().toJSON(),body:pe,duplex:"half",credentials:Se});let Qe=await fetch(Ue);const ot=supportsResponseStream&&(Ee==="stream"||Ee==="response");if(supportsResponseStream&&(me||ot)){const ct={};["status","statusText","headers"].forEach(jt=>{ct[jt]=Qe[jt]});const mt=utils$1.toFiniteNumber(Qe.headers.get("content-length")),[gt,Ht]=me&&progressEventDecorator(mt,progressEventReducer(asyncDecorator(me),!0))||[];Qe=new Response(trackStream(Qe.body,DEFAULT_CHUNK_SIZE,gt,()=>{Ht&&Ht(),ot&&qe()},encodeText),ct)}Ee=Ee||"text";let nt=await resolvers[utils$1.findKey(resolvers,Ee)||"text"](Qe,he);return!ot&&qe(),Me&&Me(),await new Promise((ct,mt)=>{settle(ct,mt,{data:nt,headers:AxiosHeaders.from(Qe.headers),status:Qe.status,statusText:Qe.statusText,config:he,request:Ue})})}catch(Qe){throw qe(),Qe&&Qe.name==="TypeError"&&/fetch/i.test(Qe.message)?Object.assign(new AxiosError("Network Error",AxiosError.ERR_NETWORK,he,Ue),{cause:Qe.cause||Qe}):AxiosError.from(Qe,Qe&&Qe.code,he,Ue)}}),knownAdapters={http:httpAdapter,xhr:xhrAdapter,fetch:fetchAdapter};utils$1.forEach(knownAdapters,(he,fe)=>{if(he){try{Object.defineProperty(he,"name",{value:fe})}catch{}Object.defineProperty(he,"adapterName",{value:fe})}});const renderReason=he=>`- ${he}`,isResolvedHandle=he=>utils$1.isFunction(he)||he===null||he===!1,adapters={getAdapter:he=>{he=utils$1.isArray(he)?he:[he];const{length:fe}=he;let le,pe;const ge={};for(let ye=0;ye<fe;ye++){le=he[ye];let xe;if(pe=le,!isResolvedHandle(le)&&(pe=knownAdapters[(xe=String(le)).toLowerCase()],pe===void 0))throw new AxiosError(`Unknown adapter '${xe}'`);if(pe)break;ge[xe||"#"+ye]=pe}if(!pe){const ye=Object.entries(ge).map(([me,we])=>`adapter ${me} `+(we===!1?"is not supported by the environment":"is not available in the build"));let xe=fe?ye.length>1?`since :
`+ye.map(renderReason).join(`
`):" "+renderReason(ye[0]):"as no adapter specified";throw new AxiosError("There is no suitable adapter to dispatch the request "+xe,"ERR_NOT_SUPPORT")}return pe},adapters:knownAdapters};function throwIfCancellationRequested(he){if(he.cancelToken&&he.cancelToken.throwIfRequested(),he.signal&&he.signal.aborted)throw new CanceledError(null,he)}function dispatchRequest(he){return throwIfCancellationRequested(he),he.headers=AxiosHeaders.from(he.headers),he.data=transformData.call(he,he.transformRequest),["post","put","patch"].indexOf(he.method)!==-1&&he.headers.setContentType("application/x-www-form-urlencoded",!1),adapters.getAdapter(he.adapter||defaults.adapter)(he).then(function(pe){return throwIfCancellationRequested(he),pe.data=transformData.call(he,he.transformResponse,pe),pe.headers=AxiosHeaders.from(pe.headers),pe},function(pe){return isCancel(pe)||(throwIfCancellationRequested(he),pe&&pe.response&&(pe.response.data=transformData.call(he,he.transformResponse,pe.response),pe.response.headers=AxiosHeaders.from(pe.response.headers))),Promise.reject(pe)})}const VERSION="1.7.4",validators$1={};["object","boolean","number","function","string","symbol"].forEach((he,fe)=>{validators$1[he]=function(pe){return typeof pe===he||"a"+(fe<1?"n ":" ")+he}});const deprecatedWarnings={};validators$1.transitional=function he(fe,le,pe){function ge(ye,xe){return"[Axios v"+VERSION+"] Transitional option '"+ye+"'"+xe+(pe?". "+pe:"")}return(ye,xe,me)=>{if(fe===!1)throw new AxiosError(ge(xe," has been removed"+(le?" in "+le:"")),AxiosError.ERR_DEPRECATED);return le&&!deprecatedWarnings[xe]&&(deprecatedWarnings[xe]=!0,console.warn(ge(xe," has been deprecated since v"+le+" and will be removed in the near future"))),fe?fe(ye,xe,me):!0}};function assertOptions(he,fe,le){if(typeof he!="object")throw new AxiosError("options must be an object",AxiosError.ERR_BAD_OPTION_VALUE);const pe=Object.keys(he);let ge=pe.length;for(;ge-- >0;){const ye=pe[ge],xe=fe[ye];if(xe){const me=he[ye],we=me===void 0||xe(me,ye,he);if(we!==!0)throw new AxiosError("option "+ye+" must be "+we,AxiosError.ERR_BAD_OPTION_VALUE);continue}if(le!==!0)throw new AxiosError("Unknown option "+ye,AxiosError.ERR_BAD_OPTION)}}const validator={assertOptions,validators:validators$1},validators=validator.validators;class Axios{constructor(fe){this.defaults=fe,this.interceptors={request:new InterceptorManager,response:new InterceptorManager}}async request(fe,le){try{return await this._request(fe,le)}catch(pe){if(pe instanceof Error){let ge;Error.captureStackTrace?Error.captureStackTrace(ge={}):ge=new Error;const ye=ge.stack?ge.stack.replace(/^.+\n/,""):"";try{pe.stack?ye&&!String(pe.stack).endsWith(ye.replace(/^.+\n.+\n/,""))&&(pe.stack+=`
`+ye):pe.stack=ye}catch{}}throw pe}}_request(fe,le){typeof fe=="string"?(le=le||{},le.url=fe):le=fe||{},le=mergeConfig(this.defaults,le);const{transitional:pe,paramsSerializer:ge,headers:ye}=le;pe!==void 0&&validator.assertOptions(pe,{silentJSONParsing:validators.transitional(validators.boolean),forcedJSONParsing:validators.transitional(validators.boolean),clarifyTimeoutError:validators.transitional(validators.boolean)},!1),ge!=null&&(utils$1.isFunction(ge)?le.paramsSerializer={serialize:ge}:validator.assertOptions(ge,{encode:validators.function,serialize:validators.function},!0)),le.method=(le.method||this.defaults.method||"get").toLowerCase();let xe=ye&&utils$1.merge(ye.common,ye[le.method]);ye&&utils$1.forEach(["delete","get","head","post","put","patch","common"],Me=>{delete ye[Me]}),le.headers=AxiosHeaders.concat(xe,ye);const me=[];let we=!0;this.interceptors.request.forEach(function(Fe){typeof Fe.runWhen=="function"&&Fe.runWhen(le)===!1||(we=we&&Fe.synchronous,me.unshift(Fe.fulfilled,Fe.rejected))});const Ee=[];this.interceptors.response.forEach(function(Fe){Ee.push(Fe.fulfilled,Fe.rejected)});let Ae,Se=0,Le;if(!we){const Me=[dispatchRequest.bind(this),void 0];for(Me.unshift.apply(Me,me),Me.push.apply(Me,Ee),Le=Me.length,Ae=Promise.resolve(le);Se<Le;)Ae=Ae.then(Me[Se++],Me[Se++]);return Ae}Le=me.length;let He=le;for(Se=0;Se<Le;){const Me=me[Se++],Fe=me[Se++];try{He=Me(He)}catch(Ue){Fe.call(this,Ue);break}}try{Ae=dispatchRequest.call(this,He)}catch(Me){return Promise.reject(Me)}for(Se=0,Le=Ee.length;Se<Le;)Ae=Ae.then(Ee[Se++],Ee[Se++]);return Ae}getUri(fe){fe=mergeConfig(this.defaults,fe);const le=buildFullPath(fe.baseURL,fe.url);return buildURL(le,fe.params,fe.paramsSerializer)}}utils$1.forEach(["delete","get","head","options"],function he(fe){Axios.prototype[fe]=function(le,pe){return this.request(mergeConfig(pe||{},{method:fe,url:le,data:(pe||{}).data}))}});utils$1.forEach(["post","put","patch"],function he(fe){function le(pe){return function(ye,xe,me){return this.request(mergeConfig(me||{},{method:fe,headers:pe?{"Content-Type":"multipart/form-data"}:{},url:ye,data:xe}))}}Axios.prototype[fe]=le(),Axios.prototype[fe+"Form"]=le(!0)});class CancelToken{constructor(fe){if(typeof fe!="function")throw new TypeError("executor must be a function.");let le;this.promise=new Promise(function(ye){le=ye});const pe=this;this.promise.then(ge=>{if(!pe._listeners)return;let ye=pe._listeners.length;for(;ye-- >0;)pe._listeners[ye](ge);pe._listeners=null}),this.promise.then=ge=>{let ye;const xe=new Promise(me=>{pe.subscribe(me),ye=me}).then(ge);return xe.cancel=function(){pe.unsubscribe(ye)},xe},fe(function(ye,xe,me){pe.reason||(pe.reason=new CanceledError(ye,xe,me),le(pe.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(fe){if(this.reason){fe(this.reason);return}this._listeners?this._listeners.push(fe):this._listeners=[fe]}unsubscribe(fe){if(!this._listeners)return;const le=this._listeners.indexOf(fe);le!==-1&&this._listeners.splice(le,1)}static source(){let fe;return{token:new CancelToken(function(ge){fe=ge}),cancel:fe}}}function spread(he){return function(le){return he.apply(null,le)}}function isAxiosError(he){return utils$1.isObject(he)&&he.isAxiosError===!0}const HttpStatusCode={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(HttpStatusCode).forEach(([he,fe])=>{HttpStatusCode[fe]=he});function createInstance(he){const fe=new Axios(he),le=bind(Axios.prototype.request,fe);return utils$1.extend(le,Axios.prototype,fe,{allOwnKeys:!0}),utils$1.extend(le,fe,null,{allOwnKeys:!0}),le.create=function(ge){return createInstance(mergeConfig(he,ge))},le}const axios=createInstance(defaults);axios.Axios=Axios;axios.CanceledError=CanceledError;axios.CancelToken=CancelToken;axios.isCancel=isCancel;axios.VERSION=VERSION;axios.toFormData=toFormData;axios.AxiosError=AxiosError;axios.Cancel=axios.CanceledError;axios.all=function he(fe){return Promise.all(fe)};axios.spread=spread;axios.isAxiosError=isAxiosError;axios.mergeConfig=mergeConfig;axios.AxiosHeaders=AxiosHeaders;axios.formToJSON=he=>formDataToJSON(utils$1.isHTMLForm(he)?new FormData(he):he);axios.getAdapter=adapters.getAdapter;axios.HttpStatusCode=HttpStatusCode;axios.default=axios;async function aptosClient(he){var fe;const{params:le,method:pe,url:ge,headers:ye,body:xe,overrides:me}=he,we={headers:ye,method:pe,url:ge,params:le,data:xe,withCredentials:(fe=me==null?void 0:me.WITH_CREDENTIALS)!=null?fe:!0};try{const Ee=await axios(we);return{status:Ee.status,statusText:Ee.statusText,data:Ee.data,headers:Ee.headers,config:Ee.config}}catch(Ee){const Ae=Ee;if(Ae.response)return Ae.response;throw Ee}}var l$2=class{constructor(fe){this.network=(fe==null?void 0:fe.network)??"devnet",this.fullnode=fe==null?void 0:fe.fullnode,this.faucet=fe==null?void 0:fe.faucet,this.pepper=fe==null?void 0:fe.pepper,this.prover=fe==null?void 0:fe.prover,this.indexer=fe==null?void 0:fe.indexer,this.client=(fe==null?void 0:fe.client)??{provider:aptosClient},this.clientConfig=(fe==null?void 0:fe.clientConfig)??{},this.fullnodeConfig=(fe==null?void 0:fe.fullnodeConfig)??{},this.indexerConfig=(fe==null?void 0:fe.indexerConfig)??{},this.faucetConfig=(fe==null?void 0:fe.faucetConfig)??{}}getRequestUrl(fe){switch(fe){case"Fullnode":if(this.fullnode!==void 0)return this.fullnode;if(this.network==="custom")throw new Error("Please provide a custom full node url");return o$3[this.network];case"Faucet":if(this.faucet!==void 0)return this.faucet;if(this.network==="custom")throw new Error("Please provide a custom faucet url");return p$3[this.network];case"Indexer":if(this.indexer!==void 0)return this.indexer;if(this.network==="custom")throw new Error("Please provide a custom indexer url");return s[this.network];case"Pepper":if(this.pepper!==void 0)return this.pepper;if(this.network==="custom")throw new Error("Please provide a custom pepper service url");return a$2[this.network];case"Prover":if(this.prover!==void 0)return this.prover;if(this.network==="custom")throw new Error("Please provide a custom prover service url");return n$2[this.network];default:throw Error(`apiType ${fe} is not supported`)}}isPepperServiceRequest(fe){return a$2[this.network]===fe}isProverServiceRequest(fe){return n$2[this.network]===fe}},u$1={typeParameters:[{constraints:[]}],parameters:[new S$5,new p$9]};async function y$1(he){let{aptosConfig:fe,sender:le,recipient:pe,amount:ge,coinType:ye,options:xe}=he;return h$3({aptosConfig:fe,sender:le,data:{function:"0x1::aptos_account::transfer_coins",typeArguments:[ye??o$i],functionArguments:[pe,ge],abi:u$1},options:xe})}var t$1=class{constructor(fe){this.config=fe}async transferCoinTransaction(fe){return y$1({aptosConfig:this.config,...fe})}},C$1={BOOLEAN:"bool",U8:"u8",U16:"u16",U32:"u32",U64:"u64",U128:"u128",U256:"u256",ADDRESS:"address",STRING:"0x1::string::String",ARRAY:"vector<u8>"},l$1="0x4::token::Token";async function It(he){let{aptosConfig:fe,digitalAssetAddress:le}=he,pe={token_data_id:{_eq:d$d.from(le).toStringLong()}};return(await a$c({aptosConfig:fe,query:{query:D$6,variables:{where_condition:pe}},originMethod:"getDigitalAssetData"})).current_token_datas_v2[0]}async function Pt(he){let{aptosConfig:fe,digitalAssetAddress:le}=he,pe={token_data_id:{_eq:d$d.from(le).toStringLong()},amount:{_gt:0}};return(await a$c({aptosConfig:fe,query:{query:x$8,variables:{where_condition:pe}},originMethod:"getCurrentDigitalAssetOwnership"})).current_token_ownerships_v2[0]}async function bt(he){let{aptosConfig:fe,ownerAddress:le,options:pe}=he,ge={owner_address:{_eq:d$d.from(le).toStringLong()},amount:{_gt:0}},ye={query:x$8,variables:{where_condition:ge,offset:pe==null?void 0:pe.offset,limit:pe==null?void 0:pe.limit,order_by:pe==null?void 0:pe.orderBy}};return(await a$c({aptosConfig:fe,query:ye,originMethod:"getOwnedDigitalAssets"})).current_token_ownerships_v2}async function St(he){let{aptosConfig:fe,digitalAssetAddress:le,options:pe}=he,ge={token_data_id:{_eq:d$d.from(le).toStringLong()}},ye={query:Q$2,variables:{where_condition:ge,offset:pe==null?void 0:pe.offset,limit:pe==null?void 0:pe.limit,order_by:pe==null?void 0:pe.orderBy}};return(await a$c({aptosConfig:fe,query:ye,originMethod:"getDigitalAssetActivity"})).token_activities_v2}var F={typeParameters:[],parameters:[new b$6(E$5()),new p$9,new b$6(E$5()),new b$6(E$5()),new c$n,new c$n,new c$n,new c$n,new c$n,new c$n,new c$n,new c$n,new c$n,new p$9,new p$9]};async function Dt(he){let{aptosConfig:fe,options:le,creator:pe}=he;return h$3({aptosConfig:fe,sender:pe.accountAddress,data:{function:"0x4::aptos_token::create_collection",functionArguments:[new a$9(he.description),new y$4(he.maxSupply??_$l),new a$9(he.name),new a$9(he.uri),new d$b(he.mutableDescription??!0),new d$b(he.mutableRoyalty??!0),new d$b(he.mutableURI??!0),new d$b(he.mutableTokenDescription??!0),new d$b(he.mutableTokenName??!0),new d$b(he.mutableTokenProperties??!0),new d$b(he.mutableTokenURI??!0),new d$b(he.tokensBurnableByCreator??!0),new d$b(he.tokensFreezableByCreator??!0),new y$4(he.royaltyNumerator??0),new y$4(he.royaltyDenominator??1)],abi:F},options:le})}async function v$1(he){let{aptosConfig:fe,options:le}=he,pe=le==null?void 0:le.where;le!=null&&le.tokenStandard&&(pe.token_standard={_eq:(le==null?void 0:le.tokenStandard)??"v2"});let ge={query:T$9,variables:{where_condition:pe,offset:le==null?void 0:le.offset,limit:le==null?void 0:le.limit}};return(await a$c({aptosConfig:fe,query:ge,originMethod:"getCollectionData"})).current_collections_v2[0]}async function ht(he){let{aptosConfig:fe,creatorAddress:le,collectionName:pe,options:ge}=he,ye=d$d.from(le),xe={collection_name:{_eq:pe},creator_address:{_eq:ye.toStringLong()}};return ge!=null&&ge.tokenStandard&&(xe.token_standard={_eq:(ge==null?void 0:ge.tokenStandard)??"v2"}),v$1({aptosConfig:fe,options:{...ge,where:xe}})}async function vt(he){let{aptosConfig:fe,creatorAddress:le,options:pe}=he,ge={creator_address:{_eq:d$d.from(le).toStringLong()}};return pe!=null&&pe.tokenStandard&&(ge.token_standard={_eq:(pe==null?void 0:pe.tokenStandard)??"v2"}),v$1({aptosConfig:fe,options:{...pe,where:ge}})}async function xt(he){let{aptosConfig:fe,collectionId:le,options:pe}=he,ge={collection_id:{_eq:d$d.from(le).toStringLong()}};return pe!=null&&pe.tokenStandard&&(ge.token_standard={_eq:(pe==null?void 0:pe.tokenStandard)??"v2"}),v$1({aptosConfig:fe,options:{...pe,where:ge}})}async function Gt(he){let{creatorAddress:fe,collectionName:le,options:pe,aptosConfig:ge}=he,ye=d$d.from(fe),xe={collection_name:{_eq:le},creator_address:{_eq:ye.toStringLong()}};return pe!=null&&pe.tokenStandard&&(xe.token_standard={_eq:(pe==null?void 0:pe.tokenStandard)??"v2"}),(await v$1({aptosConfig:ge,options:{where:xe}})).collection_id}var N={typeParameters:[],parameters:[new b$6(E$5()),new b$6(E$5()),new b$6(E$5()),new b$6(E$5()),new y$5(new b$6(E$5())),new y$5(new b$6(E$5())),new y$5(y$5.u8())]};async function Bt(he){let{aptosConfig:fe,options:le,creator:pe,collection:ge,description:ye,name:xe,uri:me,propertyKeys:we,propertyTypes:Ee,propertyValues:Ae}=he,Se=Ee==null?void 0:Ee.map(Le=>C$1[Le]);return h$3({aptosConfig:fe,sender:pe.accountAddress,data:{function:"0x4::aptos_token::mint",functionArguments:[new a$9(ge),new a$9(ye),new a$9(xe),new a$9(me),t$8.MoveString(we??[]),t$8.MoveString(Se??[]),K(Ae??[],Se??[])],abi:N},options:le})}var Q={typeParameters:[{constraints:["key"]}],parameters:[new b$6(j$3(new h$b(0))),new S$5]};async function Et(he){let{aptosConfig:fe,sender:le,digitalAssetAddress:pe,recipient:ge,digitalAssetType:ye,options:xe}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x1::object::transfer",typeArguments:[ye??l$1],functionArguments:[d$d.from(pe),d$d.from(ge)],abi:Q},options:xe})}var Y={typeParameters:[],parameters:[new b$6(E$5()),new b$6(E$5()),new b$6(E$5()),new b$6(E$5()),new y$5(new b$6(E$5())),new y$5(new b$6(E$5())),new y$5(y$5.u8()),new S$5]};async function Ot(he){let{aptosConfig:fe,account:le,collection:pe,description:ge,name:ye,uri:xe,recipient:me,propertyKeys:we,propertyTypes:Ee,propertyValues:Ae,options:Se}=he;if((we==null?void 0:we.length)!==(Ae==null?void 0:Ae.length))throw new Error("Property keys and property values counts do not match");if((Ee==null?void 0:Ee.length)!==(Ae==null?void 0:Ae.length))throw new Error("Property types and property values counts do not match");let Le=Ee==null?void 0:Ee.map(He=>C$1[He]);return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::mint_soul_bound",functionArguments:[pe,ge,ye,xe,t$8.MoveString(we??[]),t$8.MoveString(Le??[]),K(Ae??[],Le??[]),me],abi:Y},options:Se})}var L$1={typeParameters:[{constraints:["key"]}],parameters:[new b$6(j$3(new h$b(0)))]};async function qt(he){let{aptosConfig:fe,creator:le,digitalAssetAddress:pe,digitalAssetType:ge,options:ye}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::burn",typeArguments:[ge??l$1],functionArguments:[d$d.from(pe)],abi:L$1},options:ye})}var z={typeParameters:[{constraints:["key"]}],parameters:[new b$6(j$3(new h$b(0)))]};async function Vt(he){let{aptosConfig:fe,creator:le,digitalAssetAddress:pe,digitalAssetType:ge,options:ye}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::freeze_transfer",typeArguments:[ge??l$1],functionArguments:[pe],abi:z},options:ye})}var j={typeParameters:[{constraints:["key"]}],parameters:[new b$6(j$3(new h$b(0)))]};async function Rt(he){let{aptosConfig:fe,creator:le,digitalAssetAddress:pe,digitalAssetType:ge,options:ye}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::unfreeze_transfer",typeArguments:[ge??l$1],functionArguments:[pe],abi:j},options:ye})}var W={typeParameters:[{constraints:["key"]}],parameters:[new b$6(j$3(new h$b(0))),new b$6(E$5())]};async function Mt(he){let{aptosConfig:fe,creator:le,description:pe,digitalAssetAddress:ge,digitalAssetType:ye,options:xe}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::set_description",typeArguments:[ye??l$1],functionArguments:[d$d.from(ge),new a$9(pe)],abi:W},options:xe})}var X={typeParameters:[{constraints:["key"]}],parameters:[new b$6(j$3(new h$b(0))),new b$6(E$5())]};async function Kt(he){let{aptosConfig:fe,creator:le,name:pe,digitalAssetAddress:ge,digitalAssetType:ye,options:xe}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::set_name",typeArguments:[ye??l$1],functionArguments:[d$d.from(ge),new a$9(pe)],abi:X},options:xe})}var H={typeParameters:[{constraints:["key"]}],parameters:[new b$6(j$3(new h$b(0))),new b$6(E$5())]};async function Ut(he){let{aptosConfig:fe,creator:le,uri:pe,digitalAssetAddress:ge,digitalAssetType:ye,options:xe}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::set_uri",typeArguments:[ye??l$1],functionArguments:[d$d.from(ge),new a$9(pe)],abi:H},options:xe})}var J={typeParameters:[{constraints:["key"]}],parameters:[new b$6(j$3(new h$b(0))),new b$6(E$5()),new b$6(E$5()),y$5.u8()]};async function Ft(he){let{aptosConfig:fe,creator:le,propertyKey:pe,propertyType:ge,propertyValue:ye,digitalAssetAddress:xe,digitalAssetType:me,options:we}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::add_property",typeArguments:[me??l$1],functionArguments:[d$d.from(xe),new a$9(pe),new a$9(C$1[ge]),t$8.U8(B(ye,C$1[ge]))],abi:J},options:we})}var Z={typeParameters:[{constraints:["key"]}],parameters:[new b$6(j$3(new h$b(0))),new b$6(E$5())]};async function Nt(he){let{aptosConfig:fe,creator:le,propertyKey:pe,digitalAssetAddress:ge,digitalAssetType:ye,options:xe}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::remove_property",typeArguments:[ye??l$1],functionArguments:[d$d.from(ge),new a$9(pe)],abi:Z},options:xe})}var $={typeParameters:[{constraints:["key"]}],parameters:[new b$6(j$3(new h$b(0))),new b$6(E$5()),new b$6(E$5()),y$5.u8()]};async function Qt(he){let{aptosConfig:fe,creator:le,propertyKey:pe,propertyType:ge,propertyValue:ye,digitalAssetAddress:xe,digitalAssetType:me,options:we}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::update_property",typeArguments:[me??l$1],functionArguments:[d$d.from(xe),new a$9(pe),new a$9(C$1[ge]),B(ye,C$1[ge])],abi:$},options:we})}var tt={typeParameters:[{constraints:["key"]},{constraints:[]}],parameters:[new b$6(j$3(new h$b(0))),new b$6(E$5()),new h$b(1)]};async function Yt(he){let{aptosConfig:fe,creator:le,propertyKey:pe,propertyType:ge,propertyValue:ye,digitalAssetAddress:xe,digitalAssetType:me,options:we}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::add_typed_property",typeArguments:[me??l$1,C$1[ge]],functionArguments:[d$d.from(xe),new a$9(pe),ye],abi:tt},options:we})}var et={typeParameters:[{constraints:["key"]},{constraints:[]}],parameters:[new b$6(j$3(new h$b(0))),new b$6(E$5()),new h$b(1)]};async function Lt(he){let{aptosConfig:fe,creator:le,propertyKey:pe,propertyType:ge,propertyValue:ye,digitalAssetAddress:xe,digitalAssetType:me,options:we}=he;return h$3({aptosConfig:fe,sender:le.accountAddress,data:{function:"0x4::aptos_token::update_typed_property",typeArguments:[me??l$1,C$1[ge]],functionArguments:[d$d.from(xe),new a$9(pe),ye],abi:et},options:we})}function K(he,fe){let le=new Array;return fe.forEach((pe,ge)=>{le.push(B(he[ge],pe))}),le}function B(he,fe){let le=j$2(fe);return U$1(he,le,0,[]).bcsToBytes()}var L=class{constructor(he){this.config=he}async getCollectionData(he){await i$d({config:this.config,minimumLedgerVersion:he.minimumLedgerVersion,processorType:"token_v2_processor"});let{creatorAddress:fe,collectionName:le,options:pe}=he,ge=d$d.from(fe),ye={collection_name:{_eq:le},creator_address:{_eq:ge.toStringLong()}};return pe!=null&&pe.tokenStandard&&(ye.token_standard={_eq:(pe==null?void 0:pe.tokenStandard)??"v2"}),v$1({aptosConfig:this.config,options:{where:ye}})}async getCollectionDataByCreatorAddressAndCollectionName(he){return await i$d({config:this.config,minimumLedgerVersion:he.minimumLedgerVersion,processorType:"token_v2_processor"}),ht({aptosConfig:this.config,...he})}async getCollectionDataByCreatorAddress(he){return await i$d({config:this.config,minimumLedgerVersion:he.minimumLedgerVersion,processorType:"token_v2_processor"}),vt({aptosConfig:this.config,...he})}async getCollectionDataByCollectionId(he){return await i$d({config:this.config,minimumLedgerVersion:he.minimumLedgerVersion,processorType:"token_v2_processor"}),xt({aptosConfig:this.config,...he})}async getCollectionId(he){return await i$d({config:this.config,minimumLedgerVersion:he.minimumLedgerVersion,processorType:"token_v2_processor"}),Gt({aptosConfig:this.config,...he})}async getDigitalAssetData(he){return await i$d({config:this.config,minimumLedgerVersion:he.minimumLedgerVersion,processorType:"token_v2_processor"}),It({aptosConfig:this.config,...he})}async getCurrentDigitalAssetOwnership(he){return await i$d({config:this.config,minimumLedgerVersion:he.minimumLedgerVersion,processorType:"token_v2_processor"}),Pt({aptosConfig:this.config,...he})}async getOwnedDigitalAssets(he){return await i$d({config:this.config,minimumLedgerVersion:he.minimumLedgerVersion,processorType:"token_v2_processor"}),bt({aptosConfig:this.config,...he})}async getDigitalAssetActivity(he){return await i$d({config:this.config,minimumLedgerVersion:he.minimumLedgerVersion,processorType:"token_v2_processor"}),St({aptosConfig:this.config,...he})}async createCollectionTransaction(he){return Dt({aptosConfig:this.config,...he})}async mintDigitalAssetTransaction(he){return Bt({aptosConfig:this.config,...he})}async transferDigitalAssetTransaction(he){return Et({aptosConfig:this.config,...he})}async mintSoulBoundTransaction(he){return Ot({aptosConfig:this.config,...he})}async burnDigitalAssetTransaction(he){return qt({aptosConfig:this.config,...he})}async freezeDigitalAssetTransaferTransaction(he){return Vt({aptosConfig:this.config,...he})}async unfreezeDigitalAssetTransaferTransaction(he){return Rt({aptosConfig:this.config,...he})}async setDigitalAssetDescriptionTransaction(he){return Mt({aptosConfig:this.config,...he})}async setDigitalAssetNameTransaction(he){return Kt({aptosConfig:this.config,...he})}async setDigitalAssetURITransaction(he){return Ut({aptosConfig:this.config,...he})}async addDigitalAssetPropertyTransaction(he){return Ft({aptosConfig:this.config,...he})}async removeDigitalAssetPropertyTransaction(he){return Nt({aptosConfig:this.config,...he})}async updateDigitalAssetPropertyTransaction(he){return Qt({aptosConfig:this.config,...he})}async addDigitalAssetTypedPropertyTransaction(he){return Yt({aptosConfig:this.config,...he})}async updateDigitalAssetTypedPropertyTransaction(he){return Lt({aptosConfig:this.config,...he})}},t=class{constructor(he){this.config=new l$2(he),this.account=new l$4(this.config),this.ans=new A(this.config),this.coin=new t$1(this.config),this.digitalAsset=new L(this.config),this.event=new i$2(this.config),this.faucet=new i$1(this.config),this.fungibleAsset=new a(this.config),this.general=new p(this.config),this.staking=new t$2(this.config),this.transaction=new h$2(this.config),this.table=new a$a(this.config),this.keyless=new i(this.config),this.object=new t$3(this.config)}};function e(he,fe,le){Object.getOwnPropertyNames(fe.prototype).forEach(pe=>{let ge=Object.getOwnPropertyDescriptor(fe.prototype,pe);ge&&(ge.value=function(...ye){return this[le][pe](...ye)},Object.defineProperty(he.prototype,pe,ge))})}e(t,l$4,"account");e(t,A,"ans");e(t,t$1,"coin");e(t,L,"digitalAsset");e(t,i$2,"event");e(t,i$1,"faucet");e(t,a,"fungibleAsset");e(t,p,"general");e(t,t$2,"staking");e(t,h$2,"transaction");e(t,a$a,"table");e(t,i,"keyless");e(t,t$3,"object");var g=(he=>(he.JSON="application/json",he.BCS="application/x-bcs",he.BCS_SIGNED_TRANSACTION="application/x.aptos.signed_transaction+bcs",he.BCS_VIEW_FUNCTION="application/x.aptos.view_function+bcs",he))(g||{}),y=(he=>(he[he.Bool=0]="Bool",he[he.U8=1]="U8",he[he.U64=2]="U64",he[he.U128=3]="U128",he[he.Address=4]="Address",he[he.Signer=5]="Signer",he[he.Vector=6]="Vector",he[he.Struct=7]="Struct",he[he.U16=8]="U16",he[he.U32=9]="U32",he[he.U256=10]="U256",he[he.Reference=254]="Reference",he[he.Generic=255]="Generic",he))(y||{}),u=(he=>(he[he.U8=0]="U8",he[he.U64=1]="U64",he[he.U128=2]="U128",he[he.Address=3]="Address",he[he.U8Vector=4]="U8Vector",he[he.Bool=5]="Bool",he[he.U16=6]="U16",he[he.U32=7]="U32",he[he.U256=8]="U256",he))(u||{}),d=(he=>(he[he.Script=0]="Script",he[he.EntryFunction=2]="EntryFunction",he[he.Multisig=3]="Multisig",he))(d||{}),c=(he=>(he[he.MultiAgentTransaction=0]="MultiAgentTransaction",he[he.FeePayerTransaction=1]="FeePayerTransaction",he))(c||{}),l=(he=>(he[he.Ed25519=0]="Ed25519",he[he.MultiEd25519=1]="MultiEd25519",he[he.MultiAgent=2]="MultiAgent",he[he.FeePayer=3]="FeePayer",he[he.SingleSender=4]="SingleSender",he))(l||{}),_=(he=>(he[he.Ed25519=0]="Ed25519",he[he.MultiEd25519=1]="MultiEd25519",he[he.SingleKey=2]="SingleKey",he[he.MultiKey=3]="MultiKey",he))(_||{}),x=(he=>(he[he.Ed25519=0]="Ed25519",he[he.Secp256k1=1]="Secp256k1",he[he.Keyless=3]="Keyless",he))(x||{}),h=(he=>(he[he.Ed25519=0]="Ed25519",he[he.Secp256k1=1]="Secp256k1",he[he.Keyless=3]="Keyless",he))(h||{}),v=(he=>(he[he.Ed25519=0]="Ed25519",he))(v||{}),M=(he=>(he[he.Ed25519=0]="Ed25519",he))(M||{}),m=(he=>(he[he.ZkProof=0]="ZkProof",he))(m||{}),R=(he=>(he[he.Groth16=0]="Groth16",he))(R||{}),b=(he=>(he.Pending="pending_transaction",he.User="user_transaction",he.Genesis="genesis_transaction",he.BlockMetadata="block_metadata_transaction",he.StateCheckpoint="state_checkpoint_transaction",he.Validator="validator_transaction",he.BlockEpilogue="block_epilogue_transaction",he))(b||{}),k=(he=>(he.PRIVATE="private",he.PUBLIC="public",he.FRIEND="friend",he))(k||{}),S=(he=>(he.STORE="store",he.DROP="drop",he.KEY="key",he.COPY="copy",he))(S||{}),f=(he=>(he.VALIDATOR="validator",he.FULL_NODE="full_node",he))(f||{}),C=(he=>(he[he.Ed25519=0]="Ed25519",he[he.MultiEd25519=1]="MultiEd25519",he[he.SingleKey=2]="SingleKey",he[he.MultiKey=3]="MultiKey",he))(C||{}),T=(he=>(he[he.Ed25519=0]="Ed25519",he[he.Secp256k1Ecdsa=2]="Secp256k1Ecdsa",he))(T||{}),E=(he=>(he[he.DeriveAuid=251]="DeriveAuid",he[he.DeriveObjectAddressFromObject=252]="DeriveObjectAddressFromObject",he[he.DeriveObjectAddressFromGuid=253]="DeriveObjectAddressFromGuid",he[he.DeriveObjectAddressFromSeed=254]="DeriveObjectAddressFromSeed",he[he.DeriveResourceAccountAddress=255]="DeriveResourceAccountAddress",he))(E||{});class AptosConfig extends BaseWebToken{constructor(le){var pe;super(le);je(this,"signerInstance");je(this,"_publicKey");je(this,"aptosConfig");je(this,"signingFn");this.signingFn=(pe=le==null?void 0:le.opts)==null?void 0:pe.signingFunction,this.base=["octa",1e8]}async getProvider(){return this.providerInstance??(this.providerInstance=new t(this.aptosConfig))}async getTx(le){const ge=await(await this.getProvider()).waitForTransaction({transactionHash:le}),ye=ge==null?void 0:ge.payload;if(!ge.success)throw new Error((ge==null?void 0:ge.vm_status)??"Unknown Aptos error");if(!((ye==null?void 0:ye.function)==="0x1::coin::transfer"&&(ye==null?void 0:ye.type_arguments[0])==="0x1::aptos_coin::AptosCoin"&&(ge==null?void 0:ge.vm_status)==="Executed successfully"))throw new Error(`Aptos tx ${le} failed validation`);const xe=ge.type==="pending_transaction";return{to:ye.arguments[0],from:ge.sender,amount:new BigNumber$1(ye.arguments[1]),pending:xe,confirmed:!xe}}ownerToAddress(le){const pe=sha3.sha3_256.create();return pe.update(Buffer$4.from(le)),pe.update("\0"),`0x${pe.hex()}`}async sign(le){return await this.getSigner().sign(le)}getSigner(){if(this.signerInstance)return this.signerInstance;if(this.signingFn){const le=new AptosSigner("","0x"+this._publicKey.toString("hex"));return le.sign=this.signingFn,this.signerInstance=le}return this.signerInstance=new InjectedAptosSigner(this.wallet,this._publicKey)}async verify(le,pe,ge){return await InjectedAptosSigner.verify(le,pe,ge)}async getCurrentHeight(){return new BigNumber$1((await(await this.getProvider()).getLedgerInfo()).block_height)}async getFee(le,pe){const ge=await this.getProvider();if(!this.address)throw new Error("Address is undefined - you might be missing a wallet, or have not run Irys.ready()");const ye=await ge.transaction.build.simple({sender:this.address,data:{function:"0x1::coin::transfer",typeArguments:["0x1::aptos_coin::AptosCoin"],functionArguments:[pe??"0x149f7dc9c8e43c14ab46d3a6b62cfe84d67668f764277411f98732bf6718acf9",new BigNumber$1(le).toNumber()]}}),xe=new u$4(new m$6(await this.getPublicKey()),new h$7(new Uint8Array(64))),me=new o$6(xe.public_key,xe.signature),we=new n$3(ye.rawTransaction,me).bcsToBytes(),Ee={estimate_gas_unit_price:!0,estimate_max_gas_amount:!0},{data:Ae}=await q$1({aptosConfig:this.aptosConfig,body:we,path:"transactions/simulate",params:Ee,originMethod:"simulateTransaction",contentType:g.BCS_SIGNED_TRANSACTION});return{gasUnitPrice:+Ae[0].gas_unit_price,maxGasAmount:+Ae[0].max_gas_amount}}async sendTx(le){if(!this.signingFn)return(await this.wallet.signAndSubmitTransaction(le)).hash;const pe=await this.getProvider(),{data:ge}=await q$1({aptosConfig:this.aptosConfig,body:le,path:"transactions",originMethod:"submitTransaction",contentType:g.BCS_SIGNED_TRANSACTION});return await pe.waitForTransaction({transactionHash:ge.hash}),ge.hash}async createTx(le,pe,ge){const ye={sender:this.address,data:{function:"0x1::coin::transfer",typeArguments:["0x1::aptos_coin::AptosCoin"],functionArguments:[pe,new BigNumber$1(le).toNumber()]},options:{gasUnitPrice:(ge==null?void 0:ge.gasUnitPrice)??100,maxGasAmount:(ge==null?void 0:ge.maxGasAmount)??10}};if(!this.signingFn)return{txId:void 0,tx:ye};const me=await(await this.getProvider()).transaction.build.simple(ye),we=S$3(me),Ee=await this.sign(we),Ae=new u$4(new m$6(await this.getPublicKey()),new h$7(Ee));return{txId:void 0,tx:gn({transaction:me,senderAuthenticator:Ae})}}async getPublicKey(){return this._publicKey??(this._publicKey=this.signingFn?Buffer$4.from(this.wallet.slice(2),"hex"):Buffer$4.from(this.wallet.account.publicKey.toString().slice(2),"hex"))}async ready(){var pe,ge,ye;this.aptosConfig=new l$2({network:this.providerUrl,...(ge=(pe=this.config)==null?void 0:pe.opts)==null?void 0:ge.aptosSdkConfig}),this._publicKey=await this.getPublicKey(),this._address=this.ownerToAddress(this._publicKey);const le=await this.getProvider();this._address=await le.lookupOriginalAccountAddress({authenticationKey:this.address??""}).then(xe=>xe.toString()).catch(xe=>this._address),((ye=this._address)==null?void 0:ye.length)==66&&this._address.charAt(2)==="0"&&(this._address=this._address.slice(0,2)+this._address.slice(3))}}class EthereumEthersV5 extends EthereumConfig{}class EthereumEthersV6 extends EthereumConfig{async createTx(fe,le,pe){const ge=this.w3signer,ye={to:le,from:this.address,value:fe.toString(),gasLimit:BigInt(0)},xe=await this.provider.estimateGas(ye);return ye.gasLimit=xe,{tx:await ge.populateTransaction(ye),txId:void 0}}async getTx(fe){const pe=await this.provider.getTransaction(fe);if(!pe)throw new Error("Tx doesn't exist");if(!pe.to)throw new Error(`Unable to resolve transactions ${fe} receiver`);return{from:pe.from,to:pe.to,blockHeight:pe.blockNumber?new BigNumber$1(pe.blockNumber):void 0,amount:new BigNumber$1(pe.value.toString()),pending:!pe.blockNumber,confirmed:await pe.confirmations()>=this.minConfirm}}async getFee(fe,le){const pe=this.providerInstance,ge={to:le,from:this.address,value:"0x"+new BigNumber$1(fe).toString(16)},ye=await pe.estimateGas(ge),xe=await pe.getGasPrice();return new BigNumber$1(xe.mul(ye).toString())}async ready(){const fe=this.wallet;this.provider=fe;const le=await fe.getSigner();le._signTypedData=async(pe,ge,ye)=>le.signTypedData(pe,ge,ye),fe.getSigner=()=>le,this.wallet=fe,fe.getGasPrice=async()=>fe.getFeeData().then(pe=>BigNumber.from(pe.gasPrice??0)),this.providerInstance=fe,await super.ready()}}class ArweaveConfig extends BaseWebToken{constructor(le){super(le);je(this,"isSlow",!0);je(this,"signerInstance");this.base=["winston",1e12],this.needsFee=!0}getProvider(){var le;if(!this.providerInstance){const pe=new URL(this.providerUrl??"https://arweave.net");this.providerInstance=Arweave.init({url:pe,network:(le=this==null?void 0:this.opts)==null?void 0:le.network})}return this.providerInstance}async getTx(le){var we;const pe=await this.getProvider(),ge=await pe.transactions.getStatus(le);let ye;ge.status===200&&(ye=await pe.transactions.get(le));const xe=ge.status!==202&&(((we=ge.confirmed)==null?void 0:we.number_of_confirmations)??0)>=this.minConfirm;let me;return ye!=null&&ye.owner&&(me=this.ownerToAddress(ye.owner)),{from:me??void 0,to:(ye==null?void 0:ye.target)??void 0,amount:new BigNumber$1((ye==null?void 0:ye.quantity)??0),pending:ge.status===202,confirmed:xe}}ownerToAddress(le){return Arweave.utils.bufferTob64Url(crypto$4.createHash("sha256").update(Arweave.utils.b64UrlToBuffer(Buffer$4.isBuffer(le)?base64url(le):le)).digest())}async sign(le){return this.getSigner().sign(le)}getSigner(){var le;if(this.signerInstance)return this.signerInstance;switch(((le=this==null?void 0:this.opts)==null?void 0:le.provider)??"arconnect"){case"arconnect":this.signerInstance=new InjectedArweaveSigner(this.wallet,this.getProvider())}return this.signerInstance}async verify(le,pe,ge){return Buffer$4.isBuffer(le)&&(le=le.toString()),this.getProvider().crypto.verify(le,pe,ge)}async getCurrentHeight(){return(await this.getProvider()).network.getInfo().then(le=>new BigNumber$1(le.height))}async getFee(le,pe){return new BigNumber$1(await(await this.getProvider()).transactions.getPrice(new BigNumber$1(le).toNumber(),pe)).integerValue(BigNumber$1.ROUND_CEIL)}async sendTx(le){return await(await this.getProvider()).transactions.post(le)}async createTx(le,pe,ge){const xe=await(await this.getProvider()).createTransaction({quantity:new BigNumber$1(le).toString(),reward:ge==null?void 0:ge.toString(),target:pe});xe.merkle=void 0,xe.deepHash=void 0;const me=await this.wallet.sign(xe);return{txId:me.id,tx:me}}async getPublicKey(){const le=this.getSigner();return await le.setPublicKey(),Arweave.utils.bufferTob64Url(le.publicKey)}async ready(){const le=await this.getPublicKey(),pe=this.ownerToAddress(le);this._address=pe}}async function augmentTokenPrivy(he,fe){if(!fe.sendTransaction)throw new Error("missing required sendTransaction function - add sendTransaction from the usePrivy hook to the wallet object");const le=fe.sendTransaction;he.sendTx=async pe=>le({...pe,gasLimit:pe.gasLimit.toHexString(),maxFeePerGas:pe.maxFeePerGas.toHexString(),maxPriorityFeePerGas:pe.maxPriorityFeePerGas.toHexString()}).then(ge=>ge.transactionHash)}function augmentViemV2(he,fe){const le=fe.provider,pe=fe.publicClient,ge=fe.accountIndex??0;if(he.ready=(async function(){await this.getSigner().ready(),this._address=await le.getAddresses().then(ye=>ye[ge].toString().toLowerCase()),this.providerInstance=this.wallet}).bind(he),he.getFee=async ye=>new BigNumber$1(0),he.getSigner=(function(){return this.signer||(this.signer=new InjectedTypedEthereumSigner({getSigner:()=>({getAddress:async()=>le.getAddresses().then(ye=>ye[ge]),_signTypedData:async(ye,xe,me)=>(me["Transaction hash"]="0x"+Buffer$4.from(me["Transaction hash"]).toString("hex"),await le.signTypedData({account:me.address,domain:ye,types:xe,primaryType:"Bundlr",message:me}))})})),this.signer}).bind(he),he.getCurrentHeight=async()=>new BigNumber$1((await pe.getBlockNumber()).toString()),he.contractAddress)throw new Error("viemv2 is not supported for ERC20 tokens");he.getTx=async ye=>{const xe=await pe.getTransaction({hash:ye}),me=await pe.getBlockNumber();return{to:xe.to,from:xe.from,blockHeight:new BigNumber$1(xe.blockNumber.toString()),amount:new BigNumber$1(xe.value.toString()),pending:!xe.blockNumber,confirmed:me-xe.blockNumber>=he.minConfirm}},he.createTx=(async function(ye,xe){return{txId:void 0,tx:{account:he.address,to:xe,value:ye.toString()}}}).bind(he),he.sendTx=async function(ye){return await le.sendTransaction({account:ye.account,to:ye.to,value:ye.value,chain:le.chain})}}function getTokenConfig({irys:he,token:fe,wallet:le,providerUrl:pe,contractAddress:ge,providerName:ye,tokenOpts:xe}){switch(fe){case"ethereum":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"ethereum",ticker:"ETH",providerUrl:pe??"https://cloudflare-eth.com/",wallet:le,opts:xe}});case"matic":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"matic",ticker:"MATIC",providerUrl:pe??"https://polygon-rpc.com",wallet:le,minConfirm:1,opts:xe}});case"arbitrum":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"arbitrum",ticker:"ETH",providerUrl:pe??"https://arb1.arbitrum.io/rpc",wallet:le,opts:xe}});case"bnb":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"bnb",ticker:"BNB",providerUrl:pe??"https://bsc-dataseed.binance.org",wallet:le,opts:xe}});case"avalanche":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"avalanche",ticker:"AVAX",providerUrl:pe??"https://api.avax.network/ext/bc/C/rpc",wallet:le,opts:xe}});case"boba-eth":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"boba-eth",ticker:"ETH",providerUrl:pe??"https://mainnet.boba.network/",minConfirm:1,wallet:le,opts:xe}});case"boba":{const me=new ERC20Config({irys:he,name:"boba",ticker:"BOBA",providerUrl:pe??"https://mainnet.boba.network/",contractAddress:ge??"0xa18bF3994C0Cc6E3b63ac420308E5383f53120D7",minConfirm:1,wallet:le,opts:xe});return me.price=async()=>{var Ee;const we=await axios$1.post("https://api.livecoinwatch.com/coins/single",JSON.stringify({currency:"USD",code:`${me.ticker}`}),{headers:{"x-api-key":"75a7a824-6577-45e6-ad86-511d590c7cc8","content-type":"application/json"}});if(await utils$3.checkAndThrow(we,"Getting price data"),!((Ee=we==null?void 0:we.data)!=null&&Ee.rate))throw new Error(`unable to get price for ${me.name}`);return+we.data.rate},me}case"solana":return new SolanaConfig({irys:he,name:"solana",ticker:"SOL",providerUrl:pe??"https://api.mainnet-beta.solana.com/",wallet:le,opts:xe});case"near":return new NearConfig({irys:he,name:"near",ticker:"NEAR",providerUrl:pe??"https://rpc.mainnet.near.org",wallet:le,opts:xe});case"aptos":return new AptosConfig({irys:he,name:"aptos",ticker:"APTOS",providerUrl:pe??e$1.MAINNET,wallet:le,opts:xe});case"arweave":return new ArweaveConfig({irys:he,name:"arweave",ticker:"AR",providerUrl:pe??"https://arweave.net",wallet:le,opts:xe});case"base-eth":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"base-eth",ticker:"ETH",providerUrl:pe??"https://mainnet.base.org/",minConfirm:2,wallet:le,opts:xe}});case"usdc-eth":return new ERC20Config({irys:he,name:"usdc-eth",ticker:"USDC",providerUrl:pe??"https://cloudflare-eth.com/",contractAddress:ge??"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",wallet:le,opts:xe});case"usdc-polygon":return new ERC20Config({irys:he,name:"usdc-polygon",ticker:"USDC",providerUrl:pe??"https://polygon-rpc.com",contractAddress:ge??"0x3c499c542cef5e3811e1192ce70d8cc03d5c3359",opts:xe});case"bera":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"bera",ticker:"BERA",providerUrl:pe??"https://bartio.rpc.berachain.com/",wallet:le,opts:xe}});case"scroll-eth":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"scroll-eth",ticker:"ETH",providerUrl:pe??"https://rpc.scroll.io",wallet:le,opts:xe}});case"linea-eth":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"linea-eth",ticker:"ETH",providerUrl:pe??"https://rpc.linea.build",wallet:le,opts:xe}});case"iotex":return resolveProvider({family:"ethereum",providerName:ye,config:{irys:he,name:"iotex",ticker:"IOTX",providerUrl:pe??"https://babel-api.mainnet.iotex.io/",wallet:le,opts:xe}});default:throw new Error(`Unknown/Unsupported token ${fe}`)}}function resolveProvider({family:he,providerName:fe,config:le}){let pe;switch(he){case"ethereum":switch(fe){case"ethersv5":return new EthereumEthersV5(le);case"ethersv6":return new EthereumEthersV6(le);case"privy-embedded":return pe=new EthereumEthersV5(le),augmentTokenPrivy(pe,le.opts),pe;case"viemv2":return pe=new EthereumConfig(le),augmentViemV2(pe,le.opts),pe;default:return new EthereumConfig(le)}default:throw new Error(`Unknown token family ${he}`)}}class WebIrys extends BaseWebIrys{constructor({url:fe,network:le,token:pe,wallet:ge,config:ye}){super({url:fe,wallet:ge,config:ye,network:le,getTokenConfig:xe=>getTokenConfig({irys:xe,token:pe.toLowerCase(),wallet:(ge==null?void 0:ge.provider)??ge,providerUrl:(ye==null?void 0:ye.providerUrl)??(ge==null?void 0:ge.rpcUrl),contractAddress:ye==null?void 0:ye.contractAddress,providerName:ge==null?void 0:ge.name,tokenOpts:{...ye==null?void 0:ye.tokenOpts,...ge}})})}static async init(fe){const{url:le,token:pe,provider:ge,publicKey:ye,signingFunction:xe,collectSignatures:me,providerUrl:we,timeout:Ee,contractAddress:Ae}=fe,Se=new WebIrys({url:le,token:pe,wallet:{name:"init",provider:xe?ye:ge},config:{providerUrl:we,timeout:Ee,contractAddress:Ae,tokenOpts:{signingFunction:xe,collectSignatures:me}}});return await Se.ready(),Se}}const WebIrys$1=WebIrys;export{WebIrys$1 as WebIrys,WebIrys$1 as default};
